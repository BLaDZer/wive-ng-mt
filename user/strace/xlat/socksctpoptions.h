/* Generated by ./xlat/gen.sh from ./xlat/socksctpoptions.in; do not edit. */
#if !(defined(SCTP_RTOINFO) || (defined(HAVE_DECL_SCTP_RTOINFO) && HAVE_DECL_SCTP_RTOINFO))
# define SCTP_RTOINFO 0
#endif
#if !(defined(SCTP_ASSOCINFO) || (defined(HAVE_DECL_SCTP_ASSOCINFO) && HAVE_DECL_SCTP_ASSOCINFO))
# define SCTP_ASSOCINFO 1
#endif
#if !(defined(SCTP_INITMSG) || (defined(HAVE_DECL_SCTP_INITMSG) && HAVE_DECL_SCTP_INITMSG))
# define SCTP_INITMSG 2
#endif
#if !(defined(SCTP_NODELAY) || (defined(HAVE_DECL_SCTP_NODELAY) && HAVE_DECL_SCTP_NODELAY))
# define SCTP_NODELAY 3
#endif
#if !(defined(SCTP_AUTOCLOSE) || (defined(HAVE_DECL_SCTP_AUTOCLOSE) && HAVE_DECL_SCTP_AUTOCLOSE))
# define SCTP_AUTOCLOSE 4
#endif
#if !(defined(SCTP_SET_PEER_PRIMARY_ADDR) || (defined(HAVE_DECL_SCTP_SET_PEER_PRIMARY_ADDR) && HAVE_DECL_SCTP_SET_PEER_PRIMARY_ADDR))
# define SCTP_SET_PEER_PRIMARY_ADDR 5
#endif
#if !(defined(SCTP_PRIMARY_ADDR) || (defined(HAVE_DECL_SCTP_PRIMARY_ADDR) && HAVE_DECL_SCTP_PRIMARY_ADDR))
# define SCTP_PRIMARY_ADDR 6
#endif
#if !(defined(SCTP_ADAPTATION_LAYER) || (defined(HAVE_DECL_SCTP_ADAPTATION_LAYER) && HAVE_DECL_SCTP_ADAPTATION_LAYER))
# define SCTP_ADAPTATION_LAYER 7
#endif
#if !(defined(SCTP_DISABLE_FRAGMENTS) || (defined(HAVE_DECL_SCTP_DISABLE_FRAGMENTS) && HAVE_DECL_SCTP_DISABLE_FRAGMENTS))
# define SCTP_DISABLE_FRAGMENTS 8
#endif
#if !(defined(SCTP_PEER_ADDR_PARAMS) || (defined(HAVE_DECL_SCTP_PEER_ADDR_PARAMS) && HAVE_DECL_SCTP_PEER_ADDR_PARAMS))
# define SCTP_PEER_ADDR_PARAMS 9
#endif
#if !(defined(SCTP_DEFAULT_SEND_PARAM) || (defined(HAVE_DECL_SCTP_DEFAULT_SEND_PARAM) && HAVE_DECL_SCTP_DEFAULT_SEND_PARAM))
# define SCTP_DEFAULT_SEND_PARAM 10
#endif
#if !(defined(SCTP_EVENTS) || (defined(HAVE_DECL_SCTP_EVENTS) && HAVE_DECL_SCTP_EVENTS))
# define SCTP_EVENTS 11
#endif
#if !(defined(SCTP_I_WANT_MAPPED_V4_ADDR) || (defined(HAVE_DECL_SCTP_I_WANT_MAPPED_V4_ADDR) && HAVE_DECL_SCTP_I_WANT_MAPPED_V4_ADDR))
# define SCTP_I_WANT_MAPPED_V4_ADDR 12
#endif
#if !(defined(SCTP_MAXSEG) || (defined(HAVE_DECL_SCTP_MAXSEG) && HAVE_DECL_SCTP_MAXSEG))
# define SCTP_MAXSEG 13
#endif
#if !(defined(SCTP_STATUS) || (defined(HAVE_DECL_SCTP_STATUS) && HAVE_DECL_SCTP_STATUS))
# define SCTP_STATUS 14
#endif
#if !(defined(SCTP_GET_PEER_ADDR_INFO) || (defined(HAVE_DECL_SCTP_GET_PEER_ADDR_INFO) && HAVE_DECL_SCTP_GET_PEER_ADDR_INFO))
# define SCTP_GET_PEER_ADDR_INFO 15
#endif
#if !(defined(SCTP_DELAYED_SACK) || (defined(HAVE_DECL_SCTP_DELAYED_SACK) && HAVE_DECL_SCTP_DELAYED_SACK))
# define SCTP_DELAYED_SACK 16
#endif
#if !(defined(SCTP_CONTEXT) || (defined(HAVE_DECL_SCTP_CONTEXT) && HAVE_DECL_SCTP_CONTEXT))
# define SCTP_CONTEXT 17
#endif
#if !(defined(SCTP_FRAGMENT_INTERLEAVE) || (defined(HAVE_DECL_SCTP_FRAGMENT_INTERLEAVE) && HAVE_DECL_SCTP_FRAGMENT_INTERLEAVE))
# define SCTP_FRAGMENT_INTERLEAVE 18
#endif
#if !(defined(SCTP_PARTIAL_DELIVERY_POINT) || (defined(HAVE_DECL_SCTP_PARTIAL_DELIVERY_POINT) && HAVE_DECL_SCTP_PARTIAL_DELIVERY_POINT))
# define SCTP_PARTIAL_DELIVERY_POINT 19
#endif
#if !(defined(SCTP_MAX_BURST) || (defined(HAVE_DECL_SCTP_MAX_BURST) && HAVE_DECL_SCTP_MAX_BURST))
# define SCTP_MAX_BURST 20
#endif
#if !(defined(SCTP_AUTH_CHUNK) || (defined(HAVE_DECL_SCTP_AUTH_CHUNK) && HAVE_DECL_SCTP_AUTH_CHUNK))
# define SCTP_AUTH_CHUNK 21
#endif
#if !(defined(SCTP_HMAC_IDENT) || (defined(HAVE_DECL_SCTP_HMAC_IDENT) && HAVE_DECL_SCTP_HMAC_IDENT))
# define SCTP_HMAC_IDENT 22
#endif
#if !(defined(SCTP_AUTH_KEY) || (defined(HAVE_DECL_SCTP_AUTH_KEY) && HAVE_DECL_SCTP_AUTH_KEY))
# define SCTP_AUTH_KEY 23
#endif
#if !(defined(SCTP_AUTH_ACTIVE_KEY) || (defined(HAVE_DECL_SCTP_AUTH_ACTIVE_KEY) && HAVE_DECL_SCTP_AUTH_ACTIVE_KEY))
# define SCTP_AUTH_ACTIVE_KEY 24
#endif
#if !(defined(SCTP_AUTH_DELETE_KEY) || (defined(HAVE_DECL_SCTP_AUTH_DELETE_KEY) && HAVE_DECL_SCTP_AUTH_DELETE_KEY))
# define SCTP_AUTH_DELETE_KEY 25
#endif
#if !(defined(SCTP_PEER_AUTH_CHUNKS) || (defined(HAVE_DECL_SCTP_PEER_AUTH_CHUNKS) && HAVE_DECL_SCTP_PEER_AUTH_CHUNKS))
# define SCTP_PEER_AUTH_CHUNKS 26
#endif
#if !(defined(SCTP_LOCAL_AUTH_CHUNKS) || (defined(HAVE_DECL_SCTP_LOCAL_AUTH_CHUNKS) && HAVE_DECL_SCTP_LOCAL_AUTH_CHUNKS))
# define SCTP_LOCAL_AUTH_CHUNKS 27
#endif
#if !(defined(SCTP_GET_ASSOC_NUMBER) || (defined(HAVE_DECL_SCTP_GET_ASSOC_NUMBER) && HAVE_DECL_SCTP_GET_ASSOC_NUMBER))
# define SCTP_GET_ASSOC_NUMBER 28
#endif
#if !(defined(SCTP_GET_ASSOC_ID_LIST) || (defined(HAVE_DECL_SCTP_GET_ASSOC_ID_LIST) && HAVE_DECL_SCTP_GET_ASSOC_ID_LIST))
# define SCTP_GET_ASSOC_ID_LIST 29
#endif
#if !(defined(SCTP_AUTO_ASCONF) || (defined(HAVE_DECL_SCTP_AUTO_ASCONF) && HAVE_DECL_SCTP_AUTO_ASCONF))
# define SCTP_AUTO_ASCONF 30
#endif
#if !(defined(SCTP_PEER_ADDR_THLDS) || (defined(HAVE_DECL_SCTP_PEER_ADDR_THLDS) && HAVE_DECL_SCTP_PEER_ADDR_THLDS))
# define SCTP_PEER_ADDR_THLDS 31
#endif
#if !(defined(SCTP_RECVRCVINFO) || (defined(HAVE_DECL_SCTP_RECVRCVINFO) && HAVE_DECL_SCTP_RECVRCVINFO))
# define SCTP_RECVRCVINFO 32
#endif
#if !(defined(SCTP_RECVNXTINFO) || (defined(HAVE_DECL_SCTP_RECVNXTINFO) && HAVE_DECL_SCTP_RECVNXTINFO))
# define SCTP_RECVNXTINFO 33
#endif
#if !(defined(SCTP_DEFAULT_SNDINFO) || (defined(HAVE_DECL_SCTP_DEFAULT_SNDINFO) && HAVE_DECL_SCTP_DEFAULT_SNDINFO))
# define SCTP_DEFAULT_SNDINFO 34
#endif
#if !(defined(SCTP_SOCKOPT_BINDX_ADD) || (defined(HAVE_DECL_SCTP_SOCKOPT_BINDX_ADD) && HAVE_DECL_SCTP_SOCKOPT_BINDX_ADD))
# define SCTP_SOCKOPT_BINDX_ADD 100
#endif
#if !(defined(SCTP_SOCKOPT_BINDX_REM) || (defined(HAVE_DECL_SCTP_SOCKOPT_BINDX_REM) && HAVE_DECL_SCTP_SOCKOPT_BINDX_REM))
# define SCTP_SOCKOPT_BINDX_REM 101
#endif
#if !(defined(SCTP_SOCKOPT_PEELOFF) || (defined(HAVE_DECL_SCTP_SOCKOPT_PEELOFF) && HAVE_DECL_SCTP_SOCKOPT_PEELOFF))
# define SCTP_SOCKOPT_PEELOFF 102
#endif
#if !(defined(SCTP_GET_PEER_ADDRS_NUM_OLD) || (defined(HAVE_DECL_SCTP_GET_PEER_ADDRS_NUM_OLD) && HAVE_DECL_SCTP_GET_PEER_ADDRS_NUM_OLD))
# define SCTP_GET_PEER_ADDRS_NUM_OLD 103
#endif
#if !(defined(SCTP_GET_PEER_ADDRS_OLD) || (defined(HAVE_DECL_SCTP_GET_PEER_ADDRS_OLD) && HAVE_DECL_SCTP_GET_PEER_ADDRS_OLD))
# define SCTP_GET_PEER_ADDRS_OLD 104
#endif
#if !(defined(SCTP_GET_LOCAL_ADDRS_NUM_OLD) || (defined(HAVE_DECL_SCTP_GET_LOCAL_ADDRS_NUM_OLD) && HAVE_DECL_SCTP_GET_LOCAL_ADDRS_NUM_OLD))
# define SCTP_GET_LOCAL_ADDRS_NUM_OLD 105
#endif
#if !(defined(SCTP_GET_LOCAL_ADDRS_OLD) || (defined(HAVE_DECL_SCTP_GET_LOCAL_ADDRS_OLD) && HAVE_DECL_SCTP_GET_LOCAL_ADDRS_OLD))
# define SCTP_GET_LOCAL_ADDRS_OLD 106
#endif
#if !(defined(SCTP_SOCKOPT_CONNECTX_OLD) || (defined(HAVE_DECL_SCTP_SOCKOPT_CONNECTX_OLD) && HAVE_DECL_SCTP_SOCKOPT_CONNECTX_OLD))
# define SCTP_SOCKOPT_CONNECTX_OLD 107
#endif
#if !(defined(SCTP_GET_PEER_ADDRS) || (defined(HAVE_DECL_SCTP_GET_PEER_ADDRS) && HAVE_DECL_SCTP_GET_PEER_ADDRS))
# define SCTP_GET_PEER_ADDRS 108
#endif
#if !(defined(SCTP_GET_LOCAL_ADDRS) || (defined(HAVE_DECL_SCTP_GET_LOCAL_ADDRS) && HAVE_DECL_SCTP_GET_LOCAL_ADDRS))
# define SCTP_GET_LOCAL_ADDRS 109
#endif
#if !(defined(SCTP_SOCKOPT_CONNECTX) || (defined(HAVE_DECL_SCTP_SOCKOPT_CONNECTX) && HAVE_DECL_SCTP_SOCKOPT_CONNECTX))
# define SCTP_SOCKOPT_CONNECTX 110
#endif
#if !(defined(SCTP_SOCKOPT_CONNECTX3) || (defined(HAVE_DECL_SCTP_SOCKOPT_CONNECTX3) && HAVE_DECL_SCTP_SOCKOPT_CONNECTX3))
# define SCTP_SOCKOPT_CONNECTX3 111
#endif
#if !(defined(SCTP_GET_ASSOC_STATS) || (defined(HAVE_DECL_SCTP_GET_ASSOC_STATS) && HAVE_DECL_SCTP_GET_ASSOC_STATS))
# define SCTP_GET_ASSOC_STATS 112
#endif
#if !(defined(SCTP_PR_SUPPORTED) || (defined(HAVE_DECL_SCTP_PR_SUPPORTED) && HAVE_DECL_SCTP_PR_SUPPORTED))
# define SCTP_PR_SUPPORTED 113
#endif
#if !(defined(SCTP_DEFAULT_PRINFO) || (defined(HAVE_DECL_SCTP_DEFAULT_PRINFO) && HAVE_DECL_SCTP_DEFAULT_PRINFO))
# define SCTP_DEFAULT_PRINFO 114
#endif
#if !(defined(SCTP_PR_ASSOC_STATUS) || (defined(HAVE_DECL_SCTP_PR_ASSOC_STATUS) && HAVE_DECL_SCTP_PR_ASSOC_STATUS))
# define SCTP_PR_ASSOC_STATUS 115
#endif
#if !(defined(SCTP_PR_STREAM_STATUS) || (defined(HAVE_DECL_SCTP_PR_STREAM_STATUS) && HAVE_DECL_SCTP_PR_STREAM_STATUS))
# define SCTP_PR_STREAM_STATUS 116
#endif
#if !(defined(SCTP_RECONFIG_SUPPORTED) || (defined(HAVE_DECL_SCTP_RECONFIG_SUPPORTED) && HAVE_DECL_SCTP_RECONFIG_SUPPORTED))
# define SCTP_RECONFIG_SUPPORTED 117
#endif
#if !(defined(SCTP_ENABLE_STREAM_RESET) || (defined(HAVE_DECL_SCTP_ENABLE_STREAM_RESET) && HAVE_DECL_SCTP_ENABLE_STREAM_RESET))
# define SCTP_ENABLE_STREAM_RESET 118
#endif
#if !(defined(SCTP_RESET_STREAMS) || (defined(HAVE_DECL_SCTP_RESET_STREAMS) && HAVE_DECL_SCTP_RESET_STREAMS))
# define SCTP_RESET_STREAMS 119
#endif
#if !(defined(SCTP_RESET_ASSOC) || (defined(HAVE_DECL_SCTP_RESET_ASSOC) && HAVE_DECL_SCTP_RESET_ASSOC))
# define SCTP_RESET_ASSOC 120
#endif
#if !(defined(SCTP_ADD_STREAMS) || (defined(HAVE_DECL_SCTP_ADD_STREAMS) && HAVE_DECL_SCTP_ADD_STREAMS))
# define SCTP_ADD_STREAMS 121
#endif
#if !(defined(SCTP_SOCKOPT_PEELOFF_FLAGS) || (defined(HAVE_DECL_SCTP_SOCKOPT_PEELOFF_FLAGS) && HAVE_DECL_SCTP_SOCKOPT_PEELOFF_FLAGS))
# define SCTP_SOCKOPT_PEELOFF_FLAGS 122
#endif
#if !(defined(SCTP_STREAM_SCHEDULER) || (defined(HAVE_DECL_SCTP_STREAM_SCHEDULER) && HAVE_DECL_SCTP_STREAM_SCHEDULER))
# define SCTP_STREAM_SCHEDULER 123
#endif
#if !(defined(SCTP_STREAM_SCHEDULER_VALUE) || (defined(HAVE_DECL_SCTP_STREAM_SCHEDULER_VALUE) && HAVE_DECL_SCTP_STREAM_SCHEDULER_VALUE))
# define SCTP_STREAM_SCHEDULER_VALUE 124
#endif
#if !(defined(SCTP_INTERLEAVING_SUPPORTED) || (defined(HAVE_DECL_SCTP_INTERLEAVING_SUPPORTED) && HAVE_DECL_SCTP_INTERLEAVING_SUPPORTED))
# define SCTP_INTERLEAVING_SUPPORTED 125
#endif

#ifdef IN_MPERS

# error static const struct xlat socksctpoptions in mpers mode

#else

static
const struct xlat socksctpoptions[] = {
  XLAT(SCTP_RTOINFO),
  XLAT(SCTP_ASSOCINFO),
  XLAT(SCTP_INITMSG),
  XLAT(SCTP_NODELAY),
  XLAT(SCTP_AUTOCLOSE),
  XLAT(SCTP_SET_PEER_PRIMARY_ADDR),
  XLAT(SCTP_PRIMARY_ADDR),
  XLAT(SCTP_ADAPTATION_LAYER),
  XLAT(SCTP_DISABLE_FRAGMENTS),
  XLAT(SCTP_PEER_ADDR_PARAMS),
  XLAT(SCTP_DEFAULT_SEND_PARAM),
  XLAT(SCTP_EVENTS),
  XLAT(SCTP_I_WANT_MAPPED_V4_ADDR),
  XLAT(SCTP_MAXSEG),
  XLAT(SCTP_STATUS),
  XLAT(SCTP_GET_PEER_ADDR_INFO),
 XLAT(SCTP_DELAYED_SACK),
  XLAT(SCTP_CONTEXT),
  XLAT(SCTP_FRAGMENT_INTERLEAVE),
  XLAT(SCTP_PARTIAL_DELIVERY_POINT),
  XLAT(SCTP_MAX_BURST),
  XLAT(SCTP_AUTH_CHUNK),
  XLAT(SCTP_HMAC_IDENT),
  XLAT(SCTP_AUTH_KEY),
  XLAT(SCTP_AUTH_ACTIVE_KEY),
  XLAT(SCTP_AUTH_DELETE_KEY),
  XLAT(SCTP_PEER_AUTH_CHUNKS),
  XLAT(SCTP_LOCAL_AUTH_CHUNKS),
  XLAT(SCTP_GET_ASSOC_NUMBER),
  XLAT(SCTP_GET_ASSOC_ID_LIST),
  XLAT(SCTP_AUTO_ASCONF),
  XLAT(SCTP_PEER_ADDR_THLDS),
  XLAT(SCTP_RECVRCVINFO),
  XLAT(SCTP_RECVNXTINFO),
  XLAT(SCTP_DEFAULT_SNDINFO),

  XLAT(SCTP_SOCKOPT_BINDX_ADD),
  XLAT(SCTP_SOCKOPT_BINDX_REM),
  XLAT(SCTP_SOCKOPT_PEELOFF),
  XLAT(SCTP_GET_PEER_ADDRS_NUM_OLD),
  XLAT(SCTP_GET_PEER_ADDRS_OLD),
  XLAT(SCTP_GET_LOCAL_ADDRS_NUM_OLD),
  XLAT(SCTP_GET_LOCAL_ADDRS_OLD),
  XLAT(SCTP_SOCKOPT_CONNECTX_OLD),
  XLAT(SCTP_GET_PEER_ADDRS),
  XLAT(SCTP_GET_LOCAL_ADDRS),
  XLAT(SCTP_SOCKOPT_CONNECTX),
  XLAT(SCTP_SOCKOPT_CONNECTX3),
  XLAT(SCTP_GET_ASSOC_STATS),
  XLAT(SCTP_PR_SUPPORTED),
  XLAT(SCTP_DEFAULT_PRINFO),
  XLAT(SCTP_PR_ASSOC_STATUS),
  XLAT(SCTP_PR_STREAM_STATUS),
  XLAT(SCTP_RECONFIG_SUPPORTED),
  XLAT(SCTP_ENABLE_STREAM_RESET),
  XLAT(SCTP_RESET_STREAMS),
  XLAT(SCTP_RESET_ASSOC),
  XLAT(SCTP_ADD_STREAMS),
 XLAT(SCTP_SOCKOPT_PEELOFF_FLAGS),
 XLAT(SCTP_STREAM_SCHEDULER),
 XLAT(SCTP_STREAM_SCHEDULER_VALUE),
 XLAT(SCTP_INTERLEAVING_SUPPORTED),
 XLAT_END
};

#endif /* !IN_MPERS */
