/* Generated by ./xlat/gen.sh from ./xlat/ethernet_protocols.in; do not edit. */
#if !(defined(ETH_P_802_3) || (defined(HAVE_DECL_ETH_P_802_3) && HAVE_DECL_ETH_P_802_3))
# define ETH_P_802_3 0x0001
#endif
#if !(defined(ETH_P_AX25) || (defined(HAVE_DECL_ETH_P_AX25) && HAVE_DECL_ETH_P_AX25))
# define ETH_P_AX25 0x0002
#endif
#if !(defined(ETH_P_ALL) || (defined(HAVE_DECL_ETH_P_ALL) && HAVE_DECL_ETH_P_ALL))
# define ETH_P_ALL 0x0003
#endif
#if !(defined(ETH_P_802_2) || (defined(HAVE_DECL_ETH_P_802_2) && HAVE_DECL_ETH_P_802_2))
# define ETH_P_802_2 0x0004
#endif
#if !(defined(ETH_P_SNAP) || (defined(HAVE_DECL_ETH_P_SNAP) && HAVE_DECL_ETH_P_SNAP))
# define ETH_P_SNAP 0x0005
#endif
#if !(defined(ETH_P_DDCMP) || (defined(HAVE_DECL_ETH_P_DDCMP) && HAVE_DECL_ETH_P_DDCMP))
# define ETH_P_DDCMP 0x0006
#endif
#if !(defined(ETH_P_WAN_PPP) || (defined(HAVE_DECL_ETH_P_WAN_PPP) && HAVE_DECL_ETH_P_WAN_PPP))
# define ETH_P_WAN_PPP 0x0007
#endif
#if !(defined(ETH_P_PPP_MP) || (defined(HAVE_DECL_ETH_P_PPP_MP) && HAVE_DECL_ETH_P_PPP_MP))
# define ETH_P_PPP_MP 0x0008
#endif
#if !(defined(ETH_P_LOCALTALK) || (defined(HAVE_DECL_ETH_P_LOCALTALK) && HAVE_DECL_ETH_P_LOCALTALK))
# define ETH_P_LOCALTALK 0x0009
#endif
#if !(defined(ETH_P_CAN) || (defined(HAVE_DECL_ETH_P_CAN) && HAVE_DECL_ETH_P_CAN))
# define ETH_P_CAN 0x000C
#endif
#if !(defined(ETH_P_CANFD) || (defined(HAVE_DECL_ETH_P_CANFD) && HAVE_DECL_ETH_P_CANFD))
# define ETH_P_CANFD 0x000D
#endif
#if !(defined(ETH_P_PPPTALK) || (defined(HAVE_DECL_ETH_P_PPPTALK) && HAVE_DECL_ETH_P_PPPTALK))
# define ETH_P_PPPTALK 0x0010
#endif
#if !(defined(ETH_P_TR_802_2) || (defined(HAVE_DECL_ETH_P_TR_802_2) && HAVE_DECL_ETH_P_TR_802_2))
# define ETH_P_TR_802_2 0x0011
#endif
#if !(defined(ETH_P_MOBITEX) || (defined(HAVE_DECL_ETH_P_MOBITEX) && HAVE_DECL_ETH_P_MOBITEX))
# define ETH_P_MOBITEX 0x0015
#endif
#if !(defined(ETH_P_CONTROL) || (defined(HAVE_DECL_ETH_P_CONTROL) && HAVE_DECL_ETH_P_CONTROL))
# define ETH_P_CONTROL 0x0016
#endif
#if !(defined(ETH_P_IRDA) || (defined(HAVE_DECL_ETH_P_IRDA) && HAVE_DECL_ETH_P_IRDA))
# define ETH_P_IRDA 0x0017
#endif
#if !(defined(ETH_P_ECONET) || (defined(HAVE_DECL_ETH_P_ECONET) && HAVE_DECL_ETH_P_ECONET))
# define ETH_P_ECONET 0x0018
#endif
#if !(defined(ETH_P_HDLC) || (defined(HAVE_DECL_ETH_P_HDLC) && HAVE_DECL_ETH_P_HDLC))
# define ETH_P_HDLC 0x0019
#endif
#if !(defined(ETH_P_ARCNET) || (defined(HAVE_DECL_ETH_P_ARCNET) && HAVE_DECL_ETH_P_ARCNET))
# define ETH_P_ARCNET 0x001A
#endif
#if !(defined(ETH_P_DSA) || (defined(HAVE_DECL_ETH_P_DSA) && HAVE_DECL_ETH_P_DSA))
# define ETH_P_DSA 0x001B
#endif
#if !(defined(ETH_P_TRAILER) || (defined(HAVE_DECL_ETH_P_TRAILER) && HAVE_DECL_ETH_P_TRAILER))
# define ETH_P_TRAILER 0x001C
#endif
#if !(defined(ETH_P_LOOP) || (defined(HAVE_DECL_ETH_P_LOOP) && HAVE_DECL_ETH_P_LOOP))
# define ETH_P_LOOP 0x0060
#endif
#if !(defined(ETH_P_PHONET) || (defined(HAVE_DECL_ETH_P_PHONET) && HAVE_DECL_ETH_P_PHONET))
# define ETH_P_PHONET 0x00F5
#endif
#if !(defined(ETH_P_IEEE802154) || (defined(HAVE_DECL_ETH_P_IEEE802154) && HAVE_DECL_ETH_P_IEEE802154))
# define ETH_P_IEEE802154 0x00F6
#endif
#if !(defined(ETH_P_CAIF) || (defined(HAVE_DECL_ETH_P_CAIF) && HAVE_DECL_ETH_P_CAIF))
# define ETH_P_CAIF 0x00F7
#endif
#if !(defined(ETH_P_XDSA) || (defined(HAVE_DECL_ETH_P_XDSA) && HAVE_DECL_ETH_P_XDSA))
# define ETH_P_XDSA 0x00F8
#endif
#if !(defined(ETH_P_MAP) || (defined(HAVE_DECL_ETH_P_MAP) && HAVE_DECL_ETH_P_MAP))
# define ETH_P_MAP 0x00F9
#endif
#if !(defined(ETH_P_PUP) || (defined(HAVE_DECL_ETH_P_PUP) && HAVE_DECL_ETH_P_PUP))
# define ETH_P_PUP 0x0200
#endif
#if !(defined(ETH_P_PUPAT) || (defined(HAVE_DECL_ETH_P_PUPAT) && HAVE_DECL_ETH_P_PUPAT))
# define ETH_P_PUPAT 0x0201
#endif
#if !(defined(ETH_P_802_3_MIN) || (defined(HAVE_DECL_ETH_P_802_3_MIN) && HAVE_DECL_ETH_P_802_3_MIN))
# define ETH_P_802_3_MIN 0x0600
#endif
#if !(defined(ETH_P_IP) || (defined(HAVE_DECL_ETH_P_IP) && HAVE_DECL_ETH_P_IP))
# define ETH_P_IP 0x0800
#endif
#if !(defined(ETH_P_X25) || (defined(HAVE_DECL_ETH_P_X25) && HAVE_DECL_ETH_P_X25))
# define ETH_P_X25 0x0805
#endif
#if !(defined(ETH_P_ARP) || (defined(HAVE_DECL_ETH_P_ARP) && HAVE_DECL_ETH_P_ARP))
# define ETH_P_ARP 0x0806
#endif
#if !(defined(ETH_P_BPQ) || (defined(HAVE_DECL_ETH_P_BPQ) && HAVE_DECL_ETH_P_BPQ))
# define ETH_P_BPQ 0x08FF
#endif
#if !(defined(ETH_P_IEEEPUP) || (defined(HAVE_DECL_ETH_P_IEEEPUP) && HAVE_DECL_ETH_P_IEEEPUP))
# define ETH_P_IEEEPUP 0x0a00
#endif
#if !(defined(ETH_P_IEEEPUPAT) || (defined(HAVE_DECL_ETH_P_IEEEPUPAT) && HAVE_DECL_ETH_P_IEEEPUPAT))
# define ETH_P_IEEEPUPAT 0x0a01
#endif
#if !(defined(ETH_P_ERSPAN2) || (defined(HAVE_DECL_ETH_P_ERSPAN2) && HAVE_DECL_ETH_P_ERSPAN2))
# define ETH_P_ERSPAN2 0x22EB
#endif
#if !(defined(ETH_P_TSN) || (defined(HAVE_DECL_ETH_P_TSN) && HAVE_DECL_ETH_P_TSN))
# define ETH_P_TSN 0x22F0
#endif
#if !(defined(ETH_P_BATMAN) || (defined(HAVE_DECL_ETH_P_BATMAN) && HAVE_DECL_ETH_P_BATMAN))
# define ETH_P_BATMAN 0x4305
#endif
#if !(defined(ETH_P_DEC) || (defined(HAVE_DECL_ETH_P_DEC) && HAVE_DECL_ETH_P_DEC))
# define ETH_P_DEC 0x6000
#endif
#if !(defined(ETH_P_DNA_DL) || (defined(HAVE_DECL_ETH_P_DNA_DL) && HAVE_DECL_ETH_P_DNA_DL))
# define ETH_P_DNA_DL 0x6001
#endif
#if !(defined(ETH_P_DNA_RC) || (defined(HAVE_DECL_ETH_P_DNA_RC) && HAVE_DECL_ETH_P_DNA_RC))
# define ETH_P_DNA_RC 0x6002
#endif
#if !(defined(ETH_P_DNA_RT) || (defined(HAVE_DECL_ETH_P_DNA_RT) && HAVE_DECL_ETH_P_DNA_RT))
# define ETH_P_DNA_RT 0x6003
#endif
#if !(defined(ETH_P_LAT) || (defined(HAVE_DECL_ETH_P_LAT) && HAVE_DECL_ETH_P_LAT))
# define ETH_P_LAT 0x6004
#endif
#if !(defined(ETH_P_DIAG) || (defined(HAVE_DECL_ETH_P_DIAG) && HAVE_DECL_ETH_P_DIAG))
# define ETH_P_DIAG 0x6005
#endif
#if !(defined(ETH_P_CUST) || (defined(HAVE_DECL_ETH_P_CUST) && HAVE_DECL_ETH_P_CUST))
# define ETH_P_CUST 0x6006
#endif
#if !(defined(ETH_P_SCA) || (defined(HAVE_DECL_ETH_P_SCA) && HAVE_DECL_ETH_P_SCA))
# define ETH_P_SCA 0x6007
#endif
#if !(defined(ETH_P_TEB) || (defined(HAVE_DECL_ETH_P_TEB) && HAVE_DECL_ETH_P_TEB))
# define ETH_P_TEB 0x6558
#endif
#if !(defined(ETH_P_RARP) || (defined(HAVE_DECL_ETH_P_RARP) && HAVE_DECL_ETH_P_RARP))
# define ETH_P_RARP 0x8035
#endif
#if !(defined(ETH_P_ATALK) || (defined(HAVE_DECL_ETH_P_ATALK) && HAVE_DECL_ETH_P_ATALK))
# define ETH_P_ATALK 0x809B
#endif
#if !(defined(ETH_P_AARP) || (defined(HAVE_DECL_ETH_P_AARP) && HAVE_DECL_ETH_P_AARP))
# define ETH_P_AARP 0x80F3
#endif
#if !(defined(ETH_P_8021Q) || (defined(HAVE_DECL_ETH_P_8021Q) && HAVE_DECL_ETH_P_8021Q))
# define ETH_P_8021Q 0x8100
#endif
#if !(defined(ETH_P_IPX) || (defined(HAVE_DECL_ETH_P_IPX) && HAVE_DECL_ETH_P_IPX))
# define ETH_P_IPX 0x8137
#endif
#if !(defined(ETH_P_IPV6) || (defined(HAVE_DECL_ETH_P_IPV6) && HAVE_DECL_ETH_P_IPV6))
# define ETH_P_IPV6 0x86DD
#endif
#if !(defined(ETH_P_PAUSE) || (defined(HAVE_DECL_ETH_P_PAUSE) && HAVE_DECL_ETH_P_PAUSE))
# define ETH_P_PAUSE 0x8808
#endif
#if !(defined(ETH_P_SLOW) || (defined(HAVE_DECL_ETH_P_SLOW) && HAVE_DECL_ETH_P_SLOW))
# define ETH_P_SLOW 0x8809
#endif
#if !(defined(ETH_P_WCCP) || (defined(HAVE_DECL_ETH_P_WCCP) && HAVE_DECL_ETH_P_WCCP))
# define ETH_P_WCCP 0x883E
#endif
#if !(defined(ETH_P_MPLS_UC) || (defined(HAVE_DECL_ETH_P_MPLS_UC) && HAVE_DECL_ETH_P_MPLS_UC))
# define ETH_P_MPLS_UC 0x8847
#endif
#if !(defined(ETH_P_MPLS_MC) || (defined(HAVE_DECL_ETH_P_MPLS_MC) && HAVE_DECL_ETH_P_MPLS_MC))
# define ETH_P_MPLS_MC 0x8848
#endif
#if !(defined(ETH_P_ATMMPOA) || (defined(HAVE_DECL_ETH_P_ATMMPOA) && HAVE_DECL_ETH_P_ATMMPOA))
# define ETH_P_ATMMPOA 0x884c
#endif
#if !(defined(ETH_P_PPP_DISC) || (defined(HAVE_DECL_ETH_P_PPP_DISC) && HAVE_DECL_ETH_P_PPP_DISC))
# define ETH_P_PPP_DISC 0x8863
#endif
#if !(defined(ETH_P_PPP_SES) || (defined(HAVE_DECL_ETH_P_PPP_SES) && HAVE_DECL_ETH_P_PPP_SES))
# define ETH_P_PPP_SES 0x8864
#endif
#if !(defined(ETH_P_LINK_CTL) || (defined(HAVE_DECL_ETH_P_LINK_CTL) && HAVE_DECL_ETH_P_LINK_CTL))
# define ETH_P_LINK_CTL 0x886c
#endif
#if !(defined(ETH_P_ATMFATE) || (defined(HAVE_DECL_ETH_P_ATMFATE) && HAVE_DECL_ETH_P_ATMFATE))
# define ETH_P_ATMFATE 0x8884
#endif
#if !(defined(ETH_P_PAE) || (defined(HAVE_DECL_ETH_P_PAE) && HAVE_DECL_ETH_P_PAE))
# define ETH_P_PAE 0x888E
#endif
#if !(defined(ETH_P_AOE) || (defined(HAVE_DECL_ETH_P_AOE) && HAVE_DECL_ETH_P_AOE))
# define ETH_P_AOE 0x88A2
#endif
#if !(defined(ETH_P_8021AD) || (defined(HAVE_DECL_ETH_P_8021AD) && HAVE_DECL_ETH_P_8021AD))
# define ETH_P_8021AD 0x88A8
#endif
#if !(defined(ETH_P_802_EX1) || (defined(HAVE_DECL_ETH_P_802_EX1) && HAVE_DECL_ETH_P_802_EX1))
# define ETH_P_802_EX1 0x88B5
#endif
#if !(defined(ETH_P_ERSPAN) || (defined(HAVE_DECL_ETH_P_ERSPAN) && HAVE_DECL_ETH_P_ERSPAN))
# define ETH_P_ERSPAN 0x88BE
#endif
#if !(defined(ETH_P_TIPC) || (defined(HAVE_DECL_ETH_P_TIPC) && HAVE_DECL_ETH_P_TIPC))
# define ETH_P_TIPC 0x88CA
#endif
#if !(defined(ETH_P_MACSEC) || (defined(HAVE_DECL_ETH_P_MACSEC) && HAVE_DECL_ETH_P_MACSEC))
# define ETH_P_MACSEC 0x88E5
#endif
#if !(defined(ETH_P_8021AH) || (defined(HAVE_DECL_ETH_P_8021AH) && HAVE_DECL_ETH_P_8021AH))
# define ETH_P_8021AH 0x88E7
#endif
#if !(defined(ETH_P_MVRP) || (defined(HAVE_DECL_ETH_P_MVRP) && HAVE_DECL_ETH_P_MVRP))
# define ETH_P_MVRP 0x88F5
#endif
#if !(defined(ETH_P_1588) || (defined(HAVE_DECL_ETH_P_1588) && HAVE_DECL_ETH_P_1588))
# define ETH_P_1588 0x88F7
#endif
#if !(defined(ETH_P_NCSI) || (defined(HAVE_DECL_ETH_P_NCSI) && HAVE_DECL_ETH_P_NCSI))
# define ETH_P_NCSI 0x88F8
#endif
#if !(defined(ETH_P_PRP) || (defined(HAVE_DECL_ETH_P_PRP) && HAVE_DECL_ETH_P_PRP))
# define ETH_P_PRP 0x88FB
#endif
#if !(defined(ETH_P_FCOE) || (defined(HAVE_DECL_ETH_P_FCOE) && HAVE_DECL_ETH_P_FCOE))
# define ETH_P_FCOE 0x8906
#endif
#if !(defined(ETH_P_TDLS) || (defined(HAVE_DECL_ETH_P_TDLS) && HAVE_DECL_ETH_P_TDLS))
# define ETH_P_TDLS 0x890D
#endif
#if !(defined(ETH_P_FIP) || (defined(HAVE_DECL_ETH_P_FIP) && HAVE_DECL_ETH_P_FIP))
# define ETH_P_FIP 0x8914
#endif
#if !(defined(ETH_P_IBOE) || (defined(HAVE_DECL_ETH_P_IBOE) && HAVE_DECL_ETH_P_IBOE))
# define ETH_P_IBOE 0x8915
#endif
#if !(defined(ETH_P_80221) || (defined(HAVE_DECL_ETH_P_80221) && HAVE_DECL_ETH_P_80221))
# define ETH_P_80221 0x8917
#endif
#if !(defined(ETH_P_HSR) || (defined(HAVE_DECL_ETH_P_HSR) && HAVE_DECL_ETH_P_HSR))
# define ETH_P_HSR 0x892F
#endif
#if !(defined(ETH_P_NSH) || (defined(HAVE_DECL_ETH_P_NSH) && HAVE_DECL_ETH_P_NSH))
# define ETH_P_NSH 0x894F
#endif
#if !(defined(ETH_P_LOOPBACK) || (defined(HAVE_DECL_ETH_P_LOOPBACK) && HAVE_DECL_ETH_P_LOOPBACK))
# define ETH_P_LOOPBACK 0x9000
#endif
#if !(defined(ETH_P_QINQ1) || (defined(HAVE_DECL_ETH_P_QINQ1) && HAVE_DECL_ETH_P_QINQ1))
# define ETH_P_QINQ1 0x9100
#endif
#if !(defined(ETH_P_QINQ2) || (defined(HAVE_DECL_ETH_P_QINQ2) && HAVE_DECL_ETH_P_QINQ2))
# define ETH_P_QINQ2 0x9200
#endif
#if !(defined(ETH_P_QINQ3) || (defined(HAVE_DECL_ETH_P_QINQ3) && HAVE_DECL_ETH_P_QINQ3))
# define ETH_P_QINQ3 0x9300
#endif
#if !(defined(ETH_P_EDSA) || (defined(HAVE_DECL_ETH_P_EDSA) && HAVE_DECL_ETH_P_EDSA))
# define ETH_P_EDSA 0xDADA
#endif
#if !(defined(ETH_P_IFE) || (defined(HAVE_DECL_ETH_P_IFE) && HAVE_DECL_ETH_P_IFE))
# define ETH_P_IFE 0xED3E
#endif
#if !(defined(ETH_P_AF_IUCV) || (defined(HAVE_DECL_ETH_P_AF_IUCV) && HAVE_DECL_ETH_P_AF_IUCV))
# define ETH_P_AF_IUCV 0xFBFB
#endif

#ifndef IN_MPERS

const struct xlat ethernet_protocols[] = {

 XLAT(ETH_P_802_3),
 XLAT(ETH_P_AX25),
 XLAT(ETH_P_ALL),
 XLAT(ETH_P_802_2),
 XLAT(ETH_P_SNAP),
 XLAT(ETH_P_DDCMP),
 XLAT(ETH_P_WAN_PPP),
 XLAT(ETH_P_PPP_MP),
 XLAT(ETH_P_LOCALTALK),
 XLAT(ETH_P_CAN),
 XLAT(ETH_P_CANFD),
 XLAT(ETH_P_PPPTALK),
 XLAT(ETH_P_TR_802_2),
 XLAT(ETH_P_MOBITEX),
 XLAT(ETH_P_CONTROL),
 XLAT(ETH_P_IRDA),
 XLAT(ETH_P_ECONET),
 XLAT(ETH_P_HDLC),
 XLAT(ETH_P_ARCNET),
 XLAT(ETH_P_DSA),
 XLAT(ETH_P_TRAILER),
 XLAT(ETH_P_LOOP),
 XLAT(ETH_P_PHONET),
 XLAT(ETH_P_IEEE802154),
 XLAT(ETH_P_CAIF),
 XLAT(ETH_P_XDSA),
 XLAT(ETH_P_MAP),
 XLAT(ETH_P_PUP),
 XLAT(ETH_P_PUPAT),
 XLAT(ETH_P_802_3_MIN),
 XLAT(ETH_P_IP),
 XLAT(ETH_P_X25),
 XLAT(ETH_P_ARP),
 XLAT(ETH_P_BPQ),
 XLAT(ETH_P_IEEEPUP),
 XLAT(ETH_P_IEEEPUPAT),
 XLAT(ETH_P_ERSPAN2),
 XLAT(ETH_P_TSN),
 XLAT(ETH_P_BATMAN),
 XLAT(ETH_P_DEC),
 XLAT(ETH_P_DNA_DL),
 XLAT(ETH_P_DNA_RC),
 XLAT(ETH_P_DNA_RT),
 XLAT(ETH_P_LAT),
 XLAT(ETH_P_DIAG),
 XLAT(ETH_P_CUST),
 XLAT(ETH_P_SCA),
 XLAT(ETH_P_TEB),
 XLAT(ETH_P_RARP),
 XLAT(ETH_P_ATALK),
 XLAT(ETH_P_AARP),
 XLAT(ETH_P_8021Q),
 XLAT(ETH_P_IPX),
 XLAT(ETH_P_IPV6),
 XLAT(ETH_P_PAUSE),
 XLAT(ETH_P_SLOW),
 XLAT(ETH_P_WCCP),
 XLAT(ETH_P_MPLS_UC),
 XLAT(ETH_P_MPLS_MC),
 XLAT(ETH_P_ATMMPOA),
 XLAT(ETH_P_PPP_DISC),
 XLAT(ETH_P_PPP_SES),
 XLAT(ETH_P_LINK_CTL),
 XLAT(ETH_P_ATMFATE),
 XLAT(ETH_P_PAE),
 XLAT(ETH_P_AOE),
 XLAT(ETH_P_8021AD),
 XLAT(ETH_P_802_EX1),
 XLAT(ETH_P_ERSPAN),
 XLAT(ETH_P_TIPC),
 XLAT(ETH_P_MACSEC),
 XLAT(ETH_P_8021AH),
 XLAT(ETH_P_MVRP),
 XLAT(ETH_P_1588),
 XLAT(ETH_P_NCSI),
 XLAT(ETH_P_PRP),
 XLAT(ETH_P_FCOE),
 XLAT(ETH_P_TDLS),
 XLAT(ETH_P_FIP),
 XLAT(ETH_P_IBOE),
 XLAT(ETH_P_80221),
 XLAT(ETH_P_HSR),
 XLAT(ETH_P_NSH),
 XLAT(ETH_P_LOOPBACK),
 XLAT(ETH_P_QINQ1),
 XLAT(ETH_P_QINQ2),
 XLAT(ETH_P_QINQ3),
 XLAT(ETH_P_EDSA),
 XLAT(ETH_P_IFE),
 XLAT(ETH_P_AF_IUCV),
 XLAT_END
};

#endif /* !IN_MPERS */
