#!/bin/sh

# if app not exist
if [ ! -e /bin/transmission-daemon ] || [ ! -d /proc/bus/usb ]; then
    exit 0
fi

#include global config
. /etc/scripts/global.sh

LOG="logger -t transmission"

wait_for_close() {
    # if need kill transmission-daemon
    pid=`pidof transmission-daemon`
    if [ "$pid" != "" ]; then
        $LOG "Stop transmission daemon."
	killall -q transmission-daemon
        #wait before save files and connections stop
        count=0
        while [ "$pid" != "" ] && [ "$count" != "15" ]; do
            sleep 1
	    count="$(($count+1))"
	    pid=`pidof transmission-daemon`
	done
	#kill by if not stopped
	killall -q -SIGKILL transmission-daemon
    fi
}

start() {
    get_param
    if [ "$TransmissionEnabled" = "1" ]; then
      ( # send to background

	# if need kill transmission-daemon
	wait_for_close

	$LOG "Start transmission daemon."
	mkdir -p $TRANSMISSION_HOME
	nice -n 15 /bin/transmission-daemon -p $TransRPCPort -P $TransInPort $authory $whitelist -w $TRANSMISSION_DOWNLOADS -x /var/run/transmission-daemon.pid
      ) & # send to background
    fi
}

stop() {
    # if need kill transmission-daemon
    wait_for_close
}

get_param() {
    eval `nvram_buf_get 2860 TransmissionEnabled TransRPCPort TransAuthor TransInPort TransLogin TransPass TransDir`

    # auth mode
    if [ "$TransAuthor" = "1" ]; then
	authory="-t -u $TransLogin -v $TransPass"
    else
	authory="-T"
    fi

    # add local network to whitelist
    WhiteListNet=`echo "$lan_ipaddr" | cut -d "." -f -3 | awk {' print $1".*" '}`
    if [ "$WhiteListNet" != "" ]; then
	whitelist="-a $WhiteListNet"
    fi

    #export variables for transmissions
    export TRANSMISSION_WEB_HOME=/share/transmission/web
    export XDG_DATA_HOME=/share/transmission/web
    export XDG_DATA_DIRS=/share/transmission/web

    # get mounted parts for public (last mounted)
    public=`df -h | grep -E "/dev/sd.*media" | awk {' print $6 '} | tail -qn1`
    if [ "$public" = "" ]; then
	$LOG "Not any disk connected."
	exit 0
    fi

    # replace path to public with /media/$TransDir selected by user
    if [ "$TransDir" != "" ]; then
	public="/media/${TransDir}"
    fi

    if [ ! -e $public ]; then
	$LOG "Directory for transmission downloads not correct or not exist $public."
	exit 0
    fi

    #default download dir
    if [ -e /bin/transmission-daemon ] && [ "$public" != "" ]; then
	export TRANSMISSION_HOME="$public"/transmission
	export TRANSMISSION_DOWNLOADS="$TRANSMISSION_HOME"/downloads
	$LOG "Transmission home directory set to $public and download directory is $public/downloads."
    fi
}

case "$1" in
        start)
            start
            ;;

	stop)
            stop
            ;;

	restart)
            stop
            start
            ;;

	reload)
            killall -HUP transmission-daemon
            ;;

        *)
            echo $"Usage: $0 {start|stop|reload|restart}"
esac
