#!/bin/sh

# if app not exist
if [ ! -e /bin/chilli ]; then
    exit 0
fi

# get params
. /etc/scripts/global.sh

if [ "$OperationMode" = "0" ]; then
    exit 0
fi

LOG="logger -t ChilliSpot"
start() {
    if [ "$chilli_enable" = "on" ]; then
	$LOG "Starting ChilliSpot"
	(
	get_params
	# chilli start only after radius reachable (workaround register at online auth services)
	count=0
	reachable=0
	while [ $reachable -eq 0 ]; do
	    $LOG "Check for radius server $chilli_radiusserver1 reachable"
    	    ping -q -c 1 "$chilli_radiusserver1"
    	    if [ "$?" -eq 0 ]; then
        	reachable=1
    	    else
        	$LOG "Radius server unreachable wait 5 sec."
        	sleep 5
        	reachable=0
		count="$(($count+1))"
		if [ "$count" = "5" ]; then
		    reachable=1
    		    $LOG "Not radius server reachable, icmp filtered?"
		fi
    	    fi
	done
	# prevent double start
	pid=`pidof chilli`
	if [ "$pid" != "" ]; then
	    $LOG "Stopping ChilliSpot"
    	    killall -q chilli
    	    killall -q chilli_stat
    	    killall -q -SIGKILL chilli
    	    killall -q -SIGKILL chilli_stat
    	    rm -f /tmp/chilli* /var/run/chilli*
	    usleep 500000
	fi
	# activate location
	if [ "$chilli_radiusserver1" = "radius.hotspotsystem.com" ]; then
	    wget -q http://tech.hotspotsystem.com/up.php?mac=$lmac\&nasid=$chilli_radiusnasid -O /tmp/chilli_apinstalled > /dev/null 2>&1
	    echo "#!/bin/sh" 		> /tmp/chilli_stat
	    echo "while true; do" 	>> /tmp/chilli_stat
	    echo "sleep 60" 		>> /tmp/chilli_stat
	    echo "wget -q http://tech.hotspotsystem.com/up.php?mac=$lmac\&nasid=$chilli_radiusnasid\&os_date=coova\&uptime=\`uptime|sed \"s/" "/\%20/g\"|sed \"s/:/\%3A/g\"|sed \"s/,/\%2C/g\"\` -O /tmp/chilli_getstate > /dev/null 2>&1"  >> /tmp/chilli_stat
	    echo "done" 		>> /tmp/chilli_stat
	elif [ "$chilli_radiusserver1" = "wi-fi.netbynet.ru" ]; then
	    wget -q http://wi-fi.netbynet.ru/up.php?f=init\&macwan=$wmac\&mac=$lmac\&nasid=$chilli_radiusnasid -O /tmp/chilli_apinstalled > /dev/null 2>&1
	    echo "#!/bin/sh" 		> /tmp/chilli_stat
	    echo "while true; do" 	>> /tmp/chilli_stat
	    echo "sleep 60" 		>> /tmp/chilli_stat
	    echo "wget -q http://wi-fi.netbynet.ru/up.php?f=uptime\&macwan=$wmac\&mac=$lmac\&nasid=$chilli_radiusnasid\&os_date=coova\&uptime=\`uptime|sed \"s/" "/\%20/g\"|sed \"s/:/\%3A/g\"|sed \"s/,/\%2C/g\"\` -O /tmp/chilli_getstate > /dev/null 2>&1"  >> /tmp/chilli_stat
	    echo "done" 		>> /tmp/chilli_stat
	elif [ "$chilli_radiusserver1" = "radiusm.mywifi.com" ]; then
	    echo "#!/bin/sh" 		> /tmp/chilli_stat
	    echo "while true; do" 	>> /tmp/chilli_stat
	    echo "sleep 60" 		>> /tmp/chilli_stat
    	    echo "wget -q http://www.mywifi.com/getstate -O /tmp/chilli_getstate > /dev/null 2>&1" >> /tmp/chilli_stat
	    echo "done" 		>> /tmp/chilli_stat
	fi
	# status location
	if [ -e /tmp/chilli_stat ]; then
	    killall -q chilli_stat
	    killall -q -SIGKILL chilli_stat
	    chmod 555 /tmp/chilli_stat
	    /tmp/chilli_stat &
	fi
	nice -n -8 chilli $PARLINE &
	) & # send to background
	# statistics
    fi
}

stop() {
    pid=`pidof chilli`
    if [ "$pid" != "" ]; then
	$LOG "Stopping ChilliSpot"
	killall -q chilli
    	killall -q chilli_stat
	killall -q -SIGKILL chilli
    	killall -q -SIGKILL chilli_stat
    fi
    rm -f /var/run/chilli* /tmp/chilli*
}

get_params() {
    eval `nvram_buf_get 2860 chilli_debug chilli_radiusserver1 chilli_radiusnasid chilli_uamdomain chilli_macallowed chilli_clisolate chilli_https`

    # add static defaults
    # limit child process num at one time (prevent overload slow router cpu and mem usage limit)
    # tune radius connection parametrs
    # for correct work ring/rate alg in MTK/Ralink do not use txqlen more when 500 pkts
    # optimal txqlen for tun if ~ 4 * txlen br0 + txqlen wan_if
    PARLINE="--dhcpif=$lan_if --routeif=$wan_if --childmax=64 --radiustimeout=15 --radiusretry=30 --txqlen=400"
    PARLINE="$PARLINE --pidfile /var/run/chilli.pid --cmdsocket /var/run/chilli.sock --unixipc /var/run/chilli.ipc --kname=chilli"

    # use /32 mask for clients (prevent client to client direct connect)
    if [ "$chilli_clisolate" == "1" ]; then
    	PARLINE="$PARLINE --noc2c"
    fi

    # uamdomain support depended by allow redirdnsreq
    if [ "$chilli_uamdomain" != "" ]; then
	PARLINE="$PARLINE --redirdnsreq"
    fi

    # allow access local clients by mac without radius check if configured
    if [ "$chilli_macallowed" != "" ]; then
	PARLINE="$PARLINE --macallowlocal"
    fi

    # for future support ipv6 (not complite in upstream need fix first)
    #if [ "$IPv6OpMode" = "1" ]; then
    #	PARLINE="$PARLINE --ipv6 --ipv6mode=6and4"
    #elif [ "$IPv6OpMode" = "3" ]; then
    #	PARLINE="$PARLINE --ipv6 --ipv6mode=6to4"
    #fi

    # path to pem files uploaded to rwfs
    pempath="/etc/certs"
    capemfile="${pempath}/ca.pem"
    keypemfile="${pempath}/ca.key"
    sertpemfile="${pempath}/ca.pem"
    sslkeypass=""
    if [ "$chilli_https" = "1" ] && [ -e $capemfile ] && [ -e $keypemfile ] && [ -e $sertpemfile ]; then
    	PARLINE="$PARLINE --sslcafile $capemfile --sslkeyfile $keypemfile --sslcertfile $sertpemfile --redirssl"
	if [ "$sslkeypass" != "" ]; then
    	    PARLINE="$PARLINE --sslkeypass $sslkeypass"
	fi
	# --uamuissl to turn on SSL on the uamuiport instead of simple HTTP (requires correct cert file from external validation center)
	# may be in future...?
    fi

    # parse webui user tuned parametrs
    PARAMS="uamserver uamhomepage uamsecret uamdomain uamallowed macallowed net dhcpstart dhcpend dns1 dns2 domain coaport lease maxclients"
    PARAMS="$PARAMS radiuslisten radiusserver1 radiusserver2 radiussecret radiusnasid radiusnasip radiuslocationid radiuslocationname radiusnasporttype"
    for i in $PARAMS; do
	val=`nvram_get 2860 chilli_$i`
	[ -n "$val" ] && PARLINE="$PARLINE --$i $val"
    done
    BOOLPARAMS="coanoipcheck uamanyip uamanydns dnsparanoia"
    for i in $BOOLPARAMS; do
	val=`nvram_get 2860 chilli_$i`
	[ "$val" = "on" ] && PARLINE="$PARLINE --$i"
    done

    # debug parametrs
    if [ "$chilli_debug" = "1" ]; then
	PARLINE="$PARLINE -d -f -F --debugfacility=7 --logfacility=7 --loglevel=7"
    else
	PARLINE="$PARLINE -f -F"
    fi

    lmac=`echo $LAN_MAC_ADDR|sed s/:/-/g`
    wmac=`echo $WAN_MAC_ADDR|sed s/:/-/g`

    if [ ! -d /sys/module/tun ]; then
	modprobe -q tun
    fi
    if [ ! -d /sys/module/xt_coova ]; then
	modprobe -q xt_coova
    fi
}

case "$1" in
        start)
            start
            ;;

        stop)
            stop
            ;;

        restart)
            stop
            start
            ;;

        *)
            echo $"Usage: $0 {start|stop|restart}"
esac
