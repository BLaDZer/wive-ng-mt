#!/bin/sh

# if app not exist
if [ ! -e /bin/chilli ]; then
    exit 0
fi

# get params
. /etc/scripts/global.sh

if [ "$OperationMode" = "0" ]; then
    exit 0
fi

LOG="logger -t ChilliSpot"
PARAMS="net dhcpstart dhcpend dns1 dns2 domain radiuslisten radiusserver1 radiusserver2 radiussecret radiusnasid \
	radiusnasip radiuslocationid radiuslocationname radiusnasporttype coaport lease uamserver uamhomepage uamsecret"

BOOLPARAMS="coanoipcheck uamanyip uamanydns"

start() {
    if [ "$chilli_enable" = "on" ]; then
	$LOG "Starting ChilliSpot"
	(
	get_params
	# chilli start only after radius reachable (workaround register at online auth services)
	count=0
	reachable=0
	while [ $reachable -eq 0 ]; do
	    $LOG "Check for radius server $chilli_radiusserver1 reachable"
    	    ping -q -c 1 "$chilli_radiusserver1"
    	    if [ "$?" -eq 0 ]; then
        	reachable=1
    	    else
        	$LOG "Radius server unreachable wait 5 sec."
        	sleep 5
        	reachable=0
		count="$(($count+1))"
		if [ "$count" = "5" ]; then
		    reachable=1
    		    $LOG "Not radius server reachable, icmp filtered?"
		fi
    	    fi
	done
	# prevent double start
	pid=`pidof chilli`
	if [ "$pid" != "" ]; then
	    $LOG "Stopping ChilliSpot"
    	    killall -q chilli
    	    killall -q -SIGKILL chilli
    	    killall -q chilli_stat
    	    killall -q -SIGKILL chilli_stat
    	    rm -f /tmp/chilli* /var/run/chilli*
	    usleep 500000
	fi
	# activate location
	if [ "$chilli_radiusserver1" = "radius.hotspotsystem.com" ]; then
	    wget -q http://tech.hotspotsystem.com/up.php?mac=$mac\&nasid=$chilli_radiusnasid -O /tmp/chilli_apinstalled > /dev/null 2>&1
	    echo "#!/bin/sh" 		> /tmp/chilli_stat
	    echo "while true; do" 	>> /tmp/chilli_stat
	    echo "sleep 60" 		>> /tmp/chilli_stat
	    echo "wget -q http://tech.hotspotsystem.com/up.php?mac=$mac\&nasid=$chilli_radiusnasid\&os_date=coova\&uptime=\`uptime|sed \"s/" "/\%20/g\"|sed \"s/:/\%3A/g\"|sed \"s/,/\%2C/g\"\` -O /tmp/chilli_getstate > /dev/null 2>&1"  >> /tmp/chilli_stat
	    echo "done" 		>> /tmp/chilli_stat
	elif [ "$chilli_radiusserver1" = "radiusm.mywifi.com" ]; then
	    echo "#!/bin/sh" 		> /tmp/chilli_stat
	    echo "while true; do" 	>> /tmp/chilli_stat
	    echo "sleep 60" 		>> /tmp/chilli_stat
    	    echo "wget -q http://www.mywifi.com/getstate -O /tmp/chilli_getstate > /dev/null 2>&1" >> /tmp/chilli_stat
	    echo "done" 		>> /tmp/chilli_stat
	fi
	# status location
	if [ -e /tmp/chilli_stat ]; then
	    killall -q chilli_stat
	    killall -q -SIGKILL chilli_stat
	    chmod 555 /tmp/chilli_stat
	    /tmp/chilli_stat &
	fi
	chilli --kname=chilli $uamallowed $macallowed $uamdomain $PARLINE $DEBUG --pidfile /var/run/chilli.pid --cmdsocket /var/run/chilli.sock --unixipc /var/run/chilli.ipc &
	) & # send to background
	# statistics
    fi
}

stop() {
    pid=`pidof chilli`
    if [ "$pid" != "" ]; then
	$LOG "Stopping ChilliSpot"
	killall -q chilli
	killall -q -SIGKILL chilli
    	killall -q chilli_stat
    	killall -q -SIGKILL chilli_stat
    fi
    rm -f /var/run/chilli* /tmp/chilli*
}

get_params() {
    if [ ! -d /sys/module/xt_coova ]; then
	modprobe -q xt_coova
    fi
    if [ ! -d /sys/module/tun ]; then
	modprobe -q tun
    fi

    eval `nvram_buf_get 2860 chilli_debug chilli_radiusserver1 chilli_radiusnasid chilli_uamallowed chilli_macallowed chilli_uamdomain`
    PARLINE="--dhcpif $lan_if --radiustimeout=30 --radiusretry=20 --txqlen=1000"
    for i in $PARAMS; do
	val=`nvram_get 2860 chilli_$i`
	[ -n "$val" ] && PARLINE="$PARLINE --$i $val"
    done
    for i in $BOOLPARAMS; do
	val=`nvram_get 2860 chilli_$i`
	[ "$val" = "on" ] && PARLINE="$PARLINE --$i"
    done
    if [ "$chilli_debug" = "1" ]; then
	DEBUG="-d -f -F --debugfacility=7 --logfacility=7 --loglevel=7"
    else
	DEBUG="-f -F"
    fi
    if [ "$chilli_uamallowed" ]; then
	uamallowed="--uamallowed=$chilli_uamallowed"
    else
	uamallowed=""
    fi
    if [ "$chilli_macallowed" ]; then
	macallowed="--macallowed=$chilli_macallowed"
    else
	macallowed=""
    fi
    if [ "$chilli_uamdomain" ]; then
	uamdomain="--redirdnsreq --uamdomain=$chilli_uamdomain"
    else
	uamdomain=""
    fi
    if [ "$IPv6OpMode" = "1" ]; then
	ipvsix="--ipv6 --ipv6mode=6and4"
    elif [ "$IPv6OpMode" = "3" ]; then
	ipvsix="--ipv6 --ipv6mode=6to4"
    else
	ipvsix=""
    fi
    mac=`echo $LAN_MAC_ADDR|sed s/:/-/g`
}

case "$1" in
        start)
            start
            ;;

        stop)
            stop
            ;;

        restart)
            stop
            start
            ;;

        *)
            echo $"Usage: $0 {start|stop|restart}"
esac
