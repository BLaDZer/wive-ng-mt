#!/bin/sh

# if app not exist
if [ ! -e /bin/radiusd ]; then
    exit 0
fi


# get params
. /etc/scripts/global.sh

LOG="logger -t radiusd"

gen_config() {
    get_param
    configured=0
    if [ "$radius_srv_enabled" = "1" -o "$radius_srv_enabled" = "2" ] && [ "$radius_srv_secret" != "" ]; then
	# Write clients.conf
	printf "
	    client * {
		ipaddr = *
		proto = *
		secret = $radius_srv_secret
		require_message_authenticator = no
		nas_type = other
		limit {
		    lifetime = 0
		    idle_timeout = 30
		}
	    }
	" > $CLIENTSC
	# Write proxy.conf
	printf "
	    proxy server {
		default_fallback = no
	    }

	    home_server localhost {
		type = auth
		ipaddr = 127.0.0.1
		port = 1812
		secret = $radius_srv_secret
		response_window = 20
		zombie_period = 40
		revive_interval = 120
		status_check = status-server
		check_interval = 30
		check_timeout = 4
		num_answers_to_alive = 3
		max_outstanding = 65536
		coa {
		    irt = 2
		    mrt = 16
		    mrc = 5
		    mrd = 30
		}

		limit {
		    max_connections = 32
		    max_requests = 0
		    lifetime = 0
		    idle_timeout = 0
		}
	    }

	    home_server_pool my_auth_failover {
		type = fail-over
		home_server = localhost
	    }

	    realm LOCAL {
	    }

	    realm DEFAULT {
		    type	= radius
		    authhost	= LOCAL
		    accthost	= LOCAL
	    }
	" > $PROXYCON
	# Generate password file.
	echo > $AUTHFILE
	for usernum in `seq 0 $radius_srv_user_num`; do
	    radius_srv_user=`nvram_get 2860 radius_srv_user"$usernum"`
	    radius_srv_pass=`nvram_get 2860 radius_srv_pass"$usernum"`
	    if [ "$radius_srv_user" != "" ] && [ "$radius_srv_pass" != "" ]; then
		    printf "$radius_srv_user Cleartext-Password := "$radius_srv_pass"\n" >> $AUTHFILE
		    configured=1
	    fi
	done
    fi
}

start() {
    gen_config
    if [ "$configured" = "1" ]; then
	    $LOG "Starting radius daemon"
	    radiusd &
    fi
}

reload() {
    gen_config
    is_run=`pidof radiusd`
    if [ "$configured" = "1" ]; then
	if [ "$is_run" != "" ]; then
	    $LOG "Send HUP to radiusd."
	    killall -q -SIGHUP radiusd
	else
	    start
    else
	if [ "$is_run" != "" ]; then
	    stop
	fi
    fi
}

get_param() {
    eval `nvram_buf_get 2860 radius_srv_enabled radius_srv_user_num radius_srv_secret`
    AUTHFILE="/etc/raddb/mods-config/files/authorize"
    CLIENTSC="/etc/raddb/clients.conf"
    PROXYCON="/etc/raddb/proxy.conf"
}

stop() {
    pid=`pidof radiusd`
    if [ "$pid" != "" ]; then
	$LOG "Stopping  radius roaming daemon"
	killall -q radiusd
	killall -q -SIGKILL radiusd
    fi
}

case "$1" in
        start)
            start
            ;;

        stop)
            stop
            ;;

        reload)
            reload
            ;;

        restart)
            stop
            start
            ;;

        *)
            echo $"Usage: $0 {start|stop|reload|restart}"
esac
