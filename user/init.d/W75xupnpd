#!/bin/sh

# if app not exist
if [ ! -e /bin/xupnpd ]; then
    exit 0
fi

# get params
. /etc/scripts/global.sh

LOG="logger -t xupnpd "

start() {
    get_param
    if [ "$xupnpd" = "1" ]; then
	# add/replace route multicast local srv to LAN
	ip -4 route replace $upnmp_net dev $lan_if
	# make config dirs if not exist
	mkdir -p /etc/xupnpd/config /etc/xupnpd/config/postinit /tmp/xupnpd-feeds
	( # send to background
	    # check ip adress set at wan
	    if [ "$wan_is_not_null" = "0" ]; then
    		$LOG "Wait 15 sec before start..."
		sleep 15
	    fi

    	    $LOG "Start"
	    export XUPNPDROOTDIR=/etc/xupnpd
	    nice -n -8 xupnpd
	) & # send to background
    fi
}

get_param() {

eval `nvram_buf_get 2860 xupnpd`
if [ "$SysLogd" = "1" ]; then
    logto="syslog"
else
    logto="local0"
fi

if [ "$UDPXYMode" != "0" ] && [ "$UDPXYPort" != "" ]; then
printf "
-- external 'udpxy' url for multicast playlists (udp://@...)
cfg.udpxy_url='http://gateway.lo:$UDPXYPort'
" > /etc/xupnpd/xupnpd_conf.lua
else
printf "
-- downstream interface for builtin multicast proxy (comment 'cfg.udpxy_url' for processing 'udp://@...' playlists)
cfg.mcast_interface='$wan_if'
" > /etc/xupnpd/xupnpd_conf.lua
fi
printf "
-- multicast interface for SSDP exchange, 'eth0', 'br0', 'br-lan' for example
cfg.ssdp_interface='$lan_if'

-- syslog facility (syslog,local0-local7)
cfg.log_facility='$logto'

-- Device name
cfg.name='$HostName'
" >> /etc/xupnpd/xupnpd_conf.lua

# share /media/*
publiclist=`df -h | grep -E "/dev/sd.*media|/dev/mmc.*media" | awk {' print $6 '}`
if [ "$publiclist" != "" ] && [ -e /media ]; then
printf "
cfg.playlists_update_interval=3600

playlist=
{
      { '/media', 'Local Media Files' }
}
" >> /etc/xupnpd/xupnpd_conf.lua
else
printf "
cfg.playlists_update_interval=0

playlist=
{
--    { '/media', 'Local Media Files' }
}
" >> /etc/xupnpd/xupnpd_conf.lua
fi
}

stop() {
    if [ -e /var/run/xupnpd.pid ]; then
	$LOG "Stop xupnpd."
        # terminate xupnpd daemon
        while killall -q xupnpd; do
            usleep 500000
            killall -q -SIGKILL xupnpd
        done
	rm -f /var/run/xupnpd.pid
    fi
}

case "$1" in
	start)
	    start
	    ;;

	stop)
	    stop
	    ;;

	restart)
	    stop
	    start
	    ;;

	*)
	    echo $"Usage: $0 {start|stop|restart}"
esac
