#!/bin/sh

# if app not exist
if [ ! -e /bin/irqbalance ]; then
    exit 0
fi

#include global config
. /etc/scripts/global.sh

#if not SMP
if [ "$CONFIG_SMP" = "" ]; then
    exit 0
fi

LOG="logger -t irqbalance"

start() {
    get_param

    # tune defaults RPS/XPS
    echo 128 > /proc/sys/net/core/rps_sock_flow_entries
    ls /sys/devices/virtual/net | while read dev_net; do
	    if [ "$CONFIG_RFS_ACCEL" = "y" ]; then
		# disable store RFS flow table for prevent slowdown ppp tunnels,
		# PPE and others offload break correct calculations mapping,
		# need allways renew flow map for avoid slowdown
		echo 0 > /sys/class/net/$dev_net/queues/rx-0/rps_flow_cnt
	    fi
	    # default XPS/RPS soft flow to all cores
	    echo f > /sys/class/net/$dev_net/queues/rx-0/rps_cpus
	    echo f > /sys/class/net/$dev_net/queues/tx-0/xps_cpus
    done

    if [ "$IRQBalance" = "auto" ] || [ "$IRQBalance" = "router" ]; then
	$LOG "Start irqbalance routing/wifi optimize mode"
	if [ $cpunum = "4" ]; then
	    # !! first core default use for software path as core/thread 1 !!!
	    # GMAC allways is set to 2
	    echo 2 > /proc/irq/11/smp_affinity #GMAC
	    # in dbdc mode group all sw irq and not critical irq to 4 and radio to 8
	    # else radio use 4/8 all not critical and sw to 1 and usb to 4 with 2.4GHz radio
	    echo 8 > /proc/irq/32/smp_affinity #PCIe1
	    echo 8 > /proc/irq/33/smp_affinity #PCIe2
	    echo 4 > /proc/irq/30/smp_affinity #USB
	    echo 4 > /proc/irq/28/smp_affinity #SDXC
	    echo 4 > /proc/irq/27/smp_affinity #VPN

	    if [ "$CONFIG_MT7615_AP_DBDC_MODE" = "y" ]; then
	        echo 8 > /proc/irq/12/smp_affinity #PCIe0 - dualband radio
	    else
		echo 4 > /proc/irq/12/smp_affinity #PCIe0 - 2.4GHz radio
	    fi

	    if [ "$CONFIG_MT7615_AP_DBDC_MODE" = "y" ]; then
		# WLAN 2.4GHz
		echo 2 > /sys/class/net/$first_wlan_root_if/queues/rx-0/rps_cpus
		echo 2 > /sys/class/net/$first_wlan_root_if/queues/tx-0/xps_cpus
	    else
		# WLAN 2.4GHz
		echo 3 > /sys/class/net/$first_wlan_root_if/queues/rx-0/rps_cpus
		echo 3 > /sys/class/net/$first_wlan_root_if/queues/tx-0/xps_cpus
	    fi

	    # WLAN 5GHz
	    echo 8 > /sys/class/net/$second_wlan_root_if/queues/rx-0/rps_cpus
	    echo 8 > /sys/class/net/$second_wlan_root_if/queues/tx-0/xps_cpus

	    # LAN
	    # RPS/XPS: CPU0/2
	    echo 5 > /sys/class/net/$phys_lan_if/queues/rx-0/rps_cpus
	    echo 5 > /sys/class/net/$phys_lan_if/queues/tx-0/xps_cpus
	    # RPS/XPS: CPU0/1
	    echo 3 > /sys/class/net/$phys_wan_if/queues/rx-0/rps_cpus
	    echo 3 > /sys/class/net/$phys_wan_if/queues/tx-0/xps_cpus

	    # defalt LAN bridge to CPU2
	    if [ -e /sys/class/net/br0 ]; then
		echo 2 > /sys/class/net/br0/queues/rx-0/rps_cpus
		echo 2 > /sys/class/net/br0/queues/tx-0/xps_cpus
	    fi

	    # VPN
	    find /sys -type d -name 'ppp[0-10]' | while read dev_ppp; do
		echo 4 > $dev_ppp/queues/rx-0/rps_cpus
		echo 4 > $dev_ppp/queues/tx-0/xps_cpus
		# if tunnel up first radio move to diff core for prevent WAN/TUN RX path overload
		if [ "$CONFIG_MT7615_AP_DBDC_MODE" != "y" ]; then
		    if [ "$CONFIG_MT7610_AP" != "" ]; then
			# if 7610 make cpu share with 7603
			echo 8 > /proc/irq/12/smp_affinity #PCIe0 - 2.4GHz radio
		    else
			# if others make use first core
			echo 1 > /proc/irq/12/smp_affinity #PCIe0 - 2.4GHz radio
		    fi
		fi
	    done

	elif [ $cpunum = "2" ]; then
	    echo 2 > /proc/irq/11/smp_affinity #GMAC
	    echo 1 > /proc/irq/12/smp_affinity #PCIe0
	    echo 2 > /proc/irq/32/smp_affinity #PCIe1
	    echo 2 > /proc/irq/33/smp_affinity #PCIe2
	    echo 1 > /proc/irq/28/smp_affinity #SDXC
	    echo 1 > /proc/irq/30/smp_affinity #USB
	    echo 1 > /proc/irq/27/smp_affinity #VPN

	    # phys
	    echo 2 > /sys/class/net/$first_wlan_root_if/queues/rx-0/rps_cpus
	    echo 2 > /sys/class/net/$first_wlan_root_if/queues/tx-0/xps_cpus
	    echo 1 > /sys/class/net/$second_wlan_root_if/queues/rx-0/rps_cpus
	    echo 1 > /sys/class/net/$second_wlan_root_if/queues/tx-0/xps_cpus
	    echo 2 > /sys/class/net/$phys_lan_if/queues/rx-0/rps_cpus
	    echo 2 > /sys/class/net/$phys_lan_if/queues/tx-0/xps_cpus
	    echo 2 > /sys/class/net/$phys_wan_if/queues/rx-0/rps_cpus
	    echo 2 > /sys/class/net/$phys_wan_if/queues/tx-0/xps_cpus

	    # VPN
	    find /sys -type d -name 'ppp[0-10]' | while read dev_ppp; do
		echo 2 > $dev_ppp/queues/rx-0/rps_cpus
		echo 2 > $dev_ppp/queues/tx-0/xps_cpus
	    done
	fi
    elif [ "$IRQBalance" = "storage" ]; then
	$LOG "Start irqbalance storage/local services optimize mode"
	if [ $cpunum = "4" ]; then
	    echo 2 > /proc/irq/11/smp_affinity #GMAC
	    echo 4 > /proc/irq/12/smp_affinity #PCIe0
	    echo 4 > /proc/irq/32/smp_affinity #PCIe1
	    echo 8 > /proc/irq/33/smp_affinity #PCIe2
	    echo 8 > /proc/irq/27/smp_affinity #VPN
	    echo 8 > /proc/irq/28/smp_affinity #SDXC
	    echo 8 > /proc/irq/30/smp_affinity #USB

	    # phys
	    echo f > /sys/class/net/$first_wlan_root_if/queues/rx-0/rps_cpus
	    echo f > /sys/class/net/$first_wlan_root_if/queues/tx-0/xps_cpus
	    echo f > /sys/class/net/$second_wlan_root_if/queues/rx-0/rps_cpus
	    echo f > /sys/class/net/$second_wlan_root_if/queues/tx-0/xps_cpus
	    echo c > /sys/class/net/$phys_lan_if/queues/rx-0/rps_cpus
	    echo c > /sys/class/net/$phys_lan_if/queues/tx-0/xps_cpus
	    echo c > /sys/class/net/$phys_wan_if/queues/rx-0/rps_cpus
	    echo c > /sys/class/net/$phys_wan_if/queues/tx-0/xps_cpus

	    # defalt LAN bridge to CPU3
	    if [ -e /sys/class/net/br0 ]; then
		echo 8 > /sys/class/net/br0/queues/rx-0/rps_cpus
		echo 8 > /sys/class/net/br0/queues/tx-0/xps_cpus
	    fi

	    # VPN
	    find /sys -type d -name 'ppp[0-10]' | while read dev_ppp; do
		echo 1 > $dev_ppp/queues/rx-0/rps_cpus
		echo 1 > $dev_ppp/queues/tx-0/xps_cpus
	    done
	elif [ $cpunum = "2" ]; then
	    echo 1 > /proc/irq/11/smp_affinity #GMAC
	    echo 1 > /proc/irq/12/smp_affinity #PCIe0
	    echo 1 > /proc/irq/32/smp_affinity #PCIe1
	    echo 1 > /proc/irq/33/smp_affinity #PCIe2
	    echo 1 > /proc/irq/27/smp_affinity #VPN
	    echo 2 > /proc/irq/28/smp_affinity #SDXC
	    echo 2 > /proc/irq/30/smp_affinity #USB

	    # phys
	    echo 1 > /sys/class/net/$first_wlan_root_if/queues/rx-0/rps_cpus
	    echo 1 > /sys/class/net/$first_wlan_root_if/queues/tx-0/xps_cpus
	    echo 1 > /sys/class/net/$second_wlan_root_if/queues/rx-0/rps_cpus
	    echo 1 > /sys/class/net/$second_wlan_root_if/queues/tx-0/xps_cpus
	    echo 1 > /sys/class/net/$phys_lan_if/queues/rx-0/rps_cpus
	    echo 1 > /sys/class/net/$phys_lan_if/queues/tx-0/xps_cpus
	    echo 1 > /sys/class/net/$phys_wan_if/queues/rx-0/rps_cpus
	    echo 1 > /sys/class/net/$phys_wan_if/queues/tx-0/xps_cpus

	    # VPN
	    find /sys -type d -name 'ppp[0-10]' | while read dev_ppp; do
		echo 2 > $dev_ppp/queues/rx-0/rps_cpus
		echo 2 > $dev_ppp/queues/tx-0/xps_cpus
	    done
	fi
    fi
    if [ "$IRQBalance" = "auto" ]; then
	$LOG "Start irqbalance auto mode"
	irqbalance $banirq
    fi
}

stop() {
    pid=`pidof irqbalance`
    if [ "$pid" != "" ]; then
	$LOG "Stopping irqbalance"
	killall -q irqbalance
	killall -q -SIGKILL irqbalance
    fi
}

get_param() {
    eval `nvram_buf_get 2860 IRQBalance`
    cpunum=`grep -c processor /proc/cpuinfo`
    banirq=`grep ipi_ /proc/interrupts | cut -f1 -d":" | awk {' print "--banirq="$1 '}`
    # do not balance manual static optimal configured wlan
    # wlan only fist and second cards static, third card need be auto balanced
    banirq="$banirq --banirq=12 --banirq=32 -t1"
}

case "$1" in
        start)
            start
            ;;

	stop)
            stop
            ;;

	restart)
            stop
            start
            ;;
        *)
            echo $"Usage: $0 {start|stop|reload|restart}"
esac
