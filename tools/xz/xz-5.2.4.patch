diff -uNrwB xz-5.2.2/ABOUT-NLS xz-5.2.4/ABOUT-NLS
--- xz-5.2.2/ABOUT-NLS	2015-09-29 17:03:25.000000000 +0600
+++ xz-5.2.4/ABOUT-NLS	2018-04-29 21:18:41.000000000 +0600
@@ -18,35 +18,7 @@
 available translations.  They tell how people wanting to contribute and
 work on translations can contact the appropriate team.
 
-   When reporting bugs in the `intl/' directory or bugs which may be
-related to internationalization, you should tell about the version of
-`gettext' which is used.  The information can be found in the
-`intl/VERSION' file, in internationalized packages.
-
-1.1 Quick configuration advice
-==============================
-
-If you want to exploit the full power of internationalization, you
-should configure it using
-
-     ./configure --with-included-gettext
-
-to force usage of internationalizing routines provided within this
-package, despite the existence of internationalizing capabilities in the
-operating system where this package is being installed.  So far, only
-the `gettext' implementation in the GNU C library version 2 provides as
-many features (such as locale alias, message inheritance, automatic
-charset conversion or plural form handling) as the implementation here.
-It is also not possible to offer this additional functionality on top
-of a `catgets' implementation.  Future versions of GNU `gettext' will
-very likely convey even more functionality.  So it might be a good idea
-to change to GNU `gettext' as soon as possible.
-
-   So you need _not_ provide this option if you are using GNU libc 2 or
-you have installed a recent copy of the GNU gettext package with the
-included `libintl'.
-
-1.2 INSTALL Matters
+1.1 INSTALL Matters
 ===================
 
 Some packages are "localizable" when properly installed; the programs
@@ -56,36 +28,19 @@
 
    By default, this package will be installed to allow translation of
 messages.  It will automatically detect whether the system already
-provides the GNU `gettext' functions.  If not, the included GNU
-`gettext' library will be used.  This library is wholly contained
-within this package, usually in the `intl/' subdirectory, so prior
-installation of the GNU `gettext' package is _not_ required.
-Installers may use special options at configuration time for changing
-the default behaviour.  The commands:
+provides the GNU `gettext' functions.  Installers may use special
+options at configuration time for changing the default behaviour.  The
+command:
 
-     ./configure --with-included-gettext
      ./configure --disable-nls
 
-will, respectively, bypass any pre-existing `gettext' to use the
-internationalizing routines provided within this package, or else,
-_totally_ disable translation of messages.
+will _totally_ disable translation of messages.
 
    When you already have GNU `gettext' installed on your system and run
 configure without an option for your new package, `configure' will
-probably detect the previously built and installed `libintl.a' file and
-will decide to use this.  This might not be desirable.  You should use
-the more recent version of the GNU `gettext' library.  I.e. if the file
-`intl/VERSION' shows that the library which comes with this package is
-more recent, you should use
-
-     ./configure --with-included-gettext
-
-to prevent auto-detection.
-
-   The configuration process will not test for the `catgets' function
-and therefore it will not be used.  The reason is that even an
-emulation of `gettext' on top of `catgets' could not provide all the
-extensions of the GNU `gettext' library.
+probably detect the previously built and installed `libintl' library
+and will decide to use it.  If not, you may have to to use the
+`--with-libintl-prefix' option to tell `configure' where to look for it.
 
    Internationalized packages usually have many `po/LL.po' files, where
 LL gives an ISO 639 two-letter code identifying the language.  Unless
@@ -96,7 +51,7 @@
 `LINGUAS' should then contain a space separated list of two-letter
 codes, stating which languages are allowed.
 
-1.3 Using This Package
+1.2 Using This Package
 ======================
 
 As a user, if your language has been installed for this package, you
@@ -148,7 +103,7 @@
 to `de_DE' (German as spoken in Germany), and `pt' to `pt_PT'
 (Portuguese as spoken in Portugal) in this context.
 
-1.4 Translating Teams
+1.3 Translating Teams
 =====================
 
 For the Free Translation Project to be a success, we need interested
@@ -177,17 +132,17 @@
 the terminology in use.  Proven linguistic skills are praised more than
 programming skills, here.
 
-1.5 Available Packages
+1.4 Available Packages
 ======================
 
 Languages are not equally supported in all packages.  The following
-matrix shows the current state of internationalization, as of May 2010.
-The matrix shows, in regard of each package, for which languages PO
-files have been submitted to translation coordination, with a
+matrix shows the current state of internationalization, as of June
+2010.  The matrix shows, in regard of each package, for which languages
+PO files have been submitted to translation coordination, with a
 translation percentage of at least 50%.
 
-     Ready PO files       af am ar as ast az be be@latin bg bn_IN bs ca crh
-                        +---------------------------------------------------+
+     Ready PO files       af am an ar as ast az be be@latin bg bn_IN bs ca
+                        +--------------------------------------------------+
      a2ps               |                    []                      []     |
      aegis              |                                                   |
      ant-phone          |                                                   |
@@ -227,7 +182,7 @@
      gcal               |                                            []     |
      gcc                |                                                   |
      gettext-examples   | []          []                 []          []     |
-     gettext-runtime    |                    []          []          []     |
+     gettext-runtime    |                                   []          [] |
      gettext-tools      |                                []          []     |
      gip                |                                []                 |
      gjay               |                                                   |
@@ -284,11 +239,11 @@
      idutils            |                                                   |
      indent             |                                []          []     |
      iso_15924          |                                                   |
-     iso_3166           | []       []        []          []  []   [] [] []  |
+     iso_3166           | []          []        []          []  []   [] [] |
      iso_3166_2         |                                                   |
      iso_4217           |                                                   |
-     iso_639            |          [] []     []              []         []  |
-     iso_639_3          |                                               []  |
+     iso_639            |             [] []     []              []         |
+     iso_639_3          |                                                  |
      jwhois             |                                                   |
      kbd                |                                                   |
      keytouch           |                                            []     |
@@ -365,378 +320,378 @@
      wyslij-po          |                                                   |
      xchat              |             []     []          []          []     |
      xdg-user-dirs      | []       [] []     []    []    []  []      [] []  |
-     xkeyboard-config   |                                []          [] []  |
-                        +---------------------------------------------------+
-                          af am ar as ast az be be@latin bg bn_IN bs ca crh
-                           6  0  2  3 19   1 11     3    28   3    1 38  5
+     xkeyboard-config   |                                   []          [] |
+                        +--------------------------------------------------+
+                          af am an ar as ast az be be@latin bg bn_IN bs ca
+                           6  0  1  2  3 19   1 10     3    28   3    1 38
 
-                          cs da  de  el en en_GB en_ZA eo es et eu fa fi
+                          crh cs da  de  el en en_GB en_ZA eo es et eu fa
                         +-------------------------------------------------+
-     a2ps               | [] []  []  []     []            [] []       []  |
+     a2ps               |     [] []  []  []     []            [] []       |
      aegis              |    []  []                       []              |
      ant-phone          |    []  ()                                       |
-     anubis             |    []  []                                   []  |
+     anubis             |        []  []                                   |
      aspell             | [] []  []         []            []              |
-     bash               | []                           [] []          []  |
-     bfd                |                                 []          []  |
-     bibshelf           |    []  []                       []          []  |
-     binutils           |                                 []          []  |
-     bison              |        []  []                               []  |
-     bison-runtime      |    []  []  []                      []       []  |
-     bluez-pin          | [] []  []  []                [] []          []  |
-     bombono-dvd        |    []                                       []  |
+     bash               |     []                           [] []          |
+     bfd                |                                     []          |
+     bibshelf           |        []  []                       []          |
+     binutils           |                                     []          |
+     bison              |            []  []                               |
+     bison-runtime      |        []  []  []                      []       |
+     bluez-pin          |     [] []  []  []                [] []          |
+     bombono-dvd        |        []                                       |
      buzztard           | [] []  []                                       |
-     cflow              |    []  []                                   []  |
+     cflow              |        []  []                                   |
      clisp              |    []  []     []                []              |
      coreutils          | [] []  []                          []           |
-     cpio               |                                             []  |
-     cppi               |                                             []  |
+     cpio               |                                                 |
+     cppi               |                                                 |
      cpplib             |    []  []                       []              |
      cryptsetup         |        []                                       |
-     dfarc              |    []  []                       []          []  |
+     dfarc              |        []  []                       []          |
      dialog             |    []  []                    [] []    []        |
      dico               |                                                 |
-     diffutils          | [] []  []  []                [] []          []  |
+     diffutils          |     [] []  []  []                [] []          |
      dink               |    []  []                       []              |
      doodle             |        []                                       |
      e2fsprogs          | []     []                       []              |
      enscript           |    []  []         []                            |
-     exif               | () []  []                                   []  |
+     exif               |     () []  []                                   |
      fetchmail          | [] []  ()  []     []            []              |
-     findutils          | [] []  []                                   []  |
-     flex               |        []                       []          []  |
-     freedink           |    []  []                       []          []  |
+     findutils          |     [] []  []                                   |
+     flex               |            []                       []          |
+     freedink           |        []  []                       []          |
      gas                |                                 []              |
      gawk               |    []  []                       []              |
      gcal               |                                 []              |
      gcc                |        []                       []              |
-     gettext-examples   |        []  []                [] []          []  |
-     gettext-runtime    |    []  []                    [] []          []  |
+     gettext-examples   |            []  []                [] []          |
+     gettext-runtime    |        []  []                    [] []          |
      gettext-tools      |        []                       []    []        |
-     gip                |    []  []                       []    []    []  |
-     gjay               |        []                                   []  |
-     gliv               | [] []  []                                   []  |
-     glunarclock        |    []  []                                   []  |
+     gip                |        []  []                       []    []    |
+     gjay               |            []                                   |
+     gliv               |     [] []  []                                   |
+     glunarclock        |        []  []                                   |
      gnubiff            |        ()                                       |
-     gnucash            | []     ()  ()     ()            ()          ()  |
+     gnucash            |     []     ()  ()     ()            ()          |
      gnuedu             |    []                           []              |
-     gnulib             |        []                       []          []  |
+     gnulib             |            []                       []          |
      gnunet             |                                                 |
      gnunet-gtk         |    []                                           |
      gnutls             | []     []                                       |
-     gold               |                                 []          []  |
-     gpe-aerial         | [] []  []                       []          []  |
-     gpe-beam           | [] []  []                       []          []  |
-     gpe-bluetooth      |    []  []                                   []  |
-     gpe-calendar       |    []                                       []  |
-     gpe-clock          | [] []  []                       []          []  |
-     gpe-conf           | [] []  []                                   []  |
-     gpe-contacts       |    []  []                       []          []  |
-     gpe-edit           |    []  []                                   []  |
-     gpe-filemanager    |    []  []                       []          []  |
-     gpe-go             | [] []  []                       []          []  |
-     gpe-login          |    []  []                                   []  |
-     gpe-ownerinfo      | [] []  []                       []          []  |
-     gpe-package        |    []  []                       []          []  |
-     gpe-sketchbook     | [] []  []                       []          []  |
-     gpe-su             | [] []  []                       []          []  |
-     gpe-taskmanager    | [] []  []                       []          []  |
-     gpe-timesheet      | [] []  []                       []          []  |
-     gpe-today          | [] []  []                       []          []  |
-     gpe-todo           |    []  []                       []          []  |
-     gphoto2            | [] []  ()         []            []    []    []  |
-     gprof              |    []  []                       []          []  |
+     gold               |                                     []          |
+     gpe-aerial         |     [] []  []                       []          |
+     gpe-beam           |     [] []  []                       []          |
+     gpe-bluetooth      |        []  []                                   |
+     gpe-calendar       |        []                                       |
+     gpe-clock          |     [] []  []                       []          |
+     gpe-conf           |     [] []  []                                   |
+     gpe-contacts       |        []  []                       []          |
+     gpe-edit           |        []  []                                   |
+     gpe-filemanager    |        []  []                       []          |
+     gpe-go             |     [] []  []                       []          |
+     gpe-login          |        []  []                                   |
+     gpe-ownerinfo      |     [] []  []                       []          |
+     gpe-package        |        []  []                       []          |
+     gpe-sketchbook     |     [] []  []                       []          |
+     gpe-su             |     [] []  []                       []          |
+     gpe-taskmanager    |     [] []  []                       []          |
+     gpe-timesheet      |     [] []  []                       []          |
+     gpe-today          |     [] []  []                       []          |
+     gpe-todo           |        []  []                       []          |
+     gphoto2            |     [] []  ()         []            []    []    |
+     gprof              |        []  []                       []          |
      gpsdrive           |    []                           [] []           |
      gramadoir          |    []  []                    []                 |
-     grep               | []                                          []  |
-     grub               |    []  []                                   []  |
-     gsasl              |        []                                   []  |
-     gss                |                                             []  |
-     gst-plugins-bad    | [] []  []                       []    []    []  |
-     gst-plugins-base   | [] []  []                       []    []    []  |
-     gst-plugins-good   | [] []  []  []                   []    []    []  |
-     gst-plugins-ugly   | [] []  []  []                   []    []    []  |
-     gstreamer          | [] []  []                       []    []    []  |
-     gtick              |    []  ()                    []             []  |
+     grep               |     []                                          |
+     grub               |        []  []                                   |
+     gsasl              |            []                                   |
+     gss                |                                                 |
+     gst-plugins-bad    |     [] []  []                       []    []    |
+     gst-plugins-base   |     [] []  []                       []    []    |
+     gst-plugins-good   |     [] []  []  []                   []    []    |
+     gst-plugins-ugly   |     [] []  []  []                   []    []    |
+     gstreamer          |     [] []  []                       []    []    |
+     gtick              |        []  ()                    []             |
      gtkam              | [] []  ()                    [] []              |
      gtkorphan          | [] []  []                    []                 |
-     gtkspell           | [] []  []  []                [] []    []    []  |
-     gutenprint         |    []  []         []                        []  |
-     hello              |    []  []                    [] []          []  |
-     help2man           |        []                                   []  |
+     gtkspell           |     [] []  []  []                [] []    []    |
+     gutenprint         |        []  []         []                        |
+     hello              |        []  []                    [] []          |
+     help2man           |            []                                   |
      hylafax            |        []                       []              |
-     idutils            |    []  []                                   []  |
-     indent             | [] []  []                    [] [] [] []    []  |
-     iso_15924          |    []      ()                [] []          []  |
-     iso_3166           | [] []  []  ()                [] [] [] ()    []  |
+     idutils            |        []  []                                   |
+     indent             |     [] []  []                    [] [] [] []    |
+     iso_15924          |        []      ()                [] []          |
+     iso_3166           | []  [] []  []  ()                [] [] [] ()    |
      iso_3166_2         |            ()                                   |
-     iso_4217           | [] []  []  ()                   [] []       []  |
-     iso_639            | [] []  []  ()                [] []          []  |
-     iso_639_3          |                                                 |
-     jwhois             |                                 []          []  |
+     iso_4217           |     [] []  []  ()                   [] []       |
+     iso_639            | []  [] []  []  ()                [] []          |
+     iso_639_3          | []                                              |
+     jwhois             |                                     []          |
      kbd                | [] []  []  []                   []              |
-     keytouch           |    []  []                                   []  |
-     keytouch-editor    |    []  []                                   []  |
-     keytouch-keyboa... |    []                                       []  |
+     keytouch           |        []  []                                   |
+     keytouch-editor    |        []  []                                   |
+     keytouch-keyboa... |        []                                       |
      klavaro            | [] []  []                    []                 |
-     latrine            |    []  ()                                   []  |
-     ld                 |    []                           []          []  |
-     leafpad            | [] []  []  []                   []    []    []  |
-     libc               | [] []  []                       []          []  |
+     latrine            |        []  ()                                   |
+     ld                 |        []                           []          |
+     leafpad            |     [] []  []  []                   []    []    |
+     libc               |     [] []  []                       []          |
      libexif            |    []  []         ()                            |
      libextractor       |                                                 |
      libgnutls          | []                                              |
-     libgpewidget       |    []  []                                   []  |
+     libgpewidget       |        []  []                                   |
      libgpg-error       | []     []                                       |
      libgphoto2         |    []  ()                                       |
      libgphoto2_port    |    []  ()                             []        |
-     libgsasl           |                                             []  |
-     libiconv           | [] []  []                    []    []       []  |
-     libidn             | []     []                    []             []  |
+     libgsasl           |                                                 |
+     libiconv           |     [] []  []                    []    []       |
+     libidn             |     []     []                    []             |
      lifelines          |    []  ()                                       |
      liferea            | []     []  []                   []    []        |
-     lilypond           | []     []                       []          []  |
-     linkdr             |    []  []                       []          []  |
+     lilypond           |     []     []                       []          |
+     linkdr             |        []  []                       []          |
      lordsawar          |    []                                           |
      lprng              |                                                 |
      lynx               | [] []  []                          []           |
-     m4                 | [] []  []  []                               []  |
+     m4                 |     [] []  []  []                               |
      mailfromd          |                                                 |
      mailutils          |                                 []              |
-     make               |    []  []                       []          []  |
+     make               |        []  []                       []          |
      man-db             |                                                 |
      man-db-manpages    |                                                 |
-     minicom            | [] []  []                       []          []  |
-     mkisofs            |                                             []  |
+     minicom            |     [] []  []                       []          |
+     mkisofs            |                                                 |
      myserver           |                                                 |
-     nano               |        []                       []    []    []  |
-     opcodes            |        []                       []          []  |
+     nano               |            []                       []    []    |
+     opcodes            |            []                       []          |
      parted             | []     []                                       |
      pies               |                                                 |
-     popt               | [] []  []                    [] []          []  |
-     psmisc             | []     []                             []    []  |
+     popt               |     [] []  []                    [] []          |
+     psmisc             |     []     []                             []    |
      pspp               |                                 []              |
      pwdutils           |    []                                           |
      radius             |                                 []              |
-     recode             | [] []  []  []                [] []          []  |
-     rosegarden         | ()     ()                       ()          ()  |
+     recode             |     [] []  []  []                [] []          |
+     rosegarden         |     ()     ()                       ()          |
      rpm                |    []  []                       []              |
      rush               |                                                 |
      sarg               |                                                 |
      screem             |                                                 |
-     scrollkeeper       | [] []  []         []            []          []  |
-     sed                | []     []  []                [] [] []       []  |
-     sharutils          |    []  []                       [] []       []  |
+     scrollkeeper       |     [] []  []         []            []          |
+     sed                |     []     []  []                [] [] []       |
+     sharutils          |        []  []                       [] []       |
      shishi             |                                                 |
      skencil            |    []  ()                       []              |
-     solfege            |        []                    []    []       []  |
+     solfege            |            []                    []    []       |
      solfege-manual     |                              []    []           |
      soundtracker       |    []  []                       []              |
      sp                 |        []                                       |
-     sysstat            |    []  []                             []    []  |
-     tar                | []     []                          [] []    []  |
+     sysstat            |        []  []                             []    |
+     tar                |     []     []                          [] []    |
      texinfo            |        []                    [] []              |
      tin                |        []                          []           |
      unicode-han-tra... |                                                 |
      unicode-transla... |                                                 |
-     util-linux-ng      | [] []  []                       []          []  |
+     util-linux-ng      |     [] []  []                       []          |
      vice               |    ()  ()                                       |
      vmm                |        []                                       |
      vorbis-tools       | []                           []                 |
      wastesedge         |    []                                           |
-     wdiff              |        []                       []          []  |
-     wget               | []     []                          []       []  |
-     wyslij-po          |                                             []  |
-     xchat              | []     []  []                   [] []       []  |
+     wdiff              |            []                       []          |
+     wget               |     []     []                          []       |
+     wyslij-po          |                                                 |
+     xchat              |     []     []  []                   [] []       |
      xdg-user-dirs      | [] []  []  []                [] [] [] []    []  |
      xkeyboard-config   | [] []  []                    [] []          []  |
                         +-------------------------------------------------+
-                          cs da  de  el en en_GB en_ZA eo es et eu fa fi
-                          64 105 117 18  1   8     0   28 89 18 19  0 104
+                          crh cs da  de  el en en_GB en_ZA eo es et eu fa
+                           5  64 105 117 18  1   8     0   28 89 18 19  0
 
-                          fr  ga gl gu he hi hr hu hy id  is it ja ka kn
-                        +------------------------------------------------+
-     a2ps               | []                          []        []       |
+                          fi  fr  ga gl gu he hi hr hu hy id  is it ja ka kn
+                        +----------------------------------------------------+
+     a2ps               | []  []                          []        []       |
      aegis              | []                                 []          |
      ant-phone          | []                                 []          |
-     anubis             | []                          []     []          |
+     anubis             | []  []                          []     []          |
      aspell             | []  []                      []     []          |
-     bash               | []                          []        []       |
-     bfd                | []                          []                 |
-     bibshelf           | []  []                      []     []          |
-     binutils           | []                          []                 |
-     bison              | []  []                      []                 |
-     bison-runtime      | []  []                      []     [] []       |
-     bluez-pin          | []  []                [] [] []  []    []       |
-     bombono-dvd        |                                                |
+     bash               | []  []                          []        []       |
+     bfd                | []  []                          []                 |
+     bibshelf           | []  []  []                      []     []          |
+     binutils           | []  []                          []                 |
+     bison              | []  []  []                      []                 |
+     bison-runtime      | []  []  []                      []     [] []       |
+     bluez-pin          | []  []  []                [] [] []  []    []       |
+     bombono-dvd        | []                                                 |
      buzztard           |                             []                 |
-     cflow              |     []                      []                 |
+     cflow              | []      []                      []                 |
      clisp              | []                                             |
      coreutils          | []  []                []    []     []          |
-     cpio               | []  []                      []                 |
-     cppi               | []                                             |
-     cpplib             | []                          []                 |
+     cpio               | []  []  []                      []                 |
+     cppi               | []  []                                             |
+     cpplib             | []  []                          []                 |
      cryptsetup         | []                          []     []          |
-     dfarc              | []                                 []          |
+     dfarc              | []  []                                 []          |
      dialog             | []  [] []                   []  [] [] []       |
      dico               |                                                |
-     diffutils          | []  [] []    []       []    []     [] []       |
+     diffutils          | []  []  [] []    []       []    []     [] []       |
      dink               | []                                             |
      doodle             |     []                             []          |
      e2fsprogs          | []                          []                 |
      enscript           | []  []             []       []                 |
-     exif               | []                          []  [] [] []       |
+     exif               | []  []                          []  [] [] []       |
      fetchmail          | []                          []     [] []       |
-     findutils          | []  []                []    []     []          |
-     flex               | []  []                                         |
-     freedink           | []                          []                 |
+     findutils          | []  []  []                []    []     []          |
+     flex               | []  []  []                                         |
+     freedink           | []  []                          []                 |
      gas                | []                          []                 |
      gawk               | []  []       []             []     () []       |
      gcal               | []                                             |
      gcc                |                             []                 |
-     gettext-examples   | []  []                []    []     [] []       |
-     gettext-runtime    | []  []                      []     [] []       |
+     gettext-examples   | []  []  []                []    []     [] []       |
+     gettext-runtime    | []  []  []                      []     [] []       |
      gettext-tools      | []                          []     [] []       |
-     gip                | []  [] []                   []        []       |
-     gjay               |                                                |
-     gliv               | ()                                             |
-     glunarclock        |     []                []    []                 |
+     gip                | []  []  [] []                   []        []       |
+     gjay               | []                                                 |
+     gliv               | []  ()                                             |
+     glunarclock        | []      []                []    []                 |
      gnubiff            | ()                          []     ()          |
-     gnucash            | ()           ()       ()           () []       |
+     gnucash            | ()  ()           ()       ()           () []       |
      gnuedu             | []                                 []          |
-     gnulib             | []  []                []           [] []       |
+     gnulib             | []  []  []                []           [] []       |
      gnunet             |                                                |
      gnunet-gtk         | []                                             |
      gnutls             | []                                 []          |
-     gold               |                             []                 |
-     gpe-aerial         | []                          []                 |
-     gpe-beam           | []                          []        []       |
-     gpe-bluetooth      |                             []     [] []       |
-     gpe-calendar       |                                       []       |
-     gpe-clock          | []                    []    []        []       |
-     gpe-conf           | []                          []        []       |
-     gpe-contacts       | []                          []        []       |
-     gpe-edit           |                             []        []       |
-     gpe-filemanager    |                       []    []        []       |
-     gpe-go             | []                    []    []        []       |
-     gpe-login          |                             []        []       |
-     gpe-ownerinfo      | []                    []    []        []       |
-     gpe-package        |                             []        []       |
-     gpe-sketchbook     | []                          []        []       |
-     gpe-su             | []     []             []    []        []       |
-     gpe-taskmanager    | []                    []    []        []       |
-     gpe-timesheet      | []  []                      []        []       |
-     gpe-today          | []  [] []             []    []        []       |
-     gpe-todo           |                             []        []       |
-     gphoto2            | []                    []    []     [] []       |
-     gprof              | []  []                      []                 |
+     gold               | []                              []                 |
+     gpe-aerial         | []  []                          []                 |
+     gpe-beam           | []  []                          []        []       |
+     gpe-bluetooth      | []                              []     [] []       |
+     gpe-calendar       | []                                        []       |
+     gpe-clock          | []  []                    []    []        []       |
+     gpe-conf           | []  []                          []        []       |
+     gpe-contacts       | []  []                          []        []       |
+     gpe-edit           | []                              []        []       |
+     gpe-filemanager    | []                        []    []        []       |
+     gpe-go             | []  []                    []    []        []       |
+     gpe-login          | []                              []        []       |
+     gpe-ownerinfo      | []  []                    []    []        []       |
+     gpe-package        | []                              []        []       |
+     gpe-sketchbook     | []  []                          []        []       |
+     gpe-su             | []  []     []             []    []        []       |
+     gpe-taskmanager    | []  []                    []    []        []       |
+     gpe-timesheet      | []  []  []                      []        []       |
+     gpe-today          | []  []  [] []             []    []        []       |
+     gpe-todo           | []                              []        []       |
+     gphoto2            | []  []                    []    []     [] []       |
+     gprof              | []  []  []                      []                 |
      gpsdrive           |        []                   []     []          |
      gramadoir          | []  []                      []                 |
-     grep               |                                    []          |
-     grub               |                       []    []     []          |
-     gsasl              | []  []                      []     []          |
-     gss                | []  []                      []     []          |
-     gst-plugins-bad    | []                    []    []     []          |
-     gst-plugins-base   | []                    []    []     [] []       |
-     gst-plugins-good   | []                    []    []     [] []       |
-     gst-plugins-ugly   | []                    []    []     [] []       |
-     gstreamer          | []                    []    []     []          |
-     gtick              | []  []                      []     []          |
+     grep               | []                                     []          |
+     grub               | []                        []    []     []          |
+     gsasl              | []  []  []                      []     []          |
+     gss                | []  []  []                      []     []          |
+     gst-plugins-bad    | []  []                    []    []     [] []       |
+     gst-plugins-base   | []  []                    []    []     [] []       |
+     gst-plugins-good   | []  []                    []    []     [] []       |
+     gst-plugins-ugly   | []  []                    []    []     [] []       |
+     gstreamer          | []  []                    []    []     []          |
+     gtick              | []  []  []                      []     []          |
      gtkam              | []                    []    []     [] []       |
      gtkorphan          | []                          []     []          |
-     gtkspell           | []  [] []             [] [] []     [] []       |
-     gutenprint         | []                    []           []          |
-     hello              |     []                      []                 |
-     help2man           | []                                             |
+     gtkspell           | []  []  [] []             [] [] []     [] []       |
+     gutenprint         | []  []                    []           []          |
+     hello              | []      []                      []                 |
+     help2man           | []  []                                             |
      hylafax            |                             []                 |
-     idutils            | []  []                []    []     []          |
-     indent             | []  [] []             []    []     [] []       |
-     iso_15924          | ()                          []     []          |
-     iso_3166           | ()  [] [] [] [] [] [] []    []     [] []       |
+     idutils            | []  []  []                []    []     []          |
+     indent             | []  []  [] []             []    []     [] []       |
+     iso_15924          | []  ()                          []     []          |
+     iso_3166           | []  ()  [] [] [] [] [] [] []    []     [] []       |
      iso_3166_2         | ()                    []    []     []          |
-     iso_4217           | ()                    []    []     [] []       |
-     iso_639            | ()  []    []          []    []     [] []    [] |
+     iso_4217           | []  ()                    []    []     [] []       |
+     iso_639            | []  ()  []    []          []    []     [] []    [] |
      iso_639_3          | ()                                 []       [] |
-     jwhois             | []                    []    []     []          |
+     jwhois             | []  []                    []    []     []          |
      kbd                | []                          []                 |
-     keytouch           | []  []                []    []     []          |
-     keytouch-editor    |     []                []    []     []          |
-     keytouch-keyboa... |     []                []    []     []          |
+     keytouch           | []  []  []                []    []     []          |
+     keytouch-editor    | []      []                []    []     []          |
+     keytouch-keyboa... | []      []                []    []     []          |
      klavaro            |        []             []                       |
-     latrine            |                             []     []          |
-     ld                 | []  []                      []                 |
-     leafpad            | []  []       []       []    []     [] ()       |
-     libc               | []     []                   []        []       |
-     libexif            |                                                |
+     latrine            | []                              []     []          |
+     ld                 | []  []  []                      []                 |
+     leafpad            | []  []  []       []       []    []     [] ()       |
+     libc               | []  []     []                   []        []       |
+     libexif            |                                        []          |
      libextractor       |                                                |
      libgnutls          | []                                 []          |
-     libgpewidget       |     []                      []        []       |
+     libgpewidget       | []      []                      []        []       |
      libgpg-error       | []                                 []          |
      libgphoto2         | []                                 [] []       |
      libgphoto2_port    | []                                 [] []       |
-     libgsasl           | []  []                      []     []          |
-     libiconv           | []  []                      []     [] []       |
-     libidn             | []                          []     []          |
+     libgsasl           | []  []  []                      []     []          |
+     libiconv           | []  []  []                      []     [] []       |
+     libidn             | []  []                          []     []          |
      lifelines          | ()                                             |
      liferea            | []                    []           [] []       |
-     lilypond           | []                                             |
-     linkdr             |              []    [] []           []          |
+     lilypond           | []  []                                             |
+     linkdr             | []               []    [] []           []          |
      lordsawar          |                                                |
      lprng              |                             []                 |
      lynx               | []                    []    []     [] []       |
-     m4                 | []  [] []                   []        []       |
+     m4                 | []  []  [] []                   []        []       |
      mailfromd          |                                                |
      mailutils          | []                          []                 |
-     make               | []  [] []    []    []       []     [] []       |
+     make               | []  []  [] []    []    []       []     [] []       |
      man-db             |                             []     []          |
      man-db-manpages    |                             []                 |
-     minicom            | []                    []    []        []       |
-     mkisofs            | []                          []     []          |
+     minicom            | []  []                    []    []        []       |
+     mkisofs            | []  []                          []     []          |
      myserver           |                                                |
-     nano               | []  [] []             []           []          |
-     opcodes            | []  []                      []                 |
+     nano               | []  []  [] []             []           []          |
+     opcodes            | []  []  []                      []                 |
      parted             | []                          []     [] []       |
      pies               |                                                |
-     popt               | []  [] []             []    []  [] [] []       |
-     psmisc             | []                          []                 |
+     popt               | []  []  [] []             []    []  [] [] []       |
+     psmisc             | []  []                          []                 |
      pspp               |                                                |
      pwdutils           | []                          []                 |
      radius             | []                          []                 |
-     recode             | []  [] []    []       []    []     []          |
-     rosegarden         | ()                          ()     () ()       |
+     recode             | []  []  [] []    []       []    []     []          |
+     rosegarden         | ()  ()                          ()     () ()       |
      rpm                |                             []        []       |
      rush               |                                                |
      sarg               | []                                             |
      screem             |                                    [] []       |
-     scrollkeeper       |                       []    []     []          |
-     sed                | []  [] []             []    []     [] []       |
-     sharutils          | []  []                []    []     [] []       |
+     scrollkeeper       | []                        []    []     []          |
+     sed                | []  []  [] []             []    []     [] []       |
+     sharutils          | []  []  []                []    []     [] []       |
      shishi             | []                                             |
      skencil            | []                                             |
-     solfege            | []     []                          []          |
+     solfege            | []  []     []                          []          |
      solfege-manual     | []     []                                      |
      soundtracker       | []                                 []          |
      sp                 | []                                    ()       |
-     sysstat            | []                          []     [] []       |
-     tar                | []  []                []    []     [] []       |
+     sysstat            | []  []                          []     [] []       |
+     tar                | []  []  []                []    []     [] []       |
      texinfo            | []                          []     [] []       |
      tin                | []                                             |
      unicode-han-tra... |                                                |
      unicode-transla... | []  []                                         |
-     util-linux-ng      | []                    []    []     [] []       |
+     util-linux-ng      | []  []                    []    []     [] []       |
      vice               | ()                    ()           ()          |
      vmm                | []                                             |
      vorbis-tools       |                             []                 |
      wastesedge         | ()                                 ()          |
-     wdiff              |                                                |
-     wget               | []  []             [] []    []     [] []       |
-     wyslij-po          | []                          []                 |
-     xchat              | []        []    []    []    []     [] []    [] |
-     xdg-user-dirs      | []  [] [] [] []       []    []  [] [] []    [] |
-     xkeyboard-config   | []                    []    []     []          |
-                        +------------------------------------------------+
-                          fr  ga gl gu he hi hr hu hy id  is it ja ka kn
-                          121 53 20  4  8  2  5 53  2 120  5 83 66  0  4
+     wdiff              | []                                                 |
+     wget               | []  []  []             [] []    []     [] []       |
+     wyslij-po          | []  []                          []                 |
+     xchat              | []  []        []    []    []    []     [] []    [] |
+     xdg-user-dirs      | []  []  [] [] [] [] []    []    []  [] [] []    [] |
+     xkeyboard-config   | []  []                    []    []     []          |
+                        +----------------------------------------------------+
+                          fi  fr  ga gl gu he hi hr hu hy id  is it ja ka kn
+                          105 121 53 20  4  8  3  5 53  2 120  5 84 67  0  4
 
                           ko ku ky lg lt lv mk ml mn mr ms mt nb nds ne
                         +-----------------------------------------------+
@@ -820,7 +775,7 @@
      grub               |                                               |
      gsasl              |                                               |
      gss                |                                               |
-     gst-plugins-bad    |                []                []           |
+     gst-plugins-bad    |             [] []                [] []        |
      gst-plugins-base   |             [] []                             |
      gst-plugins-good   |                []                []           |
      gst-plugins-ugly   |             [] []             [] [] []        |
@@ -920,7 +875,7 @@
      xkeyboard-config   | []    []    []                                |
                         +-----------------------------------------------+
                           ko ku ky lg lt lv mk ml mn mr ms mt nb nds ne
-                          20  5 10  1 12 48  4  2  2  4 24 10 19  3   1
+                          20  5 10  1 13 48  4  2  2  4 24 10 20  3   1
 
                           nl  nn or pa pl  ps pt pt_BR ro ru rw sk sl sq sr
                         +---------------------------------------------------+
@@ -1004,7 +959,7 @@
      grub               | []           []                 []                |
      gsasl              | []           []                       []       [] |
      gss                |              []              []       []          |
-     gst-plugins-bad    | []           []         []      []    []          |
+     gst-plugins-bad    | []           []         []      []    []    []    |
      gst-plugins-base   | []           []         []      []    []          |
      gst-plugins-good   | []           []         []      []    []          |
      gst-plugins-ugly   | []           []         []      []    [] []       |
@@ -1041,7 +996,7 @@
      libgpewidget       | []           []                          []       |
      libgpg-error       |              []              []                   |
      libgphoto2         | []           []                                   |
-     libgphoto2_port    | []           []                 []    []          |
+     libgphoto2_port    | []           []         []      []    []          |
      libgsasl           | []           []              []       []       [] |
      libiconv           | []           []                       [] []    [] |
      libidn             | []           []                                   |
@@ -1101,10 +1056,10 @@
      wyslij-po          | []  []       []                                   |
      xchat              | []        [] []     []          []    [] [] [] [] |
      xdg-user-dirs      | []  [] [] [] []  [] []  []   [] []    [] [] [] [] |
-     xkeyboard-config   | []           []                 []    [] []       |
+     xkeyboard-config   | []           []                 []                |
                         +---------------------------------------------------+
                           nl  nn or pa pl  ps pt pt_BR ro ru rw sk sl sq sr
-                          135 10  4  7 105  1 29  61   47 91  3 55 47  8 37
+                          135 10  4  7 105  1 29  62   47 91  3 54 46  9 37
 
                           sv  sw ta te tg th tr uk vi  wa zh_CN zh_HK zh_TW
                         +---------------------------------------------------+
@@ -1113,7 +1068,7 @@
      ant-phone          | []                 []    []      []               |  9
      anubis             | []                 [] [] []                       | 15
      aspell             |                       [] []  []                   | 20
-     bash               | []                       []                       | 11
+     bash               | []                    [] []                       | 12
      bfd                |                          []                       |  6
      bibshelf           | []                       []      []               | 16
      binutils           |                       [] []                       |  8
@@ -1127,7 +1082,7 @@
      coreutils          | []                    [] []      []               | 22
      cpio               | []                 [] [] []      []          []   | 13
      cppi               |                       [] []                       |  5
-     cpplib             | []                 [] [] []      []          []   | 13
+     cpplib             | []                 [] [] []      []          []   | 14
      cryptsetup         | []                       []                       |  7
      dfarc              |                          []                       |  9
      dialog             | []  []          []       []  []  []          []   | 30
@@ -1147,14 +1102,14 @@
      gcal               | []                 []                             |  5
      gcc                | []                 []            []               |  7
      gettext-examples   | []                 [] [] []      []    []    []   | 34
-     gettext-runtime    | []                 [] [] []      []    []    []   | 30
+     gettext-runtime    | []                 [] [] []      []    []    []   | 29
      gettext-tools      | []                 [] [] []      []          []   | 22
      gip                | []                       []      []          []   | 22
      gjay               |                          []                       |  3
      gliv               | []                 []    []                       | 14
      glunarclock        | []                       []  []  []          []   | 19
      gnubiff            | []                       []                       |  4
-     gnucash            |                    () [] ()                  ()   |  9
+     gnucash            |                    () [] ()      []          ()   | 10
      gnuedu             |                          []                  []   |  7
      gnulib             | []                    [] []      []               | 16
      gnunet             |                          []                       |  1
@@ -1188,9 +1143,9 @@
      grub               | []                       []      []               | 14
      gsasl              | []                       []      []          []   | 14
      gss                | []                       []      []               | 11
-     gst-plugins-bad    | []                 []    []      []               | 22
+     gst-plugins-bad    | []                 []    []      []               | 26
      gst-plugins-base   | []                 [] [] []      []               | 24
-     gst-plugins-good   | []                 [] [] []      []               | 25
+     gst-plugins-good   | []                 []    []      []               | 24
      gst-plugins-ugly   | []                 [] [] []      []               | 29
      gstreamer          | []                    [] []      []               | 22
      gtick              |                       [] []      []               | 13
@@ -1219,13 +1174,13 @@
      ld                 | []                 []    []                  []   | 11
      leafpad            | []                 [] [] []      []          []   | 33
      libc               | []                 []    []      []          []   | 21
-     libexif            |                          []      ()               |  6
+     libexif            |                          []      ()               |  7
      libextractor       |                          []                       |  1
      libgnutls          | []                       []      []               |  9
      libgpewidget       | []                       []      []               | 14
      libgpg-error       | []                       []      []               |  9
      libgphoto2         |                       [] []                       |  8
-     libgphoto2_port    | []                    [] []                  []   | 13
+     libgphoto2_port    | []                    [] []                  []   | 14
      libgsasl           | []                       []      []               | 13
      libiconv           | []                       []  []  []               | 21
      libidn             | ()                       []      []               | 11
@@ -1271,7 +1226,7 @@
      sp                 |                    []                             |  3
      sysstat            |                          []      []               | 15
      tar                | []                 [] [] []      []          []   | 23
-     texinfo            | []                 []    []      []               | 16
+     texinfo            | []                 [] [] []      []               | 17
      tin                |                                                   |  4
      unicode-han-tra... |                                                   |  0
      unicode-transla... |                                                   |  2
@@ -1284,11 +1239,11 @@
      wget               | []                 []    []      []          []   | 26
      wyslij-po          |                       [] []                       |  8
      xchat              | []              []    [] []      []          []   | 36
-     xdg-user-dirs      | []     []       [] [] [] []      []    []    []   | 60
-     xkeyboard-config   | []                 [] [] []                       | 25
+     xdg-user-dirs      | []     [] []    [] [] [] []      []    []    []   | 63
+     xkeyboard-config   | []                    [] []                       | 22
                         +---------------------------------------------------+
-       84 teams           sv  sw ta te tg th tr uk vi  wa zh_CN zh_HK zh_TW
-      178 domains         119  1  3  2  0 10 66 50 155 17  97     7    41    2610
+       85 teams           sv  sw ta te tg th tr uk vi  wa zh_CN zh_HK zh_TW
+      178 domains         119  1  3  3  0 10 65 51 155 17  98     7    41    2618
 
    Some counters in the preceding matrix are higher than the number of
 visible blocks let us expect.  This is because a few extra PO files are
@@ -1301,12 +1256,12 @@
 lag between the mere existence a PO file and its wide availability in a
 distribution.
 
-   If May 2010 seems to be old, you may fetch a more recent copy of
+   If June 2010 seems to be old, you may fetch a more recent copy of
 this `ABOUT-NLS' file on most GNU archive sites.  The most up-to-date
 matrix with full percentage details can be found at
 `http://translationproject.org/extra/matrix.html'.
 
-1.6 Using `gettext' in new packages
+1.5 Using `gettext' in new packages
 ===================================
 
 If you are writing a freely available program and want to
diff -uNrwB xz-5.2.2/aclocal.m4 xz-5.2.4/aclocal.m4
--- xz-5.2.2/aclocal.m4	2015-09-29 17:03:38.000000000 +0600
+++ xz-5.2.4/aclocal.m4	2018-04-29 22:01:23.000000000 +0600
@@ -1,6 +1,6 @@
-# generated automatically by aclocal 1.15 -*- Autoconf -*-
+# generated automatically by aclocal 1.15.1 -*- Autoconf -*-
 
-# Copyright (C) 1996-2014 Free Software Foundation, Inc.
+# Copyright (C) 1996-2017 Free Software Foundation, Inc.
 
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -20,7 +20,7 @@
 If you have problems, you may need to regenerate the build system entirely.
 To do so, use the procedure documented by the package, typically 'autoreconf'.])])
 
-# Copyright (C) 2002-2014 Free Software Foundation, Inc.
+# Copyright (C) 2002-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -35,7 +35,7 @@
 [am__api_version='1.15'
 dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
 dnl require some minimum version.  Point them to the right macro.
-m4_if([$1], [1.15], [],
+m4_if([$1], [1.15.1], [],
       [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
 ])
 
@@ -51,14 +51,14 @@
 # Call AM_AUTOMAKE_VERSION and AM_AUTOMAKE_VERSION so they can be traced.
 # This function is AC_REQUIREd by AM_INIT_AUTOMAKE.
 AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],
-[AM_AUTOMAKE_VERSION([1.15])dnl
+[AM_AUTOMAKE_VERSION([1.15.1])dnl
 m4_ifndef([AC_AUTOCONF_VERSION],
   [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
 _AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
 
 # Figure out how to run the assembler.                      -*- Autoconf -*-
 
-# Copyright (C) 2001-2014 Free Software Foundation, Inc.
+# Copyright (C) 2001-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -78,7 +78,7 @@
 
 # AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-
 
-# Copyright (C) 2001-2014 Free Software Foundation, Inc.
+# Copyright (C) 2001-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -130,7 +130,7 @@
 
 # AM_CONDITIONAL                                            -*- Autoconf -*-
 
-# Copyright (C) 1997-2014 Free Software Foundation, Inc.
+# Copyright (C) 1997-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -161,7 +161,7 @@
 Usually this means the macro was only invoked conditionally.]])
 fi])])
 
-# Copyright (C) 1999-2014 Free Software Foundation, Inc.
+# Copyright (C) 1999-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -352,7 +352,7 @@
 
 # Generate code to set up dependency tracking.              -*- Autoconf -*-
 
-# Copyright (C) 1999-2014 Free Software Foundation, Inc.
+# Copyright (C) 1999-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -428,7 +428,7 @@
 
 # Do all the work for Automake.                             -*- Autoconf -*-
 
-# Copyright (C) 1996-2014 Free Software Foundation, Inc.
+# Copyright (C) 1996-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -625,7 +625,7 @@
 done
 echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
 
-# Copyright (C) 2001-2014 Free Software Foundation, Inc.
+# Copyright (C) 2001-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -646,7 +646,7 @@
 fi
 AC_SUBST([install_sh])])
 
-# Copyright (C) 2003-2014 Free Software Foundation, Inc.
+# Copyright (C) 2003-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -667,7 +667,7 @@
 
 # Check to see how 'make' treats includes.	            -*- Autoconf -*-
 
-# Copyright (C) 2001-2014 Free Software Foundation, Inc.
+# Copyright (C) 2001-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -717,7 +717,7 @@
 
 # Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-
 
-# Copyright (C) 1997-2014 Free Software Foundation, Inc.
+# Copyright (C) 1997-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -754,41 +754,9 @@
 fi
 ])
 
-# Copyright (C) 2003-2014 Free Software Foundation, Inc.
-#
-# This file is free software; the Free Software Foundation
-# gives unlimited permission to copy and/or distribute it,
-# with or without modifications, as long as this notice is preserved.
-
-# AM_PROG_MKDIR_P
-# ---------------
-# Check for 'mkdir -p'.
-AC_DEFUN([AM_PROG_MKDIR_P],
-[AC_PREREQ([2.60])dnl
-AC_REQUIRE([AC_PROG_MKDIR_P])dnl
-dnl FIXME we are no longer going to remove this! adjust warning
-dnl FIXME message accordingly.
-AC_DIAGNOSE([obsolete],
-[$0: this macro is deprecated, and will soon be removed.
-You should use the Autoconf-provided 'AC][_PROG_MKDIR_P' macro instead,
-and use '$(MKDIR_P)' instead of '$(mkdir_p)'in your Makefile.am files.])
-dnl Automake 1.8 to 1.9.6 used to define mkdir_p.  We now use MKDIR_P,
-dnl while keeping a definition of mkdir_p for backward compatibility.
-dnl @MKDIR_P@ is magic: AC_OUTPUT adjusts its value for each Makefile.
-dnl However we cannot define mkdir_p as $(MKDIR_P) for the sake of
-dnl Makefile.ins that do not define MKDIR_P, so we do our own
-dnl adjustment using top_builddir (which is defined more often than
-dnl MKDIR_P).
-AC_SUBST([mkdir_p], ["$MKDIR_P"])dnl
-case $mkdir_p in
-  [[\\/$]]* | ?:[[\\/]]*) ;;
-  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
-esac
-])
-
 # Helper functions for option handling.                     -*- Autoconf -*-
 
-# Copyright (C) 2001-2014 Free Software Foundation, Inc.
+# Copyright (C) 2001-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -817,7 +785,7 @@
 AC_DEFUN([_AM_IF_OPTION],
 [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
 
-# Copyright (C) 1999-2014 Free Software Foundation, Inc.
+# Copyright (C) 1999-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -864,7 +832,7 @@
 # For backward compatibility.
 AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
 
-# Copyright (C) 2001-2014 Free Software Foundation, Inc.
+# Copyright (C) 2001-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -883,7 +851,7 @@
 
 # Check to make sure that the build environment is sane.    -*- Autoconf -*-
 
-# Copyright (C) 1996-2014 Free Software Foundation, Inc.
+# Copyright (C) 1996-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -964,7 +932,7 @@
 rm -f conftest.file
 ])
 
-# Copyright (C) 2009-2014 Free Software Foundation, Inc.
+# Copyright (C) 2009-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -1024,7 +992,7 @@
 _AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
 ])
 
-# Copyright (C) 2001-2014 Free Software Foundation, Inc.
+# Copyright (C) 2001-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -1052,7 +1020,7 @@
 INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
 AC_SUBST([INSTALL_STRIP_PROGRAM])])
 
-# Copyright (C) 2006-2014 Free Software Foundation, Inc.
+# Copyright (C) 2006-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -1071,7 +1039,7 @@
 
 # Check how to create a tarball.                            -*- Autoconf -*-
 
-# Copyright (C) 2004-2014 Free Software Foundation, Inc.
+# Copyright (C) 2004-2017 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -1202,6 +1170,7 @@
 AC_SUBST([am__untar])
 ]) # _AM_PROG_TAR
 
+m4_include([m4/ax_check_capsicum.m4])
 m4_include([m4/ax_pthread.m4])
 m4_include([m4/getopt.m4])
 m4_include([m4/gettext.m4])
diff -uNrwB xz-5.2.2/build-aux/compile xz-5.2.4/build-aux/compile
--- xz-5.2.2/build-aux/compile	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/build-aux/compile	2018-04-29 22:01:26.000000000 +0600
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Wrapper for compilers which do not understand '-c -o'.
 
-scriptversion=2012-10-14.11; # UTC
+scriptversion=2016-01-11.22; # UTC
 
-# Copyright (C) 1999-2014 Free Software Foundation, Inc.
+# Copyright (C) 1999-2017 Free Software Foundation, Inc.
 # Written by Tom Tromey <tromey@cygnus.com>.
 #
 # This program is free software; you can redistribute it and/or modify
@@ -255,7 +255,8 @@
     echo "compile $scriptversion"
     exit $?
     ;;
-  cl | *[/\\]cl | cl.exe | *[/\\]cl.exe )
+  cl | *[/\\]cl | cl.exe | *[/\\]cl.exe | \
+  icl | *[/\\]icl | icl.exe | *[/\\]icl.exe )
     func_cl_wrapper "$@"      # Doesn't return...
     ;;
 esac
@@ -342,6 +343,6 @@
 # eval: (add-hook 'write-file-hooks 'time-stamp)
 # time-stamp-start: "scriptversion="
 # time-stamp-format: "%:y-%02m-%02d.%02H"
-# time-stamp-time-zone: "UTC"
+# time-stamp-time-zone: "UTC0"
 # time-stamp-end: "; # UTC"
 # End:
diff -uNrwB xz-5.2.2/build-aux/config.guess xz-5.2.4/build-aux/config.guess
--- xz-5.2.2/build-aux/config.guess	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/build-aux/config.guess	2018-04-29 22:01:26.000000000 +0600
@@ -1,8 +1,8 @@
 #! /bin/sh
 # Attempt to guess a canonical system name.
-#   Copyright 1992-2014 Free Software Foundation, Inc.
+#   Copyright 1992-2017 Free Software Foundation, Inc.
 
-timestamp='2014-11-04'
+timestamp='2017-05-27'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
@@ -27,7 +27,7 @@
 # Originally written by Per Bothner; maintained since 2000 by Ben Elliston.
 #
 # You can get the latest version of this script from:
-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD
+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess
 #
 # Please send patches to <config-patches@gnu.org>.
 
@@ -50,7 +50,7 @@
 GNU config.guess ($timestamp)
 
 Originally written by Per Bothner.
-Copyright 1992-2014 Free Software Foundation, Inc.
+Copyright 1992-2017 Free Software Foundation, Inc.
 
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
@@ -168,19 +168,29 @@
 	# Note: NetBSD doesn't particularly care about the vendor
 	# portion of the name.  We always set it to "unknown".
 	sysctl="sysctl -n hw.machine_arch"
-	UNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \
-	    /usr/sbin/$sysctl 2>/dev/null || echo unknown)`
+	UNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \
+	    /sbin/$sysctl 2>/dev/null || \
+	    /usr/sbin/$sysctl 2>/dev/null || \
+	    echo unknown)`
 	case "${UNAME_MACHINE_ARCH}" in
 	    armeb) machine=armeb-unknown ;;
 	    arm*) machine=arm-unknown ;;
 	    sh3el) machine=shl-unknown ;;
 	    sh3eb) machine=sh-unknown ;;
 	    sh5el) machine=sh5le-unknown ;;
+	    earmv*)
+		arch=`echo ${UNAME_MACHINE_ARCH} | sed -e 's,^e\(armv[0-9]\).*$,\1,'`
+		endian=`echo ${UNAME_MACHINE_ARCH} | sed -ne 's,^.*\(eb\)$,\1,p'`
+		machine=${arch}${endian}-unknown
+		;;
 	    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;
 	esac
 	# The Operating System including object format, if it has switched
-	# to ELF recently, or will in the future.
+	# to ELF recently (or will in the future) and ABI.
 	case "${UNAME_MACHINE_ARCH}" in
+	    earm*)
+		os=netbsdelf
+		;;
 	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
 		eval $set_cc_for_build
 		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
@@ -197,6 +207,13 @@
 		os=netbsd
 		;;
 	esac
+	# Determine ABI tags.
+	case "${UNAME_MACHINE_ARCH}" in
+	    earm*)
+		expr='s/^earmv[0-9]/-eabi/;s/eb$//'
+		abi=`echo ${UNAME_MACHINE_ARCH} | sed -e "$expr"`
+		;;
+	esac
 	# The OS release
 	# Debian GNU/NetBSD machines have a different userland, and
 	# thus, need a distinct triplet. However, they do not need
@@ -207,13 +224,13 @@
 		release='-gnu'
 		;;
 	    *)
-		release=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
+		release=`echo ${UNAME_RELEASE} | sed -e 's/[-_].*//' | cut -d. -f1,2`
 		;;
 	esac
 	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
 	# contains redundant information, the shorter form:
 	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
-	echo "${machine}-${os}${release}"
+	echo "${machine}-${os}${release}${abi}"
 	exit ;;
     *:Bitrig:*:*)
 	UNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`
@@ -223,6 +240,10 @@
 	UNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`
 	echo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}
 	exit ;;
+    *:LibertyBSD:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\.//'`
+	echo ${UNAME_MACHINE_ARCH}-unknown-libertybsd${UNAME_RELEASE}
+	exit ;;
     *:ekkoBSD:*:*)
 	echo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}
 	exit ;;
@@ -235,6 +256,9 @@
     *:MirBSD:*:*)
 	echo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}
 	exit ;;
+    *:Sortix:*:*)
+	echo ${UNAME_MACHINE}-unknown-sortix
+	exit ;;
     alpha:OSF1:*:*)
 	case $UNAME_RELEASE in
 	*4.0)
@@ -251,42 +275,42 @@
 	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
 	case "$ALPHA_CPU_TYPE" in
 	    "EV4 (21064)")
-		UNAME_MACHINE="alpha" ;;
+		UNAME_MACHINE=alpha ;;
 	    "EV4.5 (21064)")
-		UNAME_MACHINE="alpha" ;;
+		UNAME_MACHINE=alpha ;;
 	    "LCA4 (21066/21068)")
-		UNAME_MACHINE="alpha" ;;
+		UNAME_MACHINE=alpha ;;
 	    "EV5 (21164)")
-		UNAME_MACHINE="alphaev5" ;;
+		UNAME_MACHINE=alphaev5 ;;
 	    "EV5.6 (21164A)")
-		UNAME_MACHINE="alphaev56" ;;
+		UNAME_MACHINE=alphaev56 ;;
 	    "EV5.6 (21164PC)")
-		UNAME_MACHINE="alphapca56" ;;
+		UNAME_MACHINE=alphapca56 ;;
 	    "EV5.7 (21164PC)")
-		UNAME_MACHINE="alphapca57" ;;
+		UNAME_MACHINE=alphapca57 ;;
 	    "EV6 (21264)")
-		UNAME_MACHINE="alphaev6" ;;
+		UNAME_MACHINE=alphaev6 ;;
 	    "EV6.7 (21264A)")
-		UNAME_MACHINE="alphaev67" ;;
+		UNAME_MACHINE=alphaev67 ;;
 	    "EV6.8CB (21264C)")
-		UNAME_MACHINE="alphaev68" ;;
+		UNAME_MACHINE=alphaev68 ;;
 	    "EV6.8AL (21264B)")
-		UNAME_MACHINE="alphaev68" ;;
+		UNAME_MACHINE=alphaev68 ;;
 	    "EV6.8CX (21264D)")
-		UNAME_MACHINE="alphaev68" ;;
+		UNAME_MACHINE=alphaev68 ;;
 	    "EV6.9A (21264/EV69A)")
-		UNAME_MACHINE="alphaev69" ;;
+		UNAME_MACHINE=alphaev69 ;;
 	    "EV7 (21364)")
-		UNAME_MACHINE="alphaev7" ;;
+		UNAME_MACHINE=alphaev7 ;;
 	    "EV7.9 (21364A)")
-		UNAME_MACHINE="alphaev79" ;;
+		UNAME_MACHINE=alphaev79 ;;
 	esac
 	# A Pn.n version is a patched version.
 	# A Vn.n version is a released version.
 	# A Tn.n version is a released field test version.
 	# A Xn.n version is an unreleased experimental baselevel.
 	# 1.2 uses "1.2" for uname -r.
-	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`
 	# Reset EXIT trap before exiting to avoid spurious non-zero exit code.
 	exitcode=$?
 	trap '' 0
@@ -359,16 +383,16 @@
 	exit ;;
     i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)
 	eval $set_cc_for_build
-	SUN_ARCH="i386"
+	SUN_ARCH=i386
 	# If there is a compiler, see if it is configured for 64-bit objects.
 	# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.
 	# This test works for both compilers.
-	if [ "$CC_FOR_BUILD" != 'no_compiler_found' ]; then
+	if [ "$CC_FOR_BUILD" != no_compiler_found ]; then
 	    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \
-		(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \
+		(CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
 		grep IS_64BIT_ARCH >/dev/null
 	    then
-		SUN_ARCH="x86_64"
+		SUN_ARCH=x86_64
 	    fi
 	fi
 	echo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
@@ -393,7 +417,7 @@
 	exit ;;
     sun*:*:4.2BSD:*)
 	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
-	test "x${UNAME_RELEASE}" = "x" && UNAME_RELEASE=3
+	test "x${UNAME_RELEASE}" = x && UNAME_RELEASE=3
 	case "`/bin/arch`" in
 	    sun3)
 		echo m68k-sun-sunos${UNAME_RELEASE}
@@ -618,13 +642,13 @@
 		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
 		    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
 		    case "${sc_cpu_version}" in
-		      523) HP_ARCH="hppa1.0" ;; # CPU_PA_RISC1_0
-		      528) HP_ARCH="hppa1.1" ;; # CPU_PA_RISC1_1
+		      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0
+		      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1
 		      532)                      # CPU_PA_RISC2_0
 			case "${sc_kernel_bits}" in
-			  32) HP_ARCH="hppa2.0n" ;;
-			  64) HP_ARCH="hppa2.0w" ;;
-			  '') HP_ARCH="hppa2.0" ;;   # HP-UX 10.20
+			  32) HP_ARCH=hppa2.0n ;;
+			  64) HP_ARCH=hppa2.0w ;;
+			  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20
 			esac ;;
 		    esac
 		fi
@@ -663,11 +687,11 @@
 		    exit (0);
 		}
 EOF
-		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
+		    (CCOPTS="" $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
 		    test -z "$HP_ARCH" && HP_ARCH=hppa
 		fi ;;
 	esac
-	if [ ${HP_ARCH} = "hppa2.0w" ]
+	if [ ${HP_ARCH} = hppa2.0w ]
 	then
 	    eval $set_cc_for_build
 
@@ -680,12 +704,12 @@
 	    # $ CC_FOR_BUILD="cc +DA2.0w" ./config.guess
 	    # => hppa64-hp-hpux11.23
 
-	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |
+	    if echo __LP64__ | (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) |
 		grep -q __LP64__
 	    then
-		HP_ARCH="hppa2.0w"
+		HP_ARCH=hppa2.0w
 	    else
-		HP_ARCH="hppa64"
+		HP_ARCH=hppa64
 	    fi
 	fi
 	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
@@ -790,14 +814,14 @@
 	echo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
 	exit ;;
     F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)
-	FUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
-	FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
+	FUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`
+	FUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\///'`
 	FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
 	echo "${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
 	exit ;;
     5000:UNIX_System_V:4.*:*)
-	FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
-	FUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`
+	FUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\///'`
+	FUJITSU_REL=`echo ${UNAME_RELEASE} | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`
 	echo "sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
 	exit ;;
     i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
@@ -813,10 +837,11 @@
 	UNAME_PROCESSOR=`/usr/bin/uname -p`
 	case ${UNAME_PROCESSOR} in
 	    amd64)
-		echo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
-	    *)
-		echo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+		UNAME_PROCESSOR=x86_64 ;;
+	    i386)
+		UNAME_PROCESSOR=i586 ;;
 	esac
+	echo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
 	exit ;;
     i*:CYGWIN*:*)
 	echo ${UNAME_MACHINE}-pc-cygwin
@@ -879,7 +904,7 @@
 	exit ;;
     *:GNU/*:*:*)
 	# other systems with GNU libc and userland
-	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}
+	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr "[:upper:]" "[:lower:]"``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}
 	exit ;;
     i*86:Minix:*:*)
 	echo ${UNAME_MACHINE}-pc-minix
@@ -902,7 +927,7 @@
 	  EV68*) UNAME_MACHINE=alphaev68 ;;
 	esac
 	objdump --private-headers /bin/sh | grep -q ld.so.1
-	if test "$?" = 0 ; then LIBC="gnulibc1" ; fi
+	if test "$?" = 0 ; then LIBC=gnulibc1 ; fi
 	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
 	exit ;;
     arc:Linux:*:* | arceb:Linux:*:*)
@@ -933,6 +958,9 @@
     crisv32:Linux:*:*)
 	echo ${UNAME_MACHINE}-axis-linux-${LIBC}
 	exit ;;
+    e2k:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
     frv:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
 	exit ;;
@@ -945,6 +973,9 @@
     ia64:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
 	exit ;;
+    k1om:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
     m32r*:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
 	exit ;;
@@ -970,6 +1001,9 @@
 	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`
 	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-${LIBC}"; exit; }
 	;;
+    mips64el:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
     openrisc*:Linux:*:*)
 	echo or1k-unknown-linux-${LIBC}
 	exit ;;
@@ -1002,6 +1036,9 @@
     ppcle:Linux:*:*)
 	echo powerpcle-unknown-linux-${LIBC}
 	exit ;;
+    riscv32:Linux:*:* | riscv64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	exit ;;
     s390:Linux:*:* | s390x:Linux:*:*)
 	echo ${UNAME_MACHINE}-ibm-linux-${LIBC}
 	exit ;;
@@ -1021,7 +1058,7 @@
 	echo ${UNAME_MACHINE}-dec-linux-${LIBC}
 	exit ;;
     x86_64:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo ${UNAME_MACHINE}-pc-linux-${LIBC}
 	exit ;;
     xtensa*:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
@@ -1100,7 +1137,7 @@
 	# uname -m prints for DJGPP always 'pc', but it prints nothing about
 	# the processor, so we play safe by assuming i586.
 	# Note: whatever this is, it MUST be the same as what config.sub
-	# prints for the "djgpp" host, or else GDB configury will decide that
+	# prints for the "djgpp" host, or else GDB configure will decide that
 	# this is a cross-build.
 	echo i586-pc-msdosdjgpp
 	exit ;;
@@ -1249,6 +1286,9 @@
     SX-8R:SUPER-UX:*:*)
 	echo sx8r-nec-superux${UNAME_RELEASE}
 	exit ;;
+    SX-ACE:SUPER-UX:*:*)
+	echo sxace-nec-superux${UNAME_RELEASE}
+	exit ;;
     Power*:Rhapsody:*:*)
 	echo powerpc-apple-rhapsody${UNAME_RELEASE}
 	exit ;;
@@ -1262,9 +1302,9 @@
 	    UNAME_PROCESSOR=powerpc
 	fi
 	if test `echo "$UNAME_RELEASE" | sed -e 's/\..*//'` -le 10 ; then
-	    if [ "$CC_FOR_BUILD" != 'no_compiler_found' ]; then
+	    if [ "$CC_FOR_BUILD" != no_compiler_found ]; then
 		if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \
-		    (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \
+		       (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
 		    grep IS_64BIT_ARCH >/dev/null
 		then
 		    case $UNAME_PROCESSOR in
@@ -1272,6 +1312,13 @@
 			powerpc) UNAME_PROCESSOR=powerpc64 ;;
 		    esac
 		fi
+		# On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc
+		if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \
+		       (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
+		       grep IS_PPC >/dev/null
+		then
+		    UNAME_PROCESSOR=powerpc
+		fi
 	    fi
 	elif test "$UNAME_PROCESSOR" = i386 ; then
 	    # Avoid executing cc on OS X 10.9, as it ships with a stub
@@ -1286,7 +1333,7 @@
 	exit ;;
     *:procnto*:*:* | *:QNX:[0123456789]*:*)
 	UNAME_PROCESSOR=`uname -p`
-	if test "$UNAME_PROCESSOR" = "x86"; then
+	if test "$UNAME_PROCESSOR" = x86; then
 		UNAME_PROCESSOR=i386
 		UNAME_MACHINE=pc
 	fi
@@ -1295,15 +1342,18 @@
     *:QNX:*:4*)
 	echo i386-pc-qnx
 	exit ;;
-    NEO-?:NONSTOP_KERNEL:*:*)
+    NEO-*:NONSTOP_KERNEL:*:*)
 	echo neo-tandem-nsk${UNAME_RELEASE}
 	exit ;;
     NSE-*:NONSTOP_KERNEL:*:*)
 	echo nse-tandem-nsk${UNAME_RELEASE}
 	exit ;;
-    NSR-?:NONSTOP_KERNEL:*:*)
+    NSR-*:NONSTOP_KERNEL:*:*)
 	echo nsr-tandem-nsk${UNAME_RELEASE}
 	exit ;;
+    NSX-*:NONSTOP_KERNEL:*:*)
+	echo nsx-tandem-nsk${UNAME_RELEASE}
+	exit ;;
     *:NonStop-UX:*:*)
 	echo mips-compaq-nonstopux
 	exit ;;
@@ -1317,7 +1367,7 @@
 	# "uname -m" is not consistent, so use $cputype instead. 386
 	# is converted to i386 for consistency with other x86
 	# operating systems.
-	if test "$cputype" = "386"; then
+	if test "$cputype" = 386; then
 	    UNAME_MACHINE=i386
 	else
 	    UNAME_MACHINE="$cputype"
@@ -1359,7 +1409,7 @@
 	echo i386-pc-xenix
 	exit ;;
     i*86:skyos:*:*)
-	echo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'
+	echo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE} | sed -e 's/ .*$//'`
 	exit ;;
     i*86:rdos:*:*)
 	echo ${UNAME_MACHINE}-pc-rdos
@@ -1370,23 +1420,25 @@
     x86_64:VMkernel:*:*)
 	echo ${UNAME_MACHINE}-unknown-esx
 	exit ;;
+    amd64:Isilon\ OneFS:*:*)
+	echo x86_64-unknown-onefs
+	exit ;;
 esac
 
 cat >&2 <<EOF
 $0: unable to guess system type
 
-This script, last modified $timestamp, has failed to recognize
-the operating system you are using. It is advised that you
-download the most up to date version of the config scripts from
+This script (version $timestamp), has failed to recognize the
+operating system you are using. If your script is old, overwrite
+config.guess and config.sub with the latest versions from:
 
-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD
+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess
 and
-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD
+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub
 
-If the version you run ($0) is already up to date, please
-send the following data and any information you think might be
-pertinent to <config-patches@gnu.org> in order to provide the needed
-information to handle your system.
+If $0 has already been updated, send the following data and any
+information you think might be pertinent to config-patches@gnu.org to
+provide the necessary information to handle your system.
 
 config.guess timestamp = $timestamp
 
diff -uNrwB xz-5.2.2/build-aux/config.rpath xz-5.2.4/build-aux/config.rpath
--- xz-5.2.2/build-aux/config.rpath	2015-09-29 17:03:25.000000000 +0600
+++ xz-5.2.4/build-aux/config.rpath	2018-04-29 21:18:41.000000000 +0600
@@ -2,7 +2,7 @@
 # Output a system dependent set of variables, describing how to set the
 # run time search path of shared libraries in an executable.
 #
-#   Copyright 1996-2010 Free Software Foundation, Inc.
+#   Copyright 1996-2014 Free Software Foundation, Inc.
 #   Taken from GNU libtool, 2001
 #   Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
 #
@@ -25,7 +25,7 @@
 #   known workaround is to choose shorter directory names for the build
 #   directory and/or the installation directory.
 
-# All known linkers require a `.a' archive for static linking (except MSVC,
+# All known linkers require a '.a' archive for static linking (except MSVC,
 # which needs '.lib').
 libext=a
 shrext=.so
@@ -57,13 +57,6 @@
     aix*)
       wl='-Wl,'
       ;;
-    darwin*)
-      case $cc_basename in
-        xlc*)
-          wl='-Wl,'
-          ;;
-      esac
-      ;;
     mingw* | cygwin* | pw32* | os2* | cegcc*)
       ;;
     hpux9* | hpux10* | hpux11*)
@@ -72,9 +65,7 @@
     irix5* | irix6* | nonstopux*)
       wl='-Wl,'
       ;;
-    newsos6)
-      ;;
-    linux* | k*bsd*-gnu)
+    linux* | k*bsd*-gnu | kopensolaris*-gnu)
       case $cc_basename in
         ecc*)
           wl='-Wl,'
@@ -85,17 +76,26 @@
         lf95*)
           wl='-Wl,'
           ;;
-        pgcc | pgf77 | pgf90)
+        nagfor*)
+          wl='-Wl,-Wl,,'
+          ;;
+        pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)
           wl='-Wl,'
           ;;
         ccc*)
           wl='-Wl,'
           ;;
+        xl* | bgxl* | bgf* | mpixl*)
+          wl='-Wl,'
+          ;;
         como)
           wl='-lopt='
           ;;
         *)
           case `$CC -V 2>&1 | sed 5q` in
+            *Sun\ F* | *Sun*Fortran*)
+              wl=
+              ;;
             *Sun\ C*)
               wl='-Wl,'
               ;;
@@ -103,14 +103,25 @@
           ;;
       esac
       ;;
+    newsos6)
+      ;;
+    *nto* | *qnx*)
+      ;;
     osf3* | osf4* | osf5*)
       wl='-Wl,'
       ;;
     rdos*)
       ;;
     solaris*)
+      case $cc_basename in
+        f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)
+          wl='-Qoption ld '
+          ;;
+        *)
       wl='-Wl,'
       ;;
+      esac
+      ;;
     sunos4*)
       wl='-Qoption ld '
       ;;
@@ -171,15 +182,14 @@
       fi
       ;;
     amigaos*)
+      case "$host_cpu" in
+        powerpc)
+          ;;
+        m68k)
       hardcode_libdir_flag_spec='-L$libdir'
       hardcode_minus_L=yes
-      # Samuel A. Falvo II <kc5tja@dolphin.openprojects.net> reports
-      # that the semantics of dynamic libraries on AmigaOS, at least up
-      # to version 4, is to share data among multiple programs linked
-      # with the same dynamic library.  Since this doesn't match the
-      # behavior of shared libraries on other platforms, we cannot use
-      # them.
-      ld_shlibs=no
+          ;;
+      esac
       ;;
     beos*)
       if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
@@ -198,11 +208,13 @@
         ld_shlibs=no
       fi
       ;;
+    haiku*)
+      ;;
     interix[3-9]*)
       hardcode_direct=no
       hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
       ;;
-    gnu* | linux* | k*bsd*-gnu)
+    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)
       if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then
         :
       else
@@ -325,10 +337,14 @@
       fi
       ;;
     amigaos*)
+      case "$host_cpu" in
+        powerpc)
+          ;;
+        m68k)
       hardcode_libdir_flag_spec='-L$libdir'
       hardcode_minus_L=yes
-      # see comment about different semantics on the GNU ld section
-      ld_shlibs=no
+          ;;
+      esac
       ;;
     bsdi[45]*)
       ;;
@@ -342,24 +358,15 @@
       ;;
     darwin* | rhapsody*)
       hardcode_direct=no
-      if test "$GCC" = yes ; then
+      if { case $cc_basename in ifort*) true;; *) test "$GCC" = yes;; esac; }; then
         :
       else
-        case $cc_basename in
-          xlc*)
-            ;;
-          *)
             ld_shlibs=no
-            ;;
-        esac
       fi
       ;;
     dgux*)
       hardcode_libdir_flag_spec='-L$libdir'
       ;;
-    freebsd1*)
-      ld_shlibs=no
-      ;;
     freebsd2.2*)
       hardcode_libdir_flag_spec='-R$libdir'
       hardcode_direct=yes
@@ -420,6 +427,8 @@
       hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
       hardcode_libdir_separator=:
       ;;
+    *nto* | *qnx*)
+      ;;
     openbsd*)
       if test -f /usr/libexec/ld.so; then
         hardcode_direct=yes
@@ -515,7 +524,12 @@
     library_names_spec='$libname$shrext'
     ;;
   amigaos*)
-    library_names_spec='$libname.a'
+    case "$host_cpu" in
+      powerpc*)
+        library_names_spec='$libname$shrext' ;;
+      m68k)
+        library_names_spec='$libname.a' ;;
+    esac
     ;;
   beos*)
     library_names_spec='$libname$shrext'
@@ -534,8 +548,6 @@
   dgux*)
     library_names_spec='$libname$shrext'
     ;;
-  freebsd1*)
-    ;;
   freebsd* | dragonfly*)
     case "$host_os" in
       freebsd[123]*)
@@ -547,6 +559,9 @@
   gnu*)
     library_names_spec='$libname$shrext'
     ;;
+  haiku*)
+    library_names_spec='$libname$shrext'
+    ;;
   hpux9* | hpux10* | hpux11*)
     case $host_cpu in
       ia64*)
@@ -582,7 +597,7 @@
     ;;
   linux*oldld* | linux*aout* | linux*coff*)
     ;;
-  linux* | k*bsd*-gnu)
+  linux* | k*bsd*-gnu | kopensolaris*-gnu)
     library_names_spec='$libname$shrext'
     ;;
   knetbsd*-gnu)
@@ -594,7 +609,7 @@
   newsos6)
     library_names_spec='$libname$shrext'
     ;;
-  nto-qnx*)
+  *nto* | *qnx*)
     library_names_spec='$libname$shrext'
     ;;
   openbsd*)
@@ -625,6 +640,9 @@
   sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
     library_names_spec='$libname$shrext'
     ;;
+  tpf*)
+    library_names_spec='$libname$shrext'
+    ;;
   uts4*)
     library_names_spec='$libname$shrext'
     ;;
diff -uNrwB xz-5.2.2/build-aux/config.sub xz-5.2.4/build-aux/config.sub
--- xz-5.2.2/build-aux/config.sub	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/build-aux/config.sub	2018-04-29 22:01:26.000000000 +0600
@@ -1,8 +1,8 @@
 #! /bin/sh
 # Configuration validation subroutine script.
-#   Copyright 1992-2014 Free Software Foundation, Inc.
+#   Copyright 1992-2017 Free Software Foundation, Inc.
 
-timestamp='2014-12-03'
+timestamp='2017-04-02'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
@@ -33,7 +33,7 @@
 # Otherwise, we print the canonical config type on stdout and succeed.
 
 # You can get the latest version of this script from:
-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD
+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub
 
 # This file is supposed to be the same for all GNU packages
 # and recognize all the CPU types, system types and aliases
@@ -53,8 +53,7 @@
 me=`echo "$0" | sed -e 's,.*/,,'`
 
 usage="\
-Usage: $0 [OPTION] CPU-MFR-OPSYS
-       $0 [OPTION] ALIAS
+Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS
 
 Canonicalize a configuration name.
 
@@ -68,7 +67,7 @@
 version="\
 GNU config.sub ($timestamp)
 
-Copyright 1992-2014 Free Software Foundation, Inc.
+Copyright 1992-2017 Free Software Foundation, Inc.
 
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
@@ -117,8 +116,8 @@
 case $maybe_os in
   nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \
   linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \
-  knetbsd*-gnu* | netbsd*-gnu* | \
-  kopensolaris*-gnu* | \
+  knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \
+  kopensolaris*-gnu* | cloudabi*-eabi* | \
   storm-chaos* | os2-emx* | rtmk-nova*)
     os=-$maybe_os
     basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
@@ -255,15 +254,16 @@
 	| arc | arceb \
 	| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \
 	| avr | avr32 \
+	| ba \
 	| be32 | be64 \
 	| bfin \
 	| c4x | c8051 | clipper \
 	| d10v | d30v | dlx | dsp16xx \
-	| epiphany \
-	| fido | fr30 | frv \
+	| e2k | epiphany \
+	| fido | fr30 | frv | ft32 \
 	| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
 	| hexagon \
-	| i370 | i860 | i960 | ia64 \
+	| i370 | i860 | i960 | ia16 | ia64 \
 	| ip2k | iq2000 \
 	| k1om \
 	| le32 | le64 \
@@ -301,11 +301,12 @@
 	| open8 | or1k | or1knd | or32 \
 	| pdp10 | pdp11 | pj | pjl \
 	| powerpc | powerpc64 | powerpc64le | powerpcle \
+	| pru \
 	| pyramid \
 	| riscv32 | riscv64 \
 	| rl78 | rx \
 	| score \
-	| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \
+	| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \
 	| sh64 | sh64le \
 	| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \
 	| sparcv8 | sparcv9 | sparcv9b | sparcv9v \
@@ -314,6 +315,7 @@
 	| ubicom32 \
 	| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \
 	| visium \
+	| wasm32 \
 	| we32k \
 	| x86 | xc16x | xstormy16 | xtensa \
 	| z8k | z80)
@@ -376,17 +378,18 @@
 	| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \
 	| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \
 	| avr-* | avr32-* \
+	| ba-* \
 	| be32-* | be64-* \
 	| bfin-* | bs2000-* \
 	| c[123]* | c30-* | [cjt]90-* | c4x-* \
 	| c8051-* | clipper-* | craynv-* | cydra-* \
 	| d10v-* | d30v-* | dlx-* \
-	| elxsi-* \
+	| e2k-* | elxsi-* \
 	| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \
 	| h8300-* | h8500-* \
 	| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \
 	| hexagon-* \
-	| i*86-* | i860-* | i960-* | ia64-* \
+	| i*86-* | i860-* | i960-* | ia16-* | ia64-* \
 	| ip2k-* | iq2000-* \
 	| k1om-* \
 	| le32-* | le64-* \
@@ -427,13 +430,15 @@
 	| orion-* \
 	| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \
 	| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \
+	| pru-* \
 	| pyramid-* \
+	| riscv32-* | riscv64-* \
 	| rl78-* | romp-* | rs6000-* | rx-* \
 	| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \
 	| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \
 	| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \
 	| sparclite-* \
-	| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx?-* \
+	| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \
 	| tahoe-* \
 	| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \
 	| tile*-* \
@@ -442,6 +447,7 @@
 	| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \
 	| vax-* \
 	| visium-* \
+	| wasm32-* \
 	| we32k-* \
 	| x86-* | x86_64-* | xc16x-* | xps100-* \
 	| xstormy16-* | xtensa*-* \
@@ -518,6 +524,9 @@
 		basic_machine=i386-pc
 		os=-aros
 		;;
+	asmjs)
+		basic_machine=asmjs-unknown
+		;;
 	aux)
 		basic_machine=m68k-apple
 		os=-aux
@@ -638,6 +647,14 @@
 		basic_machine=m68k-bull
 		os=-sysv3
 		;;
+	e500v[12])
+		basic_machine=powerpc-unknown
+		os=$os"spe"
+		;;
+	e500v[12]-*)
+		basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=$os"spe"
+		;;
 	ebmon29k)
 		basic_machine=a29k-amd
 		os=-ebmon
@@ -933,6 +950,9 @@
 	nsr-tandem)
 		basic_machine=nsr-tandem
 		;;
+	nsx-tandem)
+		basic_machine=nsx-tandem
+		;;
 	op50n-* | op60c-*)
 		basic_machine=hppa1.1-oki
 		os=-proelf
@@ -1017,7 +1037,7 @@
 	ppc-* | ppcbe-*)
 		basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
-	ppcle | powerpclittle | ppc-le | powerpc-little)
+	ppcle | powerpclittle)
 		basic_machine=powerpcle-unknown
 		;;
 	ppcle-* | powerpclittle-*)
@@ -1027,7 +1047,7 @@
 		;;
 	ppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
-	ppc64le | powerpc64little | ppc64-le | powerpc64-little)
+	ppc64le | powerpc64little)
 		basic_machine=powerpc64le-unknown
 		;;
 	ppc64le-* | powerpc64little-*)
@@ -1228,6 +1248,9 @@
 		basic_machine=a29k-wrs
 		os=-vxworks
 		;;
+	wasm32)
+		basic_machine=wasm32-unknown
+		;;
 	w65*)
 		basic_machine=w65-wdc
 		os=-none
@@ -1373,18 +1396,18 @@
 	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \
 	      | -sym* | -kopensolaris* | -plan9* \
 	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
-	      | -aos* | -aros* \
+	      | -aos* | -aros* | -cloudabi* | -sortix* \
 	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
 	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
 	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
-	      | -bitrig* | -openbsd* | -solidbsd* \
+	      | -bitrig* | -openbsd* | -solidbsd* | -libertybsd* \
 	      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \
 	      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
 	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
 	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
-	      | -chorusos* | -chorusrdb* | -cegcc* \
+	      | -chorusos* | -chorusrdb* | -cegcc* | -glidix* \
 	      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
-	      | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \
+	      | -midipix* | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \
 	      | -linux-newlib* | -linux-musl* | -linux-uclibc* \
 	      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \
 	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
@@ -1393,7 +1416,8 @@
 	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
 	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
 	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
-	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* | -tirtos*)
+	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \
+	      | -onefs* | -tirtos* | -phoenix* | -fuchsia* | -redox*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	-qnx*)
@@ -1525,6 +1549,8 @@
 		;;
 	-nacl*)
 		;;
+	-ios)
+		;;
 	-none)
 		;;
 	*)
@@ -1620,6 +1646,9 @@
 	sparc-* | *-sun)
 		os=-sunos4.1.1
 		;;
+	pru-*)
+		os=-elf
+		;;
 	*-be)
 		os=-beos
 		;;
diff -uNrwB xz-5.2.2/build-aux/depcomp xz-5.2.4/build-aux/depcomp
--- xz-5.2.2/build-aux/depcomp	2015-09-29 17:03:42.000000000 +0600
+++ xz-5.2.4/build-aux/depcomp	2018-04-29 22:01:27.000000000 +0600
@@ -1,9 +1,9 @@
 #! /bin/sh
 # depcomp - compile a program generating dependencies as side-effects
 
-scriptversion=2013-05-30.07; # UTC
+scriptversion=2016-01-11.22; # UTC
 
-# Copyright (C) 1999-2014 Free Software Foundation, Inc.
+# Copyright (C) 1999-2017 Free Software Foundation, Inc.
 
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -786,6 +786,6 @@
 # eval: (add-hook 'write-file-hooks 'time-stamp)
 # time-stamp-start: "scriptversion="
 # time-stamp-format: "%:y-%02m-%02d.%02H"
-# time-stamp-time-zone: "UTC"
+# time-stamp-time-zone: "UTC0"
 # time-stamp-end: "; # UTC"
 # End:
diff -uNrwB xz-5.2.2/build-aux/install-sh xz-5.2.4/build-aux/install-sh
--- xz-5.2.2/build-aux/install-sh	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/build-aux/install-sh	2018-04-29 22:01:26.000000000 +0600
@@ -1,7 +1,7 @@
 #!/bin/sh
 # install - install a program, script, or datafile
 
-scriptversion=2013-12-25.23; # UTC
+scriptversion=2016-01-11.22; # UTC
 
 # This originates from X11R5 (mit/util/scripts/install.sh), which was
 # later released in X11R6 (xc/config/util/install.sh) with the
@@ -496,6 +496,6 @@
 # eval: (add-hook 'write-file-hooks 'time-stamp)
 # time-stamp-start: "scriptversion="
 # time-stamp-format: "%:y-%02m-%02d.%02H"
-# time-stamp-time-zone: "UTC"
+# time-stamp-time-zone: "UTC0"
 # time-stamp-end: "; # UTC"
 # End:
diff -uNrwB xz-5.2.2/build-aux/ltmain.sh xz-5.2.4/build-aux/ltmain.sh
--- xz-5.2.2/build-aux/ltmain.sh	2015-09-29 17:03:33.000000000 +0600
+++ xz-5.2.4/build-aux/ltmain.sh	2018-04-29 22:01:19.000000000 +0600
@@ -1,12 +1,12 @@
 #! /bin/sh
 ## DO NOT EDIT - This file generated from ./build-aux/ltmain.in
-##               by inline-source v2014-01-03.01
+##               by inline-source v2016-02-21.11
 
-# libtool (GNU libtool) 2.4.6
+# libtool (GNU libtool) 2.4.6.40-6ca5-dirty
 # Provide generalized library-building support services.
 # Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
 
-# Copyright (C) 1996-2015 Free Software Foundation, Inc.
+# Copyright (C) 1996-2017 Free Software Foundation, Inc.
 # This is free software; see the source for copying conditions.  There is NO
 # warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 
@@ -31,8 +31,8 @@
 
 PROGRAM=libtool
 PACKAGE=libtool
-VERSION=2.4.6
-package_revision=2.4.6
+VERSION=2.4.6.40-6ca5-dirty
+package_revision=2.4.6.40
 
 
 ## ------ ##
@@ -64,34 +64,25 @@
 # libraries, which are installed to $pkgauxdir.
 
 # Set a version string for this script.
-scriptversion=2015-01-20.17; # UTC
+scriptversion=2017-04-19.12; # UTC
 
 # General shell script boiler plate, and helper functions.
 # Written by Gary V. Vaughan, 2004
 
-# Copyright (C) 2004-2015 Free Software Foundation, Inc.
-# This is free software; see the source for copying conditions.  There is NO
-# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 3 of the License, or
-# (at your option) any later version.
-
-# As a special exception to the GNU General Public License, if you distribute
-# this file as part of a program or library that is built using GNU Libtool,
-# you may include this file under the same distribution terms that you use
-# for the rest of that program.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNES FOR A PARTICULAR PURPOSE. See the GNU
-# General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program. If not, see <http://www.gnu.org/licenses/>.
+# This is free software.  There is NO warranty; not even for
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+#
+# Copyright (C) 2004-2017 Bootstrap Authors
+#
+# This file is dual licensed under the terms of the MIT license
+# <https://opensource.org/license/MIT>, and GPL version 3 or later
+# <http://www.gnu.org/licenses/gpl-2.0.html>.  You must apply one of
+# these licenses when using or redistributing this software or any of
+# the files within it.  See the URLs above, or the file `LICENSE`
+# included in the Bootstrap distribution for the full license texts.
 
-# Please report bugs or propose patches to gary@gnu.org.
+# Please report bugs or propose patches to:
+# <https://github.com/gnulib-modules/bootstrap/issues>
 
 
 ## ------ ##
@@ -140,9 +131,6 @@
 	fi"
 done
 
-# CDPATH.
-(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
-
 # Make sure IFS has a sensible default
 sp=' '
 nl='
@@ -159,6 +147,26 @@
 fi
 
 
+# func_unset VAR
+# --------------
+# Portably unset VAR.
+# In some shells, an 'unset VAR' statement leaves a non-zero return
+# status if VAR is already unset, which might be problematic if the
+# statement is used at the end of a function (thus poisoning its return
+# value) or when 'set -e' is active (causing even a spurious abort of
+# the script in this case).
+func_unset ()
+{
+    { eval $1=; (eval unset $1) >/dev/null 2>&1 && eval unset $1 || : ; }
+}
+
+
+# Make sure CDPATH doesn't cause `cd` commands to output the target dir.
+func_unset CDPATH
+
+# Make sure ${,E,F}GREP behave sanely.
+func_unset GREP_OPTIONS
+
 
 ## ------------------------- ##
 ## Locate command utilities. ##
@@ -259,7 +267,7 @@
     rm -f conftest.in conftest.tmp conftest.nl conftest.out
   }
 
-  func_path_progs "sed gsed" func_check_prog_sed $PATH:/usr/xpg4/bin
+  func_path_progs "sed gsed" func_check_prog_sed "$PATH:/usr/xpg4/bin"
   rm -f conftest.sed
   SED=$func_path_progs_result
 }
@@ -295,7 +303,7 @@
     rm -f conftest.in conftest.tmp conftest.nl conftest.out
   }
 
-  func_path_progs "grep ggrep" func_check_prog_grep $PATH:/usr/xpg4/bin
+  func_path_progs "grep ggrep" func_check_prog_grep "$PATH:/usr/xpg4/bin"
   GREP=$func_path_progs_result
 }
 
@@ -580,16 +588,16 @@
   {
     $debug_cmd
 
-    func_quote_for_eval "$2"
-    eval "$1+=\\ \$func_quote_for_eval_result"
+    func_quote_arg pretty "$2"
+    eval "$1+=\\ \$func_quote_arg_result"
   }'
 else
   func_append_quoted ()
   {
     $debug_cmd
 
-    func_quote_for_eval "$2"
-    eval "$1=\$$1\\ \$func_quote_for_eval_result"
+    func_quote_arg pretty "$2"
+    eval "$1=\$$1\\ \$func_quote_arg_result"
   }
 fi
 
@@ -1091,85 +1099,199 @@
 }
 
 
-# func_quote_for_eval ARG...
-# --------------------------
-# Aesthetically quote ARGs to be evaled later.
-# This function returns two values:
-#   i) func_quote_for_eval_result
-#      double-quoted, suitable for a subsequent eval
-#  ii) func_quote_for_eval_unquoted_result
-#      has all characters that are still active within double
-#      quotes backslashified.
-func_quote_for_eval ()
+# func_quote_portable EVAL ARG
+# ----------------------------
+# Internal function to portably implement func_quote_arg.  Note that we still
+# keep attention to performance here so we as much as possible try to avoid
+# calling sed binary (so far O(N) complexity as long as func_append is O(1)).
+func_quote_portable ()
 {
     $debug_cmd
 
-    func_quote_for_eval_unquoted_result=
-    func_quote_for_eval_result=
-    while test 0 -lt $#; do
-      case $1 in
+    func_quote_portable_result=$2
+
+    # one-time-loop (easy break)
+    while true
+    do
+      if $1; then
+        func_quote_portable_result=`$ECHO "$2" | $SED \
+          -e "$sed_double_quote_subst" -e "$sed_double_backslash"`
+        break
+      fi
+
+      # Quote for eval.
+      case $func_quote_portable_result in
         *[\\\`\"\$]*)
-	  _G_unquoted_arg=`printf '%s\n' "$1" |$SED "$sed_quote_subst"` ;;
-        *)
-          _G_unquoted_arg=$1 ;;
+          case $func_quote_portable_result in
+            *[\[\*\?]*)
+              func_quote_portable_result=`$ECHO "$func_quote_portable_result" \
+                  | $SED "$sed_quote_subst"`
+              break
+              ;;
       esac
-      if test -n "$func_quote_for_eval_unquoted_result"; then
-	func_append func_quote_for_eval_unquoted_result " $_G_unquoted_arg"
-      else
-        func_append func_quote_for_eval_unquoted_result "$_G_unquoted_arg"
-      fi
 
-      case $_G_unquoted_arg in
-        # Double-quote args containing shell metacharacters to delay
+          func_quote_portable_old_IFS=$IFS
+          for _G_char in '\' '`' '"' '$'
+          do
+            # STATE($1) PREV($2) SEPARATOR($3)
+            set start "" ""
+            func_quote_portable_result=dummy"$_G_char$func_quote_portable_result$_G_char"dummy
+            IFS=$_G_char
+            for _G_part in $func_quote_portable_result
+            do
+              case $1 in
+              quote)
+                func_append func_quote_portable_result "$3$2"
+                set quote "$_G_part" "\\$_G_char"
+                ;;
+              start)
+                set first "" ""
+                func_quote_portable_result=
+                ;;
+              first)
+                set quote "$_G_part" ""
+                ;;
+              esac
+            done
+          done
+          IFS=$func_quote_portable_old_IFS
+          ;;
+        *) ;;
+      esac
+      break
+    done
+
+    func_quote_portable_unquoted_result=$func_quote_portable_result
+    case $func_quote_portable_result in
+      # double-quote args containing shell metacharacters to delay
         # word splitting, command substitution and variable expansion
         # for a subsequent eval.
-        # Many Bourne shells cannot handle close brackets correctly
+      # many bourne shells cannot handle close brackets correctly
         # in scan sets, so we specify it separately.
         *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
-          _G_quoted_arg=\"$_G_unquoted_arg\"
-          ;;
-        *)
-          _G_quoted_arg=$_G_unquoted_arg
+        func_quote_portable_result=\"$func_quote_portable_result\"
 	  ;;
       esac
+}
+
 
-      if test -n "$func_quote_for_eval_result"; then
-	func_append func_quote_for_eval_result " $_G_quoted_arg"
+# func_quotefast_eval ARG
+# -----------------------
+# Quote one ARG (internal).  This is equivalent to 'func_quote_arg eval ARG',
+# but optimized for speed.  Result is stored in $func_quotefast_eval.
+if test xyes = `(x=; printf -v x %q yes; echo x"$x") 2>/dev/null`; then
+  printf -v _GL_test_printf_tilde %q '~'
+  if test '\~' = "$_GL_test_printf_tilde"; then
+    func_quotefast_eval ()
+    {
+      printf -v func_quotefast_eval_result %q "$1"
+    }
       else
-        func_append func_quote_for_eval_result "$_G_quoted_arg"
+    # Broken older Bash implementations.  Make those faster too if possible.
+    func_quotefast_eval ()
+    {
+      case $1 in
+        '~'*)
+          func_quote_portable false "$1"
+          func_quotefast_eval_result=$func_quote_portable_result
+          ;;
+        *)
+          printf -v func_quotefast_eval_result %q "$1"
+          ;;
+      esac
+    }
       fi
-      shift
-    done
+else
+  func_quotefast_eval ()
+  {
+    func_quote_portable false "$1"
+    func_quotefast_eval_result=$func_quote_portable_result
 }
+fi
 
 
-# func_quote_for_expand ARG
-# -------------------------
-# Aesthetically quote ARG to be evaled later; same as above,
-# but do not quote variable references.
-func_quote_for_expand ()
+# func_quote_arg MODEs ARG
+# ------------------------
+# Quote one ARG to be evaled later.  MODEs argument may contain zero or more
+# specifiers listed below separated by ',' character.  This function returns two
+# values:
+#   i) func_quote_arg_result
+#      double-quoted (when needed), suitable for a subsequent eval
+#  ii) func_quote_arg_unquoted_result
+#      has all characters that are still active within double
+#      quotes backslashified.  Available only if 'unquoted' is specified.
+#
+# Available modes:
+# ----------------
+# 'eval' (default)
+#       - escape shell special characters
+# 'expand'
+#       - the same as 'eval';  but do not quote variable references
+# 'pretty'
+#       - request aesthetic output, i.e. '"a b"' instead of 'a\ b'.  This might
+#         be used later in func_quote to get output like: 'echo "a b"' instead
+#         of 'echo a\ b'.  This is slower than default on some shells.
+# 'unquoted'
+#       - produce also $func_quote_arg_unquoted_result which does not contain
+#         wrapping double-quotes.
+#
+# Examples for 'func_quote_arg pretty,unquoted string':
+#
+#   string      | *_result              | *_unquoted_result
+#   ------------+-----------------------+-------------------
+#   "           | \"                    | \"
+#   a b         | "a b"                 | a b
+#   "a b"       | "\"a b\""             | \"a b\"
+#   *           | "*"                   | *
+#   z="${x-$y}" | "z=\"\${x-\$y}\""     | z=\"\${x-\$y}\"
+#
+# Examples for 'func_quote_arg pretty,unquoted,expand string':
+#
+#   string        |   *_result          |  *_unquoted_result
+#   --------------+---------------------+--------------------
+#   z="${x-$y}"   | "z=\"${x-$y}\""     | z=\"${x-$y}\"
+func_quote_arg ()
 {
-    $debug_cmd
-
-    case $1 in
-      *[\\\`\"]*)
-	_G_arg=`$ECHO "$1" | $SED \
-	    -e "$sed_double_quote_subst" -e "$sed_double_backslash"` ;;
-      *)
-        _G_arg=$1 ;;
+    _G_quote_expand=false
+    case ,$1, in
+      *,expand,*)
+        _G_quote_expand=:
+        ;;
     esac
 
-    case $_G_arg in
-      # Double-quote args containing shell metacharacters to delay
-      # word splitting and command substitution for a subsequent eval.
-      # Many Bourne shells cannot handle close brackets correctly
-      # in scan sets, so we specify it separately.
-      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
-        _G_arg=\"$_G_arg\"
+    case ,$1, in
+      *,pretty,*|*,expand,*|*,unquoted,*)
+        func_quote_portable $_G_quote_expand "$2"
+        func_quote_arg_result=$func_quote_portable_result
+        func_quote_arg_unquoted_result=$func_quote_portable_unquoted_result
+        ;;
+      *)
+        # Faster quote-for-eval for some shells.
+        func_quotefast_eval "$2"
+        func_quote_arg_result=$func_quotefast_eval_result
         ;;
     esac
+}
+
 
-    func_quote_for_expand_result=$_G_arg
+# func_quote MODEs ARGs...
+# ------------------------
+# Quote all ARGs to be evaled later and join them into single command.  See
+# func_quote_arg's description for more info.
+func_quote ()
+{
+    $debug_cmd
+    _G_func_quote_mode=$1 ; shift
+    func_quote_result=
+    while test 0 -lt $#; do
+      func_quote_arg "$_G_func_quote_mode" "$1"
+      if test -n "$func_quote_result"; then
+        func_append func_quote_result " $func_quote_arg_result"
+      else
+        func_append func_quote_result "$func_quote_arg_result"
+      fi
+      shift
+    done
 }
 
 
@@ -1215,8 +1337,8 @@
     _G_cmd=$1
     _G_fail_exp=${2-':'}
 
-    func_quote_for_expand "$_G_cmd"
-    eval "func_notquiet $func_quote_for_expand_result"
+    func_quote_arg pretty,expand "$_G_cmd"
+    eval "func_notquiet $func_quote_arg_result"
 
     $opt_dry_run || {
       eval "$_G_cmd"
@@ -1241,8 +1363,8 @@
     _G_fail_exp=${2-':'}
 
     $opt_quiet || {
-      func_quote_for_expand "$_G_cmd"
-      eval "func_echo $func_quote_for_expand_result"
+      func_quote_arg expand,pretty "$_G_cmd"
+      eval "func_echo $func_quote_arg_result"
     }
 
     $opt_dry_run || {
@@ -1369,30 +1491,26 @@
 # End:
 #! /bin/sh
 
-# Set a version string for this script.
-scriptversion=2014-01-07.03; # UTC
-
 # A portable, pluggable option parser for Bourne shell.
 # Written by Gary V. Vaughan, 2010
 
-# Copyright (C) 2010-2015 Free Software Foundation, Inc.
-# This is free software; see the source for copying conditions.  There is NO
-# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
+# This is free software.  There is NO warranty; not even for
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+#
+# Copyright (C) 2010-2017 Bootstrap Authors
+#
+# This file is dual licensed under the terms of the MIT license
+# <https://opensource.org/license/MIT>, and GPL version 3 or later
+# <http://www.gnu.org/licenses/gpl-2.0.html>.  You must apply one of
+# these licenses when using or redistributing this software or any of
+# the files within it.  See the URLs above, or the file `LICENSE`
+# included in the Bootstrap distribution for the full license texts.
 
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+# Please report bugs or propose patches to:
+# <https://github.com/gnulib-modules/bootstrap/issues>
 
-# Please report bugs or propose patches to gary@gnu.org.
+# Set a version string for this script.
+scriptversion=2016-03-06.01; # UTC
 
 
 ## ------ ##
@@ -1415,7 +1533,7 @@
 #
 # In order for the '--version' option to work, you will need to have a
 # suitably formatted comment like the one at the top of this file
-# starting with '# Written by ' and ending with '# warranty; '.
+# starting with '# Written by ' and ending with '# Copyright'.
 #
 # For '-h' and '--help' to work, you will also need a one line
 # description of your script's purpose in a comment directly above the
@@ -1427,7 +1545,7 @@
 # to display verbose messages only when your user has specified
 # '--verbose'.
 #
-# After sourcing this file, you can plug processing for additional
+# After sourcing this file, you can plug in processing for additional
 # options by amending the variables from the 'Configuration' section
 # below, and following the instructions in the 'Option parsing'
 # section further down.
@@ -1476,8 +1594,8 @@
 ## ------------------------- ##
 
 # This section contains functions for adding, removing, and running hooks
-# to the main code.  A hook is just a named list of of function, that can
-# be run in order later on.
+# in the main code.  A hook is just a list of function names that can be
+# run in order later on.
 
 # func_hookable FUNC_NAME
 # -----------------------
@@ -1510,7 +1628,8 @@
 
 # func_remove_hook FUNC_NAME HOOK_FUNC
 # ------------------------------------
-# Remove HOOK_FUNC from the list of functions called by FUNC_NAME.
+# Remove HOOK_FUNC from the list of hook functions to be called by
+# FUNC_NAME.
 func_remove_hook ()
 {
     $debug_cmd
@@ -1519,10 +1638,28 @@
 }
 
 
+# func_propagate_result FUNC_NAME_A FUNC_NAME_B
+# ---------------------------------------------
+# If the *_result variable of FUNC_NAME_A _is set_, assign its value to
+# *_result variable of FUNC_NAME_B.
+func_propagate_result ()
+{
+    $debug_cmd
+
+    func_propagate_result_result=:
+    if eval "test \"\${${1}_result+set}\" = set"
+    then
+      eval "${2}_result=\$${1}_result"
+    else
+      func_propagate_result_result=false
+    fi
+}
+
+
 # func_run_hooks FUNC_NAME [ARG]...
 # ---------------------------------
 # Run all hook functions registered to FUNC_NAME.
-# It is assumed that the list of hook functions contains nothing more
+# It's assumed that the list of hook functions contains nothing more
 # than a whitespace-delimited list of legal shell function names, and
 # no effort is wasted trying to catch shell meta-characters or preserve
 # whitespace.
@@ -1532,22 +1669,19 @@
 
     case " $hookable_fns " in
       *" $1 "*) ;;
-      *) func_fatal_error "'$1' does not support hook funcions.n" ;;
+      *) func_fatal_error "'$1' does not support hook functions." ;;
     esac
 
     eval _G_hook_fns=\$$1_hooks; shift
 
     for _G_hook in $_G_hook_fns; do
-      eval $_G_hook '"$@"'
-
-      # store returned options list back into positional
-      # parameters for next 'cmd' execution.
-      eval _G_hook_result=\$${_G_hook}_result
-      eval set dummy "$_G_hook_result"; shift
+      func_unset "${_G_hook}_result"
+      eval $_G_hook '${1+"$@"}'
+      func_propagate_result $_G_hook func_run_hooks
+      if $func_propagate_result_result; then
+        eval set dummy "$func_run_hooks_result"; shift
+      fi
     done
-
-    func_quote_for_eval ${1+"$@"}
-    func_run_hooks_result=$func_quote_for_eval_result
 }
 
 
@@ -1557,10 +1691,18 @@
 ## --------------- ##
 
 # In order to add your own option parsing hooks, you must accept the
-# full positional parameter list in your hook function, remove any
-# options that you action, and then pass back the remaining unprocessed
-# options in '<hooked_function_name>_result', escaped suitably for
-# 'eval'.  Like this:
+# full positional parameter list from your hook function.  You may remove
+# or edit any options that you action, and then pass back the remaining
+# unprocessed options in '<hooked_function_name>_result', escaped
+# suitably for 'eval'.
+#
+# The '<hooked_function_name>_result' variable is automatically unset
+# before your hook gets called; for best performance, only set the
+# *_result variable when necessary (i.e. don't call the 'func_quote'
+# function unnecessarily because it can be an expensive operation on some
+# machines).
+#
+# Like this:
 #
 #    my_options_prep ()
 #    {
@@ -1570,9 +1712,8 @@
 #        usage_message=$usage_message'
 #      -s, --silent       don'\''t print informational messages
 #    '
-#
-#        func_quote_for_eval ${1+"$@"}
-#        my_options_prep_result=$func_quote_for_eval_result
+#        # No change in '$@' (ignored completely by this hook).  Leave
+#        # my_options_prep_result variable intact.
 #    }
 #    func_add_hook func_options_prep my_options_prep
 #
@@ -1581,25 +1722,36 @@
 #    {
 #        $debug_cmd
 #
-#        # Note that for efficiency, we parse as many options as we can
+#        args_changed=false
+#
+#        # Note that, for efficiency, we parse as many options as we can
 #        # recognise in a loop before passing the remainder back to the
 #        # caller on the first unrecognised argument we encounter.
 #        while test $# -gt 0; do
 #          opt=$1; shift
 #          case $opt in
-#            --silent|-s) opt_silent=: ;;
+#            --silent|-s) opt_silent=:
+#                         args_changed=:
+#                         ;;
 #            # Separate non-argument short options:
 #            -s*)         func_split_short_opt "$_G_opt"
 #                         set dummy "$func_split_short_opt_name" \
 #                             "-$func_split_short_opt_arg" ${1+"$@"}
 #                         shift
+#                         args_changed=:
 #                         ;;
-#            *)            set dummy "$_G_opt" "$*"; shift; break ;;
+#            *)           # Make sure the first unrecognised option "$_G_opt"
+#                         # is added back to "$@" in case we need it later,
+#                         # if $args_changed was set to 'true'.
+#                         set dummy "$_G_opt" ${1+"$@"}; shift; break ;;
 #          esac
 #        done
 #
-#        func_quote_for_eval ${1+"$@"}
-#        my_silent_option_result=$func_quote_for_eval_result
+#        # Only call 'func_quote' here if we processed at least one argument.
+#        if $args_changed; then
+#          func_quote eval ${1+"$@"}
+#          my_silent_option_result=$func_quote_result
+#        fi
 #    }
 #    func_add_hook func_parse_options my_silent_option
 #
@@ -1610,17 +1762,26 @@
 #
 #        $opt_silent && $opt_verbose && func_fatal_help "\
 #    '--silent' and '--verbose' options are mutually exclusive."
-#
-#        func_quote_for_eval ${1+"$@"}
-#        my_option_validation_result=$func_quote_for_eval_result
 #    }
 #    func_add_hook func_validate_options my_option_validation
 #
-# You'll alse need to manually amend $usage_message to reflect the extra
+# You'll also need to manually amend $usage_message to reflect the extra
 # options you parse.  It's preferable to append if you can, so that
 # multiple option parsing hooks can be added safely.
 
 
+# func_options_finish [ARG]...
+# ----------------------------
+# Finishing the option parse loop (call 'func_options' hooks ATM).
+func_options_finish ()
+{
+    $debug_cmd
+
+    func_run_hooks func_options ${1+"$@"}
+    func_propagate_result func_run_hooks func_options_finish
+}
+
+
 # func_options [ARG]...
 # ---------------------
 # All the functions called inside func_options are hookable. See the
@@ -1630,17 +1791,27 @@
 {
     $debug_cmd
 
-    func_options_prep ${1+"$@"}
-    eval func_parse_options \
-        ${func_options_prep_result+"$func_options_prep_result"}
-    eval func_validate_options \
-        ${func_parse_options_result+"$func_parse_options_result"}
+    _G_options_quoted=false
 
-    eval func_run_hooks func_options \
-        ${func_validate_options_result+"$func_validate_options_result"}
+    for my_func in options_prep parse_options validate_options options_finish
+    do
+      func_unset func_${my_func}_result
+      func_unset func_run_hooks_result
+      eval func_$my_func '${1+"$@"}'
+      func_propagate_result func_$my_func func_options
+      if $func_propagate_result_result; then
+        eval set dummy "$func_options_result"; shift
+        _G_options_quoted=:
+      fi
+    done
 
-    # save modified positional parameters for caller
-    func_options_result=$func_run_hooks_result
+    $_G_options_quoted || {
+      # As we (func_options) are top-level options-parser function and
+      # nobody quoted "$@" for us yet, we need to do it explicitly for
+      # caller.
+      func_quote eval ${1+"$@"}
+      func_options_result=$func_quote_result
+    }
 }
 
 
@@ -1649,9 +1820,8 @@
 # All initialisations required before starting the option parse loop.
 # Note that when calling hook functions, we pass through the list of
 # positional parameters.  If a hook function modifies that list, and
-# needs to propogate that back to rest of this script, then the complete
-# modified list must be put in 'func_run_hooks_result' before
-# returning.
+# needs to propagate that back to rest of this script, then the complete
+# modified list must be put in 'func_run_hooks_result' before returning.
 func_hookable func_options_prep
 func_options_prep ()
 {
@@ -1662,9 +1832,7 @@
     opt_warning_types=
 
     func_run_hooks func_options_prep ${1+"$@"}
-
-    # save modified positional parameters for caller
-    func_options_prep_result=$func_run_hooks_result
+    func_propagate_result func_run_hooks func_options_prep
 }
 
 
@@ -1676,25 +1844,32 @@
 {
     $debug_cmd
 
-    func_parse_options_result=
-
+    _G_parse_options_requote=false
     # this just eases exit handling
     while test $# -gt 0; do
       # Defer to hook functions for initial option parsing, so they
       # get priority in the event of reusing an option name.
       func_run_hooks func_parse_options ${1+"$@"}
-
-      # Adjust func_parse_options positional parameters to match
-      eval set dummy "$func_run_hooks_result"; shift
+      func_propagate_result func_run_hooks func_parse_options
+      if $func_propagate_result_result; then
+        eval set dummy "$func_parse_options_result"; shift
+        # Even though we may have changed "$@", we passed the "$@" array
+        # down into the hook and it quoted it for us (because we are in
+        # this if-branch).  No need to quote it again.
+        _G_parse_options_requote=false
+      fi
 
       # Break out of the loop if we already parsed every option.
       test $# -gt 0 || break
 
+      # We expect that one of the options parsed in this function matches
+      # and thus we remove _G_opt from "$@" and need to re-quote.
+      _G_match_parse_options=:
       _G_opt=$1
       shift
       case $_G_opt in
         --debug|-x)   debug_cmd='set -x'
-                      func_echo "enabling shell trace mode"
+                      func_echo "enabling shell trace mode" >&2
                       $debug_cmd
                       ;;
 
@@ -1704,7 +1879,10 @@
 		      ;;
 
         --warnings|--warning|-W)
-                      test $# = 0 && func_missing_arg $_G_opt && break
+                      if test $# = 0 && func_missing_arg $_G_opt; then
+                        _G_parse_options_requote=:
+                        break
+                      fi
                       case " $warning_categories $1" in
                         *" $1 "*)
                           # trailing space prevents matching last $1 above
@@ -1757,15 +1935,24 @@
                       shift
                       ;;
 
-        --)           break ;;
+        --)           _G_parse_options_requote=: ; break ;;
         -*)           func_fatal_help "unrecognised option: '$_G_opt'" ;;
-        *)            set dummy "$_G_opt" ${1+"$@"}; shift; break ;;
+        *)            set dummy "$_G_opt" ${1+"$@"}; shift
+                      _G_match_parse_options=false
+                      break
+                      ;;
       esac
+
+      if $_G_match_parse_options; then
+        _G_parse_options_requote=:
+      fi
     done
 
+    if $_G_parse_options_requote; then
     # save modified positional parameters for caller
-    func_quote_for_eval ${1+"$@"}
-    func_parse_options_result=$func_quote_for_eval_result
+      func_quote eval ${1+"$@"}
+      func_parse_options_result=$func_quote_result
+    fi
 }
 
 
@@ -1782,12 +1969,10 @@
     test -n "$opt_warning_types" || opt_warning_types=" $warning_categories"
 
     func_run_hooks func_validate_options ${1+"$@"}
+    func_propagate_result func_run_hooks func_validate_options
 
     # Bail if the options were screwed!
     $exit_cmd $EXIT_FAILURE
-
-    # save modified positional parameters for caller
-    func_validate_options_result=$func_run_hooks_result
 }
 
 
@@ -1843,8 +2028,8 @@
 
 # func_split_equals STRING
 # ------------------------
-# Set func_split_equals_lhs and func_split_equals_rhs shell variables after
-# splitting STRING at the '=' sign.
+# Set func_split_equals_lhs and func_split_equals_rhs shell variables
+# after splitting STRING at the '=' sign.
 test -z "$_G_HAVE_XSI_OPS" \
     && (eval 'x=a/b/c;
       test 5aa/bb/cc = "${#x}${x%%/*}${x%/*}${x#*/}${x##*/}"') 2>/dev/null \
@@ -1859,8 +2044,9 @@
 
       func_split_equals_lhs=${1%%=*}
       func_split_equals_rhs=${1#*=}
-      test "x$func_split_equals_lhs" = "x$1" \
-        && func_split_equals_rhs=
+      if test "x$func_split_equals_lhs" = "x$1"; then
+        func_split_equals_rhs=
+      fi
   }'
 else
   # ...otherwise fall back to using expr, which is often a shell builtin.
@@ -1938,31 +2124,44 @@
 # func_version
 # ------------
 # Echo version message to standard output and exit.
+# The version message is extracted from the calling file's header
+# comments, with leading '# ' stripped:
+#   1. First display the progname and version
+#   2. Followed by the header comment line matching  /^# Written by /
+#   3. Then a blank line followed by the first following line matching
+#      /^# Copyright /
+#   4. Immediately followed by any lines between the previous matches,
+#      except lines preceding the intervening completely blank line.
+# For example, see the header comments of this file.
 func_version ()
 {
     $debug_cmd
 
     printf '%s\n' "$progname $scriptversion"
     $SED -n '
-        /(C)/!b go
-        :more
-        /\./!{
-          N
-          s|\n# | |
-          b more
+        /^# Written by /!b
+        s|^# ||; p; n
+
+        :fwd2blnk
+        /./ {
+          n
+          b fwd2blnk
         }
-        :go
-        /^# Written by /,/# warranty; / {
+        p; n
+
+        :holdwrnt
           s|^# ||
           s|^# *$||
-          s|\((C)\)[ 0-9,-]*[ ,-]\([1-9][0-9]* \)|\1 \2|
-          p
-        }
-        /^# Written by / {
-          s|^# ||
-          p
+        /^Copyright /!{
+          /./H
+          n
+          b holdwrnt
         }
-        /^warranty; /q' < "$progpath"
+
+        s|\((C)\)[ 0-9,-]*[ ,-]\([1-9][0-9]* \)|\1 \2|
+        G
+        s|\(\n\)\n*|\1|g
+        p; q' < "$progpath"
 
     exit $?
 }
@@ -1977,7 +2176,7 @@
 # End:
 
 # Set a version string.
-scriptversion='(GNU libtool) 2.4.6'
+scriptversion='(GNU libtool) 2.4.6.40-6ca5-dirty'
 
 
 # func_echo ARG...
@@ -2068,12 +2267,12 @@
        compiler:       $LTCC
        compiler flags: $LTCFLAGS
        linker:         $LD (gnu? $with_gnu_ld)
-       version:        $progname (GNU libtool) 2.4.6
+       version:        $progname (GNU libtool) 2.4.6.40-6ca5-dirty
        automake:       `($AUTOMAKE --version) 2>/dev/null |$SED 1q`
        autoconf:       `($AUTOCONF --version) 2>/dev/null |$SED 1q`
 
 Report bugs to <bug-libtool@gnu.org>.
-GNU libtool home page: <http://www.gnu.org/software/libtool/>.
+GNU libtool home page: <http://www.gnu.org/s/libtool/>.
 General help using GNU software: <http://www.gnu.org/gethelp/>."
     exit 0
 }
@@ -2124,7 +2323,7 @@
 # a configuration failure hint, and exit.
 func_fatal_configuration ()
 {
-    func__fatal_error ${1+"$@"} \
+    func_fatal_error ${1+"$@"} \
       "See the $PACKAGE documentation for more information." \
       "Fatal configuration error."
 }
@@ -2270,6 +2469,8 @@
     nonopt=
     preserve_args=
 
+    _G_rc_lt_options_prep=:
+
     # Shorthand for --mode=foo, only valid as the first argument
     case $1 in
     clean|clea|cle|cl)
@@ -2293,11 +2494,16 @@
     uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)
       shift; set dummy --mode uninstall ${1+"$@"}; shift
       ;;
+    *)
+      _G_rc_lt_options_prep=false
+      ;;
     esac
 
+    if $_G_rc_lt_options_prep; then
     # Pass back the list of options.
-    func_quote_for_eval ${1+"$@"}
-    libtool_options_prep_result=$func_quote_for_eval_result
+      func_quote eval ${1+"$@"}
+      libtool_options_prep_result=$func_quote_result
+    fi
 }
 func_add_hook func_options_prep libtool_options_prep
 
@@ -2309,9 +2515,12 @@
 {
     $debug_cmd
 
+    _G_rc_lt_parse_options=false
+
     # Perform our own loop to consume as many options as possible in
     # each iteration.
     while test $# -gt 0; do
+      _G_match_lt_parse_options=:
       _G_opt=$1
       shift
       case $_G_opt in
@@ -2387,14 +2596,19 @@
                         ;;
 
 	# An option not handled by this hook function:
-        *)		set dummy "$_G_opt" ${1+"$@"};	shift; break  ;;
+        *)              set dummy "$_G_opt" ${1+"$@"} ; shift
+                        _G_match_lt_parse_options=false
+                        break
+                        ;;
       esac
+      $_G_match_lt_parse_options && _G_rc_lt_parse_options=:
     done
 
-
+    if $_G_rc_lt_parse_options; then
     # save modified positional parameters for caller
-    func_quote_for_eval ${1+"$@"}
-    libtool_parse_options_result=$func_quote_for_eval_result
+      func_quote eval ${1+"$@"}
+      libtool_parse_options_result=$func_quote_result
+    fi
 }
 func_add_hook func_parse_options libtool_parse_options
 
@@ -2451,8 +2665,8 @@
     }
 
     # Pass back the unparsed argument list
-    func_quote_for_eval ${1+"$@"}
-    libtool_validate_options_result=$func_quote_for_eval_result
+    func_quote eval ${1+"$@"}
+    libtool_validate_options_result=$func_quote_result
 }
 func_add_hook func_validate_options libtool_validate_options
 
@@ -3418,8 +3632,8 @@
       esac
     done
 
-    func_quote_for_eval "$libobj"
-    test "X$libobj" != "X$func_quote_for_eval_result" \
+    func_quote_arg pretty "$libobj"
+    test "X$libobj" != "X$func_quote_arg_result" \
       && $ECHO "X$libobj" | $GREP '[]~#^*{};<>?"'"'"'	 &()|`$[]' \
       && func_warning "libobj name '$libobj' may not contain shell special characters."
     func_dirname_and_basename "$obj" "/" ""
@@ -3492,8 +3706,8 @@
 
     func_to_tool_file "$srcfile" func_convert_file_msys_to_w32
     srcfile=$func_to_tool_file_result
-    func_quote_for_eval "$srcfile"
-    qsrcfile=$func_quote_for_eval_result
+    func_quote_arg pretty "$srcfile"
+    qsrcfile=$func_quote_arg_result
 
     # Only build a PIC object if we are building libtool libraries.
     if test yes = "$build_libtool_libs"; then
@@ -4096,8 +4310,8 @@
        case $nonopt in *shtool*) :;; *) false;; esac
     then
       # Aesthetically quote it.
-      func_quote_for_eval "$nonopt"
-      install_prog="$func_quote_for_eval_result "
+      func_quote_arg pretty "$nonopt"
+      install_prog="$func_quote_arg_result "
       arg=$1
       shift
     else
@@ -4107,8 +4321,8 @@
 
     # The real first argument should be the name of the installation program.
     # Aesthetically quote it.
-    func_quote_for_eval "$arg"
-    func_append install_prog "$func_quote_for_eval_result"
+    func_quote_arg pretty "$arg"
+    func_append install_prog "$func_quote_arg_result"
     install_shared_prog=$install_prog
     case " $install_prog " in
       *[\\\ /]cp\ *) install_cp=: ;;
@@ -4165,12 +4379,12 @@
       esac
 
       # Aesthetically quote the argument.
-      func_quote_for_eval "$arg"
-      func_append install_prog " $func_quote_for_eval_result"
+      func_quote_arg pretty "$arg"
+      func_append install_prog " $func_quote_arg_result"
       if test -n "$arg2"; then
-	func_quote_for_eval "$arg2"
+	func_quote_arg pretty "$arg2"
       fi
-      func_append install_shared_prog " $func_quote_for_eval_result"
+      func_append install_shared_prog " $func_quote_arg_result"
     done
 
     test -z "$install_prog" && \
@@ -4181,8 +4395,8 @@
 
     if test -n "$install_override_mode" && $no_mode; then
       if $install_cp; then :; else
-	func_quote_for_eval "$install_override_mode"
-	func_append install_shared_prog " -m $func_quote_for_eval_result"
+	func_quote_arg pretty "$install_override_mode"
+	func_append install_shared_prog " -m $func_quote_arg_result"
       fi
     fi
 
@@ -4478,8 +4692,8 @@
 	        relink_command=`$ECHO "$relink_command" | $SED 's%@OUTPUT@%'"$outputname"'%g'`
 
 	        $opt_quiet || {
-	          func_quote_for_expand "$relink_command"
-		  eval "func_echo $func_quote_for_expand_result"
+	          func_quote_arg expand,pretty "$relink_command"
+		  eval "func_echo $func_quote_arg_result"
 	        }
 	        if eval "$relink_command"; then :
 	          else
@@ -5258,7 +5472,8 @@
   if test \"\$libtool_execute_magic\" != \"$magic\"; then
     file=\"\$0\""
 
-    qECHO=`$ECHO "$ECHO" | $SED "$sed_quote_subst"`
+    func_quote_arg pretty "$ECHO"
+    qECHO=$func_quote_arg_result
     $ECHO "\
 
 # A function that is used when there is no print builtin or printf.
@@ -5268,7 +5483,7 @@
 \$1
 _LTECHO_EOF'
 }
-    ECHO=\"$qECHO\"
+    ECHO=$qECHO
   fi
 
 # Very basic option parsing. These options are (a) specific to
@@ -6611,9 +6826,9 @@
     while test "$#" -gt 0; do
       arg=$1
       shift
-      func_quote_for_eval "$arg"
-      qarg=$func_quote_for_eval_unquoted_result
-      func_append libtool_args " $func_quote_for_eval_result"
+      func_quote_arg pretty,unquoted "$arg"
+      qarg=$func_quote_arg_unquoted_result
+      func_append libtool_args " $func_quote_arg_result"
 
       # If the previous option needs an argument, assign it.
       if test -n "$prev"; then
@@ -7211,9 +7426,9 @@
 	save_ifs=$IFS; IFS=,
 	for flag in $args; do
 	  IFS=$save_ifs
-          func_quote_for_eval "$flag"
-	  func_append arg " $func_quote_for_eval_result"
-	  func_append compiler_flags " $func_quote_for_eval_result"
+          func_quote_arg pretty "$flag"
+	  func_append arg " $func_quote_arg_result"
+	  func_append compiler_flags " $func_quote_arg_result"
 	done
 	IFS=$save_ifs
 	func_stripname ' ' '' "$arg"
@@ -7227,10 +7442,10 @@
 	save_ifs=$IFS; IFS=,
 	for flag in $args; do
 	  IFS=$save_ifs
-          func_quote_for_eval "$flag"
-	  func_append arg " $wl$func_quote_for_eval_result"
-	  func_append compiler_flags " $wl$func_quote_for_eval_result"
-	  func_append linker_flags " $func_quote_for_eval_result"
+          func_quote_arg pretty "$flag"
+	  func_append arg " $wl$func_quote_arg_result"
+	  func_append compiler_flags " $wl$func_quote_arg_result"
+	  func_append linker_flags " $func_quote_arg_result"
 	done
 	IFS=$save_ifs
 	func_stripname ' ' '' "$arg"
@@ -7254,8 +7469,8 @@
 
       # -msg_* for osf cc
       -msg_*)
-	func_quote_for_eval "$arg"
-	arg=$func_quote_for_eval_result
+	func_quote_arg pretty "$arg"
+	arg=$func_quote_arg_result
 	;;
 
       # Flags to be passed through unchanged, with rationale:
@@ -7272,12 +7487,16 @@
       # -tp=*                Portland pgcc target processor selection
       # --sysroot=*          for sysroot support
       # -O*, -g*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization
+      # -specs=*             GCC specs files
       # -stdlib=*            select c++ std lib with clang
+      # -fsanitize=*         Clang/GCC memory and address sanitizer
+      # -fuse-ld=*           Linker select flags for GCC
       -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \
       -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \
-      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*)
-        func_quote_for_eval "$arg"
-	arg=$func_quote_for_eval_result
+      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*| \
+      -specs=*|-fsanitize=*|-fuse-ld=*)
+        func_quote_arg pretty "$arg"
+	arg=$func_quote_arg_result
         func_append compile_command " $arg"
         func_append finalize_command " $arg"
         func_append compiler_flags " $arg"
@@ -7298,15 +7517,15 @@
 	  continue
         else
 	  # Otherwise treat like 'Some other compiler flag' below
-	  func_quote_for_eval "$arg"
-	  arg=$func_quote_for_eval_result
+	  func_quote_arg pretty "$arg"
+	  arg=$func_quote_arg_result
         fi
 	;;
 
       # Some other compiler flag.
       -* | +*)
-        func_quote_for_eval "$arg"
-	arg=$func_quote_for_eval_result
+        func_quote_arg pretty "$arg"
+	arg=$func_quote_arg_result
 	;;
 
       *.$objext)
@@ -7426,8 +7645,8 @@
       *)
 	# Unknown arguments in both finalize_command and compile_command need
 	# to be aesthetically quoted because they are evaled later.
-	func_quote_for_eval "$arg"
-	arg=$func_quote_for_eval_result
+	func_quote_arg pretty "$arg"
+	arg=$func_quote_arg_result
 	;;
       esac # arg
 
@@ -9933,8 +10152,8 @@
 	    for cmd in $concat_cmds; do
 	      IFS=$save_ifs
 	      $opt_quiet || {
-		  func_quote_for_expand "$cmd"
-		  eval "func_echo $func_quote_for_expand_result"
+		  func_quote_arg expand,pretty "$cmd"
+		  eval "func_echo $func_quote_arg_result"
 	      }
 	      $opt_dry_run || eval "$cmd" || {
 		lt_exit=$?
@@ -10027,8 +10246,8 @@
 	  eval cmd=\"$cmd\"
 	  IFS=$save_ifs
 	  $opt_quiet || {
-	    func_quote_for_expand "$cmd"
-	    eval "func_echo $func_quote_for_expand_result"
+	    func_quote_arg expand,pretty "$cmd"
+	    eval "func_echo $func_quote_arg_result"
 	  }
 	  $opt_dry_run || eval "$cmd" || {
 	    lt_exit=$?
@@ -10502,12 +10721,13 @@
 	  elif eval var_value=\$$var; test -z "$var_value"; then
 	    relink_command="$var=; export $var; $relink_command"
 	  else
-	    func_quote_for_eval "$var_value"
-	    relink_command="$var=$func_quote_for_eval_result; export $var; $relink_command"
+	    func_quote_arg pretty "$var_value"
+	    relink_command="$var=$func_quote_arg_result; export $var; $relink_command"
 	  fi
 	done
-	relink_command="(cd `pwd`; $relink_command)"
-	relink_command=`$ECHO "$relink_command" | $SED "$sed_quote_subst"`
+	func_quote eval cd "`pwd`"
+	func_quote_arg pretty,unquoted "($func_quote_result; $relink_command)"
+	relink_command=$func_quote_arg_unquoted_result
       fi
 
       # Only actually do things if not in dry run mode.
@@ -10747,13 +10967,15 @@
 	elif eval var_value=\$$var; test -z "$var_value"; then
 	  relink_command="$var=; export $var; $relink_command"
 	else
-	  func_quote_for_eval "$var_value"
-	  relink_command="$var=$func_quote_for_eval_result; export $var; $relink_command"
+	  func_quote_arg pretty,unquoted "$var_value"
+	  relink_command="$var=$func_quote_arg_unquoted_result; export $var; $relink_command"
 	fi
       done
       # Quote the link command for shipping.
-      relink_command="(cd `pwd`; $SHELL \"$progpath\" $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)"
-      relink_command=`$ECHO "$relink_command" | $SED "$sed_quote_subst"`
+      func_quote eval cd "`pwd`"
+      relink_command="($func_quote_result; $SHELL \"$progpath\" $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)"
+      func_quote_arg pretty,unquoted "$relink_command"
+      relink_command=$func_quote_arg_unquoted_result
       if test yes = "$hardcode_automatic"; then
 	relink_command=
       fi
diff -uNrwB xz-5.2.2/build-aux/missing xz-5.2.4/build-aux/missing
--- xz-5.2.2/build-aux/missing	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/build-aux/missing	2018-04-29 22:01:26.000000000 +0600
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Common wrapper for a few potentially missing GNU programs.
 
-scriptversion=2013-10-28.13; # UTC
+scriptversion=2016-01-11.22; # UTC
 
-# Copyright (C) 1996-2014 Free Software Foundation, Inc.
+# Copyright (C) 1996-2017 Free Software Foundation, Inc.
 # Originally written by Fran,cois Pinard <pinard@iro.umontreal.ca>, 1996.
 
 # This program is free software; you can redistribute it and/or modify
@@ -210,6 +210,6 @@
 # eval: (add-hook 'write-file-hooks 'time-stamp)
 # time-stamp-start: "scriptversion="
 # time-stamp-format: "%:y-%02m-%02d.%02H"
-# time-stamp-time-zone: "UTC"
+# time-stamp-time-zone: "UTC0"
 # time-stamp-end: "; # UTC"
 # End:
diff -uNrwB xz-5.2.2/ChangeLog xz-5.2.4/ChangeLog
--- xz-5.2.2/ChangeLog	2015-09-29 17:05:18.000000000 +0600
+++ xz-5.2.4/ChangeLog	2018-04-29 22:04:56.000000000 +0600
@@ -1,14953 +1,5615 @@
-commit 9815cdf6987ef91a85493bfcfd1ce2aaf3b47a0a
+commit b5be61cc06088bb07f488f9baf7d447ff47b37c1
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-09-29 13:59:35 +0300
+Date:   2018-04-29 19:00:06 +0300
 
-    Bump version and soname for 5.2.2.
+    Bump version and soname for 5.2.4.
 
  src/liblzma/Makefile.am        | 2 +-
  src/liblzma/api/lzma/version.h | 2 +-
  2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit cbe0cec8476bdd0416c7ca9bc83895c9bea1cf78
+commit c47fa6d06745bb2e99866e76b81ac7a9c5a8bfec
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-09-29 13:57:28 +0300
+Date:   2018-04-29 18:48:00 +0300
 
-    Update NEWS for 5.2.2.
+    extra/scanlzma: Fix compiler warnings.
 
- NEWS | 18 ++++++++++++++++++
- 1 file changed, 18 insertions(+)
+ extra/scanlzma/scanlzma.c | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
 
-commit 49427ce7eececdd18bbd35dab23c81910d083e1c
-Author: Andre Noll <maan@tuebingen.mpg.de>
-Date:   2015-05-28 15:50:00 +0200
+commit 7b350fe21aa4fd6495a3b6188a40e3f1ae7c0edf
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2018-04-29 18:15:37 +0300
 
-    Fix typo in German translation.
+    Add NEWS for 5.2.4.
     
-    As pointed out by Robert Pollak, there's a typo in the German
-    translation of the compression preset option (-0 ... -9) help text.
-    "The compressor" translates to "der Komprimierer", and the genitive
-    form is "des Komprimierers". The old word makes no sense at all.
+ NEWS | 27 +++++++++++++++++++++++++++
+ 1 file changed, 27 insertions(+)
 
- po/de.po | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+commit 5801591162a280aa52d156dfde42c531ec7fd8b6
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2018-02-06 19:36:30 +0200
 
-commit 608d6f06c940e7f28c25de005e8b99bdff42d27c
-Author: Hauke Henningsen <sqrt@entless.org>
-Date:   2015-08-17 04:59:54 +0200
+    Update THANKS.
 
-    Update German translation, mostly wrt orthography
+ THANKS | 2 ++
+ 1 file changed, 2 insertions(+)
     
-    Provide an update of the German translation.
-    * A lot of compound words were previously written with spaces, while
-      German orthography is relatively clear in that the components
-      should not be separated.
-    * When referring to the actual process of (de)compression rather than the
-      concept, replace “(De-)Kompression” with “(De-)Komprimierung”.
-      Previously, both forms were used in this context and are now used in a
-      manner consistent with “Komprimierung” being more likely to refer to
-      a process.
-    * Consistently translate “standard input”/“output”
-    * Use “Zeichen” instead of false friend “Charakter” for “character”
-    * Insert commas around relative clauses (as required in German)
-    * Some other minor corrections
-    * Capitalize “ß” as “ẞ”
-    * Consistently start option descriptions in --help with capital letters
+commit c4a616f4536146f8906e1b4412eefeec07b28fae
+Author: Ben Boeckel <mathstuf@gmail.com>
+Date:   2018-01-29 13:58:18 -0500
     
-    Acked-By: Andre Noll <maan@tuebingen.mpg.de>
+    nothrow: use noexcept for C++11 and newer
     
-    * Update after msgmerge
+    In C++11, the `throw()` specifier is deprecated and `noexcept` is
+    preffered instead.
 
- po/de.po | 383 ++++++++++++++++++++++++++++++++-------------------------------
- 1 file changed, 196 insertions(+), 187 deletions(-)
+ src/liblzma/api/lzma.h | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
 
-commit c8988414e5b67b8ef2fe0ba7b1ccdd0ec73c60d3
+commit 0b8947782ff3c5ef830a7f85412e44dcf3cdeb77
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-08-11 13:23:04 +0300
+Date:   2018-02-06 18:02:48 +0200
 
-    Build: Minor Cygwin cleanup.
+    liblzma: Remove incorrect #ifdef from range_common.h.
     
-    Some tests used "cygwin*" and some used "cygwin". I changed
-    them all to use "cygwin". Shouldn't affect anything in practice.
+    In most cases it was harmless but it could affect some
+    custom build systems.
 
- configure.ac | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
+    Thanks to Pippijn van Steenhoven.
 
-commit 85a6dfed53477906bfe9a7c0123dd412e391cb48
+ src/liblzma/rangecoder/range_common.h | 4 +---
+ 1 file changed, 1 insertion(+), 3 deletions(-)
+
+commit 48f3b9f73ffea7f55d5678997aba0e79d2e82168
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-08-11 13:21:52 +0300
+Date:   2018-01-10 22:10:39 +0200
 
-    Build: Support building of MSYS2 binaries.
+    Update THANKS.
 
- configure.ac | 16 +++++++++++-----
- 1 file changed, 11 insertions(+), 5 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 77f270be8432df2e4516a0c48814b6976d6618c5
+commit a3ce3e902342be37c626a561ce3d9ffcf27d0f94
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-08-09 21:06:26 +0300
-
-    Windows: Define DLL_EXPORT when building liblzma.dll with MSVC.
+Date:   2018-01-10 21:54:27 +0200
     
-    src/liblzma/common/common.h uses it to set __declspec(dllexport)
-    for the API symbols.
+    tuklib_integer: New Intel C compiler needs immintrin.h.
     
-    Thanks to Adam Walling.
+    Thanks to Melanie Blower (Intel) for the patch.
 
- windows/liblzma_dll.vcxproj | 12 ++++++------
- 1 file changed, 6 insertions(+), 6 deletions(-)
+ src/common/tuklib_integer.h | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
 
-commit 8c975446c5903090a5a8493b5b96b71003056a88
+commit 4505ca483985f88c6923c05a43b4327feaab83b1
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-08-09 21:02:20 +0300
+Date:   2017-09-24 20:04:24 +0300
 
-    Windows: Omit unneeded header files from MSVC project files.
+    Update THANKS.
 
- windows/liblzma.vcxproj     | 5 -----
- windows/liblzma_dll.vcxproj | 5 -----
- 2 files changed, 10 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 119a00434954726ca58e4a578e6469f530fca30e
+commit 1ef3cc226e3ce173575c218238b71a4eecabc470
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-07-12 20:48:19 +0300
+Date:   2017-09-16 20:36:20 +0300
 
-    liblzma: A MSVC-specific hack isn't needed with MSVC 2013 and newer.
+    Windows: Fix paths in VS project files.
 
- src/liblzma/api/lzma.h | 18 +++++++++++++-----
- 1 file changed, 13 insertions(+), 5 deletions(-)
+    Some paths use slashes instead of backslashes as directory
+    separators... now it should work (I tested VS2013 version).
 
-commit d4e7c557fcab353539c9481a8d95cb04bcb15c7c
+ windows/vs2013/liblzma.vcxproj     | 12 ++++++------
+ windows/vs2013/liblzma_dll.vcxproj | 24 ++++++++++++------------
+ windows/vs2017/liblzma.vcxproj     | 12 ++++++------
+ windows/vs2017/liblzma_dll.vcxproj | 24 ++++++++++++------------
+ 4 files changed, 36 insertions(+), 36 deletions(-)
+
+commit e775d2a8189d24f60470e6e49d8af881df3a1680
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-06-19 20:38:55 +0300
+Date:   2017-09-16 12:54:23 +0300
 
-    Update THANKS.
+    Windows: Add project files for VS2017.
 
- THANKS | 2 ++
- 1 file changed, 2 insertions(+)
+    These files match the v5.2 branch (no file info decoder).
 
-commit 98001740ca56c894a7bd32eb47e9857a8a7d878d
+ windows/vs2017/config.h            | 148 ++++++++++++++
+ windows/vs2017/liblzma.vcxproj     | 355 ++++++++++++++++++++++++++++++++++
+ windows/vs2017/liblzma_dll.vcxproj | 384 +++++++++++++++++++++++++++++++++++++
+ windows/vs2017/xz_win.sln          |  48 +++++
+ 4 files changed, 935 insertions(+)
+
+commit 10e02e0fbb6e2173f8b41f6e39b7b570f47dd74d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-06-19 20:21:30 +0300
+Date:   2017-09-16 12:39:43 +0300
 
-    Windows: Update the docs.
+    Windows: Move VS2013 files into windows/vs2013 directory.
 
- INSTALL                     |  29 ++++++----
- windows/INSTALL-MSVC.txt    |  47 +++++++++++++++
- windows/INSTALL-MinGW.txt   | 138 ++++++++++++++++++++++++++++++++++++++++++++
- windows/INSTALL-Windows.txt | 138 --------------------------------------------
- 4 files changed, 204 insertions(+), 148 deletions(-)
+ windows/{ => vs2013}/config.h            |   0
+ windows/{ => vs2013}/liblzma.vcxproj     | 278 +++++++++++++++---------------
+ windows/{ => vs2013}/liblzma_dll.vcxproj | 280 +++++++++++++++----------------
+ windows/{ => vs2013}/xz_win.sln          |   0
+ 4 files changed, 279 insertions(+), 279 deletions(-)
 
-commit 28195e4c877007cc760ecea1d17f740693d66873
+commit 06eebd4543196ded36fa9b8b9544195b38b24ef2
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-06-19 17:25:31 +0300
+Date:   2017-08-14 20:08:33 +0300
 
-    Windows: Add MSVC project files for building liblzma.
+    Fix or hide warnings from GCC 7's -Wimplicit-fallthrough.
     
-    Thanks to Adam Walling for creating these files.
+ src/liblzma/lzma/lzma_decoder.c | 6 ++++++
+ src/xz/list.c                   | 2 ++
+ 2 files changed, 8 insertions(+)
 
- windows/liblzma.vcxproj     | 359 ++++++++++++++++++++++++++++++++++++++++
- windows/liblzma_dll.vcxproj | 388 ++++++++++++++++++++++++++++++++++++++++++++
- windows/xz_win.sln          |  48 ++++++
- 3 files changed, 795 insertions(+)
+commit ea4ea1dffafebaa8b2770bf3eca46900e4dd22dc
+Author: Alexey Tourbin <alexey.tourbin@gmail.com>
+Date:   2017-05-16 23:56:35 +0300
 
-commit 960440f3230dc628f6966d9f7614fc1b28baf44e
+    Docs: Fix a typo in a comment in doc/examples/02_decompress.c.
+
+ doc/examples/02_decompress.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+commit eb2ef4c79bf405ea0d215f3b1df3d0eaf5e1d27b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-05-13 20:57:55 +0300
+Date:   2017-05-23 18:34:43 +0300
 
-    Tests: Fix a memory leak in test_bcj_exact_size.
+    xz: Fix "xz --list --robot missing_or_bad_file.xz".
     
-    Thanks to Cristian Rodríguez.
+    It ended up printing an uninitialized char-array when trying to
+    print the check names (column 7) on the "totals" line.
 
- tests/test_bcj_exact_size.c | 1 +
- 1 file changed, 1 insertion(+)
+    This also changes the column 12 (minimum xz version) to
+    50000002 (xz 5.0.0) instead of 0 when there are no valid
+    input files.
 
-commit 68cd35acafbdcdf4e8ea8b5bb843c736939d6f8b
+    Thanks to kidmin for the bug report.
+
+ src/xz/list.c | 8 ++++++--
+ 1 file changed, 6 insertions(+), 2 deletions(-)
+
+commit 3ea5dbd9b0d79048e336e40cef3b6d814fb74e13
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-05-12 18:08:24 +0300
+Date:   2017-04-24 19:48:47 +0300
 
-    Fix NEWS about threading in 5.2.0.
+    Build: Omit pre-5.0.0 entries from the generated ChangeLog.
     
-    Thanks to Andy Hochhaus.
+    It makes ChangeLog significantly smaller.
 
- NEWS | 3 ++-
+ Makefile.am | 3 ++-
  1 file changed, 2 insertions(+), 1 deletion(-)
 
-commit ff96ed6d25786728356017a13baf8c14731b4f1e
+commit bae24675936df99064de1502593c006bd902594b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-05-11 21:26:16 +0300
+Date:   2017-04-24 19:30:22 +0300
 
-    xz: Document that threaded decompression hasn't been implemented yet.
+    Update the Git repository URL to HTTPS in ChangeLog.
 
- src/xz/xz.1 | 10 +++++++++-
- 1 file changed, 9 insertions(+), 1 deletion(-)
+ ChangeLog | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 00d37b64a64ea8597fd2422d5187afd761ab9531
+commit 70f479211973b5361f4d7cb08ba5be69b4266e7a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-04-20 20:20:29 +0300
+Date:   2017-04-19 22:17:35 +0300
 
-    Update THANKS.
+    Update the home page URLs to HTTPS.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+ COPYING                     | 2 +-
+ README                      | 2 +-
+ configure.ac                | 2 +-
+ doc/faq.txt                 | 4 ++--
+ dos/config.h                | 2 +-
+ src/common/common_w32res.rc | 2 +-
+ src/xz/xz.1                 | 6 +++---
+ src/xzdec/xzdec.1           | 4 ++--
+ windows/README-Windows.txt  | 2 +-
+ windows/config.h            | 2 +-
+ 10 files changed, 14 insertions(+), 14 deletions(-)
 
-commit db190a832c49ca3aed6d69cc992fa5583cae7b11
+commit 2a4b2fa75d06a097261a02ecd3cf2b6d449bf754
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-04-20 19:59:18 +0300
-
-    Revert "xz: Use pipe2() if available."
+Date:   2017-03-30 22:01:54 +0300
     
-    This reverts commit 7a11c4a8e5e15f13d5fa59233b3172e65428efdd.
-    It is a problem when libc has pipe2() but the kernel is too
-    old to have pipe2() and thus pipe2() fails. In xz it's pointless
-    to have a fallback for non-functioning pipe2(); it's better to
-    avoid pipe2() completely.
+    xz: Use POSIX_FADV_RANDOM for in "xz --list" mode.
     
-    Thanks to Michael Fox for the bug report.
+    xz --list is random access so POSIX_FADV_SEQUENTIAL was clearly
+    wrong.
 
- configure.ac     | 4 ++--
- src/xz/file_io.c | 9 +--------
- 2 files changed, 3 insertions(+), 10 deletions(-)
+ src/xz/file_io.c | 10 ++++++++--
+ 1 file changed, 8 insertions(+), 2 deletions(-)
 
-commit eccd8155e107c5ada03d13e7730675cdf1a44ddc
+commit eb25743ade39170cffd9566a1aae272098cce216
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-03-29 22:14:47 +0300
+Date:   2017-03-30 19:47:45 +0300
 
-    Update THANKS.
+    liblzma: Fix lzma_memlimit_set(strm, 0).
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+    The 0 got treated specially in a buggy way and as a result
+    the function did nothing. The API doc said that 0 was supposed
+    to return LZMA_PROG_ERROR but it didn't.
 
-commit 25263fd9e7a8a913395cb93d7c104cd48c2b4a00
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-03-29 22:13:48 +0300
+    Now 0 is treated as if 1 had been specified. This is done because
+    0 is already used to indicate an error from lzma_memlimit_get()
+    and lzma_memusage().
 
-    Fix the detection of installed RAM on QNX.
+    In addition, lzma_memlimit_set() no longer checks that the new
+    limit is at least LZMA_MEMUSAGE_BASE. It's counter-productive
+    for the Index decoder and was actually needed only by the
+    auto decoder. Auto decoder has now been modified to check for
+    LZMA_MEMUSAGE_BASE.
     
-    The earlier version compiled but didn't actually work
-    since sysconf(_SC_PHYS_PAGES) always fails (or so I was told).
+ src/liblzma/api/lzma/base.h       | 7 ++++++-
+ src/liblzma/common/auto_decoder.c | 3 +++
+ src/liblzma/common/common.c       | 6 ++++--
+ 3 files changed, 13 insertions(+), 3 deletions(-)
     
-    Thanks to Ole André Vadla Ravnås for the patch and testing.
+commit ef36c6362f3f3853f21b8a6359bcd06576ebf207
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2017-03-30 19:16:55 +0300
 
- m4/tuklib_physmem.m4        |  6 +++---
- src/common/tuklib_physmem.c | 14 +++++++++++++-
- 2 files changed, 16 insertions(+), 4 deletions(-)
+    liblzma: Similar memlimit fix for stream_, alone_, and auto_decoder.
 
-commit 4c544d2410903d38402221cb783ed85585b6a007
+ src/liblzma/api/lzma/container.h    | 21 +++++++++++++++++----
+ src/liblzma/common/alone_decoder.c  |  5 +----
+ src/liblzma/common/auto_decoder.c   |  5 +----
+ src/liblzma/common/stream_decoder.c |  5 +----
+ 4 files changed, 20 insertions(+), 16 deletions(-)
+
+commit 57616032650f03840480b696d7878acdd2065521
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-03-27 22:39:07 +0200
+Date:   2017-03-30 18:58:18 +0300
 
-    Fix CPU core count detection on QNX.
+    liblzma: Fix handling of memlimit == 0 in lzma_index_decoder().
     
-    It tried to use sysctl() on QNX but
-      - it broke the build because sysctl() needs -lsocket on QNX;
-      - sysctl() doesn't work for detecting the core count on QNX
-        even if it compiled.
+    It returned LZMA_PROG_ERROR, which was done to avoid zero as
+    the limit (because it's a special value elsewhere), but using
+    LZMA_PROG_ERROR is simply inconvenient and can cause bugs.
     
-    sysconf() works. An alternative would have been to use
-    QNX-specific SYSPAGE_ENTRY(num_cpu) from <sys/syspage.h>.
+    The fix/workaround is to treat 0 as if it were 1 byte. It's
+    effectively the same thing. The only weird consequence is
+    that then lzma_memlimit_get() will return 1 even when 0 was
+    specified as the limit.
     
-    Thanks to Ole André Vadla Ravnås.
+    This fixes a very rare corner case in xz --list where a specific
+    memory usage limit and a multi-stream file could print the
+    error message "Internal error (bug)" instead of saying that
+    the memory usage limit is too low.
 
- m4/tuklib_cpucores.m4 | 15 +++++++++++----
- 1 file changed, 11 insertions(+), 4 deletions(-)
+ src/liblzma/api/lzma/index.h       | 18 +++++++++++-------
+ src/liblzma/common/index_decoder.c |  4 ++--
+ 2 files changed, 13 insertions(+), 9 deletions(-)
 
-commit e0ea6737b03e83ccaff4514d00e31bb926f8f0f3
+commit 3d566cd519017eee1a400e7961ff14058dfaf33c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-03-07 22:05:57 +0200
+Date:   2016-12-30 13:26:36 +0200
 
-    xz: size_t/uint32_t cleanup in options.c.
+    Bump version and soname for 5.2.3.
 
- src/xz/options.c | 12 ++++++------
- 1 file changed, 6 insertions(+), 6 deletions(-)
+ src/liblzma/Makefile.am        | 2 +-
+ src/liblzma/api/lzma/version.h | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit 8bcca29a65335fd679c13814b70b35b68fa5daed
+commit 053e624fe33795e779ff736f16ce44a129c829b5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-03-07 22:04:23 +0200
+Date:   2016-12-30 13:25:10 +0200
 
-    xz: Fix a comment and silence a warning in message.c.
+    Update NEWS for 5.2.3.
 
- src/xz/message.c | 5 +++--
- 1 file changed, 3 insertions(+), 2 deletions(-)
+ NEWS | 39 +++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 39 insertions(+)
 
-commit f243f5f44c6b19a7c289a0ec73a03ee08364cb5b
+commit cae412b2b77d7fd88d187ed7659331709311f80d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-03-07 22:01:00 +0200
+Date:   2015-04-01 14:45:25 +0300
 
-    liblzma: Silence more uint32_t vs. size_t warnings.
+    xz: Fix the Capsicum rights on user_abort_pipe.
 
- src/liblzma/lz/lz_encoder.c     | 2 +-
- src/liblzma/lzma/lzma_encoder.c | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+ src/xz/file_io.c | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
 
-commit 7f0a4c50f4a374c40acf4b86848f301ad1e82d34
+commit 9ccbae41000572193b9a09e7102f9e84dc6d96de
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-03-07 19:54:00 +0200
-
-    xz: Make arg_count an unsigned int to silence a warning.
+Date:   2016-12-28 21:05:22 +0200
     
-    Actually the value of arg_count cannot exceed INT_MAX
-    but it's nicer as an unsigned int.
+    Mention potential sandboxing bugs in INSTALL.
 
- src/xz/args.h | 2 +-
- src/xz/main.c | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+ INSTALL | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
 
-commit f6ec46801588b1be29c07c9db98558b521304002
+commit e013a337d3de77cce24360dffe956ea2339489b6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-03-07 19:33:17 +0200
+Date:   2016-11-21 20:24:50 +0200
 
-    liblzma: Fix a warning in index.c.
+    liblzma: Avoid multiple definitions of lzma_coder structures.
 
- src/liblzma/common/index.c | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
+    Only one definition was visible in a translation unit.
+    It avoided a few casts and temp variables but seems that
+    this hack doesn't work with link-time optimizations in compilers
+    as it's not C99/C11 compliant.
+    
+    Fixes:
+    http://www.mail-archive.com/xz-devel@tukaani.org/msg00279.html
+
+ src/liblzma/common/alone_decoder.c             |  44 +++++----
+ src/liblzma/common/alone_encoder.c             |  34 ++++---
+ src/liblzma/common/auto_decoder.c              |  35 ++++---
+ src/liblzma/common/block_decoder.c             |  41 ++++----
+ src/liblzma/common/block_encoder.c             |  40 ++++----
+ src/liblzma/common/common.h                    |  18 ++--
+ src/liblzma/common/index_decoder.c             |  33 ++++---
+ src/liblzma/common/index_encoder.c             |  16 ++--
+ src/liblzma/common/stream_decoder.c            |  50 +++++-----
+ src/liblzma/common/stream_encoder.c            |  56 ++++++-----
+ src/liblzma/common/stream_encoder_mt.c         | 124 ++++++++++++++-----------
+ src/liblzma/delta/delta_common.c               |  25 ++---
+ src/liblzma/delta/delta_decoder.c              |   6 +-
+ src/liblzma/delta/delta_encoder.c              |  12 ++-
+ src/liblzma/delta/delta_private.h              |   4 +-
+ src/liblzma/lz/lz_decoder.c                    |  60 ++++++------
+ src/liblzma/lz/lz_decoder.h                    |  13 ++-
+ src/liblzma/lz/lz_encoder.c                    |  57 +++++++-----
+ src/liblzma/lz/lz_encoder.h                    |   9 +-
+ src/liblzma/lzma/lzma2_decoder.c               |  32 ++++---
+ src/liblzma/lzma/lzma2_encoder.c               |  51 +++++-----
+ src/liblzma/lzma/lzma_decoder.c                |  27 +++---
+ src/liblzma/lzma/lzma_encoder.c                |  29 +++---
+ src/liblzma/lzma/lzma_encoder.h                |   9 +-
+ src/liblzma/lzma/lzma_encoder_optimum_fast.c   |   3 +-
+ src/liblzma/lzma/lzma_encoder_optimum_normal.c |  23 ++---
+ src/liblzma/lzma/lzma_encoder_private.h        |   6 +-
+ src/liblzma/simple/arm.c                       |   2 +-
+ src/liblzma/simple/armthumb.c                  |   2 +-
+ src/liblzma/simple/ia64.c                      |   2 +-
+ src/liblzma/simple/powerpc.c                   |   2 +-
+ src/liblzma/simple/simple_coder.c              |  61 ++++++------
+ src/liblzma/simple/simple_private.h            |  12 +--
+ src/liblzma/simple/sparc.c                     |   2 +-
+ src/liblzma/simple/x86.c                       |  15 +--
+ 35 files changed, 532 insertions(+), 423 deletions(-)
 
-commit a24518971cc621315af142dd3bb7614fab04ad27
+commit 8e0f1af3dcaec00a3879cce8ad7441edc6359d1c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-02-26 20:46:14 +0200
+Date:   2016-12-26 20:50:25 +0200
 
-    Build: Fix a CR+LF problem when running autoreconf -fi on OS/2.
+    Document --enable-sandbox configure option in INSTALL.
 
- build-aux/version.sh | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ INSTALL | 25 +++++++++++++++++++++++++
+ 1 file changed, 25 insertions(+)
 
-commit dec11497a71518423b5ff0e759100cf8aadf6c7b
+commit ce2542d220de06acd618fd9f5c0a6683029fb4eb
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-02-26 16:53:44 +0200
+Date:   2015-03-31 22:19:34 +0300
 
-    Bump version and soname for 5.2.1.
+    xz: Add support for sandboxing with Capsicum (disabled by default).
 
- src/liblzma/Makefile.am        | 2 +-
- src/liblzma/api/lzma/version.h | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+    In the v5.2 branch this feature is considered experimental
+    and thus disabled by default.
 
-commit 29e39c79975ab89ee5dd671e97064534a9f3a649
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-02-26 13:01:09 +0200
+    The sandboxing is used conditionally as described in main.c.
+    This isn't optimal but it was much easier to implement than
+    a full sandboxing solution and it still covers the most common
+    use cases where xz is writing to standard output. This should
+    have practically no effect on performance even with small files
+    as fork() isn't needed.
 
-    Update NEWS for 5.2.1.
+    C and locale libraries can open files as needed. This has been
+    fine in the past, but it's a problem with things like Capsicum.
+    io_sandbox_enter() tries to ensure that various locale-related
+    files have been loaded before cap_enter() is called, but it's
+    possible that there are other similar problems which haven't
+    been seen yet.
 
- NEWS | 14 ++++++++++++++
- 1 file changed, 14 insertions(+)
+    Currently Capsicum is available on FreeBSD 10 and later
+    and there is a port to Linux too.
 
-commit 7a11c4a8e5e15f13d5fa59233b3172e65428efdd
+    Thanks to Loganaden Velvindron for help.
+
+ configure.ac       | 41 +++++++++++++++++++++++++++
+ src/xz/Makefile.am |  2 +-
+ src/xz/file_io.c   | 81 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ src/xz/file_io.h   |  6 ++++
+ src/xz/main.c      | 18 ++++++++++++
+ src/xz/private.h   |  4 +++
+ 6 files changed, 151 insertions(+), 1 deletion(-)
+
+commit 3ca1d5e6320111043e19434da881065fadafa0e4
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-02-22 19:38:48 +0200
+Date:   2015-03-31 21:12:30 +0300
 
-    xz: Use pipe2() if available.
+    Fix bugs and otherwise improve ax_check_capsicum.m4.
 
- configure.ac     | 4 ++--
- src/xz/file_io.c | 9 ++++++++-
- 2 files changed, 10 insertions(+), 3 deletions(-)
+    AU_ALIAS was removed because the new version is incompatible
+    with the old version.
 
-commit 117d962685c72682c63edc9bb765367189800202
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-02-21 23:40:26 +0200
+    It no longer checks for <sys/capability.h> separately.
+    It's enough to test for it as part of AC_CHECK_DECL.
+    The defines HAVE_CAPSICUM_SYS_CAPSICUM_H and
+    HAVE_CAPSICUM_SYS_CAPABILITY_H were removed as unneeded.
+    HAVE_SYS_CAPSICUM_H from AC_CHECK_HEADERS is enough.
 
-    liblzma: Fix a compression-ratio regression in LZMA1/2 in fast mode.
+    It no longer does a useless search for the Capsicum library
+    if the header wasn't found.
     
-    The bug was added in the commit
-    f48fce093b07aeda95c18850f5e086d9f2383380 and thus
-    affected 5.1.4beta and 5.2.0. Luckily the bug cannot
-    cause data corruption or other nasty things.
+    Fixed a bug in ACTION-IF-FOUND (the first argument). Specifying
+    the argument omitted the default action but the given action
+    wasn't used instead.
 
- src/liblzma/lzma/lzma_encoder_optimum_fast.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    AC_DEFINE([HAVE_CAPSICUM]) is now always called when Capsicum
+    support is found. Previously it was part of the default
+    ACTION-IF-FOUND which a custom action would override. Now
+    the default action only prepends ${CAPSICUM_LIB} to LIBS.
 
-commit ae984e31c167d3bc52972ec422dd1ebd5f5d5719
+    The documentation was updated.
+    
+    Since there as no serial number, "#serial 2" was added.
+
+ m4/ax_check_capsicum.m4 | 103 ++++++++++++++++++++++++------------------------
+ 1 file changed, 51 insertions(+), 52 deletions(-)
+
+commit 5f3a742b64197fe8bedb6f05fc6ce5d177d11145
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-02-21 23:00:19 +0200
+Date:   2015-03-31 19:20:24 +0300
 
-    xz: Fix the fcntl() usage when creating a pipe for the self-pipe trick.
+    Add m4/ax_check_capsicum.m4 for detecting Capsicum support.
     
-    Now it reads the old flags instead of blindly setting O_NONBLOCK.
-    The old code may have worked correctly, but this is better.
+    The file was loaded from this web page:
+    https://github.com/google/capsicum-test/blob/dev/autoconf/m4/ax_check_capsicum.m4
 
- src/xz/file_io.c | 16 +++++++++++-----
- 1 file changed, 11 insertions(+), 5 deletions(-)
+    Thanks to Loganaden Velvindron for pointing it out for me.
 
-commit 2205bb5853098aea36a56df6f5747037175f66b4
+ m4/ax_check_capsicum.m4 | 86 +++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 86 insertions(+)
+
+commit d74377e62b4c649e40294dd441de72c0f092e67c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-02-10 15:29:34 +0200
+Date:   2015-10-12 20:29:09 +0300
+
+    liblzma: Fix a memory leak in error path of lzma_index_dup().
+    
+    lzma_index_dup() calls index_dup_stream() which, in case of
+    an error, calls index_stream_end() to free memory allocated
+    by index_stream_init(). However, it illogically didn't
+    actually free the memory. To make it logical, the tree
+    handling code was modified a bit in addition to changing
+    index_stream_end().
+    
+    Thanks to Evan Nemerson for the bug report.
+
+ src/liblzma/common/index.c | 18 +++++++++---------
+ 1 file changed, 9 insertions(+), 9 deletions(-)
+
+commit f580732216dcf971f3f006fe8e01cd4979e1d964
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2016-10-24 18:53:25 +0300
 
     Update THANKS.
 
  THANKS | 1 +
  1 file changed, 1 insertion(+)
 
-commit d935b0cdf3db440269b9d952b2b281b18f8c7b08
+commit 88d7a7fd153bf1355cdf798ffdac7443d0169afc
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-02-10 15:28:30 +0200
+Date:   2016-10-24 18:51:36 +0300
 
-    tuklib_cpucores: Use cpuset_getaffinity() on FreeBSD if available.
+    tuklib_cpucores: Add support for sched_getaffinity().
     
-    In FreeBSD, cpuset_getaffinity() is the preferred way to get
-    the number of available cores.
+    It's available in glibc (GNU/Linux, GNU/kFreeBSD). It's better
+    than sysconf(_SC_NPROCESSORS_ONLN) because sched_getaffinity()
+    gives the number of cores available to the process instead of
+    the total number of cores online.
     
-    Thanks to Rui Paulo for the patch. I edited it slightly, but
-    hopefully I didn't break anything.
+    As a side effect, this commit fixes a bug on GNU/kFreeBSD where
+    configure would detect the FreeBSD-specific cpuset_getaffinity()
+    but it wouldn't actually work because on GNU/kFreeBSD it requires
+    using -lfreebsd-glue when linking. Now the glibc-specific function
+    will be used instead.
 
- m4/tuklib_cpucores.m4        | 23 ++++++++++++++++++++++-
- src/common/tuklib_cpucores.c | 18 ++++++++++++++++++
- 2 files changed, 40 insertions(+), 1 deletion(-)
+    Thanks to Sebastian Andrzej Siewior for the original patch
+    and testing.
 
-commit eb61bc58c20769cac4d05f363b9c0e8c9c71a560
+ m4/tuklib_cpucores.m4        | 30 +++++++++++++++++++++++++++++-
+ src/common/tuklib_cpucores.c |  9 +++++++++
+ 2 files changed, 38 insertions(+), 1 deletion(-)
+
+commit 51baf684376903dbeddd840582bfdf9fa91b311b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-02-09 22:08:37 +0200
+Date:   2016-06-30 20:27:36 +0300
 
-    xzdiff: Make the mktemp usage compatible with FreeBSD's mktemp.
+    xz: Fix copying of timestamps on Windows.
     
-    Thanks to Rui Paulo for the fix.
+    xz used to call utime() on Windows, but its result gets lost
+    on close(). Using _futime() seems to work.
 
- src/scripts/xzdiff.in | 7 ++++++-
- 1 file changed, 6 insertions(+), 1 deletion(-)
+    Thanks to Martok for reporting the bug:
+    http://www.mail-archive.com/xz-devel@tukaani.org/msg00261.html
 
-commit b9a5b6b7a29029680af733082b6a46e0fc01623a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-02-03 21:45:53 +0200
+ configure.ac     |  2 +-
+ src/xz/file_io.c | 18 ++++++++++++++++++
+ 2 files changed, 19 insertions(+), 1 deletion(-)
 
-    Add a few casts to tuklib_integer.h to silence possible warnings.
+commit 1ddc479851139d6e8202e5835421bfe6578d9e07
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2016-06-16 22:46:02 +0300
     
-    I heard that Visual Studio 2013 gave warnings without the casts.
+    xz: Silence warnings from -Wlogical-op.
     
-    Thanks to Gabi Davar.
+    Thanks to Evan Nemerson.
 
- src/common/tuklib_integer.h | 24 ++++++++++++------------
- 1 file changed, 12 insertions(+), 12 deletions(-)
+ src/xz/file_io.c | 12 ++++++++++--
+ 1 file changed, 10 insertions(+), 2 deletions(-)
 
-commit c45757135f40e4a0de730ba5fff0100219493982
+commit be647ff5ed5a1c244a65722af6ce250259f3b14a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-01-26 21:24:39 +0200
+Date:   2016-04-10 20:55:49 +0300
 
-    liblzma: Set LZMA_MEMCMPLEN_EXTRA depending on the compare method.
+    Build: Fix = to += for xz_SOURCES in src/xz/Makefile.am.
 
- src/liblzma/common/memcmplen.h | 15 ++++++++++-----
- 1 file changed, 10 insertions(+), 5 deletions(-)
+    Thanks to Christian Kujau.
 
-commit 3c500174ed5485f550972a2a6109c361e875f069
+ src/xz/Makefile.am | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+commit fb6d50c15343831f35305982cefa82053099191d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-01-26 20:40:16 +0200
+Date:   2016-04-10 20:54:17 +0300
 
-    Update THANKS.
+    Build: Bump GNU Gettext version requirement to 0.19.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+    It silences a few warnings and most people probably have
+    0.19 even on stable distributions.
 
-commit fec88d41e672d9e197c9442aecf02bd0dfa6d516
+    Thanks to Christian Kujau.
+
+ configure.ac | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+commit 74f8dad9f912a2993768d93d108ea2b0b2c196e0
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-01-26 20:39:28 +0200
+Date:   2016-03-13 20:21:49 +0200
 
-    liblzma: Silence harmless Valgrind errors.
+    liblzma: Disable external SHA-256 by default.
     
-    Thanks to Torsten Rupp for reporting this. I had
-    forgotten to run Valgrind before the 5.2.0 release.
+    This is the sane thing to do. The conflict with OpenSSL
+    on some OSes and especially that the OS-provided versions
+    can be significantly slower makes it clear that it was
+    a mistake to have the external SHA-256 support enabled by
+    default.
 
- src/liblzma/lz/lz_encoder.c | 6 ++++++
- 1 file changed, 6 insertions(+)
+    Those who want it can now pass --enable-external-sha256 to
+    configure. INSTALL was updated with notes about OSes where
+    this can be a bad idea.
 
-commit a9b45badfec0928d20a27c7176c005fa637f7d1e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-01-09 21:50:19 +0200
+    The SHA-256 detection code in configure.ac had some bugs that
+    could lead to a build failure in some situations. These were
+    fixed, although it doesn't matter that much now that the
+    external SHA-256 is disabled by default.
 
-    xz: Fix comments.
+    MINIX >= 3.2.0 uses NetBSD's libc and thus has SHA256_Init
+    in libc instead of libutil. Support for the libutil version
+    was removed.
 
- src/xz/file_io.c | 12 ++++++++----
- 1 file changed, 8 insertions(+), 4 deletions(-)
+ INSTALL                   | 36 ++++++++++++++++++++++
+ configure.ac              | 76 +++++++++++++++++++++++------------------------
+ src/liblzma/check/check.h | 16 ++++------
+ 3 files changed, 79 insertions(+), 49 deletions(-)
 
-commit 541aee6dd4aa97a809aba281475a21b641bb89e2
+commit ea7f6ff04cb5bb1498088eb09960a4c3f13dfe39
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-01-09 21:35:06 +0200
+Date:   2016-03-10 20:27:05 +0200
 
     Update THANKS.
 
  THANKS | 1 +
  1 file changed, 1 insertion(+)
 
-commit 4170edc914655310d2363baccf5e615e09b04911
+commit d0e018016b311232e82d9a98dc68f1e3dabce794
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-01-09 21:34:06 +0200
-
-    xz: Don't fail if stdout doesn't support O_NONBLOCK.
+Date:   2016-03-10 20:26:49 +0200
     
-    This is similar to the case with stdin.
+    Build: Avoid SHA256_Init on FreeBSD and MINIX 3.
     
-    Thanks to Brad Smith for the bug report and testing
-    on OpenBSD.
+    On FreeBSD 10 and older, SHA256_Init from libmd conflicts
+    with libcrypto from OpenSSL. The OpenSSL version has
+    different sizeof(SHA256_CTX) and it can cause weird
+    problems if wrong SHA256_Init gets used.
 
- src/xz/file_io.c | 36 +++++++++++++++---------------------
- 1 file changed, 15 insertions(+), 21 deletions(-)
+    Looking at the source, MINIX 3 seems to have a similar issue but
+    I'm not sure. To be safe, I disabled SHA256_Init on MINIX 3 too.
 
-commit 04bbc0c2843c50c8ad1cba42b937118e38b0508d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-01-07 19:18:20 +0200
+    NetBSD has SHA256_Init in libc and they had a similar problem,
+    but they already fixed it in 2009.
 
-    xz: Fix a memory leak in DOS-specific code.
+    Thanks to Jim Wilcoxson for the bug report that helped
+    in finding the problem.
 
- src/xz/file_io.c | 2 ++
- 1 file changed, 2 insertions(+)
+ configure.ac | 27 +++++++++++++++++++++------
+ 1 file changed, 21 insertions(+), 6 deletions(-)
 
-commit f0f1f6c7235ffa901cf76fe18e33749e200b3eea
+commit 5daae123915f32a4ed6dc948b831533c2d1beec3
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-01-07 19:08:06 +0200
+Date:   2015-11-08 20:16:10 +0200
 
-    xz: Don't fail if stdin doesn't support O_NONBLOCK.
+    tuklib_physmem: Hopefully silence a warning on Windows.
     
-    It's a problem at least on OpenBSD which doesn't support
-    O_NONBLOCK on e.g. /dev/null. I'm not surprised if it's
-    a problem on other OSes too since this behavior is allowed
-    in POSIX-1.2008.
+ src/common/tuklib_physmem.c | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
     
-    The code relying on this behavior was committed in June 2013
-    and included in 5.1.3alpha released on 2013-10-26. Clearly
-    the development releases only get limited testing.
+commit 491acc406e098167ccb7fce0728b94c2f32cff9f
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2015-11-04 23:17:43 +0200
 
- src/xz/file_io.c | 18 +++++++-----------
- 1 file changed, 7 insertions(+), 11 deletions(-)
+    Update THANKS.
 
-commit d2d484647d9d9d679f03c75abb0404f67069271c
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
+
+commit 8173ff8790ad3502d04e1c07d014cb84a3b8187b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2015-01-06 20:30:15 +0200
+Date:   2015-11-04 23:14:00 +0200
 
-    Tests: Don't hide unexpected error messages in test_files.sh.
+    liblzma: Make Valgrind happier with optimized (gcc -O2) liblzma.
     
-    Hiding them makes no sense since normally there's no error
-    when testing the "good" files. With "bad" files errors are
-    expected and then it makes sense to keep the messages hidden.
+    When optimizing, GCC can reorder code so that an uninitialized
+    value gets used in a comparison, which makes Valgrind unhappy.
+    It doesn't happen when compiled with -O0, which I tend to use
+    when running Valgrind.
 
- tests/test_files.sh | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+    Thanks to Rich Prohaska. I remember this being mentioned long
+    ago by someone else but nothing was done back then.
 
-commit aae6a6aeda51cf94a47e39ad624728f9bee75e30
+ src/liblzma/lz/lz_encoder.c | 4 ++++
+ 1 file changed, 4 insertions(+)
+
+commit 013de2b5ab8094d2c82a2771f3d143eeb656eda9
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-30 11:17:16 +0200
+Date:   2015-11-03 20:55:45 +0200
 
-    Update Solaris notes in INSTALL.
+    liblzma: Rename lzma_presets.c back to lzma_encoder_presets.c.
     
-    Mention the possible "make check" failure on Solaris in the
-    Solaris-specific section of INSTALL. It was already in
-    section 4.5 but it is better mention it in the OS-specific
-    section too.
+    It would be too annoying to update other build systems
+    just because of this.
 
- INSTALL | 4 ++++
- 1 file changed, 4 insertions(+)
+ src/liblzma/lzma/Makefile.inc                               | 2 +-
+ src/liblzma/lzma/{lzma_presets.c => lzma_encoder_presets.c} | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit 7815112153178800a3521b9f31960e7cdc26cfba
+commit a322f70ad96de88968c2c36e6a36bc08ae30bd20
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-26 12:00:05 +0200
+Date:   2015-11-03 20:47:07 +0200
 
-    Build: POSIX shell isn't required if scripts are disabled.
+    Build: Disable xzdec, lzmadec, and lzmainfo when they cannot be built.
 
- INSTALL      | 3 ++-
- configure.ac | 2 +-
- 2 files changed, 3 insertions(+), 2 deletions(-)
+    They all need decoder support and if that isn't available,
+    there's no point trying to build them.
 
-commit a0cd05ee71d330b79ead6eb9222e1b24e1559d3a
+ configure.ac | 3 +++
+ 1 file changed, 3 insertions(+)
+
+commit 8ea49606cf6427e32319de7693eca9e43f1c8ad6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 20:48:37 +0200
+Date:   2015-11-03 20:35:19 +0200
 
-    DOS: Update Makefile.
+    Build: Simplify $enable_{encoders,decoders} usage a bit.
 
- dos/Makefile | 1 +
- 1 file changed, 1 insertion(+)
+ configure.ac | 6 ++++--
+ 1 file changed, 4 insertions(+), 2 deletions(-)
 
-commit b85ee0905ec4ab7656d22e63519fdd3bedb21f2e
+commit 42131a25e52bfe400acfa7df93469a96bb78bb78
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 19:50:38 +0200
+Date:   2015-11-03 20:31:31 +0200
 
-    Windows: Fix bin_i486 to bin_i686 in build.bash.
+    Windows/MSVC: Update config.h.
 
- windows/build.bash | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ windows/config.h | 6 ++++++
+ 1 file changed, 6 insertions(+)
 
-commit cbafa710918195dbba3db02c3fab4f0538235206
+commit e9184e87cc989d14c7413e6adb3eca98f6ae0290
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 18:58:44 +0200
+Date:   2015-11-03 20:29:58 +0200
 
-    Docs: Use lzma_cputhreads() in 04_compress_easy_mt.c.
+    DOS: Update config.h.
 
- doc/examples/04_compress_easy_mt.c | 30 ++++++++++++++++++++++++++----
- 1 file changed, 26 insertions(+), 4 deletions(-)
+ dos/config.h | 6 ++++++
+ 1 file changed, 6 insertions(+)
 
-commit 8dbb57238d372c7263cfeb3e7f7fd9a73173156a
+commit 2296778f3c9a1e3a8699973b09dd3610b8baa402
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 18:56:44 +0200
+Date:   2015-11-03 20:29:33 +0200
 
-    Docs: Update docs/examples/00_README.txt.
+    xz: Make xz buildable even when encoders or decoders are disabled.
 
- doc/examples/00_README.txt | 4 ++++
- 1 file changed, 4 insertions(+)
+    The patch is quite long but it's mostly about adding new #ifdefs
+    to omit code when encoders or decoders have been disabled.
 
-commit 6060f7dc76fd6c2a8a1f8e85d0e4d86bb78273e6
+    This adds two new #defines to config.h: HAVE_ENCODERS and
+    HAVE_DECODERS.
+
+ configure.ac       |  4 ++++
+ src/xz/Makefile.am |  8 ++++++--
+ src/xz/args.c      | 16 ++++++++++++++++
+ src/xz/coder.c     | 33 +++++++++++++++++++++++++--------
+ src/xz/main.c      |  9 +++++++--
+ src/xz/private.h   |  5 ++++-
+ 6 files changed, 62 insertions(+), 13 deletions(-)
+
+commit 97a3109281e475d9cf1b5095237d672fa0ad25e5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 18:11:17 +0200
+Date:   2015-11-03 18:06:40 +0200
 
-    Bump version and soname for 5.2.0.
+    Build: Build LZMA1/2 presets also when only decoder is wanted.
     
-    I know that soname != app version, but I skip AGE=1
-    in -version-info to make the soname match the liblzma
-    version anyway. It doesn't hurt anything as long as
-    it doesn't conflict with library versioning rules.
+    People shouldn't rely on the presets when decoding raw streams,
+    but xz uses the presets as the starting point for raw decoder
+    options anyway.
 
- src/liblzma/Makefile.am        | 2 +-
- src/liblzma/api/lzma/version.h | 6 +++---
- src/liblzma/liblzma.map        | 2 +-
- 3 files changed, 5 insertions(+), 5 deletions(-)
+    lzma_encocder_presets.c was renamed to lzma_presets.c to
+    make it clear it's not used solely by the encoder code.
 
-commit 3e8bd1d15e417f2d588e9be50ce027ee3d48b2da
+ src/liblzma/lzma/Makefile.inc                               | 6 +++++-
+ src/liblzma/lzma/{lzma_encoder_presets.c => lzma_presets.c} | 3 ++-
+ 2 files changed, 7 insertions(+), 2 deletions(-)
+
+commit dc6b78d7f0f6fe43e9d4215146e8581feb8090e7
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 18:05:03 +0200
+Date:   2015-11-03 17:54:48 +0200
 
-    Avoid variable-length arrays in the debug programs.
+    Build: Fix configure to handle LZMA1 dependency with LZMA2.
 
- debug/full_flush.c | 3 ++-
- debug/sync_flush.c | 3 ++-
- 2 files changed, 4 insertions(+), 2 deletions(-)
+    Now it gives an error if LZMA1 encoder/decoder is missing
+    when LZMA2 encoder/decoder was requested. Even better would
+    be LZMA2 implicitly enabling LZMA1 but it would need more code.
 
-commit 72f7307cfdceb941aeb2bf30d424cc0d13621786
+ configure.ac | 5 -----
+ 1 file changed, 5 deletions(-)
+
+commit 46d76c9cd3cb26a31f5ae6c3a8bbcf38e6da1add
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 18:01:45 +0200
+Date:   2015-11-03 17:41:54 +0200
 
-    Build: Include 04_compress_easy_mt.c in the tarball.
+    Build: Don't omit lzma_cputhreads() unless using --disable-threads.
 
- Makefile.am | 1 +
- 1 file changed, 1 insertion(+)
+    Previously it was omitted if encoders were disabled
+    with --disable-encoders. It didn't make sense and
+    it also broke the build.
 
-commit 2cb82ff21c62def11f3683a8bb0aaf363102aaa0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 18:00:38 +0200
+ src/liblzma/common/Makefile.inc | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
 
-    Fix build when --disable-threads is used.
+commit 16d68f874d89f1e4a1919786a35bbaef7d71a077
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2015-11-02 18:16:51 +0200
 
- src/common/mythread.h | 2 ++
- 1 file changed, 2 insertions(+)
+    liblzma: Fix a build failure related to external SHA-256 support.
 
-commit 9b9e3536e458ef958f66b0e8982efc9d36de4d17
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-12-21 15:56:15 +0100
+    If an appropriate header and structure were found by configure,
+    but a library with a usable SHA-256 functions wasn't, the build
+    failed.
 
-    po/fr: improve wording for help for --lzma1/--lzma2.
+ src/liblzma/check/check.h | 32 +++++++++++++++++++++++---------
+ 1 file changed, 23 insertions(+), 9 deletions(-)
 
- po/fr.po | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+commit d9311647fc1ab512a3394596221ab8039c00af6b
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2015-11-02 15:19:10 +0200
 
-commit a8b6b569e7fadbf5b5b9139d53bc764015c15027
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-12-21 15:55:48 +0100
+    xz: Always close the file before trying to delete it.
 
-    po/fr: missing line in translation of --extreme.
+    unlink() can return EBUSY in errno for open files on some
+    operating systems and file systems.
 
- po/fr.po | 1 +
- 1 file changed, 1 insertion(+)
+ src/xz/file_io.c | 25 ++++++++++++-------------
+ 1 file changed, 12 insertions(+), 13 deletions(-)
 
-commit f168a6fd1a888cf4f0caaddcafcb21dadc6ab6e9
+commit f59c4183f3c9066626ce45dc3db4642fa603fa21
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 14:32:33 +0200
+Date:   2015-10-12 21:08:42 +0300
 
-    Update NEWS for 5.2.0.
+    Update THANKS.
 
- NEWS | 65 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 65 insertions(+)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit cec2ee863b3a88f4bf039cb00f73c4a4fc93a429
+commit 35f189673e280c12e4c5129f9f97e54eef3bbc04
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 14:32:22 +0200
+Date:   2015-10-12 21:07:41 +0300
 
-    Update NEWS for 5.0.8.
+    Tests: Add tests for the two bugs fixed in index.c.
 
- NEWS | 12 ++++++++++++
- 1 file changed, 12 insertions(+)
+ tests/test_index.c | 30 ++++++++++++++++++++++++++++++
+ 1 file changed, 30 insertions(+)
 
-commit 42e97a32649bf53ce43be2258b902a417c6e7fa1
+commit e10bfdb0fcaff12f3a6dadee51e0a022aadccb51
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-21 14:07:54 +0200
+Date:   2015-10-12 20:45:15 +0300
 
-    xz: Fix a comment.
+    liblzma: Fix lzma_index_dup() for empty Streams.
 
- src/xz/options.c | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+    Stream Flags and Stream Padding weren't copied from
+    empty Streams.
 
-commit 29b95d5d6665cedffa6a9d6d3d914f981e852182
+ src/liblzma/common/index.c | 11 ++++++-----
+ 1 file changed, 6 insertions(+), 5 deletions(-)
+
+commit 06f434bd8980f25ca23232eb7bb7df7e37dc8448
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-20 20:43:14 +0200
+Date:   2015-10-12 20:31:44 +0300
 
-    Update INSTALL about the dependencies of the scripts.
+    liblzma: Add a note to index.c for those using static analyzers.
 
- INSTALL | 15 ++++++++++-----
- 1 file changed, 10 insertions(+), 5 deletions(-)
+ src/liblzma/common/index.c | 3 +++
+ 1 file changed, 3 insertions(+)
 
-commit 3af91040bb42c21afbb81f5568c3313125e61192
+commit 9815cdf6987ef91a85493bfcfd1ce2aaf3b47a0a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-20 20:42:33 +0200
+Date:   2015-09-29 13:59:35 +0300
 
-    Windows: Update build instructions.
+    Bump version and soname for 5.2.2.
 
- INSTALL                     | 15 +++++++++------
- windows/INSTALL-Windows.txt | 44 +++++++++++++++++++++-----------------------
- 2 files changed, 30 insertions(+), 29 deletions(-)
-
-commit 0152f72bf6289d744823dc6c849538f3a139ad70
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-20 20:41:48 +0200
-
-    Windows: Update the build script and README-Windows.txt.
-    
-    The 32-bit build is now for i686 or newer because the
-    prebuilt MinGW-w64 toolchains include i686 code in the
-    executables even if one uses -march=i486.
-    
-    The build script builds 32-bit SSE2 enabled version too.
-    Run-time detection of SSE2 support would be nice (on any OS)
-    but it's not implemented in XZ Utils yet.
-
- windows/README-Windows.txt | 30 ++++++++++++++++--------------
- windows/build.bash         | 23 ++++++++++++++---------
- 2 files changed, 30 insertions(+), 23 deletions(-)
-
-commit 4a1f6133ee5533cee8d91e06fcc22443e5f1881a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-19 15:51:50 +0200
-
-    Windows: Define TUKLIB_SYMBOL_PREFIX in config.h.
-    
-    It is to keep all symbols in the lzma_ namespace.
-
- windows/config.h | 3 +++
- 1 file changed, 3 insertions(+)
-
-commit 7f7d093de79eee0c7dbfd7433647e46302f19f82
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-16 21:00:09 +0200
-
-    xz: Update the man page about --threads.
-
- src/xz/xz.1 | 5 -----
- 1 file changed, 5 deletions(-)
-
-commit 009823448b82aa5f465668878a544c5842885407
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-16 20:57:43 +0200
-
-    xz: Update the man page about --block-size.
-
- src/xz/xz.1 | 41 +++++++++++++++++++++++++++++++++--------
- 1 file changed, 33 insertions(+), 8 deletions(-)
-
-commit 7dddfbeb499e528940bc12047355c184644aafe9
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-12-10 22:26:57 +0100
-
-    po/fr: several more translation updates: reword and handle --ignore-check.
-
- po/fr.po | 50 ++++++++++++++++++++++++++------------------------
- 1 file changed, 26 insertions(+), 24 deletions(-)
-
-commit 6eca5be40e04ddc4b738d493e4e56835956d8b69
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-12-10 22:23:01 +0100
-
-    po/fr: yet another place where my email address had to be updated.
-
- po/fr.po | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit d1003673e92ba47edd6aeeb3dbea05c18269d0e7
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-12-10 22:22:20 +0100
-
-    po/fr: fix several typos that have been around since the beginning.
-
- po/fr.po | 22 +++++++++++-----------
- 1 file changed, 11 insertions(+), 11 deletions(-)
-
-commit 4c5aa911a0df027e46171e368debc543d2fa72b2
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-12-03 20:02:31 +0100
-
-    po/fr: last batch of new translations for now.
-    
-    Four new error messages.
-
- po/fr.po | 16 ++++++++--------
- 1 file changed, 8 insertions(+), 8 deletions(-)
-
-commit 3e3099e36d27059499e7996fb38a62e8ab01d356
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-12-03 20:01:32 +0100
-
-    po/fr: translations for --threads, --block-size and --block-list.
-
- po/fr.po | 12 ++++++++----
- 1 file changed, 8 insertions(+), 4 deletions(-)
-
-commit e7d96a5933eec4e9d4a62569ee88df0ebb0f1d53
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-12-03 20:00:53 +0100
-
-    po/fr: remove fuzzy marker for error messages that will be kept in English.
-    
-    The following is a copy of a comment inside fr.po:
-    
-    Note from translator on "file status flags".
-    The following entry is kept un-translated on purpose. It is difficult to
-    translate and should only happen in exceptional circumstances which means
-    that translating would:
-    - lose some of the meaning
-    - make it more difficult to look up in search engines; it might happen one
-    in
-    a million times, if we dilute the error message in 20 languages, it will be
-    almost impossible to find an explanation and support for the error.
-
- po/fr.po | 22 ++++++++++++++++------
- 1 file changed, 16 insertions(+), 6 deletions(-)
-
-commit 46cbb9033af8a21fafe543302d6919746e0d72af
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-12-03 19:58:25 +0100
-
-    po/fr: several minor updates and better wording.
-    
-    Meaning doesn't change at all: it's only for better wording and/or
-    formatting of a few strings.
-
- po/fr.po | 14 +++++++-------
- 1 file changed, 7 insertions(+), 7 deletions(-)
-
-commit 7ce49d444f04e73145f79c832eb4d510594b074a
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-12-03 19:56:12 +0100
-
-    po/fr: update my email address and copyright years.
-
- po/fr.po | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit 214c553ebc3047cd720da1ce5c80cf7c38118d3c
-Author: Adrien Nader <adrien@notk.org>
-Date:   2014-11-26 10:08:26 +0100
-
-    fr.po: commit file after only "update-po" so actual is readable.
-
- po/fr.po | 311 ++++++++++++++++++++++++++++++++++++++++-----------------------
- 1 file changed, 199 insertions(+), 112 deletions(-)
-
-commit 1190c641af09cde85f8bd0fbe5c4906f4a29431b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-12-02 20:04:07 +0200
-
-    liblzma: Document how lzma_mt.block_size affects memory usage.
-
- src/liblzma/api/lzma/container.h | 4 ++++
- 1 file changed, 4 insertions(+)
-
-commit e4fc1d2f9571fba79ce383595be2ea2a9257def0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-28 20:07:18 +0200
-
-    Update INSTALL about a "make check" failure in test_scripts.sh.
-
- INSTALL | 24 +++++++++++++++++-------
- 1 file changed, 17 insertions(+), 7 deletions(-)
-
-commit 34f9e40a0a0c3bd2c2730cdb9cd550bbb8a3f2fe
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-26 20:12:27 +0200
-
-    Remove LZMA_UNSTABLE macro.
-
- src/liblzma/api/lzma/container.h | 4 ----
- src/liblzma/common/common.h      | 2 --
- src/xz/private.h                 | 1 -
- 3 files changed, 7 deletions(-)
-
-commit 6d9c0ce9f2677b159e32b224aba5b535b304a705
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-26 20:10:33 +0200
-
-    liblzma: Update lzma_stream_encoder_mt() API docs.
-
- src/liblzma/api/lzma/container.h | 5 +++--
- 1 file changed, 3 insertions(+), 2 deletions(-)
-
-commit 2301f3f05dd9742f42cda8f0f318864f5dc39ab3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-25 12:32:05 +0200
-
-    liblzma: Verify the filter chain in threaded encoder initialization.
-    
-    This way an invalid filter chain is detected at the Stream
-    encoder initialization instead of delaying it to the first
-    call to lzma_code() which triggers the initialization of
-    the actual filter encoder(s).
-
- src/liblzma/common/stream_encoder_mt.c | 9 ++++++---
- 1 file changed, 6 insertions(+), 3 deletions(-)
-
-commit 107a263d5bb63cd3593fd6a5c938706539f84523
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-17 19:11:49 +0200
-
-    Build: Update m4/ax_pthread.m4 from Autoconf Archive.
-
- m4/ax_pthread.m4 | 71 +++++++++++++++++++++++++++++++++++++-------------------
- 1 file changed, 47 insertions(+), 24 deletions(-)
-
-commit b13a781833399ff5726cfc997f3cb2f0acbdbf31
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-17 18:52:21 +0200
-
-    Build: Replace obsolete AC_HELP_STRING with AS_HELP_STRING.
-
- configure.ac         | 36 ++++++++++++++++++------------------
- m4/tuklib_integer.m4 |  2 +-
- 2 files changed, 19 insertions(+), 19 deletions(-)
-
-commit 542cac122ed3550148a2af0033af22b757491378
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-17 18:43:19 +0200
-
-    Build: Fix Autoconf warnings about escaped backquotes.
-    
-    Thanks to Daniel Richard G. for pointing out that it's
-    good to sometimes run autoreconf -fi with -Wall.
-
- configure.ac | 7 +++----
- 1 file changed, 3 insertions(+), 4 deletions(-)
-
-commit 7b03a15cea8cd4f19ed680b51c4bcbae3ce4142f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-10 18:54:40 +0200
-
-    xzdiff: Use mkdir if mktemp isn't available.
-
- src/scripts/xzdiff.in | 17 ++++++++++++++++-
- 1 file changed, 16 insertions(+), 1 deletion(-)
-
-commit f8c13e5e3609581d5dd9f8777985ca07f2390ad7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-10 18:45:01 +0200
-
-    xzdiff: Create a temporary directory to hold a temporary file.
-    
-    This avoids the possibility of "File name too long" when
-    creating a temp file when the input file name is very long.
-    
-    This also means that other users on the system can no longer
-    see the input file names in /tmp (or whatever $TMPDIR is)
-    since the temporary directory will have a generic name. This
-    usually doesn't matter since on many systems one can see
-    the arguments given to all processes anyway.
-    
-    The number X chars to mktemp where increased from 6 to 10.
-    
-    Note that with some shells temp files or dirs won't be used at all.
-
- src/scripts/xzdiff.in | 10 +++++-----
- 1 file changed, 5 insertions(+), 5 deletions(-)
-
-commit 7716dcf9df7f457500cb657314e7a9aea5fedb06
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-10 15:38:47 +0200
-
-    liblzma: Fix lzma_mt.preset in lzma_stream_encoder_mt_memusage().
-    
-    It read the filter chain from a wrong variable. This is a similar
-    bug that was fixed in 9494fb6d0ff41c585326f00aa8f7fe58f8106a5e.
-
- src/liblzma/common/stream_encoder_mt.c | 3 +--
- 1 file changed, 1 insertion(+), 2 deletions(-)
-
-commit 230fa4a605542c84b4178a57381695a0af4e779b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-11-10 14:49:55 +0200
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 4e4ae08bc7c1711e399c9f2d26eb375d39d08101
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-10-29 21:28:25 +0200
-
-    Update .gitignore files.
-
- .gitignore    | 2 ++
- m4/.gitignore | 3 +++
- 2 files changed, 5 insertions(+)
-
-commit c923b140b27d1a055db6284e10fd546ad1a7fcdb
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-10-29 21:15:35 +0200
-
-    Build: Prepare to support Automake's subdir-objects.
-    
-    Due to a bug in Automake, subdir-objects won't be enabled
-    for now.
-    
-    http://debbugs.gnu.org/cgi/bugreport.cgi?bug=17354
-    
-    Thanks to Daniel Richard G. for the original patches.
-
- configure.ac             |  7 ++++++-
- src/Makefile.am          | 22 +++++++++++++++++++++-
- src/liblzma/Makefile.am  |  4 ++--
- src/lzmainfo/Makefile.am |  4 ++--
- src/xz/Makefile.am       | 10 +++++-----
- src/xzdec/Makefile.am    |  8 ++++----
- 6 files changed, 40 insertions(+), 15 deletions(-)
-
-commit 08c2aa16bea0df82828f665d51fba2e0a5e8997f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-10-24 20:09:29 +0300
-
-    Translations: Update the Italian translation.
-    
-    Thanks to Milo Casagrande.
-
- po/it.po | 452 ++++++++++++++++++++++++++++++++++++++-------------------------
- 1 file changed, 275 insertions(+), 177 deletions(-)
-
-commit 2f9f61aa83539c54ff6c118a2693890f0519b3dd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-10-18 18:51:45 +0300
-
-    Translations: Update the Polish translation.
-    
-    Thanks to Jakub Bogusz.
-
- po/pl.po | 332 ++++++++++++++++++++++++++++++++++++++++-----------------------
- 1 file changed, 214 insertions(+), 118 deletions(-)
-
-commit 4f9d233f67aea25e532824d11b7642cf7dee7a76
-Author: Andre Noll <maan@tuebingen.mpg.de>
-Date:   2014-10-14 17:30:30 +0200
-
-    l10n: de.po: Change translator email address.
-    
-    Although the old address is still working, the new one should
-    be preferred. So this commit changes all three places in de.po
-    accordingly.
-    
-    Signed-off-by: Andre Noll <maan@tuebingen.mpg.de>
-
- po/de.po | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
-
-commit 00502b2bedad43f0cc167ac17ae0608837ee196b
-Author: Andre Noll <maan@tuebingen.mpg.de>
-Date:   2014-10-14 17:30:29 +0200
-
-    l10n: de.po: Update German translation
-    
-    Signed-off-by: Andre Noll <maan@systemlinux.org>
-
- po/de.po | 531 +++++++++++++++++++++++++++++++++------------------------------
- 1 file changed, 281 insertions(+), 250 deletions(-)
-
-commit 706b0496753fb609e69f1570ec603f11162189d1
-Author: Andre Noll <maan@tuebingen.mpg.de>
-Date:   2014-10-14 17:30:28 +0200
-
-    l10n: de.po: Fix typo: Schießen -> Schließen.
-    
-    That's a funny one since "schießen" means to shoot :)
-    
-    Signed-off-by: Andre Noll <maan@systemlinux.org>
-
- po/de.po | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 7c32e6a935c3d7ee366abad1679bd5f322f0c7d4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-10-09 19:42:26 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 076258cc458f1e705041ac7a729b15ffe8c5214a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-10-09 19:41:51 +0300
-
-    Add support for AmigaOS/AROS to tuklib_physmem().
-    
-    Thanks to Fredrik Wikstrom.
-
- m4/tuklib_physmem.m4        | 3 ++-
- src/common/tuklib_physmem.c | 7 +++++++
- 2 files changed, 9 insertions(+), 1 deletion(-)
-
-commit efa7b0a210e1baa8e128fc98c5443a944c39ad24
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-10-09 18:42:14 +0300
-
-    xzgrep: Avoid passing both -q and -l to grep.
-    
-    The behavior of grep -ql varies:
-      - GNU grep behaves like grep -q.
-      - OpenBSD grep behaves like grep -l.
-    
-    POSIX doesn't make it 100 % clear what behavior is expected.
-    Anyway, using both -q and -l at the same time makes no sense
-    so both options simply should never be used at the same time.
-    
-    Thanks to Christian Weisgerber.
-
- src/scripts/xzgrep.in | 6 ++++--
- 1 file changed, 4 insertions(+), 2 deletions(-)
-
-commit 9c5f76098c9986b48d2fc574a0b764f4cde0c538
-Author: Trần Ngọc Quân <vnwildman@gmail.com>
-Date:   2014-09-25 09:22:45 +0700
-
-    l10n: vi.po: Update Vietnamese translation
-    
-    Signed-off-by: Trần Ngọc Quân <vnwildman@gmail.com>
-
- po/vi.po | 136 +++++++++++++++++++++++++++++++++++++++------------------------
- 1 file changed, 84 insertions(+), 52 deletions(-)
-
-commit c4911f2db36d811896c73c008b4218d8fa9a4730
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-09-25 18:38:48 +0300
-
-    Build: Detect supported compiler warning flags better.
-    
-    Clang and nowadays also GCC accept any -Wfoobar option
-    but then may give a warning that an unknown warning option
-    was specified. To avoid adding unsupported warning options,
-    the options are now tested with -Werror.
-    
-    Thanks to Charles Diza.
-
- configure.ac | 5 +++--
- 1 file changed, 3 insertions(+), 2 deletions(-)
-
-commit 76e75522ed6f5c228d55587dee5a997893f6e474
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-09-20 21:01:21 +0300
-
-    Update NEWS for 5.0.7.
-
- NEWS | 11 +++++++++++
- 1 file changed, 11 insertions(+)
-
-commit d62028b4c1174fc67b6929f126f5eb24c018c700
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-09-20 19:42:56 +0300
-
-    liblzma: Fix a portability problem in Makefile.am.
-    
-    POSIX supports $< only in inference rules (suffix rules).
-    Using it elsewhere is a GNU make extension and doesn't
-    work e.g. with OpenBSD make.
-    
-    Thanks to Christian Weisgerber for the patch.
-
- src/liblzma/Makefile.am | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit c35de31d4283edad3e57d37ffe939406542cb7bb
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-09-14 21:54:09 +0300
-
-    Bump the version number to 5.1.4beta.
-
- src/liblzma/api/lzma/version.h | 4 ++--
- src/liblzma/liblzma.map        | 2 +-
- 2 files changed, 3 insertions(+), 3 deletions(-)
-
-commit e9e097e22cacdaa23e5414fea7913535449cb340
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-09-14 21:50:13 +0300
-
-    Update NEWS for 5.0.6 and 5.1.4beta.
-
- NEWS | 50 ++++++++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 50 insertions(+)
-
-commit 642f856bb8562ab66704b1e01ac7bc08b6d0a663
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-09-14 21:02:41 +0300
-
-    Update TODO.
-
- TODO | 38 ++++++++++++++++++++++++++++++++++----
- 1 file changed, 34 insertions(+), 4 deletions(-)
-
-commit 6b5e3b9eff5b8cedb2aac5f524d4d60fc8a48124
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-08-05 22:32:36 +0300
-
-    xz: Add --ignore-check.
-
- src/xz/args.c    |  7 +++++++
- src/xz/args.h    |  1 +
- src/xz/coder.c   | 10 +++++++++-
- src/xz/message.c |  2 ++
- src/xz/xz.1      | 19 +++++++++++++++++++
- 5 files changed, 38 insertions(+), 1 deletion(-)
-
-commit 9adbc2ff373f979c917cdfd3679ce0ebd59f1040
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-08-05 22:15:07 +0300
-
-    liblzma: Add support for LZMA_IGNORE_CHECK.
-
- src/liblzma/api/lzma/container.h    | 24 ++++++++++++++++++++++++
- src/liblzma/common/common.h         |  1 +
- src/liblzma/common/stream_decoder.c | 14 ++++++++++++--
- 3 files changed, 37 insertions(+), 2 deletions(-)
-
-commit 0e0f34b8e4f1c60ecaec15c2105982381cc9c3e6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-08-05 22:03:30 +0300
-
-    liblzma: Add support for lzma_block.ignore_check.
-    
-    Note that this slightly changes how lzma_block_header_decode()
-    has been documented. Earlier it said that the .version is set
-    to the lowest required value, but now it says that the .version
-    field is kept unchanged if possible. In practice this doesn't
-    affect any old code, because before this commit the only
-    possible .version was 0.
-
- src/liblzma/api/lzma/block.h              | 50 ++++++++++++++++++++++++-------
- src/liblzma/common/block_buffer_encoder.c |  2 +-
- src/liblzma/common/block_decoder.c        | 18 ++++++++---
- src/liblzma/common/block_encoder.c        |  2 +-
- src/liblzma/common/block_header_decoder.c | 12 ++++++--
- src/liblzma/common/block_header_encoder.c |  2 +-
- src/liblzma/common/block_util.c           |  2 +-
- 7 files changed, 68 insertions(+), 20 deletions(-)
-
-commit 71e1437ab585b46f7a25f5a131557d3d1c0cbaa2
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-08-04 19:25:58 +0300
-
-    liblzma: Use lzma_memcmplen() in the BT3 match finder.
-    
-    I had missed this when writing the commit
-    5db75054e900fa06ef5ade5f2c21dffdd5d16141.
-    
-    Thanks to Jun I Jin.
-
- src/liblzma/lz/lz_encoder_mf.c | 5 ++---
- 1 file changed, 2 insertions(+), 3 deletions(-)
-
-commit 41dc9ea06e1414ebe8ef52afc8fc15b6e3282b04
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-08-04 00:25:44 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 5dcffdbcc23a68abc3ac3539b30be71bc9b5af84
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-08-03 21:32:25 +0300
-
-    liblzma: SHA-256: Optimize the Maj macro slightly.
-    
-    The Maj macro is used where multiple things are added
-    together, so making Maj a sum of two expressions allows
-    some extra freedom for the compiler to schedule the
-    instructions.
-    
-    I learned this trick from
-    <http://www.hackersdelight.org/corres.txt>.
-
- src/liblzma/check/sha256.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit a9477d1e0c6fd0e47e637d051e7b9e2a5d9af517
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-08-03 21:08:12 +0300
-
-    liblzma: SHA-256: Optimize the way rotations are done.
-    
-    This looks weird because the rotations become sequential,
-    but it helps quite a bit on both 32-bit and 64-bit x86:
-    
-      - It requires fewer instructions on two-operand
-        instruction sets like x86.
-    
-      - It requires one register less which matters especially
-        on 32-bit x86.
-    
-    I hope this doesn't hurt other archs.
-    
-    I didn't invent this idea myself, but I don't remember where
-    I saw it first.
-
- src/liblzma/check/sha256.c | 17 +++++++++++------
- 1 file changed, 11 insertions(+), 6 deletions(-)
-
-commit 5a76c7c8ee9a0afbeedb1c211db9224260404347
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-08-03 20:38:13 +0300
-
-    liblzma: SHA-256: Remove the GCC #pragma that became unneeded.
-    
-    The unrolling in the previous commit should avoid the
-    situation where a compiler may think that an uninitialized
-    variable might be accessed.
-
- src/liblzma/check/sha256.c | 5 -----
- 1 file changed, 5 deletions(-)
-
-commit 9a096f8e57509775c331950b8351bbca77bdcfa8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-08-03 20:33:38 +0300
-
-    liblzma: SHA-256: Unroll a little more.
-    
-    This way a branch isn't needed for each operation
-    to choose between blk0 and blk2, and still the code
-    doesn't grow as much as it would with full unrolling.
-
- src/liblzma/check/sha256.c | 25 ++++++++++++++++---------
- 1 file changed, 16 insertions(+), 9 deletions(-)
-
-commit bc7650d87bf27f85f1a2a806dc2db1780e09e6a5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-08-03 19:56:43 +0300
-
-    liblzma: SHA-256: Do the byteswapping without a temporary buffer.
-
- src/liblzma/check/sha256.c | 13 +------------
- 1 file changed, 1 insertion(+), 12 deletions(-)
-
-commit 544aaa3d13554e8640f9caf7db717a96360ec0f6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-07-25 22:38:28 +0300
-
-    liblzma: Use lzma_memcmplen() in normal mode of LZMA.
-    
-    Two locations were not changed yet because the simplest change
-    assumes that the initial "len" may be greater than "limit".
-
- src/liblzma/lzma/lzma_encoder_optimum_normal.c | 20 +++++---------------
- 1 file changed, 5 insertions(+), 15 deletions(-)
-
-commit f48fce093b07aeda95c18850f5e086d9f2383380
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-07-25 22:30:38 +0300
-
-    liblzma: Simplify LZMA fast mode code by using memcmp().
-
- src/liblzma/lzma/lzma_encoder_optimum_fast.c | 11 +----------
- 1 file changed, 1 insertion(+), 10 deletions(-)
-
-commit 6bf5308e34e23dede5b301b1b9b4f131dacd9218
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-07-25 22:29:49 +0300
-
-    liblzma: Use lzma_memcmplen() in fast mode of LZMA.
-
- src/liblzma/lzma/lzma_encoder_optimum_fast.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
-
-commit 353212137e51e45b105a3a3fc2e6879f1cf0d492
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-07-25 21:16:23 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 5db75054e900fa06ef5ade5f2c21dffdd5d16141
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-07-25 21:15:07 +0300
-
-    liblzma: Use lzma_memcmplen() in the match finders.
-    
-    This doesn't change the match finder output.
-
- src/liblzma/lz/lz_encoder.c    | 13 ++++++++++++-
- src/liblzma/lz/lz_encoder_mf.c | 33 +++++++++++----------------------
- 2 files changed, 23 insertions(+), 23 deletions(-)
-
-commit e1c8f1d01f4a4e2136173edab2dc63c71ef038f4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-07-25 20:57:20 +0300
-
-    liblzma: Add lzma_memcmplen() for fast memory comparison.
-    
-    This commit just adds the function. Its uses will be in
-    separate commits.
-    
-    This hasn't been tested much yet and it's perhaps a bit early
-    to commit it but if there are bugs they should get found quite
-    quickly.
-    
-    Thanks to Jun I Jin from Intel for help and for pointing out
-    that string comparison needs to be optimized in liblzma.
-
- configure.ac                    |  13 +++
- src/liblzma/common/Makefile.inc |   1 +
- src/liblzma/common/memcmplen.h  | 170 ++++++++++++++++++++++++++++++++++++++++
- 3 files changed, 184 insertions(+)
-
-commit 765735cf52e5123586e74a51b9c073b5257f631f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-07-12 21:10:09 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 59da01785ef66c7e62f36e70ca808fd2824bb995
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-07-12 20:06:08 +0300
-
-    Translations: Add Vietnamese translation.
-    
-    Thanks to Trần Ngọc Quân.
-
- po/LINGUAS |    1 +
- po/vi.po   | 1007 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 1008 insertions(+)
-
-commit 17215f751c354852700e7f8592ccf319570a0721
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-06-29 20:54:14 +0300
-
-    xz: Update the help message of a few options.
-    
-    Updated: --threads, --block-size, and --block-list
-    Added: --flush-timeout
-
- src/xz/message.c | 18 +++++++++++-------
- 1 file changed, 11 insertions(+), 7 deletions(-)
-
-commit 96864a6ddf91ad693d102ea165f3d7918744d582
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-06-18 22:07:06 +0300
-
-    xz: Use lzma_cputhreads() instead of own copy of tuklib_cpucores().
-
- src/xz/Makefile.am |  1 -
- src/xz/hardware.c  | 12 +++++++++---
- 2 files changed, 9 insertions(+), 4 deletions(-)
-
-commit a115cc3748482e277f42a968baa3cd266f031dba
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-06-18 22:04:24 +0300
-
-    liblzma: Add lzma_cputhreads().
-
- src/liblzma/Makefile.am                  |  8 +++++++-
- src/liblzma/api/lzma/hardware.h          | 14 ++++++++++++++
- src/liblzma/common/Makefile.inc          |  1 +
- src/liblzma/common/hardware_cputhreads.c | 22 ++++++++++++++++++++++
- src/liblzma/liblzma.map                  |  1 +
- 5 files changed, 45 insertions(+), 1 deletion(-)
-
-commit 3ce3e7976904fbab4e6482bafa442856f77a51fa
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-06-18 19:11:52 +0300
-
-    xz: Check for filter chain compatibility for --flush-timeout.
-    
-    This avoids LZMA_PROG_ERROR from lzma_code() with filter chains
-    that don't support LZMA_SYNC_FLUSH.
-
- src/xz/coder.c | 30 +++++++++++++++++++++---------
- 1 file changed, 21 insertions(+), 9 deletions(-)
-
-commit 381ac14ed79e5d38809f251705be8b3193bba417
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-06-13 19:21:54 +0300
-
-    xzgrep: List xzgrep_expected_output in tests/Makefile.am.
-
- tests/Makefile.am | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
-
-commit 4244b65b06d5ecaf6f9dd0387ac7e3166bd2364e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-06-13 18:58:22 +0300
-
-    xzgrep: Improve the test script.
-    
-    Now it should be close to the functionality of the original
-    version by Pavel Raiskup.
-
- tests/Makefile.am            |  3 ++-
- tests/test_scripts.sh        | 24 ++++++++++++++----------
- tests/xzgrep_expected_output | 39 +++++++++++++++++++++++++++++++++++++++
- 3 files changed, 55 insertions(+), 11 deletions(-)
-
-commit 1e60f2c0a0ee6c18b02943ce56214799a70aac26
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-06-11 21:03:25 +0300
-
-    xzgrep: Add a test for the previous fix.
-    
-    This is a simplified version of Pavel Raiskup's
-    original patch.
-
- tests/test_scripts.sh | 26 ++++++++++++++++++++++----
- 1 file changed, 22 insertions(+), 4 deletions(-)
-
-commit ceca37901783988204caaf40dff4623d535cc789
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-06-11 20:43:28 +0300
-
-    xzgrep: exit 0 when at least one file matches.
-    
-    Mimic the original grep behavior and return exit_success when
-    at least one xz compressed file matches given pattern.
-    
-    Original bugreport:
-    https://bugzilla.redhat.com/show_bug.cgi?id=1108085
-    
-    Thanks to Pavel Raiskup for the patch.
-
- src/scripts/xzgrep.in | 15 +++++++++++++--
- 1 file changed, 13 insertions(+), 2 deletions(-)
-
-commit 8c19216baccb92d011694590df8a1262da2e980c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-06-09 21:21:24 +0300
-
-    xz: Force single-threaded mode when --flush-timeout is used.
-
- src/xz/coder.c | 11 +++++++++++
- 1 file changed, 11 insertions(+)
-
-commit 87f1a24810805187d7bbc8ac5512e7eec307ddf5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-05-25 22:05:39 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit da1718f266fcfc091e7bf08aae1bc986d0e6cc6b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-05-25 21:45:56 +0300
-
-    liblzma: Use lzma_alloc_zero() in LZ encoder initialization.
-    
-    This avoids a memzero() call for a newly-allocated memory,
-    which can be expensive when encoding small streams with
-    an over-sized dictionary.
-    
-    To avoid using lzma_alloc_zero() for memory that doesn't
-    need to be zeroed, lzma_mf.son is now allocated separately,
-    which requires handling it separately in normalize() too.
-    
-    Thanks to Vincenzo Innocente for reporting the problem.
-
- src/liblzma/lz/lz_encoder.c    | 84 ++++++++++++++++++++++--------------------
- src/liblzma/lz/lz_encoder.h    |  2 +-
- src/liblzma/lz/lz_encoder_mf.c | 31 +++++++++-------
- 3 files changed, 62 insertions(+), 55 deletions(-)
-
-commit 28af24e9cf2eb259997c85dce13d4c97b3daa47a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-05-25 19:25:57 +0300
-
-    liblzma: Add the internal function lzma_alloc_zero().
-
- src/liblzma/common/common.c | 21 +++++++++++++++++++++
- src/liblzma/common/common.h |  6 ++++++
- 2 files changed, 27 insertions(+)
-
-commit ed9ac85822c490e34b68c259afa0b385d21d1c40
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-05-08 18:03:09 +0300
-
-    xz: Fix uint64_t vs. size_t which broke 32-bit build.
-    
-    Thanks to Christian Hesse.
-
- src/xz/coder.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit d716acdae3fa7996f9e68a7bac012e6d8d13dd02
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-05-04 11:09:11 +0300
-
-    Docs: Update comments to refer to lzma/lzma12.h in example programs.
-
- doc/examples/03_compress_custom.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
-
-commit 4d5b7b3fda31241ca86ed35e08e73f776ee916e0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-05-04 11:07:17 +0300
-
-    liblzma: Rename the private API header lzma/lzma.h to lzma/lzma12.h.
-    
-    It can be confusing that two header files have the same name.
-    The public API file is still lzma.h.
-
- src/liblzma/api/Makefile.am   |   2 +-
- src/liblzma/api/lzma.h        |   2 +-
- src/liblzma/api/lzma/lzma.h   | 420 ------------------------------------------
- src/liblzma/api/lzma/lzma12.h | 420 ++++++++++++++++++++++++++++++++++++++++++
- 4 files changed, 422 insertions(+), 422 deletions(-)
-
-commit 1555a9c5664afc7893a2b75e9970105437f01ef1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-04-25 17:53:42 +0300
-
-    Build: Fix the combination of --disable-xzdec --enable-lzmadec.
-    
-    In this case "make install" could fail if the man page directory
-    didn't already exist at the destination. If it did exist, a
-    dangling symlink was created there. Now the link is omitted
-    instead. This isn't the best fix but it's better than the old
-    behavior.
-
- src/xzdec/Makefile.am | 10 +++++++++-
- 1 file changed, 9 insertions(+), 1 deletion(-)
-
-commit 56056571df3377eaa6ae6233b3ccc5d72e81d43d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-04-25 17:44:26 +0300
-
-    Build: Add --disable-doc to configure.
-
- INSTALL      | 6 ++++++
- Makefile.am  | 2 ++
- configure.ac | 6 ++++++
- 3 files changed, 14 insertions(+)
-
-commit 6de61d8721097a6214810841aa85b08e303ac538
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-04-24 18:06:24 +0300
-
-    Update INSTALL.
-    
-    Add a note about failing "make check". The source of
-    the problem should be fixed in libtool (if it really is
-    a libtool bug and not mine) but I'm unable to spend time
-    on that for now. Thanks to Nelson H. F. Beebe for reporting
-    the issue.
-    
-    Add a note about a possible need to run "ldconfig" after
-    "make install".
-
- INSTALL | 25 +++++++++++++++++++++++++
- 1 file changed, 25 insertions(+)
-
-commit 54df428799a8d853639b753d0e6784694d73eb3e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-04-09 17:26:10 +0300
-
-    xz: Rename a variable to avoid a namespace collision on Solaris.
-    
-    I don't know the details but I have an impression that there's
-    no problem in practice if using GCC since people have built xz
-    with GCC (without patching xz), but renaming the variable cannot
-    hurt either.
-    
-    Thanks to Mark Ashley.
-
- src/xz/signals.c | 12 +++++++-----
- 1 file changed, 7 insertions(+), 5 deletions(-)
-
-commit 5876ca27daa1429676b1160007d9688266907f00
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-01-29 20:19:41 +0200
-
-    Docs: Add example program for threaded encoding.
-    
-    I didn't add -DLZMA_UNSTABLE to Makefile so one has to
-    specify it manually as long as LZMA_UNSTABLE is needed.
-
- doc/examples/04_compress_easy_mt.c | 184 +++++++++++++++++++++++++++++++++++++
- doc/examples/Makefile              |   3 +-
- 2 files changed, 186 insertions(+), 1 deletion(-)
-
-commit 9494fb6d0ff41c585326f00aa8f7fe58f8106a5e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-01-29 20:13:51 +0200
-
-    liblzma: Fix lzma_mt.preset not working with lzma_stream_encoder_mt().
-    
-    It read the filter chain from a wrong variable.
-
- src/liblzma/common/stream_encoder_mt.c | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit 673a4cb53de3a715685cb1b836da57a3c7dcd43c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-01-20 11:20:40 +0200
-
-    liblzma: Fix typo in a comment.
-
- src/liblzma/api/lzma/block.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit ad96a871a1470eb76d6233d3890ce9338047b7a3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-01-12 19:38:43 +0200
-
-    Windows: Add config.h for building liblzma with MSVC 2013.
-    
-    This is for building liblzma. Building xz tool too requires
-    a little more work. Maybe it will be supported, but for most
-    MSVC users it's enough to be able to build liblzma.
-    
-    C99 support in MSVC 2013 is almost usable which is a big
-    improvement over earlier versions. It's "almost" because
-    there's a dumb bug that breaks mixed declarations after
-    an "if" statements unless the "if" statement uses braces:
-    
-    https://connect.microsoft.com/VisualStudio/feedback/details/808650/visual-studio-2013-c99-compiler-bug
-    https://connect.microsoft.com/VisualStudio/feedback/details/808472/c99-support-of-mixed-declarations-and-statements-fails-with-certain-types-and-constructs
-    
-    Hopefully it will get fixed. Then liblzma should be
-    compilable with MSVC 2013 without patching.
-
- windows/config.h | 139 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 139 insertions(+)
-
-commit 3d5c090872fab4212b57c290e8ed4d02c78c1737
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-01-12 17:41:14 +0200
-
-    xz: Fix a comment.
-
- src/xz/coder.c | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit 69fd4e1c932c7975476a0143c86e45d81b60d3f9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-01-12 17:04:33 +0200
-
-    Windows: Add MSVC defines for inline and restrict keywords.
-
- src/common/sysdefs.h | 10 ++++++++++
- 1 file changed, 10 insertions(+)
-
-commit a19d9e8575ee6647cd9154cf1f20203f1330485f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-01-12 16:44:52 +0200
-
-    liblzma: Avoid C99 compound literal arrays.
-    
-    MSVC 2013 doesn't like them. Maybe they aren't so good
-    for readability either since many aren't used to them.
-
- src/liblzma/lzma/lzma_encoder_presets.c | 8 +++++---
- 1 file changed, 5 insertions(+), 3 deletions(-)
-
-commit e28528f1c867b2ed4ac91195ad08efb9bb8a6263
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-01-12 12:50:30 +0200
-
-    liblzma: Remove a useless C99ism from sha256.c.
-    
-    Unsurprisingly it makes no difference in compiled output.
-
- src/liblzma/check/sha256.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 5ad1effc45adfb7dabc9a98e79736077e6b7e2d5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-01-12 12:17:08 +0200
-
-    xz: Fix use of wrong variable.
-    
-    Since the only call to suffix_set() uses optarg
-    as the argument, fixing this bug doesn't change
-    the behavior of the program.
-
- src/xz/suffix.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 3e62c68d75b5a3fdd46dbb34bb335d73289860d5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2014-01-12 12:11:36 +0200
-
-    Fix typos in comments.
-
- src/common/mythread.h          | 2 +-
- src/liblzma/check/crc32_fast.c | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
-
-commit e90ea601fb72867ec04adf456cbe4bf9520fd412
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-11-26 18:20:16 +0200
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit b22e94d8d15764416354e04729382a7371ae2c30
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-11-26 18:20:09 +0200
-
-    liblzma: Document the need for block->check for lzma_block_header_decode().
-    
-    Thanks to Tomer Chachamu.
-
- src/liblzma/api/lzma/block.h | 3 +++
- 1 file changed, 3 insertions(+)
-
-commit d1cd8b1cb824b72421d1ee370e628024d2fcbec4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-11-12 16:38:57 +0200
-
-    xz: Update the man page about --block-size and --block-list.
-
- src/xz/xz.1 | 24 +++++++++++++++---------
- 1 file changed, 15 insertions(+), 9 deletions(-)
-
-commit 76be7c612e6bcc38724488ccc3b8bcb1cfec9f0a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-11-12 16:30:53 +0200
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit dd750acbe2259d75444ef0f8da2d4bacc90d7afc
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-11-12 16:29:48 +0200
-
-    xz: Make --block-list and --block-size work together in single-threaded.
-    
-    Previously, --block-list and --block-size only worked together
-    in threaded mode. Boundaries are specified by --block-list, but
-    --block-size specifies the maximum size for a Block. Now this
-    works in single-threaded mode too.
-    
-    Thanks to James M Leddy for the original patch.
-
- src/xz/coder.c | 90 ++++++++++++++++++++++++++++++++++++++++++++++++----------
- 1 file changed, 75 insertions(+), 15 deletions(-)
-
-commit ae222fe9805d0161d022d75ba8485dab8bf6d7d5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-10-26 13:26:14 +0300
-
-    Bump the version number to 5.1.3alpha.
-
- src/liblzma/api/lzma/version.h | 2 +-
- src/liblzma/liblzma.map        | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
-
-commit 2193837a6a597cd3bf4e9ddf49421a5697d8e155
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-10-26 13:25:02 +0300
-
-    Update NEWS for 5.1.3alpha.
-
- NEWS | 35 +++++++++++++++++++++++++++++++++++
- 1 file changed, 35 insertions(+)
-
-commit ed48e75e2763876173aef8902da407a8eb28854b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-10-26 12:47:04 +0300
-
-    Update TODO.
-
- TODO | 4 ----
- 1 file changed, 4 deletions(-)
-
-commit 841da0352d79a56a44796a4c39163429c9f039a3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-10-25 22:41:28 +0300
-
-    xz: Document behavior of --block-list with threads.
-    
-    This needs to be updated before 5.2.0.
-
- src/xz/xz.1 | 24 +++++++++++++++++++++---
- 1 file changed, 21 insertions(+), 3 deletions(-)
-
-commit 56feb8665b78c1032aabd53c619c62af51defe64
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-10-22 20:03:12 +0300
-
-    xz: Document --flush-timeout=TIMEOUT on the man page.
-
- src/xz/xz.1 | 37 ++++++++++++++++++++++++++++++++++++-
- 1 file changed, 36 insertions(+), 1 deletion(-)
-
-commit ba413da1d5bb3324287cf3174922acd921165971
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-10-22 19:51:55 +0300
-
-    xz: Take advantage of LZMA_FULL_BARRIER with --block-list.
-    
-    Now if --block-list is used in threaded mode, the encoder
-    won't need to flush at each Block boundary specified via
-    --block-list. This improves performance a lot, making
-    threading helpful with --block-list.
-    
-    The flush timer was reset after LZMA_FULL_FLUSH but since
-    LZMA_FULL_BARRIER doesn't flush, resetting the timer is
-    no longer done.
-
- src/xz/coder.c | 32 +++++++++++++++-----------------
- 1 file changed, 15 insertions(+), 17 deletions(-)
-
-commit 0cd45fc2bc5537de287a0bc005e2d67467a92148
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-10-02 20:05:23 +0300
-
-    liblzma: Support LZMA_FULL_FLUSH and _BARRIER in threaded encoder.
-    
-    Now --block-list=SIZES works with in the threaded mode too,
-    although the performance is still bad due to the use of
-    LZMA_FULL_FLUSH instead of the new LZMA_FULL_BARRIER.
-
- src/liblzma/common/stream_encoder_mt.c | 55 ++++++++++++++++++++++++----------
- 1 file changed, 39 insertions(+), 16 deletions(-)
-
-commit 97bb38712f414fabecca908af2e38a12570293fd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-10-02 12:55:11 +0300
-
-    liblzma: Add LZMA_FULL_BARRIER support to single-threaded encoder.
-    
-    In the single-threaded encoder LZMA_FULL_BARRIER is simply
-    an alias for LZMA_FULL_FLUSH.
-
- src/liblzma/api/lzma/base.h         | 37 ++++++++++++++++++++++++++++++-------
- src/liblzma/common/common.c         | 17 +++++++++++++++--
- src/liblzma/common/common.h         |  7 ++++++-
- src/liblzma/common/stream_encoder.c |  4 +++-
- 4 files changed, 54 insertions(+), 11 deletions(-)
-
-commit fef0c6b410c08e581c9178700a4e7599f0895ff9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-09-17 11:57:51 +0300
-
-    liblzma: Add block_buffer_encoder.h into Makefile.inc.
-    
-    This should have been in b465da5988dd59ad98fda10c2e4ea13d0b9c73bc.
-
- src/liblzma/common/Makefile.inc | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 8083e03291b6d21c0f538163e187b4e8cd5594e4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-09-17 11:55:38 +0300
-
-    xz: Add a missing test for TUKLIB_DOSLIKE.
-
- src/xz/file_io.c | 2 ++
- 1 file changed, 2 insertions(+)
-
-commit 6b44b4a775fe29ecc7bcb7996e086e3bc09e5fd0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-09-17 11:52:28 +0300
-
-    Add native threading support on Windows.
-    
-    Now liblzma only uses "mythread" functions and types
-    which are defined in mythread.h matching the desired
-    threading method.
-    
-    Before Windows Vista, there is no direct equivalent to
-    pthread condition variables. Since this package doesn't
-    use pthread_cond_broadcast(), pre-Vista threading can
-    still be kept quite simple. The pre-Vista code doesn't
-    use anything that wasn't already available in Windows 95,
-    so the binaries should run even on Windows 95 if someone
-    happens to care.
-
- INSTALL                                |  41 ++-
- configure.ac                           | 118 ++++++--
- src/common/mythread.h                  | 513 ++++++++++++++++++++++++++-------
- src/liblzma/common/stream_encoder_mt.c |  83 +++---
- src/xz/coder.c                         |   8 +-
- windows/README-Windows.txt             |   2 +-
- windows/build.bash                     |  23 +-
- 7 files changed, 573 insertions(+), 215 deletions(-)
-
-commit ae0ab74a88d5b9b15845f1d9a24ade4349a54f9f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-09-11 14:40:35 +0300
-
-    Build: Remove a comment about Automake 1.10 from configure.ac.
-    
-    The previous commit supports silent rules and that requires
-    Automake 1.11.
-
- configure.ac | 2 --
- 1 file changed, 2 deletions(-)
-
-commit 72975df6c8c59aaf849138ab3606e8fb6970596a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-09-09 20:37:03 +0300
-
-    Build: Create liblzma.pc in a src/liblzma/Makefile.am.
-    
-    Previously it was done in configure, but doing that goes
-    against the Autoconf manual. Autoconf requires that it is
-    possible to override e.g. prefix after running configure
-    and that doesn't work correctly if liblzma.pc is created
-    by configure.
-    
-    A potential downside of this change is that now e.g.
-    libdir in liblzma.pc is a standalone string instead of
-    being defined via ${prefix}, so if one overrides prefix
-    when running pkg-config the libdir won't get the new value.
-    I don't know if this matters in practice.
-    
-    Thanks to Vincent Torri.
-
- configure.ac            |  1 -
- src/liblzma/Makefile.am | 20 ++++++++++++++++++++
- 2 files changed, 20 insertions(+), 1 deletion(-)
-
-commit 1c2b6e7e8382ed390f53e140f160488bb2205ecc
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-08-04 15:24:09 +0300
-
-    Fix the previous commit which broke the build.
-    
-    Apparently I didn't even compile-test the previous commit.
-    
-    Thanks to Christian Hesse.
-
- src/common/tuklib_cpucores.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 124eb69c7857f618b4807588c51bc9ba21bf8691
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-08-03 13:52:58 +0300
-
-    Windows: Add Windows support to tuklib_cpucores().
-    
-    It is used for Cygwin too. I'm not sure if that is
-    a good or bad idea.
-    
-    Thanks to Vincent Torri.
-
- m4/tuklib_cpucores.m4        | 19 +++++++++++++++++--
- src/common/tuklib_cpucores.c | 13 ++++++++++++-
- 2 files changed, 29 insertions(+), 3 deletions(-)
-
-commit eada8a875ce3fd521cb42e4ace2624d3d49c5f35
-Author: Anders F Bjorklund <afb@users.sourceforge.net>
-Date:   2013-08-02 15:59:46 +0200
-
-    macosx: separate liblzma package
-
- macosx/build.sh | 23 +++++++++++++++--------
- 1 file changed, 15 insertions(+), 8 deletions(-)
-
-commit be0100d01ca6a75899d051bee00acf17e6dc0c15
-Author: Anders F Bjorklund <afb@users.sourceforge.net>
-Date:   2013-08-02 15:58:44 +0200
-
-    macosx: set minimum to leopard
-
- macosx/build.sh | 13 ++++++++-----
- 1 file changed, 8 insertions(+), 5 deletions(-)
-
-commit 416729e2d743f4b2fe9fd438eedeb98adce033c3
-Author: Anders F Bjorklund <afb@users.sourceforge.net>
-Date:   2011-08-07 13:13:30 +0200
-
-    move configurables into variables
-
- macosx/build.sh | 25 ++++++++++++++++++-------
- 1 file changed, 18 insertions(+), 7 deletions(-)
-
-commit 16581080e5f29f9a4e49efece21c5bf572323acc
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-07-15 14:08:41 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 3e2b198ba37b624efd9c7caee2a435dc986b46c6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-07-15 14:08:02 +0300
-
-    Build: Fix the detection of missing CRC32.
-    
-    Thanks to Vincent Torri.
-
- configure.ac | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit dee6ad3d5915422bc30a6821efeacaeb8ca8ef00
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-07-04 14:18:46 +0300
-
-    xz: Add preliminary support for --flush-timeout=TIMEOUT.
-    
-    When --flush-timeout=TIMEOUT is used, xz will use
-    LZMA_SYNC_FLUSH if read() would block and at least
-    TIMEOUT milliseconds has elapsed since the previous flush.
-    
-    This can be useful in realtime-like use cases where the
-    data is simultanously decompressed by another process
-    (possibly on a different computer). If new uncompressed
-    input data is produced slowly, without this option xz could
-    buffer the data for a long time until it would become
-    decompressible from the output.
-    
-    If TIMEOUT is 0, the feature is disabled. This is the default.
-    
-    This commit affects the compression side. Using xz for
-    the decompression side for the above purpose doesn't work
-    yet so well because there is quite a bit of input and
-    output buffering when decompressing.
-    
-    The --long-help or man page were not updated yet.
-    The details of this feature may change.
-
- src/xz/args.c    |  7 +++++++
- src/xz/coder.c   | 46 +++++++++++++++++++++++++++++++++++-----------
- src/xz/file_io.c | 46 ++++++++++++++++++++++++++++++++++++----------
- 3 files changed, 78 insertions(+), 21 deletions(-)
-
-commit fa381acaf9a29a8114e1c0a97de99bab9adb014e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-07-04 13:41:03 +0300
-
-    xz: Don't set src_eof=true after an I/O error because it's useless.
-
- src/xz/file_io.c | 3 ---
- 1 file changed, 3 deletions(-)
-
-commit ea00545beace5b950f709ec21e46878e0f448678
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-07-04 13:25:11 +0300
-
-    xz: Fix the test when to read more input.
-    
-    Testing for end of file was no longer correct after full flushing
-    became possible with --block-size=SIZE and --block-list=SIZES.
-    There was no bug in practice though because xz just made a few
-    unneeded zero-byte reads.
-
- src/xz/coder.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
-
-commit 736903c64bef394c06685d79908e397bcb08b88f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-07-04 12:51:57 +0300
-
-    xz: Move some of the timing code into mytime.[hc].
-    
-    This switches units from microseconds to milliseconds.
-    
-    New clock_gettime(CLOCK_MONOTONIC) will be used if available.
-    There is still a fallback to gettimeofday().
-
- src/xz/Makefile.am |  2 ++
- src/xz/coder.c     |  5 +++
- src/xz/message.c   | 54 +++++++++------------------------
- src/xz/mytime.c    | 89 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
- src/xz/mytime.h    | 47 ++++++++++++++++++++++++++++
- src/xz/private.h   |  1 +
- 6 files changed, 158 insertions(+), 40 deletions(-)
-
-commit 24edf8d807e24ffaa1e793114d94cca3b970027d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-07-01 14:35:03 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit c0627b3fceacfa1ed162f5f55235360ea26f569a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-07-01 14:34:11 +0300
-
-    xz: Silence a warning seen with _FORTIFY_SOURCE=2.
-    
-    Thanks to Christian Hesse.
-
- src/xz/file_io.c | 8 +++++++-
- 1 file changed, 7 insertions(+), 1 deletion(-)
-
-commit 1936718bb38ee394bd89836fdd4eabc0beb02443
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-30 19:40:11 +0300
-
-    Update NEWS for 5.0.5.
-
- NEWS | 52 ++++++++++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 52 insertions(+)
-
-commit a37ae8b5eb6093a530198f109c6f7a538c80ecf0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-30 18:02:27 +0300
-
-    Man pages: Use similar syntax for synopsis as in xz.
-    
-    The man pages of lzmainfo, xzmore, and xzdec had similar
-    constructs as the man page of xz had before the commit
-    eb6ca9854b8eb9fbf72497c1cf608d6b19d2d494. Eric S. Raymond
-    didn't mention these man pages in his bug report, but
-    it's nice to be consistent.
-
- src/lzmainfo/lzmainfo.1 |  4 ++--
- src/scripts/xzmore.1    |  6 +++---
- src/xzdec/xzdec.1       | 10 +++++-----
- 3 files changed, 10 insertions(+), 10 deletions(-)
-
-commit cdba9ddd870ae72fd6219a125662c20ec997f86c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-29 15:59:13 +0300
-
-    xz: Use non-blocking I/O for the output file.
-    
-    Now both reading and writing should be without
-    race conditions with signals.
-    
-    They might still be signal handling issues left.
-    Signals are blocked during many operations to avoid
-    EINTR but it may cause problems e.g. if writing to
-    stderr blocks when trying to display an error message.
-
- src/xz/file_io.c | 57 ++++++++++++++++++++++++++++++++++++++++++++++++--------
- 1 file changed, 49 insertions(+), 8 deletions(-)
-
-commit e61a5c95da3fe31281d959e5e842885a8ba2b5bd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-28 23:56:17 +0300
-
-    xz: Fix return value type in io_write_buf().
-    
-    It didn't affect the behavior of the code since -1
-    becomes true anyway.
-
- src/xz/file_io.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 9dc319eabb34a826f4945f91c71620f14a60e9e2
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-28 23:48:05 +0300
-
-    xz: Use the self-pipe trick to avoid a race condition with signals.
-    
-    It is possible that a signal to set user_abort arrives right
-    before a blocking system call is made. In this case the call
-    may block until another signal arrives, while the wanted
-    behavior is to make xz clean up and exit as soon as possible.
-    
-    After this commit, the race condition is avoided with the
-    input side which already uses non-blocking I/O. The output
-    side still uses blocking I/O and thus has the race condition.
-
- src/xz/file_io.c | 56 ++++++++++++++++++++++++++++++++++++++++++++------------
- src/xz/file_io.h |  8 ++++++++
- src/xz/signals.c |  5 +++++
- 3 files changed, 57 insertions(+), 12 deletions(-)
-
-commit 3541bc79d0cfabc0ad155c99bfdad1289f17fec3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-28 22:51:02 +0300
-
-    xz: Use non-blocking I/O for the input file.
-
- src/xz/file_io.c | 156 +++++++++++++++++++++++++++++++++++++++----------------
- 1 file changed, 111 insertions(+), 45 deletions(-)
-
-commit 78673a08bed5066c81e8a8e90d20e670c28ecfd5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-28 18:46:13 +0300
-
-    xz: Remove an outdated NetBSD-specific comment.
-    
-    Nowadays errno == EFTYPE is documented in open(2).
-
- src/xz/file_io.c | 4 ----
- 1 file changed, 4 deletions(-)
-
-commit a616fdad34b48b2932ef03fb87309dcc8b829527
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-28 18:09:47 +0300
-
-    xz: Fix error detection of fcntl(fd, F_SETFL, flags) calls.
-    
-    POSIX says that fcntl(fd, F_SETFL, flags) returns -1 on
-    error and "other than -1" on success. This is how it is
-    documented e.g. on OpenBSD too. On Linux, success with
-    F_SETFL is always 0 (at least accorinding to fcntl(2)
-    from man-pages 3.51).
-
- src/xz/file_io.c | 8 ++++----
- 1 file changed, 4 insertions(+), 4 deletions(-)
-
-commit 4a08a6e4c61c65ab763ab314100a6d7a3bb89298
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-28 17:36:47 +0300
-
-    xz: Fix use of wrong variable in a fcntl() call.
-    
-    Due to a wrong variable name, when writing a sparse file
-    to standard output, *all* file status flags were cleared
-    (to the extent the operating system allowed it) instead of
-    only clearing the O_APPEND flag. In practice this worked
-    fine in the common situations on GNU/Linux, but I didn't
-    check how it behaved elsewhere.
-    
-    The original flags were still restored correctly. I still
-    changed the code to use a separate boolean variable to
-    indicate when the flags should be restored instead of
-    relying on a special value in stdout_flags.
-
- src/xz/file_io.c | 24 +++++++++++++-----------
- 1 file changed, 13 insertions(+), 11 deletions(-)
-
-commit b790b435daa3351067f80a5973b647f8d55367a2
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-28 14:55:37 +0300
-
-    xz: Fix assertion related to posix_fadvise().
-    
-    Input file can be a FIFO or something else that doesn't
-    support posix_fadvise() so don't check the return value
-    even with an assertion. Nothing bad happens if the call
-    to posix_fadvise() fails.
-
- src/xz/file_io.c | 10 ++--------
- 1 file changed, 2 insertions(+), 8 deletions(-)
-
-commit 84d2da6c9dc252f441deb7626c2522202b005d4d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-26 13:30:57 +0300
-
-    xz: Check the value of lzma_stream_flags.version in --list.
-    
-    It is a no-op for now, but if an old xz version is used
-    together with a newer liblzma that supports something new,
-    then this check becomes important and will stop the old xz
-    from trying to parse files that it won't understand.
-
- src/xz/list.c | 14 ++++++++++++++
- 1 file changed, 14 insertions(+)
-
-commit 9376f5f8f762296f2173d61af9101112c36f38c0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-26 12:17:00 +0300
-
-    Build: Require Automake 1.12 and use serial-tests option.
-    
-    It should actually still work with Automake 1.10 if
-    the serial-tests option is removed. Automake 1.13 started
-    using parallel tests by default and the option to get
-    the old behavior isn't supported before 1.12.
-    
-    At least for now, parallel tests don't improve anything
-    in XZ Utils but they hide the progress output from
-    test_compress.sh.
-
- configure.ac | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
-
-commit b7e200d7bd0a3c7c171c13ad37d68296d6f73374
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-23 18:59:13 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 46540e4c10923e363741ff5aab99e79fc0ce6ee8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-23 18:57:23 +0300
-
-    liblzma: Avoid a warning about a shadowed variable.
-    
-    On Mac OS X wait() is declared in <sys/wait.h> that
-    we include one way or other so don't use "wait" as
-    a variable name.
-    
-    Thanks to Christian Kujau.
-
- src/liblzma/common/stream_encoder_mt.c | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit ebb501ec73cecc546c67117dd01b5e33c90bfb4a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-23 17:36:47 +0300
-
-    xz: Validate Uncompressed Size from Block Header in list.c.
-    
-    This affects only "xz -lvv". Normal decompression with xz
-    already detected if Block Header and Index had mismatched
-    Uncompressed Size fields. So this just makes "xz -lvv"
-    show such files as corrupt instead of showing the
-    Uncompressed Size from Index.
-
- src/xz/list.c | 14 +++++++++++++-
- 1 file changed, 13 insertions(+), 1 deletion(-)
-
-commit c09e91dd236d3cabee0fc48312b3dc8cceae41ab
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-21 22:08:11 +0300
-
-    Update THANKS.
-
- THANKS | 2 ++
- 1 file changed, 2 insertions(+)
-
-commit eb6ca9854b8eb9fbf72497c1cf608d6b19d2d494
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-21 22:04:45 +0300
-
-    xz: Make the man page more friendly to doclifter.
-    
-    Thanks to Eric S. Raymond.
-
- src/xz/xz.1 | 7 ++++---
- 1 file changed, 4 insertions(+), 3 deletions(-)
-
-commit 0c0a1947e6ad90a0a10b7a5c39f6ab99a0aa5c93
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-21 21:54:59 +0300
-
-    xz: A couple of man page fixes.
-    
-    Now the interaction of presets and custom filter chains
-    is described correctly. Earlier it contradicted itself.
-    
-    Thanks to DevHC who reported these issues on IRC to me
-    on 2012-12-14.
-
- src/xz/xz.1 | 35 +++++++++++++++++++++++------------
- 1 file changed, 23 insertions(+), 12 deletions(-)
-
-commit 2fcda89939c903106c429e109083d43d894049e0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-06-21 21:50:26 +0300
-
-    xz: Fix interaction between preset and custom filter chains.
-    
-    There was somewhat illogical behavior when --extreme was
-    specified and mixed with custom filter chains.
-    
-    Before this commit, "xz -9 --lzma2 -e" was equivalent
-    to "xz --lzma2". After it is equivalent to "xz -6e"
-    (all earlier preset options get forgotten when a custom
-    filter chain is specified and the default preset is 6
-    to which -e is applied). I find this less illogical.
-    
-    This also affects the meaning of "xz -9e --lzma2 -7".
-    Earlier it was equivalent to "xz -7e" (the -e specified
-    before a custom filter chain wasn't forgotten). Now it
-    is "xz -7". Note that "xz -7e" still is the same as "xz -e7".
-    
-    Hopefully very few cared about this in the first place,
-    so pretty much no one should even notice this change.
-    
-    Thanks to Conley Moorhous.
-
- src/xz/coder.c | 35 +++++++++++++++++++++--------------
- 1 file changed, 21 insertions(+), 14 deletions(-)
-
-commit 97379c5ea758da3f8b0bc444d5f7fa43753ce610
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-04-27 22:07:46 +0300
-
-    Build: Use -Wvla with GCC if supported.
-    
-    Variable-length arrays are mandatory in C99 but optional in C11.
-    The code doesn't currently use any VLAs and it shouldn't in the
-    future either to stay compatible with C11 without requiring any
-    optional C11 features.
-
- configure.ac | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 8957c58609d3987c58aa72b96c436cf565cc4917
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-04-15 19:29:09 +0300
-
-    xzdec: Improve the --help message.
-    
-    The options are now ordered in the same order as in xz's help
-    message.
-    
-    Descriptions were added to the options that are ignored.
-    I left them in parenthesis even if it looks a bit weird
-    because I find it easier to spot the ignored vs. non-ignored
-    options from the list that way.
-
- src/xzdec/xzdec.c | 10 +++++-----
- 1 file changed, 5 insertions(+), 5 deletions(-)
-
-commit ed886e1a92534a24401d0e99c11f1dcff3b5220a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-04-05 19:25:40 +0300
-
-    Update THANKS.
-
- THANKS | 2 ++
- 1 file changed, 2 insertions(+)
-
-commit 5019413a055ce29e660dbbf15e02443cb5a26c59
-Author: Jeff Bastian <jbastian@redhat.com>
-Date:   2013-04-03 13:59:17 +0200
-
-    xzgrep: make the '-h' option to be --no-filename equivalent
-    
-    * src/scripts/xzgrep.in: Accept the '-h' option in argument parsing.
-
- src/scripts/xzgrep.in | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 5ea900cb5ad862bca81316729f92357c1fc040ce
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-03-23 22:25:15 +0200
-
-    liblzma: Be less picky in lzma_alone_decoder().
-    
-    To avoid false positives when detecting .lzma files,
-    rare values in dictionary size and uncompressed size fields
-    were rejected. They will still be rejected if .lzma files
-    are decoded with lzma_auto_decoder(), but when using
-    lzma_alone_decoder() directly, such files will now be accepted.
-    Hopefully this is an OK compromise.
-    
-    This doesn't affect xz because xz still has its own file
-    format detection code. This does affect lzmadec though.
-    So after this commit lzmadec will accept files that xz or
-    xz-emulating-lzma doesn't.
-    
-    NOTE: lzma_alone_decoder() still won't decode all .lzma files
-    because liblzma's LZMA decoder doesn't support lc + lp > 4.
-    
-    Reported here:
-    http://sourceforge.net/projects/lzmautils/forums/forum/708858/topic/7068827
-
- src/liblzma/common/alone_decoder.c | 22 ++++++++++++++--------
- src/liblzma/common/alone_decoder.h |  5 +++--
- src/liblzma/common/auto_decoder.c  |  2 +-
- 3 files changed, 18 insertions(+), 11 deletions(-)
-
-commit bb117fffa84604b6e3811b068c80db82bf7f7b05
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-03-23 21:55:13 +0200
-
-    liblzma: Use lzma_block_buffer_bound64() in threaded encoder.
-    
-    Now it uses lzma_block_uncomp_encode() if the data doesn't
-    fit into the space calculated by lzma_block_buffer_bound64().
-
- src/liblzma/common/stream_encoder_mt.c | 66 +++++++++++++++++++++++++---------
- 1 file changed, 50 insertions(+), 16 deletions(-)
-
-commit e572e123b55b29527e54ce5f0807f115481d78b9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-03-23 21:51:38 +0200
-
-    liblzma: Fix another deadlock in the threaded encoder.
-    
-    This race condition could cause a deadlock if lzma_end() was
-    called before finishing the encoding. This can happen with
-    xz with debugging enabled (non-debugging version doesn't
-    call lzma_end() before exiting).
-
- src/liblzma/common/stream_encoder_mt.c | 9 ++++++---
- 1 file changed, 6 insertions(+), 3 deletions(-)
-
-commit b465da5988dd59ad98fda10c2e4ea13d0b9c73bc
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-03-23 19:17:33 +0200
-
-    liblzma: Add lzma_block_uncomp_encode().
-    
-    This also adds a new internal function
-    lzma_block_buffer_bound64() which is similar to
-    lzma_block_buffer_bound() but uses uint64_t instead
-    of size_t.
-
- src/liblzma/api/lzma/block.h              | 18 ++++++
- src/liblzma/common/block_buffer_encoder.c | 94 +++++++++++++++++++++----------
- src/liblzma/common/block_buffer_encoder.h | 24 ++++++++
- src/liblzma/liblzma.map                   |  1 +
- 4 files changed, 106 insertions(+), 31 deletions(-)
-
-commit 9e6dabcf22ef4679f4faaae15ebd5b137ae2fad1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2013-03-05 19:14:50 +0200
-
-    Avoid unneeded use of awk in xzless.
-    
-    Use "read" instead of "awk" in xzless to get the version
-    number of "less". The need for awk was introduced in
-    the commit db5c1817fabf7cbb9e4087b1576eb26f0747338e.
-    
-    Thanks to Ariel P for the patch.
-
- src/scripts/xzless.in | 3 +--
- 1 file changed, 1 insertion(+), 2 deletions(-)
-
-commit e7b424d267a34803db8d92a3515528be2ed45abd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-12-14 20:13:32 +0200
-
-    Make the progress indicator smooth in threaded mode.
-    
-    This adds lzma_get_progress() to liblzma and takes advantage
-    of it in xz.
-    
-    lzma_get_progress() collects progress information from
-    the thread-specific structures so that fairly accurate
-    progress information is available to applications. Adding
-    a new function seemed to be a better way than making the
-    information directly available in lzma_stream (like total_in
-    and total_out are) because collecting the information requires
-    locking mutexes. It's waste of time to do it more often than
-    the up to date information is actually needed by an application.
-
- src/liblzma/api/lzma/base.h            | 22 +++++++++-
- src/liblzma/common/common.c            | 16 +++++++
- src/liblzma/common/common.h            |  6 +++
- src/liblzma/common/stream_encoder_mt.c | 77 +++++++++++++++++++++++++++++++---
- src/liblzma/liblzma.map                |  1 +
- src/xz/message.c                       | 20 +++++----
- 6 files changed, 129 insertions(+), 13 deletions(-)
-
-commit 2ebbb994e367f55f2561aa7c9e7451703c171f2f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-12-14 11:01:41 +0200
-
-    liblzma: Fix mythread_sync for nested locking.
-
- src/common/mythread.h | 5 +++--
- 1 file changed, 3 insertions(+), 2 deletions(-)
-
-commit 4c7e28705f6de418d19cc77324ef301f996e01ff
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-12-13 21:05:36 +0200
-
-    xz: Mention --threads in --help.
-    
-    Thanks to Olivier Delhomme for pointing out that this
-    was still missing.
-
- src/xz/message.c | 4 ++++
- 1 file changed, 4 insertions(+)
-
-commit db5c1817fabf7cbb9e4087b1576eb26f0747338e
-Author: Jonathan Nieder <jrnieder@gmail.com>
-Date:   2012-11-19 00:10:10 -0800
-
-    xzless: Make "less -V" parsing more robust
-    
-    In v4.999.9beta~30 (xzless: Support compressed standard input,
-    2009-08-09), xzless learned to parse ‘less -V’ output to figure out
-    whether less is new enough to handle $LESSOPEN settings starting
-    with “|-”.  That worked well for a while, but the version string from
-    ‘less’ versions 448 (June, 2012) is misparsed, producing a warning:
-    
-    	$ xzless /tmp/test.xz; echo $?
-    	/usr/bin/xzless: line 49: test: 456 (GNU regular expressions): \
-    	integer expression expected
-    	0
-    
-    More precisely, modern ‘less’ lists the regexp implementation along
-    with its version number, and xzless passes the entire version number
-    with attached parenthetical phrase as a number to "test $a -gt $b",
-    producing the above confusing message.
-    
-    	$ less-444 -V | head -1
-    	less 444
-    	$ less -V | head -1
-    	less 456 (no regular expressions)
-    
-    So relax the pattern matched --- instead of expecting "less <number>",
-    look for a line of the form "less <number>[ (extra parenthetical)]".
-    While at it, improve the behavior when no matching line is found ---
-    instead of producing a cryptic message, we can fall back on a LESSPIPE
-    setting that is supported by all versions of ‘less’.
-    
-    The implementation uses "awk" for simplicity.  Hopefully that’s
-    portable enough.
-    
-    Reported-by: Jörg-Volker Peetz <jvpeetz@web.de>
-    Signed-off-by: Jonathan Nieder <jrnieder@gmail.com>
-
- src/scripts/xzless.in | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
-
-commit 65536214a31ecd33b6b03b68a351fb597d3703d6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-10-03 15:54:24 +0300
-
-    xz: Fix the note about --rsyncable on the man page.
-
- src/xz/xz.1 | 17 +++++++++--------
- 1 file changed, 9 insertions(+), 8 deletions(-)
-
-commit 3d93b6354927247a1569caf22ad27b07e97ee904
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-09-28 20:11:09 +0300
-
-    xz: Improve handling of failed realloc in xrealloc.
-    
-    Thanks to Jim Meyering.
-
- src/xz/util.c | 14 ++++++++++++--
- 1 file changed, 12 insertions(+), 2 deletions(-)
-
-commit ab225620664e235637833be2329935f9d290ba80
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-08-24 16:27:31 +0300
-
-    A few typo fixes to comments and the xz man page.
-    
-    Thanks to Jim Meyering.
-
- configure.ac               | 2 +-
- src/liblzma/check/sha256.c | 1 -
- src/xz/xz.1                | 4 ++--
- 3 files changed, 3 insertions(+), 4 deletions(-)
-
-commit f3c1ec69d910175ffd431fd82968dd35cec806ed
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-08-13 21:40:09 +0300
-
-    xz: Add a warning to --help about alpha and beta versions.
-
- src/xz/message.c | 5 +++++
- 1 file changed, 5 insertions(+)
-
-commit d8eaf9d8278c23c2cf2b7ca5562d4de570d3b5db
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-08-02 17:13:30 +0300
-
-    Build: Bump gettext version requirement to 0.18.
-    
-    Otherwise too old version of m4/lib-link.m4 gets included
-    when autoreconf -fi is run.
-
- configure.ac | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 96e08902b09f0f304d4ff80c6e83ef7fff883f34
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-17 18:29:08 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 3778db1be53e61ff285c573af5ee468803008456
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-17 18:19:59 +0300
-
-    liblzma: Make the use of lzma_allocator const-correct.
-    
-    There is a tiny risk of causing breakage: If an application
-    assigns lzma_stream.allocator to a non-const pointer, such
-    code won't compile anymore. I don't know why anyone would do
-    such a thing though, so in practice this shouldn't cause trouble.
-    
-    Thanks to Jan Kratochvil for the patch.
-
- src/liblzma/api/lzma/base.h                |  4 +++-
- src/liblzma/api/lzma/block.h               |  6 ++---
- src/liblzma/api/lzma/container.h           |  9 +++++---
- src/liblzma/api/lzma/filter.h              | 13 ++++++-----
- src/liblzma/api/lzma/index.h               | 16 ++++++-------
- src/liblzma/api/lzma/index_hash.h          |  4 ++--
- src/liblzma/common/alone_decoder.c         |  6 ++---
- src/liblzma/common/alone_decoder.h         |  2 +-
- src/liblzma/common/alone_encoder.c         |  8 +++----
- src/liblzma/common/auto_decoder.c          |  6 ++---
- src/liblzma/common/block_buffer_decoder.c  |  2 +-
- src/liblzma/common/block_buffer_encoder.c  |  4 ++--
- src/liblzma/common/block_decoder.c         |  6 ++---
- src/liblzma/common/block_decoder.h         |  2 +-
- src/liblzma/common/block_encoder.c         |  8 +++----
- src/liblzma/common/block_encoder.h         |  2 +-
- src/liblzma/common/block_header_decoder.c  |  4 ++--
- src/liblzma/common/common.c                | 10 ++++-----
- src/liblzma/common/common.h                | 20 +++++++++--------
- src/liblzma/common/easy_buffer_encoder.c   |  4 ++--
- src/liblzma/common/filter_buffer_decoder.c |  3 ++-
- src/liblzma/common/filter_buffer_encoder.c |  7 +++---
- src/liblzma/common/filter_common.c         |  4 ++--
- src/liblzma/common/filter_common.h         |  2 +-
- src/liblzma/common/filter_decoder.c        |  7 +++---
- src/liblzma/common/filter_decoder.h        |  2 +-
- src/liblzma/common/filter_encoder.c        |  2 +-
- src/liblzma/common/filter_encoder.h        |  2 +-
- src/liblzma/common/filter_flags_decoder.c  |  2 +-
- src/liblzma/common/index.c                 | 26 ++++++++++-----------
- src/liblzma/common/index_decoder.c         | 12 +++++-----
- src/liblzma/common/index_encoder.c         |  6 ++---
- src/liblzma/common/index_encoder.h         |  2 +-
- src/liblzma/common/index_hash.c            |  6 +++--
- src/liblzma/common/outqueue.c              |  4 ++--
- src/liblzma/common/outqueue.h              |  5 +++--
- src/liblzma/common/stream_buffer_decoder.c |  2 +-
- src/liblzma/common/stream_buffer_encoder.c |  3 ++-
- src/liblzma/common/stream_decoder.c        |  9 ++++----
- src/liblzma/common/stream_decoder.h        |  5 +++--
- src/liblzma/common/stream_encoder.c        | 10 ++++-----
- src/liblzma/common/stream_encoder_mt.c     | 16 ++++++-------
- src/liblzma/delta/delta_common.c           |  4 ++--
- src/liblzma/delta/delta_decoder.c          |  6 ++---
- src/liblzma/delta/delta_decoder.h          |  5 +++--
- src/liblzma/delta/delta_encoder.c          |  6 ++---
- src/liblzma/delta/delta_encoder.h          |  3 ++-
- src/liblzma/delta/delta_private.h          |  2 +-
- src/liblzma/lz/lz_decoder.c                |  8 +++----
- src/liblzma/lz/lz_decoder.h                |  7 +++---
- src/liblzma/lz/lz_encoder.c                | 19 ++++++++--------
- src/liblzma/lz/lz_encoder.h                |  6 ++---
- src/liblzma/lzma/lzma2_decoder.c           |  8 +++----
- src/liblzma/lzma/lzma2_decoder.h           |  5 +++--
- src/liblzma/lzma/lzma2_encoder.c           |  6 ++---
- src/liblzma/lzma/lzma2_encoder.h           |  2 +-
- src/liblzma/lzma/lzma_decoder.c            |  8 +++----
- src/liblzma/lzma/lzma_decoder.h            |  7 +++---
- src/liblzma/lzma/lzma_encoder.c            |  7 +++---
- src/liblzma/lzma/lzma_encoder.h            |  5 +++--
- src/liblzma/simple/arm.c                   |  8 ++++---
- src/liblzma/simple/armthumb.c              |  8 ++++---
- src/liblzma/simple/ia64.c                  |  8 ++++---
- src/liblzma/simple/powerpc.c               |  8 ++++---
- src/liblzma/simple/simple_coder.c          | 10 ++++-----
- src/liblzma/simple/simple_coder.h          | 36 ++++++++++++++++++++----------
- src/liblzma/simple/simple_decoder.c        |  2 +-
- src/liblzma/simple/simple_decoder.h        |  2 +-
- src/liblzma/simple/simple_private.h        |  3 ++-
- src/liblzma/simple/sparc.c                 |  8 ++++---
- src/liblzma/simple/x86.c                   |  8 ++++---
- 71 files changed, 269 insertions(+), 219 deletions(-)
-
-commit d625c7cf824fd3b61c6da84f56179e94917ff603
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-05 07:36:28 +0300
-
-    Tests: Remove tests/test_block.c that had gotten committed accidentally.
-
- tests/test_block.c | 52 ----------------------------------------------------
- 1 file changed, 52 deletions(-)
-
-commit 0b09d266cce72bc4841933b171e79551e488927c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-05 07:33:35 +0300
-
-    Build: Include macosx/build.sh in the distribution.
-    
-    It has been in the Git repository since 2010 but probably
-    few people have seen it since it hasn't been included in
-    the release tarballs. :-(
-
- Makefile.am | 1 +
- 1 file changed, 1 insertion(+)
-
-commit d6e0b23d4613b9f417893dd96cc168c8005ece3d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-05 07:28:53 +0300
-
-    Build: Include validate_map.sh in the distribution.
-    
-    It's required by "make mydist".
-    
-    Fix also the location of EXTRA_DIST+= so that those files
-    get distributed also if symbol versioning isn't enabled.
-
- src/liblzma/Makefile.am | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 19de545d86097c3954d69ab5d12820387f6a09bc
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-05 07:24:45 +0300
-
-    Docs: Fix the name LZMA Utils -> XZ Utils in debug/README.
-
- debug/README | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 672eccf57c31a40dfb956b7662db06d43e18618e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-05 07:23:17 +0300
-
-    Include debug/translation.bash in the distribution.
-    
-    Also fix the script name mentioned in README.
-
- README            | 4 ++--
- debug/Makefile.am | 3 +++
- 2 files changed, 5 insertions(+), 2 deletions(-)
-
-commit cafb523adac1caf305e70a04bc37f25602bf990c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-04 22:31:58 +0300
-
-    xz: Document --block-list better.
-    
-    Thanks to Jonathan Nieder.
-
- src/xz/xz.1 | 8 +++++++-
- 1 file changed, 7 insertions(+), 1 deletion(-)
-
-commit c7ff218528bc8f7c65e7ef73c6515777346c6794
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-04 20:01:49 +0300
-
-    Bump the version number to 5.1.2alpha.
-
- src/liblzma/api/lzma/version.h | 2 +-
- src/liblzma/liblzma.map        | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
-
-commit 8f3c1d886f93e6478ad509ff52102b2ce7faa999
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-04 20:01:19 +0300
-
-    Update NEWS for 5.1.2alpha.
-
- NEWS | 41 +++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 41 insertions(+)
-
-commit 0d5fa05466e580fbc458820f87013ae7644e20e5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-04 19:58:23 +0300
-
-    xz: Fix the version number printed by xz -lvv.
-    
-    The decoder bug was fixed in 5.0.2 instead of 5.0.3.
-
- src/xz/list.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
-
-commit df11317985a4165731dde12bb0f0028da0e7b77f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-04 17:11:31 +0300
-
-    Build: Add a comment to configure.ac about symbol versioning.
-
- configure.ac | 4 ++++
- 1 file changed, 4 insertions(+)
-
-commit bd9cc179e8be3ef515201d3ed9c7dd79ae88869d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-04 17:06:49 +0300
-
-    Update TODO.
-
- TODO | 12 ++++++++++--
- 1 file changed, 10 insertions(+), 2 deletions(-)
-
-commit 4a238dd9b22f462cac5e199828bf1beb0df05884
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-04 17:05:46 +0300
-
-    Document --enable-symbol-versions in INSTALL.
-
- INSTALL | 5 +++++
- 1 file changed, 5 insertions(+)
-
-commit 88ccf47205d7f3aa314d358c72ef214f10f68b43
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-03 21:16:39 +0300
-
-    xz: Add incomplete support for --block-list.
-    
-    It's broken with threads and when also --block-size is used.
-
- src/xz/args.c    | 78 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- src/xz/args.h    |  1 +
- src/xz/coder.c   | 48 ++++++++++++++++++++++++++++------
- src/xz/coder.h   |  4 +++
- src/xz/main.c    |  1 +
- src/xz/message.c |  6 +++++
- src/xz/xz.1      | 23 +++++++++++++++--
- 7 files changed, 151 insertions(+), 10 deletions(-)
-
-commit 972179cdcdf5d8949c48ee31737d87d3050b44af
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-07-01 18:44:33 +0300
-
-    xz: Update the man page about the new field in --robot -lvv.
-
- src/xz/xz.1 | 18 +++++++++++++++++-
- 1 file changed, 17 insertions(+), 1 deletion(-)
-
-commit 1403707fc64a70976aebe66f8d9a9bd12f73a2c5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-06-28 10:47:49 +0300
-
-    liblzma: Check that the first byte of range encoded data is 0x00.
-    
-    It is just to be more pedantic and thus perhaps catch broken
-    files slightly earlier.
-
- src/liblzma/lzma/lzma_decoder.c        |  8 ++++++--
- src/liblzma/rangecoder/range_decoder.h | 12 +++++++++---
- 2 files changed, 15 insertions(+), 5 deletions(-)
-
-commit eccd8017ffe2c5de473222c4963ec53c62f7fda2
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-06-22 19:00:23 +0300
-
-    Update NEWS from 5.0.4.
-
- NEWS | 37 +++++++++++++++++++++++++++++++++++++
- 1 file changed, 37 insertions(+)
-
-commit 2e6754eac26a431e8d340c28906f63bcd1e177e8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-06-22 14:34:03 +0300
-
-    xz: Update man page date to match the latest update.
-
- src/xz/xz.1 | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit b3235a0b1af45d5e1244cbe3191516966c076fa0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-06-18 21:27:47 +0300
-
-    Docs: Language fix to 01_compress_easy.c.
-    
-    Thanks to Jonathan Nieder.
-
- doc/examples/01_compress_easy.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit f1675f765fe228cb5a5f904f853445a03e33cfe9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-06-14 20:15:30 +0300
-
-    Fix the top-level Makefile.am for the new example programs.
-
- Makefile.am | 12 ++++++++++--
- 1 file changed, 10 insertions(+), 2 deletions(-)
-
-commit 3a0c5378abefaf86aa39a62a7c9682bdb21568a1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-06-14 10:52:33 +0300
-
-    Docs: Add new example programs.
-    
-    These have more comments than the old examples and
-    human-readable error messages. More tutorial-like examples
-    are needed but these are a start.
-
- doc/examples/00_README.txt        |  27 ++++
- doc/examples/01_compress_easy.c   | 297 ++++++++++++++++++++++++++++++++++++++
- doc/examples/02_decompress.c      | 287 ++++++++++++++++++++++++++++++++++++
- doc/examples/03_compress_custom.c | 193 +++++++++++++++++++++++++
- doc/examples/Makefile             |  23 +++
- 5 files changed, 827 insertions(+)
-
-commit 1bd2c2c553e30c4a73cfb82abc6908efd6be6b8d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-06-14 10:33:27 +0300
-
-    Docs: Move xz_pipe_comp.c and xz_pipe_decomp.c to doc/examples_old.
-    
-    It is good to keep these around to so that if someone has
-    copied the decompressor bug from xz_pipe_decomp.c he has
-    an example how to easily fix it.
-
- doc/examples/xz_pipe_comp.c       | 127 --------------------------------------
- doc/examples/xz_pipe_decomp.c     | 123 ------------------------------------
- doc/examples_old/xz_pipe_comp.c   | 127 ++++++++++++++++++++++++++++++++++++++
- doc/examples_old/xz_pipe_decomp.c | 123 ++++++++++++++++++++++++++++++++++++
- 4 files changed, 250 insertions(+), 250 deletions(-)
-
-commit 905f0ab5b5ce544d4b68a2ed6077df0f3d021292
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-06-14 10:33:01 +0300
-
-    Docs: Fix a bug in xz_pipe_decomp.c example program.
-
- doc/examples/xz_pipe_decomp.c | 10 +++++++++-
- 1 file changed, 9 insertions(+), 1 deletion(-)
-
-commit 4bd1a3bd5fdf4870b2f96dd0b8a21657c8a58ad8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-30 23:14:33 +0300
-
-    Translations: Update the French translation.
-    
-    Thanks to Adrien Nader.
-
- po/fr.po | 148 ++++++++++++++++++++++++++++++++++-----------------------------
- 1 file changed, 79 insertions(+), 69 deletions(-)
-
-commit d2e836f2f3a87df6fe6bb0589b037db51205d910
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-29 23:42:37 +0300
-
-    Translations: Update the German translation.
-    
-    The previous only included the new strings in v5.0.
-
- po/de.po | 229 +++++++++++++++++++++++++++++++++++++--------------------------
- 1 file changed, 133 insertions(+), 96 deletions(-)
-
-commit c9a16151577ba459afd6e3528df23bc0ddb95171
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-29 22:26:27 +0300
-
-    Translations: Update the German translation.
-
- po/de.po | 169 ++++++++++++++++++++++++++++++++++-----------------------------
- 1 file changed, 91 insertions(+), 78 deletions(-)
-
-commit 1530a74fd48f8493372edad137a24541efe24713
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-29 22:14:21 +0300
-
-    Translations: Update Polish translation.
-
- po/pl.po | 283 +++++++++++++++++++++++++++++++++++++--------------------------
- 1 file changed, 165 insertions(+), 118 deletions(-)
-
-commit d8db706acb8316f9861abd432cfbe001dd6d0c5c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-28 20:42:11 +0300
-
-    liblzma: Fix possibility of incorrect LZMA_BUF_ERROR.
-    
-    lzma_code() could incorrectly return LZMA_BUF_ERROR if
-    all of the following was true:
-    
-      - The caller knows how many bytes of output to expect
-        and only provides that much output space.
-    
-      - When the last output bytes are decoded, the
-        caller-provided input buffer ends right before
-        the LZMA2 end of payload marker. So LZMA2 won't
-        provide more output anymore, but it won't know it
-        yet and thus won't return LZMA_STREAM_END yet.
-    
-      - A BCJ filter is in use and it hasn't left any
-        unfiltered bytes in the temp buffer. This can happen
-        with any BCJ filter, but in practice it's more likely
-        with filters other than the x86 BCJ.
-    
-    Another situation where the bug can be triggered happens
-    if the uncompressed size is zero bytes and no output space
-    is provided. In this case the decompression can fail even
-    if the whole input file is given to lzma_code().
-    
-    A similar bug was fixed in XZ Embedded on 2011-09-19.
-
- src/liblzma/simple/simple_coder.c |   2 +-
- tests/Makefile.am                 |   4 +-
- tests/test_bcj_exact_size.c       | 112 ++++++++++++++++++++++++++++++++++++++
- 3 files changed, 116 insertions(+), 2 deletions(-)
-
-commit 3f94b6d87f1b8f1c421ba548f8ebb83dca9c8cda
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-28 15:38:32 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 7769ea051d739a38a1640fd448cf5eb83cb119c6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-28 15:37:43 +0300
-
-    xz: Don't show a huge number in -vv when memory limit is disabled.
-
- src/xz/message.c | 12 +++++++++++-
- 1 file changed, 11 insertions(+), 1 deletion(-)
-
-commit ec921105725e4d3ef0a683dd83eee6f24ab60ccd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-27 22:30:17 +0300
-
-    xz: Document the "summary" lines of --robot -lvv.
-    
-    This documents only the columns that are in v5.0.
-    The new columns added in the master branch aren't
-    necessarily stable yet.
-
- src/xz/xz.1 | 19 +++++++++++++++++++
- 1 file changed, 19 insertions(+)
-
-commit 27d24eb0a9f6eed96d6a4594c2b0bf7a91d29f9a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-27 21:53:20 +0300
-
-    xz: Fix output of verbose --robot --list modes.
-    
-    It printed the filename in "filename (x/y)" format
-    which it obviously shouldn't do in robot mode.
-
- src/xz/message.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit ab25b82a91754d9388c89abddf806424671d9431
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-24 18:33:54 +0300
-
-    Build: Upgrade m4/acx_pthread.m4 to the latest version.
-
- m4/ax_pthread.m4 | 98 +++++++++++++++++++++++++++++++++++---------------------
- 1 file changed, 62 insertions(+), 36 deletions(-)
-
-commit d05d6d65c41a4bc83f162fa3d67c5d84e8751634
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-10 21:15:17 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit e077391982f9f28dbfe542bba8800e7c5b916666
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-05-10 21:14:16 +0300
-
-    Docs: Cleanup line wrapping a bit.
-
- README          | 12 ++++++------
- doc/history.txt | 49 +++++++++++++++++++++++++------------------------
- 2 files changed, 31 insertions(+), 30 deletions(-)
-
-commit fc39849c350225c6a1cd7f6e6adff1020521eabc
-Author: Benno Schulenberg <bensberg@justemail.net>
-Date:   2012-03-13 22:04:04 +0100
-
-    Fix a few typos and add some missing articles in some documents.
-    
-    Also hyphenate several compound adjectives.
-    
-    Signed-off-by: Benno Schulenberg <bensberg@justemail.net>
-
- AUTHORS         |  6 +++---
- README          | 42 ++++++++++++++++++++---------------------
- doc/faq.txt     | 24 ++++++++++++------------
- doc/history.txt | 58 ++++++++++++++++++++++++++++-----------------------------
- 4 files changed, 65 insertions(+), 65 deletions(-)
-
-commit 29fa0566d5df199cb9acb2d17bf7eea61acc7fa1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-04-29 11:51:25 +0300
-
-    Windows: Update notes about static linking with MSVC.
-
- windows/README-Windows.txt | 13 +++++++++----
- 1 file changed, 9 insertions(+), 4 deletions(-)
-
-commit aac1b31ea4e66cf5a7a8c116bdaa15aa45e6c56e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-04-19 15:25:26 +0300
-
-    liblzma: Remove outdated comments.
-
- src/liblzma/simple/simple_coder.c   | 3 ---
- src/liblzma/simple/simple_private.h | 3 +--
- 2 files changed, 1 insertion(+), 5 deletions(-)
-
-commit df14a46013bea70c0bd35be7821b0b9108f97de7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-04-19 14:17:52 +0300
-
-    DOS: Link against DJGPP's libemu to support FPU emulation.
-    
-    This way xz should work on 386SX and 486SX. Floating point
-    only is needed for verbose output in xz.
-
- dos/Makefile | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 03ed742a3a4931bb5c821357832083b26f577b13
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-04-19 14:02:25 +0300
-
-    liblzma: Fix Libs.private in liblzma.pc to include -lrt when needed.
-
- src/liblzma/liblzma.pc.in | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 8c5b13ad59df70f49429bfdfd6ac120b8f892fda
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-04-19 13:58:55 +0300
-
-    Docs: Update MINIX 3 information in INSTALL.
-
- INSTALL | 8 +++++---
- 1 file changed, 5 insertions(+), 3 deletions(-)
-
-commit c7376fc415a1566f38b2de4b516a17013d516a8b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-02-22 14:23:13 +0200
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit cff070aba6281ba743d29a62b8c0c66e5da4b2a6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-02-22 14:02:34 +0200
-
-    Fix exit status of xzgrep when grepping binary files.
-    
-    When grepping binary files, grep may exit before it has
-    read all the input. In this case, gzip -q returns 2 (eating
-    SIGPIPE), but xz and bzip2 show SIGPIPE as the exit status
-    (e.g. 141). This causes wrong exit status when grepping
-    xz- or bzip2-compressed binary files.
-    
-    The fix checks for the special exit status that indicates SIGPIPE.
-    It uses kill -l which should be supported everywhere since it
-    is in both SUSv2 (1997) and POSIX.1-2008.
-    
-    Thanks to James Buren for the bug report.
-
- src/scripts/xzgrep.in | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
-
-commit 41cafb2bf9beea915710ee68f05fe929cd17759c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-02-22 12:08:43 +0200
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 2dcea03712fa881930d69ec9eff70855c3d126d9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-02-22 12:00:16 +0200
-
-    Fix compiling with IBM XL C on AIX.
-
- INSTALL      | 36 ++++++++++++++++++++++--------------
- configure.ac |  6 +++++-
- 2 files changed, 27 insertions(+), 15 deletions(-)
-
-commit 7db6bdf4abcf524115be2cf5659ed540cef074c5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2012-01-10 17:13:03 +0200
-
-    Tests: Fix a compiler warning with _FORTIFY_SOURCE.
-    
-    Reported here:
-    http://sourceforge.net/projects/lzmautils/forums/forum/708858/topic/4927385
-
- tests/create_compress_files.c | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
-
-commit 694952d545b6cf056547893ced69486eff9ece55
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-12-19 21:21:29 +0200
-
-    Docs: Explain the stable releases better in README.
-
- README | 6 +++++-
- 1 file changed, 5 insertions(+), 1 deletion(-)
-
-commit 418fe668b3c53a9a20020b6cc652aaf25c734b29
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-11-07 13:07:52 +0200
-
-    xz: Show minimum required XZ Utils version in xz -lvv.
-    
-    Man page wasn't updated yet.
-
- src/xz/list.c | 63 +++++++++++++++++++++++++++++++++++++++++++++++++++++------
- 1 file changed, 57 insertions(+), 6 deletions(-)
-
-commit 7081d82c37326bac97184e338345fa1c327e3580
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-11-04 17:57:16 +0200
-
-    xz: Fix a typo in a comment.
-    
-    Thanks to Bela Lubkin.
-
- src/xz/args.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 232fe7cd70ad258d6a37f17e860e0f1b1891eeb5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-11-03 17:08:02 +0200
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 74d2bae4d3449c68453b0473dd3430ce91fd90c1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-11-03 17:07:22 +0200
-
-    xz: Fix xz on EBCDIC systems.
-    
-    Thanks to Chris Donawa.
-
- src/xz/coder.c | 5 ++++-
- 1 file changed, 4 insertions(+), 1 deletion(-)
-
-commit 4ac4923f47cc0ef97dd9ca5cfcc44fc53eeab34a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-10-23 17:09:10 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit ab50ae3ef40c81e5bf613905ca3fd636548b75e7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-10-23 17:08:14 +0300
-
-    liblzma: Fix invalid free() in the threaded encoder.
-    
-    It was triggered if initialization failed e.g. due to
-    running out of memory.
-    
-    Thanks to Arkadiusz Miskiewicz.
-
- src/liblzma/common/outqueue.c | 4 ++++
- 1 file changed, 4 insertions(+)
-
-commit 6b620a0f0813d28c3c544b4ff8cb595b38a6e908
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-10-23 17:05:55 +0300
-
-    liblzma: Fix a deadlock in the threaded encoder.
-    
-    It was triggered when reinitializing the encoder,
-    e.g. when encoding two files.
-
- src/liblzma/common/stream_encoder_mt.c | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
-
-commit bd52cf150ecd51e3ab63a9cc1a3cff6a77500178
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-09-06 12:03:41 +0300
-
-    Build: Fix "make check" on Windows.
-
- tests/Makefile.am  | 7 +++++--
- windows/build.bash | 2 ++
- 2 files changed, 7 insertions(+), 2 deletions(-)
-
-commit 5c5b2256969ac473001b7d67615ed3bd0a54cc82
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-08-09 21:19:13 +0300
-
-    Update THANKS.
-
- THANKS | 2 ++
- 1 file changed, 2 insertions(+)
-
-commit 5b1e1f10741af9e4bbe4cfc3261fb7c7b04f7809
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-08-09 21:16:44 +0300
-
-    Workaround unusual SIZE_MAX on SCO OpenServer.
-
- src/common/sysdefs.h | 9 ++++++---
- 1 file changed, 6 insertions(+), 3 deletions(-)
-
-commit e9ed88126eee86e2511fa42681a5c7104820cf0a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-08-06 20:37:28 +0300
-
-    Run the scripts with the correct shell in test_scripts.sh.
-    
-    The scripts are now made executable in the build tree.
-    This way the scripts can be run like programs in
-    test_scripts.sh. Previously test_scripts.sh always
-    used sh but it's not correct if @POSIX_SHELL@ is set
-    to something else by configure.
-    
-    Thanks to Jonathan Nieder for the patch.
-
- configure.ac          | 8 ++++----
- tests/test_scripts.sh | 8 ++++----
- 2 files changed, 8 insertions(+), 8 deletions(-)
-
-commit 1c673e5681720491a74fc4b2992e075f47302c22
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-07-31 11:01:47 +0300
-
-    Fix exit status of "xzdiff foo.xz bar.xz".
-    
-    xzdiff was clobbering the exit status from diff in a case
-    statement used to analyze the exit statuses from "xz" when
-    its operands were two compressed files. Save and restore
-    diff's exit status to fix this.
-    
-    The bug is inherited from zdiff in GNU gzip and was fixed
-    there on 2009-10-09.
-    
-    Thanks to Jonathan Nieder for the patch and
-    to Peter Pallinger for reporting the bug.
-
- src/scripts/xzdiff.in |  2 ++
- tests/Makefile.am     |  4 +++-
- tests/test_scripts.sh | 54 +++++++++++++++++++++++++++++++++++++++++++++++++++
- 3 files changed, 59 insertions(+), 1 deletion(-)
-
-commit 324cde7a864f4506c32ae7846d688c359a83fe65
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-06-16 12:15:29 +0300
-
-    liblzma: Remove unneeded semicolon.
-
- src/liblzma/lz/lz_encoder_hash.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 492c86345551a51a29bf18e55fe55a5e86f169ce
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-28 19:24:56 +0300
-
-    Build: Make configure print if symbol versioning is enabled or not.
-
- configure.ac | 2 ++
- 1 file changed, 2 insertions(+)
-
-commit fc4d4436969bd4d71b704d400a165875e596034a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-28 16:43:26 +0300
-
-    Don't call close(-1) in tuklib_open_stdxxx() on error.
-    
-    Thanks to Jim Meyering.
-
- src/common/tuklib_open_stdxxx.c | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
-
-commit bd35d903a04c4d388adb4065b0fa271302380895
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-28 15:55:39 +0300
-
-    liblzma: Use symbol versioning.
-    
-    Symbol versioning is enabled by default on GNU/Linux,
-    other GNU-based systems, and FreeBSD.
-    
-    I'm not sure how stable this is, so it may need
-    backward-incompatible changes before the next release.
-    
-    The idea is that alpha and beta symbols are considered
-    unstable and require recompiling the applications that
-    use those symbols. Once a symbol is stable, it may get
-    extended with new features in ways that don't break
-    compatibility with older ABI & API.
-    
-    The mydist target runs validate_map.sh which should
-    catch some probable problems in liblzma.map. Otherwise
-    I would forget to update the map file for new releases.
-
- Makefile.am                 |   1 +
- configure.ac                |  21 +++++++++
- src/liblzma/Makefile.am     |   6 +++
- src/liblzma/liblzma.map     | 105 ++++++++++++++++++++++++++++++++++++++++++++
- src/liblzma/validate_map.sh |  68 ++++++++++++++++++++++++++++
- 5 files changed, 201 insertions(+)
-
-commit afbb244362c9426a37ce4eb9d54aab768da3adad
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-28 09:46:46 +0300
-
-    Translations: Update the Italian translation.
-    
-    Thanks to Milo Casagrande.
-
- po/it.po | 365 +++++++++++++++++++++++++++++++++++++--------------------------
- 1 file changed, 216 insertions(+), 149 deletions(-)
-
-commit 79bef85e0543c0c3723281c3c817616c6cec343b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-28 08:46:04 +0300
-
-    Tests: Add a test file for the bug in the previous commit.
-
- tests/files/README                  |   4 ++++
- tests/files/bad-1-block_header-6.xz | Bin 0 -> 72 bytes
- 2 files changed, 4 insertions(+)
-
-commit c0297445064951807803457dca1611b3c47e7f0f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-27 22:25:44 +0300
-
-    xz: Fix error handling in xz -lvv.
-    
-    It could do an invalid free() and read past the end
-    of the uninitialized filters array.
-
- src/xz/list.c | 21 ++++++---------------
- 1 file changed, 6 insertions(+), 15 deletions(-)
-
-commit 8bd91918ac50731f00b1a2a48072980572eb2ff9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-27 22:09:49 +0300
-
-    liblzma: Handle allocation failures correctly in lzma_index_init().
-    
-    Thanks to Jim Meyering.
-
- src/liblzma/common/index.c | 7 +++++--
- 1 file changed, 5 insertions(+), 2 deletions(-)
-
-commit fe00f95828ef5627721b57e054f7eb2d42a2c961
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-24 00:23:46 +0300
-
-    Build: Fix checking for system-provided SHA-256.
-
- configure.ac | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 21b45b9bab541f419712cbfd473ccc31802e0397
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-23 18:30:30 +0300
-
-    Build: Set GZIP_ENV=-9n in top-level Makefile.am.
-
- Makefile.am | 3 +++
- 1 file changed, 3 insertions(+)
-
-commit 48053e8a4550233af46359024538bff90c870ab1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-22 16:42:11 +0300
-
-    Update NEWS for 5.0.3.
-
- NEWS | 32 ++++++++++++++++++++++++++++++++
- 1 file changed, 32 insertions(+)
-
-commit bba37df2c9e54ad773e15ff00a09d2d6989fb3b2
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-21 16:28:44 +0300
-
-    Add French translation.
-    
-    It is known that the BCJ filter --help text is only
-    partially translated.
-
- po/LINGUAS |   1 +
- po/fr.po   | 864 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 865 insertions(+)
-
-commit 4161d7634965a7a287bf208dcd79f6185f448fe8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-21 15:12:10 +0300
-
-    xz: Translate also the string used to print the program name.
-    
-    French needs a space before a colon, e.g. "xz : foo error".
-
- src/xz/message.c | 6 +++++-
- 1 file changed, 5 insertions(+), 1 deletion(-)
-
-commit b94aa0c8380cdb18cddb33440d625474c16643cf
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-21 15:08:44 +0300
-
-    liblzma: Try to use SHA-256 from the operating system.
-    
-    If the operating system libc or other base libraries
-    provide SHA-256, use that instead of our own copy.
-    Note that this doesn't use OpenSSL or libgcrypt or
-    such libraries to avoid creating dependencies to
-    other packages.
-    
-    This supports at least FreeBSD, NetBSD, OpenBSD, Solaris,
-    MINIX, and Darwin. They all provide similar but not
-    identical SHA-256 APIs; everyone is a little different.
-    
-    Thanks to Wim Lewis for the original patch, improvements,
-    and testing.
-
- configure.ac                   | 54 +++++++++++++++++++++++++++
- src/liblzma/check/Makefile.inc |  2 +
- src/liblzma/check/check.h      | 83 ++++++++++++++++++++++++++++++++++++++----
- 3 files changed, 131 insertions(+), 8 deletions(-)
-
-commit f004128678d43ea10b4a6401aa184cf83252d6ec
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-17 12:52:18 +0300
-
-    Don't use clockid_t in mythread.h when clock_gettime() isn't available.
-    
-    Thanks to Wim Lewis for the patch.
-
- src/common/mythread.h | 2 ++
- 1 file changed, 2 insertions(+)
-
-commit f779516f42ebd2db47a5b7d6143459bf7737cf2f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-17 12:26:28 +0300
-
-    Update THANKS.
-
- THANKS | 3 +++
- 1 file changed, 3 insertions(+)
-
-commit 830ba587775bb562f6eaf05cad61bf669d1f8892
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-17 12:21:33 +0300
-
-    Update INSTALL with a note about linker problem on OpenSolaris x86.
-
- INSTALL | 23 +++++++++++++++++------
- 1 file changed, 17 insertions(+), 6 deletions(-)
-
-commit ec7106309c8060e9c646dba20c4f15689a0bbb04
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-17 12:01:37 +0300
-
-    Build: Fix initialization of enable_check_* variables in configure.ac.
-    
-    This doesn't matter much in practice since it is unlikely
-    that anyone would have such environment variable names.
-    
-    Thanks to Wim Lewis.
-
- configure.ac | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 4c6e146df99696920f12410fb17754412797ef36
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-17 11:54:38 +0300
-
-    Add underscores to attributes (__attribute((__foo__))).
-
- src/liblzma/common/alone_decoder.c |  2 +-
- src/liblzma/common/alone_encoder.c |  2 +-
- src/liblzma/common/block_encoder.c |  2 +-
- src/liblzma/common/common.c        |  2 +-
- src/liblzma/common/common.h        |  2 +-
- src/liblzma/common/index_decoder.c |  9 +++++----
- src/liblzma/common/index_encoder.c | 11 ++++++-----
- src/liblzma/delta/delta_encoder.c  |  2 +-
- src/liblzma/lz/lz_decoder.c        |  2 +-
- src/liblzma/lz/lz_encoder.c        |  2 +-
- src/liblzma/simple/arm.c           |  2 +-
- src/liblzma/simple/armthumb.c      |  2 +-
- src/liblzma/simple/ia64.c          |  2 +-
- src/liblzma/simple/powerpc.c       |  2 +-
- src/liblzma/simple/simple_coder.c  |  2 +-
- src/liblzma/simple/sparc.c         |  2 +-
- src/lzmainfo/lzmainfo.c            |  4 ++--
- src/xz/coder.c                     |  2 +-
- src/xz/hardware.h                  |  2 +-
- src/xz/message.c                   |  2 +-
- src/xz/message.h                   | 18 +++++++++---------
- src/xz/options.c                   |  6 +++---
- src/xz/signals.c                   |  2 +-
- src/xz/util.h                      |  6 +++---
- src/xzdec/xzdec.c                  |  6 +++---
- 25 files changed, 49 insertions(+), 47 deletions(-)
-
-commit 7a480e485938884ef3021b48c3b0b9f9699dc9b6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-01 12:24:23 +0300
-
-    xz: Fix input file position when --single-stream is used.
-    
-    Now the following works as you would expect:
-    
-        echo foo | xz > foo.xz
-        echo bar | xz >> foo.xz
-        ( xz -dc --single-stream ; xz -dc --single-stream ) < foo.xz
-    
-    Note that it doesn't work if the input is not seekable
-    or if there is Stream Padding between the concatenated
-    .xz Streams.
-
- src/xz/coder.c   |  1 +
- src/xz/file_io.c | 15 +++++++++++++++
- src/xz/file_io.h | 13 +++++++++++++
- 3 files changed, 29 insertions(+)
-
-commit c29e6630c1450c630c4e7b783bdd76515db9004c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-05-01 12:15:51 +0300
-
-    xz: Print the maximum number of worker threads in xz -vv.
-
- src/xz/coder.c | 4 ++++
- 1 file changed, 4 insertions(+)
-
-commit 0b77c4a75158ccc416b07d6e81df8ee0abaea720
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-19 10:44:48 +0300
-
-    Build: Warn if no supported method to detect the number of CPU cores.
-
- configure.ac | 11 +++++------
- 1 file changed, 5 insertions(+), 6 deletions(-)
-
-commit e4622df9ab4982f8faa53d85b17be66216175a58
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-19 09:55:06 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 9c1b05828a88eff54409760b92162c7cc2c7cff6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-19 09:20:44 +0300
-
-    Fix portability problems in mythread.h.
-    
-    Use gettimeofday() if clock_gettime() isn't available
-    (e.g. Darwin).
-    
-    The test for availability of pthread_condattr_setclock()
-    and CLOCK_MONOTONIC was incorrect. Instead of fixing the
-    #ifdefs, use an Autoconf test. That way if there exists a
-    system that supports them but doesn't specify the matching
-    POSIX #defines, the features will still get detected.
-    
-    Don't try to use pthread_sigmask() on OpenVMS. It doesn't
-    have that function.
-    
-    Guard mythread.h against being #included multiple times.
-
- configure.ac          |  7 +++++++
- src/common/mythread.h | 31 +++++++++++++++++++++++++++----
- 2 files changed, 34 insertions(+), 4 deletions(-)
-
-commit 3de00cc75da7b0e7b65e84c62b5351e231f501e9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-18 19:35:49 +0300
-
-    Update THANKS.
-
- THANKS | 2 ++
- 1 file changed, 2 insertions(+)
-
-commit bd5002f5821e3d1b04f2f56989e4a19318e73633
-Author: Martin Väth <vaeth@mathematik.uni-wuerzburg.de>
-Date:   2011-04-15 04:54:49 -0400
-
-    xzgrep: fix typo in $0 parsing
-    
-    Reported-by: Diego Elio Pettenò <flameeyes@gentoo.org>
-    Signed-off-by: Martin Väth <vaeth@mathematik.uni-wuerzburg.de>
-    Signed-off-by: Mike Frysinger <vapier@gentoo.org>
-
- src/scripts/xzgrep.in | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit 6ef4eabc0acc49e1bb9dc68064706e19fa9fcf48
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-12 12:48:31 +0300
-
-    Bump the version number to 5.1.1alpha and liblzma soname to 5.0.99.
-
- src/liblzma/Makefile.am        | 2 +-
- src/liblzma/api/lzma/version.h | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
-
-commit 9a4377be0d21e597c66bad6c7452873aebfb3c1c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-12 12:42:37 +0300
-
-    Put the unstable APIs behind #ifdef LZMA_UNSTABLE.
-    
-    This way people hopefully won't complain if these APIs
-    change and break code that used an older API.
-
- src/liblzma/api/lzma/container.h | 4 ++++
- src/liblzma/common/common.h      | 2 ++
- src/xz/private.h                 | 2 ++
- 3 files changed, 8 insertions(+)
-
-commit 3e321a3acd50002cf6fdfd259e910f56d3389bc3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-12 11:59:49 +0300
-
-    Remove doubled words from documentation and comments.
-    
-    Spot candidates by running these commands:
-      git ls-files |xargs perl -0777 -n \
-        -e 'while (/\b(then?|[iao]n|i[fst]|but|f?or|at|and|[dt]o)\s+\1\b/gims)' \
-        -e '{$n=($` =~ tr/\n/\n/ + 1); ($v=$&)=~s/\n/\\n/g; print "$ARGV:$n:$v\n"}'
-    
-    Thanks to Jim Meyering for the original patch.
-
- doc/lzma-file-format.txt           | 4 ++--
- src/liblzma/common/alone_encoder.c | 2 +-
- src/liblzma/lzma/lzma2_encoder.c   | 2 +-
- src/xz/file_io.c                   | 2 +-
- src/xz/xz.1                        | 2 +-
- windows/INSTALL-Windows.txt        | 2 +-
- 6 files changed, 7 insertions(+), 7 deletions(-)
-
-commit d91a84b534b012d19474f2fda1fbcaef873e1ba4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-12 11:46:01 +0300
-
-    Update NEWS.
-
- NEWS | 47 +++++++++++++++++++++++++++++++++++++++++++++--
- 1 file changed, 45 insertions(+), 2 deletions(-)
-
-commit 14e6ad8cfe0165c1a8beeb5b2a1536558b29b0a1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-12 11:45:40 +0300
-
-    Update TODO.
-
- TODO | 12 +++++++++++-
- 1 file changed, 11 insertions(+), 1 deletion(-)
-
-commit 70e750f59793f9b5cd306a5adce9b8e427739e04
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-12 11:08:55 +0300
-
-    xz: Update the man page about threading.
-
- src/xz/xz.1 | 34 ++++++++++++++++++++--------------
- 1 file changed, 20 insertions(+), 14 deletions(-)
-
-commit 24e0406c0fb7494d2037dec033686faf1bf67068
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 22:06:03 +0300
-
-    xz: Add support for threaded compression.
-
- src/xz/args.c  |   3 +-
- src/xz/coder.c | 202 +++++++++++++++++++++++++++++++++++----------------------
- 2 files changed, 125 insertions(+), 80 deletions(-)
-
-commit de678e0c924aa79a19293a8a6ed82e8cb6572a42
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 22:03:30 +0300
-
-    liblzma: Add lzma_stream_encoder_mt() for threaded compression.
-    
-    This is the simplest method to do threading, which splits
-    the uncompressed data into blocks and compresses them
-    independently from each other. There's room for improvement
-    especially to reduce the memory usage, but nevertheless,
-    this is a good start.
-
- configure.ac                           |    1 +
- src/liblzma/api/lzma/container.h       |  163 +++++
- src/liblzma/common/Makefile.inc        |    7 +
- src/liblzma/common/common.c            |    9 +-
- src/liblzma/common/common.h            |   14 +
- src/liblzma/common/outqueue.c          |  180 ++++++
- src/liblzma/common/outqueue.h          |  155 +++++
- src/liblzma/common/stream_encoder_mt.c | 1011 ++++++++++++++++++++++++++++++++
- 8 files changed, 1539 insertions(+), 1 deletion(-)
-
-commit 25fe729532cdf4b8fed56a4519b73cf31efaec50
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 21:15:07 +0300
-
-    liblzma: Add the forgotten lzma_lzma2_block_size().
-    
-    This should have been in 5eefc0086d24a65e136352f8c1d19cefb0cbac7a.
-
- src/liblzma/lzma/lzma2_encoder.c | 10 ++++++++++
- src/liblzma/lzma/lzma2_encoder.h |  2 ++
- 2 files changed, 12 insertions(+)
-
-commit 91afb785a1dee34862078d9bf844ef12b8cc3e35
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 21:04:13 +0300
-
-    liblzma: Document lzma_easy_(enc|dec)oder_memusage() better too.
-
- src/liblzma/api/lzma/container.h | 9 +++++++++
- 1 file changed, 9 insertions(+)
-
-commit 4a9905302a9e4a1601ae09d650d3f08ce98ae9ee
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 20:59:07 +0300
-
-    liblzma: Document lzma_raw_(enc|dec)oder_memusage() better.
-    
-    It didn't mention the return value that is used if
-    an error occurs.
-
- src/liblzma/api/lzma/filter.h | 8 ++++++--
- 1 file changed, 6 insertions(+), 2 deletions(-)
-
-commit 0badb0b1bd649163322783b0bd9e590b4bc7a93d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 19:28:18 +0300
-
-    liblzma: Use memzero() to initialize supported_actions[].
-    
-    This is cleaner and makes it simpler to add new members
-    to lzma_action enumeration.
-
- src/liblzma/common/common.c | 6 ++----
- 1 file changed, 2 insertions(+), 4 deletions(-)
-
-commit a7934c446a58e20268689899d2a39f50e571f251
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 19:26:27 +0300
-
-    liblzma: API comment about lzma_allocator with threaded coding.
-
- src/liblzma/api/lzma/base.h | 18 +++++++++++++-----
- 1 file changed, 13 insertions(+), 5 deletions(-)
-
-commit 5eefc0086d24a65e136352f8c1d19cefb0cbac7a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 19:16:30 +0300
-
-    liblzma: Add an internal function lzma_mt_block_size().
-    
-    This is based lzma_chunk_size() that was included in some
-    development version of liblzma.
-
- src/liblzma/common/filter_encoder.c | 46 ++++++++++++++++++-------------------
- src/liblzma/common/filter_encoder.h |  4 ++--
- 2 files changed, 24 insertions(+), 26 deletions(-)
-
-commit d1199274758049fc523d98c5b860ff814a799eec
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 13:59:50 +0300
-
-    liblzma: Don't create an empty Block in lzma_stream_buffer_encode().
-    
-    Empty Block was created if the input buffer was empty.
-    Empty Block wastes a few bytes of space, but more importantly
-    it triggers a bug in XZ Utils 5.0.1 and older when trying
-    to decompress such a file. 5.0.1 and older consider such
-    files to be corrupt. I thought that no encoder creates empty
-    Blocks when releasing 5.0.2 but I was wrong.
-
- src/liblzma/common/stream_buffer_encoder.c | 20 +++++++++++++-------
- 1 file changed, 13 insertions(+), 7 deletions(-)
-
-commit 3b22fc2c87ec85fcdd385c163b68fc49c97aa848
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 13:28:40 +0300
-
-    liblzma: Fix API docs to mention LZMA_UNSUPPORTED_CHECK.
-    
-    This return value was missing from the API comments of
-    four functions.
-
- src/liblzma/api/lzma/block.h     | 1 +
- src/liblzma/api/lzma/container.h | 3 +++
- 2 files changed, 4 insertions(+)
-
-commit 71b9380145dccf001f22e66a06b9d508905c25ce
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 13:21:28 +0300
-
-    liblzma: Validate encoder arguments better.
-    
-    The biggest problem was that the integrity check type
-    wasn't validated, and e.g. lzma_easy_buffer_encode()
-    would create a corrupt .xz Stream if given an unsupported
-    Check ID. Luckily applications don't usually try to use
-    an unsupport Check ID, so this bug is unlikely to cause
-    many real-world problems.
-
- src/liblzma/common/block_buffer_encoder.c  | 18 ++++++++++++------
- src/liblzma/common/block_encoder.c         |  5 +++++
- src/liblzma/common/stream_buffer_encoder.c |  3 +++
- 3 files changed, 20 insertions(+), 6 deletions(-)
-
-commit ec7e3dbad704268825fc48f0bdd4577bc46b4f13
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 09:57:30 +0300
-
-    xz: Move the description of --block-size in --long-help.
-
- src/xz/message.c | 8 ++++----
- 1 file changed, 4 insertions(+), 4 deletions(-)
-
-commit cd3086ff443bb282bdf556919c28b3e3cbed8169
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 09:55:35 +0300
-
-    Docs: Document --single-stream and --block-size.
-
- src/xz/xz.1 | 38 ++++++++++++++++++++++++++++++++++++--
- 1 file changed, 36 insertions(+), 2 deletions(-)
-
-commit fb64a4924334e3c440865710990fe08090f2fed0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 09:27:57 +0300
-
-    liblzma: Make lzma_stream_encoder_init() static (second try).
-    
-    It's an internal function and it's not needed by
-    anything outside stream_encoder.c.
-
- src/liblzma/common/Makefile.inc     |  1 -
- src/liblzma/common/easy_encoder.c   |  1 -
- src/liblzma/common/stream_encoder.c | 13 ++++++-------
- src/liblzma/common/stream_encoder.h | 23 -----------------------
- 4 files changed, 6 insertions(+), 32 deletions(-)
-
-commit a34730cf6af4d33a4057914e57227b6dfde6567e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-11 08:31:42 +0300
-
-    Revert "liblzma: Make lzma_stream_encoder_init() static."
-    
-    This reverts commit 352ac82db5d3f64585c07b39e4759388dec0e4d7.
-    I don't know what I was thinking.
-
- src/liblzma/common/Makefile.inc     |  1 +
- src/liblzma/common/stream_encoder.c |  9 +++++----
- src/liblzma/common/stream_encoder.h | 23 +++++++++++++++++++++++
- 3 files changed, 29 insertions(+), 4 deletions(-)
-
-commit 9f0a806aef7ea79718e3f1f2baf3564295229a27
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-10 21:23:21 +0300
-
-    Revise mythread.h.
-    
-    This adds:
-    
-      - mythread_sync() macro to create synchronized blocks
-    
-      - mythread_cond structure and related functions
-        and macros for condition variables with timed
-        waiting using a relative timeout
-    
-      - mythread_create() to create a thread with all
-        signals blocked
-    
-    Some of these wouldn't need to be inline functions,
-    but I'll keep them this way for now for simplicity.
-    
-    For timed waiting on a condition variable, librt is
-    now required on some systems to use clock_gettime().
-    configure.ac was updated to handle this.
-
- configure.ac          |   1 +
- src/common/mythread.h | 200 +++++++++++++++++++++++++++++++++++++++++++++-----
- 2 files changed, 181 insertions(+), 20 deletions(-)
-
-commit 352ac82db5d3f64585c07b39e4759388dec0e4d7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-10 20:37:36 +0300
-
-    liblzma: Make lzma_stream_encoder_init() static.
-    
-    It's an internal function and it's not needed by
-    anything outside stream_encoder.c.
-
- src/liblzma/common/Makefile.inc     |  1 -
- src/liblzma/common/stream_encoder.c |  9 ++++-----
- src/liblzma/common/stream_encoder.h | 23 -----------------------
- 3 files changed, 4 insertions(+), 29 deletions(-)
-
-commit 9e807fe3fe79618ac48f58207cf7082ea20a6928
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-10 14:58:10 +0300
-
-    DOS: Update the docs and include notes about 8.3 filenames.
-
- dos/INSTALL.txt |  79 ++++++++++++++++++++++++++++++++++++
- dos/README      |  88 ----------------------------------------
- dos/README.txt  | 123 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 3 files changed, 202 insertions(+), 88 deletions(-)
-
-commit ebd54dbd6e481d31e80757f900ac8109ad1423c6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-10 13:09:42 +0300
-
-    xz/DOS: Add experimental 8.3 filename support.
-    
-    This is incompatible with the 8.3 support patch made by
-    Juan Manuel Guerrero. I think this one is nicer, but
-    I need to get feedback from DOS users before saying
-    that this is the final version of 8.3 filename support.
-
- src/xz/suffix.c | 176 +++++++++++++++++++++++++++++++++++++++++++++++++++++---
- 1 file changed, 167 insertions(+), 9 deletions(-)
-
-commit cd4fe97852bcaeffe674ee51b4613709292a0972
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-10 12:47:47 +0300
-
-    xz/DOS: Be more careful with the destination file.
-    
-    Try to avoid overwriting the source file if --force is
-    used and the generated destination filename refers to
-    the source file. This can happen with 8.3 filenames where
-    extra characters are ignored.
-    
-    If the generated output file refers to a special file
-    like "con" or "prn", refuse to write to it even if --force
-    is used.
-
- src/xz/file_io.c | 35 +++++++++++++++++++++++++++++++++--
- 1 file changed, 33 insertions(+), 2 deletions(-)
-
-commit 607f9f98ae5ef6d49f4c21c806d462bf6b3d6796
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-09 18:29:30 +0300
-
-    Update THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit fca396b37410d272b754843a5dc13847be443a3a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-09 18:28:58 +0300
-
-    liblzma: Add missing #ifdefs to filter_common.c.
-    
-    Passing --disable-decoders to configure broke a few
-    encoders due to missing #ifdefs in filter_common.c.
-    
-    Thanks to Jason Gorski for the patch.
-
- src/liblzma/common/filter_common.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
-
-commit b03f6cd3ebadd675f2cc9d518cb26fa860269447
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-09 15:24:59 +0300
-
-    xz: Avoid unneeded fstat() on DOS-like systems.
-
- src/xz/file_io.c | 14 ++++++++------
- 1 file changed, 8 insertions(+), 6 deletions(-)
-
-commit 335fe260a81f61ec99ff5940df733b4c50aedb7c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-09 15:11:13 +0300
-
-    xz: Minor internal changes to handling of --threads.
-    
-    Now it always defaults to one thread. Maybe this
-    will change again if a threading method is added
-    that doesn't affect memory usage.
-
- src/xz/args.c     |  4 ++--
- src/xz/hardware.c | 24 ++++++++++++------------
- src/xz/hardware.h |  9 ++++-----
- 3 files changed, 18 insertions(+), 19 deletions(-)
-
-commit 9edd6ee895fbe71d245a173f48e511f154a99875
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-08 17:53:05 +0300
-
-    xz: Change size_t to uint32_t in a few places.
-
- src/xz/coder.c | 6 +++---
- src/xz/coder.h | 2 +-
- 2 files changed, 4 insertions(+), 4 deletions(-)
-
-commit 411013ea4506a6df24d35a060fcbd73a57b73eb3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-08 17:48:41 +0300
-
-    xz: Fix a typo in a comment.
-
- src/xz/coder.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit b34c5ce4b22e8d7b81f9895d15054af41d17f805
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-05 22:41:33 +0300
-
-    liblzma: Use TUKLIB_GNUC_REQ to check GCC version in sha256.c.
-
- src/liblzma/check/sha256.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
-
-commit db33117cc85c17e0b897b5312bd5eb43aac41c03
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-05 17:12:20 +0300
-
-    Build: Upgrade m4/acx_pthread.m4 to the latest version.
-    
-    It was renamed to ax_pthread.m4 in Autoconf Archive.
-
- configure.ac      |   2 +-
- m4/acx_pthread.m4 | 279 -----------------------------------------------------
- m4/ax_pthread.m4  | 283 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 3 files changed, 284 insertions(+), 280 deletions(-)
-
-commit 1039bfcfc098b69d56ecb39d198a092552eacf6d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-05 15:27:26 +0300
-
-    xz: Use posix_fadvise() if it is available.
-
- configure.ac     |  3 +++
- src/xz/file_io.c | 15 +++++++++++++++
- 2 files changed, 18 insertions(+)
-
-commit 1ef3cf44a8eb9512480af4482a5232ea08363b14
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-05 15:13:29 +0300
-
-    xz: Call lzma_end(&strm) before exiting if debugging is enabled.
-
- src/xz/coder.c | 10 ++++++++++
- src/xz/coder.h |  5 +++++
- src/xz/main.c  |  4 ++++
- 3 files changed, 19 insertions(+)
-
-commit bd432015d33dcade611d297bc01eb0700088ef6c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-02 14:49:56 +0300
-
-    liblzma: Fix a memory leak in stream_encoder.c.
-    
-    It leaks old filter options structures (hundred bytes or so)
-    every time the lzma_stream is reinitialized. With the xz tool,
-    this happens when compressing multiple files.
-
- src/liblzma/common/stream_encoder.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 16889013214e7620d204b6e6c1bf9f3103a13655
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-04-01 08:47:20 +0300
-
-    Updated NEWS for 5.0.2.
-
- NEWS | 18 ++++++++++++++++++
- 1 file changed, 18 insertions(+)
-
-commit 85cdf7dd4e97b078e7b929e47f55a7f1da36010f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-03-31 15:06:58 +0300
-
-    Update INSTALL with another note about IRIX.
-
- INSTALL | 4 ++++
- 1 file changed, 4 insertions(+)
-
-commit c3f4995586873d6a4fb7e451010a128571a9a370
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-03-31 12:22:55 +0300
-
-    Tests: Add a new file to test empty LZMA2 streams.
-
- tests/files/README            |   4 ++++
- tests/files/good-1-lzma2-5.xz | Bin 0 -> 52 bytes
- 2 files changed, 4 insertions(+)
-
-commit 0d21f49a809dc2088da6cc0da7f948404df7ecfa
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-03-31 11:54:48 +0300
-
-    liblzma: Fix decoding of LZMA2 streams having no uncompressed data.
-    
-    The decoder considered empty LZMA2 streams to be corrupt.
-    This shouldn't matter much with .xz files, because no encoder
-    creates empty LZMA2 streams in .xz. This bug is more likely
-    to cause problems in applications that use raw LZMA2 streams.
-
- src/liblzma/lzma/lzma2_decoder.c | 8 ++++----
- 1 file changed, 4 insertions(+), 4 deletions(-)
-
-commit 40277998cb9bad564ce4827aff152e6e1c904dfa
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-03-24 01:42:49 +0200
-
-    Scripts: Better fix for xzgrep.
-    
-    Now it uses "grep -q".
-    
-    Thanks to Gregory Margo.
-
- src/scripts/xzgrep.in | 8 ++++++--
- 1 file changed, 6 insertions(+), 2 deletions(-)
-
-commit 2118733045ad0ca183a3f181a0399baf876983a6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-03-24 01:22:18 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit c7210d9a3fca6f31a57208bfddfc9ab20a2e097a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-03-24 01:21:32 +0200
-
-    Scripts: Fix xzgrep -l.
-    
-    It didn't work at all. It tried to use the -q option
-    for grep, but it appended it after "--". This works
-    around it by redirecting to /dev/null. The downside
-    is that this can be slower with big files compared
-    to proper use of "grep -q".
-    
-    Thanks to Gregory Margo.
-
- src/scripts/xzgrep.in | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit 4eb83e32046a6d670862bc91c3d82530963b455e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-03-19 13:08:22 +0200
-
-    Scripts: Add lzop (.lzo) support to xzdiff and xzgrep.
-
- src/scripts/xzdiff.1  |  6 ++++--
- src/scripts/xzdiff.in | 22 ++++++++++++++--------
- src/scripts/xzgrep.1  | 11 +++++++----
- src/scripts/xzgrep.in |  5 +++--
- 4 files changed, 28 insertions(+), 16 deletions(-)
-
-commit 923b22483bd9356f3219b2b784d96f455f4dc499
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-03-18 19:10:30 +0200
-
-    xz: Add --block-size=SIZE.
-    
-    This uses LZMA_FULL_FLUSH every SIZE bytes of input.
-    
-    Man page wasn't updated yet.
-
- src/xz/args.c    |  7 +++++++
- src/xz/coder.c   | 50 ++++++++++++++++++++++++++++++++++++++++----------
- src/xz/coder.h   |  3 +++
- src/xz/message.c |  4 ++++
- 4 files changed, 54 insertions(+), 10 deletions(-)
-
-commit 57597d42ca1740ad506437be168d800a50f1a0ad
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-03-18 18:19:19 +0200
-
-    xz: Add --single-stream.
-    
-    This can be useful when there is garbage after the
-    compressed stream (.xz, .lzma, or raw stream).
-    
-    Man page wasn't updated yet.
-
- src/xz/args.c    |  6 ++++++
- src/xz/coder.c   | 11 +++++++++--
- src/xz/coder.h   |  3 +++
- src/xz/message.c |  6 +++++-
- 4 files changed, 23 insertions(+), 3 deletions(-)
-
-commit 96f94bc925d579a700147fa5d7793b64d69cfc18
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-02-04 22:49:31 +0200
-
-    xz: Clean up suffix.c.
-    
-    struct suffix_pair isn't needed in compresed_name()
-    so get rid of it there.
-
- src/xz/suffix.c | 44 ++++++++++++++++++++------------------------
- 1 file changed, 20 insertions(+), 24 deletions(-)
-
-commit 8930c7ae3f82bdae15aa129f01de08be23d7e8d7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-02-04 11:29:47 +0200
-
-    xz: Check if the file already has custom suffix when compressing.
-    
-    Now "xz -S .test foo.test" refuses to compress the
-    file because it already has the suffix .test. The man
-    page had it documented this way already.
-
- src/xz/suffix.c | 9 +++++++++
- 1 file changed, 9 insertions(+)
-
-commit 940d5852c6cf08abccc6befd9d1b5411c9076a58
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-02-02 23:01:51 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 4ebe65f839613f27f127bab7b8c347d982330ee3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-02-02 23:00:33 +0200
-
-    Translations: Add Polish translation.
-    
-    Thanks to Jakub Bogusz.
-
- po/LINGUAS |   1 +
- po/pl.po   | 825 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 826 insertions(+)
-
-commit fc1d292dca1925dfd17174f443f91a696ecd5bf8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-02-02 22:24:00 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 6dd061adfd2775428b079eb03d6fd47d7c0f1ffe
-Merge: 9d542ce 5fbce0b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-02-06 20:13:01 +0200
-
-    Merge commit '5fbce0b8d96dc96775aa0215e3581addc830e23d'
-
-commit 5fbce0b8d96dc96775aa0215e3581addc830e23d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-01-28 20:16:57 +0200
-
-    Update NEWS for 5.0.1.
-
- NEWS | 14 ++++++++++++++
- 1 file changed, 14 insertions(+)
-
-commit 03ebd1bbb314f9f204940219a835c883bf442475
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-01-26 12:19:08 +0200
-
-    xz: Fix --force on setuid/setgid/sticky and multi-hardlink files.
-    
-    xz didn't compress setuid/setgid/sticky files and files
-    with multiple hard links even with --force. This bug was
-    introduced in 23ac2c44c3ac76994825adb7f9a8f719f78b5ee4.
-    
-    Thanks to Charles Wilson.
-
- src/xz/file_io.c | 15 +++++++--------
- 1 file changed, 7 insertions(+), 8 deletions(-)
-
-commit 9d542ceebcbe40b174169c132ccfcdc720ca7089
-Merge: 4f2c69a 7bd0a5e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-01-19 11:45:35 +0200
-
-    Merge branch 'v5.0'
-
-commit 7bd0a5e7ccc354f7c2e95c8bc27569c820f6a136
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-01-18 21:25:24 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit f71c4e16e913f660977526f0ef8d2acdf458d7c9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2011-01-18 21:23:50 +0200
-
-    Add alloc_size and malloc attributes to a few functions.
-    
-    Thanks to Cristian Rodríguez for the original patch.
-
- src/common/sysdefs.h        | 6 ++++++
- src/liblzma/common/common.h | 2 +-
- src/xz/util.h               | 5 +++--
- 3 files changed, 10 insertions(+), 3 deletions(-)
-
-commit 316cbe24465143edde8f6ffb7532834b7b2ea93f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-12-13 16:36:33 +0200
-
-    Scripts: Fix gzip and bzip2 support in xzdiff.
-
- src/scripts/xzdiff.in | 12 ++++++------
- 1 file changed, 6 insertions(+), 6 deletions(-)
-
-commit 4f2c69a4e3e0aee2e37b0b1671d34086e20c8ac6
-Merge: adb89e6 9311774
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-12-12 23:13:22 +0200
-
-    Merge branch 'v5.0'
-
-commit 9311774c493c19deab51ded919dcd2e9c4aa2829
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-12-12 21:23:55 +0200
-
-    Build: Enable ASM on DJGPP by default.
-
- configure.ac | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 4a42aaee282fc73b482581684d65110506d5efdd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-12-12 16:09:42 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit ce56f63c41ee210e6308090eb6d49221fdf67d6c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-12-12 16:07:11 +0200
-
-    Add missing PRIx32 and PRIx64 compatibility definitions.
-    
-    This fixes portability to systems that lack C99 inttypes.h.
-    
-    Thanks to Juan Manuel Guerrero.
-
- src/common/sysdefs.h | 9 +++++++++
- 1 file changed, 9 insertions(+)
-
-commit e6baedddcf54e7da049ebc49183565b99facd4c7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-12-12 14:50:04 +0200
-
-    DOS-like: Treat \ and : as directory separators in addition to /.
-    
-    Juan Manuel Guerrero had fixed this in his XZ Utils port
-    to DOS/DJGPP. The bug affects also Windows and OS/2.
-
- src/xz/suffix.c | 33 +++++++++++++++++++++++++++++----
- 1 file changed, 29 insertions(+), 4 deletions(-)
-
-commit adb89e68d43a4cadb0c215b45ef7a75737c9c3ec
-Merge: 7c24e0d b7afd3e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-12-07 18:53:04 +0200
-
-    Merge branch 'v5.0'
-
-commit b7afd3e22a8fac115b75c738d40d3eb1de7e286f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-12-07 18:52:04 +0200
-
-    Translations: Fix Czech translation of "sparse file".
-    
-    Thanks to Petr Hubený and Marek Černocký.
-
- po/cs.po | 88 ++++++++++++++++++++++++++++++++--------------------------------
- 1 file changed, 44 insertions(+), 44 deletions(-)
-
-commit 7c24e0d1b8a2e86e9263b0d56d39621e01aed7af
-Merge: b4d42f1 3e56470
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-11-15 14:33:01 +0200
-
-    Merge branch 'v5.0'
-
-commit 3e564704bc6f463cb2db11e3f3f0dbd71d85992e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-11-15 14:28:26 +0200
-
-    liblzma: Document the return value of lzma_lzma_preset().
-
- src/liblzma/api/lzma/lzma.h | 3 +++
- 1 file changed, 3 insertions(+)
-
-commit 2964d8d691ed92abdcf214888d79ad6d79774735
-Author: Jonathan Nieder <jrnieder@gmail.com>
-Date:   2010-11-12 15:22:13 -0600
-
-    Simplify paths in generated API docs
-    
-    Currently the file list generated by Doxygen has src/ at the
-    beginning of each path.  Paths like common/sysdefs.h and
-    liblzma/api/lzma.h are easier to read without such a prefix.
-    
-    Builds from a separate build directory with
-    
-    	mkdir build
-    	cd build
-    	../configure
-    	doxygen Doxyfile
-    
-    include an even longer prefix /home/someone/src/xz/src; this
-    patch has the nice side-effect of eliminating that prefix, too.
-    
-    Fixes: http://bugs.debian.org/572273
-
- Doxyfile.in | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit b4d42f1a7120e2cefeb2f14425efe2ca6db85416
-Author: Anders F Bjorklund <afb@users.sourceforge.net>
-Date:   2010-11-05 12:56:11 +0100
-
-    add build script for macosx universal
-
- macosx/build.sh | 92 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 92 insertions(+)
-
-commit 15ee6935abe4a2fc76639ee342ca2e69af3e0ad6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-11-04 18:31:40 +0200
-
-    Update the copies of GPLv2 and LGPLv2.1 from gnu.org.
-    
-    There are only a few white space changes.
-
- COPYING.GPLv2    | 14 +++++++-------
- COPYING.LGPLv2.1 | 16 +++++++---------
- 2 files changed, 14 insertions(+), 16 deletions(-)
-
-commit 8e355f7fdbeee6fe394eb02a28f267ce99a882a2
-Merge: 974ebe6 37c2565
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-26 15:53:06 +0300
-
-    Merge branch 'v5.0'
-
-commit 37c25658efd25b034266daf87cd381d20d1df776
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-26 15:48:48 +0300
-
-    Build: Copy the example programs to $docdir/examples.
-    
-    The example programs by Daniel Mealha Cabrita were included
-    in the git repository, but I had forgot to add them to
-    Makefile.am. Thus, they didn't get included in the source
-    package at all by "make dist".
-
- Makefile.am        | 5 +++++
- windows/build.bash | 3 ++-
- 2 files changed, 7 insertions(+), 1 deletion(-)
-
-commit 974ebe63497bdf0d262e06474f0dd5a70b1dd000
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-26 10:36:41 +0300
-
-    liblzma: Rename a few variables and constants.
-    
-    This has no semantic changes. I find the new names slightly
-    more logical and they match the names that are already used
-    in XZ Embedded.
-    
-    The name fastpos wasn't changed (not worth the hassle).
-
- src/liblzma/lzma/fastpos.h                     |  55 +++++------
- src/liblzma/lzma/lzma2_encoder.c               |   2 +-
- src/liblzma/lzma/lzma_common.h                 |  45 ++++-----
- src/liblzma/lzma/lzma_decoder.c                |  58 +++++------
- src/liblzma/lzma/lzma_encoder.c                |  56 +++++------
- src/liblzma/lzma/lzma_encoder_optimum_fast.c   |   9 +-
- src/liblzma/lzma/lzma_encoder_optimum_normal.c | 128 ++++++++++++-------------
- src/liblzma/lzma/lzma_encoder_private.h        |  16 ++--
- 8 files changed, 183 insertions(+), 186 deletions(-)
-
-commit 7c427ec38d016c0070a42315d752857e33792fc4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-25 12:59:25 +0300
-
-    Bump version 5.1.0alpha.
-
- src/liblzma/api/lzma/version.h | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit e45929260cd902036efd40c5610a8d0a50d5712b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-23 17:25:52 +0300
-
-    Build: Fix mydist rule when .git doesn't exist.
-
- Makefile.am | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 6e1326fcdf6b6209949be57cfe3ad4b781b65168
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-23 14:15:35 +0300
-
-    Add NEWS for 5.0.0.
-
- NEWS | 62 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 62 insertions(+)
-
-commit b667a3ef6338a2c1db7b7706b1f6c99ea392221c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-23 14:02:53 +0300
-
-    Bump version to 5.0.0 and liblzma version-info to 5:0:0.
-
- src/liblzma/Makefile.am        | 2 +-
- src/liblzma/api/lzma/version.h | 8 ++++----
- 2 files changed, 5 insertions(+), 5 deletions(-)
-
-commit 8c947e9291691629714dafb4536c718b6cc24fbd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-23 12:30:54 +0300
-
-    liblzma: Make lzma_code() check the reserved members in lzma_stream.
-    
-    If any of the reserved members in lzma_stream are non-zero
-    or non-NULL, LZMA_OPTIONS_ERROR is returned. It is possible
-    that a new feature in the future is indicated by just setting
-    a reserved member to some other value, so the old liblzma
-    version need to catch it as an unsupported feature.
-
- src/liblzma/common/common.c | 14 ++++++++++++++
- 1 file changed, 14 insertions(+)
-
-commit e61d85e082743ebd2dd0ff28fc0a82482ede0538
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-23 12:26:33 +0300
-
-    Windows: Use MinGW's stdio functions.
-    
-    The non-standard ones from msvcrt.dll appear to work
-    most of the time with XZ Utils, but there are some
-    corner cases where things may go very wrong. So it's
-    good to use the better replacements provided by
-    MinGW(-w64) runtime.
-
- src/common/sysdefs.h | 5 +++++
- 1 file changed, 5 insertions(+)
-
-commit 23e23f1dc029146714c9a98313ab3ea93d71a2fc
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-23 12:21:32 +0300
-
-    liblzma: Use 512 as INDEX_GROUP_SIZE.
-    
-    This lets compiler use shifting instead of 64-bit division.
-
- src/liblzma/common/index.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 613939fc82603b75b59eee840871a05bc8dd08e0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-23 12:20:11 +0300
-
-    liblzma: A few ABI tweaks to reserve space in structures.
-
- src/liblzma/api/lzma/base.h         | 7 ++++++-
- src/liblzma/api/lzma/lzma.h         | 4 ++--
- src/liblzma/api/lzma/stream_flags.h | 4 ----
- 3 files changed, 8 insertions(+), 7 deletions(-)
-
-commit 68b83f252df3d27480a9f6f03445d16f6506fef1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-21 23:16:11 +0300
-
-    xz: Make sure that message_strm() can never return NULL.
-
- src/xz/message.c | 7 +++++--
- 1 file changed, 5 insertions(+), 2 deletions(-)
-
-commit d09c5753e33ff96ee57edb6d1e98e34041203695
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-21 23:06:31 +0300
-
-    liblzma: Update the comments in the API headers.
-    
-    Adding support for LZMA_FINISH for Index encoding and
-    decoding needed tiny additions to the relevant .c files too.
-
- src/liblzma/api/lzma.h              |  4 +--
- src/liblzma/api/lzma/base.h         | 38 +++++++++++++--------------
- src/liblzma/api/lzma/bcj.h          |  4 +--
- src/liblzma/api/lzma/block.h        |  4 +--
- src/liblzma/api/lzma/container.h    | 26 ++++++++++++-------
- src/liblzma/api/lzma/filter.h       | 51 ++++++++++++++++++-------------------
- src/liblzma/api/lzma/hardware.h     |  3 +--
- src/liblzma/api/lzma/index.h        | 28 ++++++++++++--------
- src/liblzma/api/lzma/index_hash.h   |  2 +-
- src/liblzma/api/lzma/lzma.h         | 46 ++++++++++++++++++++++-----------
- src/liblzma/api/lzma/stream_flags.h |  4 +--
- src/liblzma/api/lzma/vli.h          | 31 +++++++++++-----------
- src/liblzma/common/index_decoder.c  |  1 +
- src/liblzma/common/index_encoder.c  |  1 +
- 14 files changed, 136 insertions(+), 107 deletions(-)
-
-commit 33c1c0e102eb529588503b8beea0903a45488fad
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-19 12:08:30 +0300
-
-    Update INSTALL.generic.
-
- INSTALL.generic | 99 ++++++++++++++++++++++++++++++++++++++++++++++-----------
- 1 file changed, 81 insertions(+), 18 deletions(-)
-
-commit 0076e03641f201c4b77dddd5a6db5880be19a78c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-19 11:44:37 +0300
-
-    Clean up a few FIXMEs and TODOs.
-    
-    lzma_chunk_size() was commented out because it is
-    currently useless.
-
- src/liblzma/common/filter_encoder.c | 2 ++
- src/liblzma/common/filter_encoder.h | 4 ++--
- src/liblzma/lzma/lzma2_decoder.c    | 1 -
- src/liblzma/lzma/lzma_decoder.c     | 4 ++--
- src/liblzma/lzma/lzma_encoder.c     | 2 +-
- src/xz/message.h                    | 2 +-
- 6 files changed, 8 insertions(+), 7 deletions(-)
-
-commit ce34ec4f54ff8b753da236f371ad8dd23c8135c9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-19 10:21:08 +0300
-
-    Update docs.
-
- INSTALL    | 192 +++++++++++++++++++++++++++++++++++++++++--------------------
- PACKAGERS  | 104 +++++++++------------------------
- TODO       |  17 ++++--
- dos/README |   2 +-
- 4 files changed, 172 insertions(+), 143 deletions(-)
-
-commit f0fa880d247e73264d2c04fe31fb3412318a0026
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-12 15:13:30 +0300
-
-    xz: Avoid raise() also on OpenVMS.
-    
-    This is similar to DOS/DJGPP that killing the program
-    with a signal will print a backtrace or a similar message.
-
- src/xz/signals.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit ac462b1c47c451f5c62e428306314c4bdad8ae7f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-11 21:26:19 +0300
-
-    xz: Avoid SA_RESTART for portability reasons.
-    
-    SA_RESTART is not as portable as I had hoped. It's missing
-    at least from OpenVMS, QNX, and DJGPP). Luckily we can do
-    fine without SA_RESTART.
-
- src/xz/message.c | 38 +++++++++++++++-----------------------
- src/xz/message.h |  4 ++++
- src/xz/signals.c |  6 ++++++
- 3 files changed, 25 insertions(+), 23 deletions(-)
-
-commit d52b411716a614c202e89ba732492efb9916cd3f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-10 17:58:58 +0300
-
-    xz: Use "%"PRIu32 instead of "%d" in a format string.
-
- src/xz/message.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit ae74d1bdeb075c3beefe76e1136c5741804e7e91
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-10 17:43:26 +0300
-
-    test_files.sh: Fix the first line.
-    
-    For some reason this prevented running the test only
-    on OS/2 and even on that it broke only recently.
-    
-    Thanks to Elbert Pol.
-
- tests/test_files.sh | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit d492b80ddd6f9a13419de6d102df7374d8f448e8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-10 16:49:01 +0300
-
-    lzmainfo: Use "%"PRIu32 instead of "%u" for uint32_t.
-
- src/lzmainfo/lzmainfo.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 825e859a9054bd91202e5723c41a17e72f63040a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-10 16:47:01 +0300
-
-    lzmainfo: Use fileno(stdin) instead of STDIN_FILENO.
-
- src/lzmainfo/lzmainfo.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit acbc4cdecbeec2a4dfaac04f185ece49b2ff17c8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-09 23:20:51 +0300
-
-    lzmainfo: Use setmode() on DOS-like systems.
-
- src/lzmainfo/lzmainfo.c | 9 +++++++++
- 1 file changed, 9 insertions(+)
-
-commit ef364d3abc5647111c5424ea0d83a567e184a23b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-09 21:51:03 +0300
-
-    OS/2 and DOS: Be less verbose on signals.
-    
-    Calling raise() to kill xz when user has pressed C-c
-    is a bit verbose on OS/2 and DOS/DJGPP. Instead of
-    calling raise(), set only the exit status to 1.
-
- src/xz/signals.c | 7 +++++++
- 1 file changed, 7 insertions(+)
-
-commit 5629c4be07b6c67e79842b2569da1cedc9c0d69a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-09 19:28:49 +0300
-
-    DOS: Update the Makefile, config.h and README.
-    
-    This is now simpler and builds only xz.exe.
-
- dos/Makefile | 211 +++++++++++++++--------------------------------------------
- dos/README   |  73 +++++++--------------
- dos/config.h |  45 ++++---------
- 3 files changed, 86 insertions(+), 243 deletions(-)
-
-commit f25a77e6b9bc48a243ddfbbd755b7960eec7e0ac
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-09 18:57:55 +0300
-
-    Windows: Put some license info into README-Windows.txt.
-
- windows/README-Windows.txt | 8 ++++----
- 1 file changed, 4 insertions(+), 4 deletions(-)
-
-commit e75100f549f85d231df25c07aa94d63e78e2d668
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-09 18:57:04 +0300
-
-    Windows: Fix a diagnostics bug in build.bash.
-
- windows/build.bash | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit efeb998a2b1025df1c1d202cc7d21d866cd1c336
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-09 13:02:15 +0300
-
-    lzmainfo: Add Windows resource file.
-
- src/lzmainfo/Makefile.am        |  9 +++++++++
- src/lzmainfo/lzmainfo_w32res.rc | 12 ++++++++++++
- 2 files changed, 21 insertions(+)
-
-commit 389d418445f1623593dfdbba55d52fbb6d1205f5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-09 12:57:25 +0300
-
-    Add missing public domain notice to lzmadec_w32res.rc.
-
- src/xzdec/lzmadec_w32res.rc | 7 +++++++
- 1 file changed, 7 insertions(+)
-
-commit 6389c773a4912dd9f111256d74ba1605230a7957
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-09 12:52:12 +0300
-
-    Windows: Update common_w32res.rc.
-
- src/common/common_w32res.rc | 9 +++------
- 1 file changed, 3 insertions(+), 6 deletions(-)
-
-commit 71275457ca24c9b01721f5cfc3638cf094daf454
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-09 12:27:08 +0300
-
-    Windows: Make build.bash prefer MinGW-w32 over MinGW.
-    
-    This is simply for licensing reasons. The 64-bit version
-    will be built with MinGW-w64 anyway (at least for now),
-    so using it also for 32-bit build allows using the same
-    copyright notice about the MinGW-w64/w32 runtime.
-    
-    Note that using MinGW would require a copyright notice too,
-    because its runtime is not in the public domain either even
-    though MinGW's home page claims that it is public domain.
-    See <http://marc.info/?l=mingw-users&m=126489506214078>.
-
- windows/build.bash | 18 +++++++++---------
- 1 file changed, 9 insertions(+), 9 deletions(-)
-
-commit 3ac35719d8433af937af6491383d4a50e343099b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-09 11:33:21 +0300
-
-    Windows: Copy COPYING-Windows.txt (if it exists) to the package.
-    
-    Also, put README-Windows.txt to the doc directory like
-    the other documentation files.
-
- windows/build.bash | 14 ++++++++++++--
- 1 file changed, 12 insertions(+), 2 deletions(-)
-
-commit 7b5db576fd7a4a67813b8437a9ccd4dbc94bbaae
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-08 21:42:37 +0300
-
-    Windows: Fix build.bash again.
-    
-    630a8beda34af0ac153c8051b1bf01230558e422 wasn't good.
-
- windows/build.bash | 7 ++++---
- 1 file changed, 4 insertions(+), 3 deletions(-)
-
-commit d3cd7abe85ec7c2f46cf198b15c00d5d119df3dd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-08 16:53:20 +0300
-
-    Use LZMA_VERSION_STRING instead of PACKAGE_VERSION.
-    
-    Those are the same thing, and the former makes it a bit
-    easier to build the code with other build systems, because
-    one doesn't need to update the version number into custom
-    config.h.
-    
-    This change affects only lzmainfo. Other tools were already
-    using LZMA_VERSION_STRING.
-
- src/lzmainfo/lzmainfo.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 084c60d318f2dbaef4078d9b100b4a373d0c3a7f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-08 15:59:25 +0300
-
-    configure.ac: Remove two unused defines.
-
- configure.ac | 4 ----
- 1 file changed, 4 deletions(-)
-
-commit 11f51b6714357cb67ec7e56ed9575c199b5581fe
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-08 15:32:29 +0300
-
-    Make tests accommodate missing xz or xzdec.
-
- tests/test_compress.sh | 47 ++++++++++++++++++++++++++++++-----------------
- tests/test_files.sh    | 28 ++++++++++++++++++++++++++--
- 2 files changed, 56 insertions(+), 19 deletions(-)
-
-commit b1c7368f95e93ccdefdd0748e04398c26766f47f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-08 15:25:45 +0300
-
-    Build: Add options to disable individual command line tools.
-
- configure.ac            | 38 ++++++++++++++++++++++++++++++
- src/Makefile.am         | 15 +++++++++++-
- src/scripts/Makefile.am | 62 +++++++++++++++++++++----------------------------
- src/xz/Makefile.am      |  6 ++++-
- src/xzdec/Makefile.am   | 12 ++++++++--
- 5 files changed, 93 insertions(+), 40 deletions(-)
-
-commit 630a8beda34af0ac153c8051b1bf01230558e422
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-07 00:44:53 +0300
-
-    Windows: Make build.bash work without --enable-dynamic=no.
-
- windows/build.bash | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit f9907503f882a745dce9d84c2968f6c175ba966a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-05 14:13:16 +0300
-
-    Build: Remove the static/dynamic tricks.
-    
-    Most distros want xz linked against shared liblzma, so
-    it doesn't help much to require --enable-dynamic for that.
-    Those who want to avoid PIC on x86-32 to get better
-    performance, can still do it e.g. by using --disable-shared
-    to compile xz and then another pass to compile shared liblzma.
-    
-    Part of these static/dynamic tricks were needed for Windows
-    in the past. Nowadays we rely on GCC and binutils to do the
-    right thing with auto-import. If the Autotooled build system
-    needs to support some other toolchain on Windows in the future,
-    this may need some rethinking.
-
- configure.ac             | 74 ------------------------------------------------
- debug/Makefile.am        |  5 +---
- src/lzmainfo/Makefile.am |  4 +--
- src/xz/Makefile.am       |  4 +--
- src/xzdec/Makefile.am    |  4 +--
- tests/Makefile.am        |  5 +---
- 6 files changed, 5 insertions(+), 91 deletions(-)
-
-commit fda4724d8114fccfa31c1839c15479f350c2fb4c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-05 12:18:58 +0300
-
-    configure.ac: Silence a warning from Autoconf 2.68.
-
- configure.ac | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 80b5675fa62c87426fe86f8fcd20feeabc4361b9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-04 19:43:01 +0300
-
-    A few more languages files to the xz man page.
-    
-    Thanks to Jonathan Nieder.
-
- src/xz/xz.1 | 45 ++++++++++++++++++++++++---------------------
- 1 file changed, 24 insertions(+), 21 deletions(-)
-
-commit f9722dbeca4dc4c43cfd15d122dafaac50b0a0bb
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-02 12:07:33 +0300
-
-    Update the FAQ.
-
- doc/faq.txt | 104 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++---
- 1 file changed, 100 insertions(+), 4 deletions(-)
-
-commit 61ae593661e8dc402394e84d567ca2044a51572b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-10-02 11:38:20 +0300
-
-    liblzma: Small fixes to comments in the API headers.
-
- src/liblzma/api/lzma/lzma.h | 10 +++++++---
- 1 file changed, 7 insertions(+), 3 deletions(-)
-
-commit 9166682dc601fd42c1b9510572e3f917d18de504
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-28 11:40:12 +0300
-
-    Create the PDF versions of the man pages better.
-
- Makefile.am          | 14 +++++++------
- build-aux/manconv.sh | 58 ++++++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 66 insertions(+), 6 deletions(-)
-
-commit 17d3c61edd35de8fa884944fc70d1db86daa5dd8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-28 10:59:53 +0300
-
-    Move version.sh to build-aux.
-
- Makefile.am          |  4 ++--
- build-aux/version.sh | 24 ++++++++++++++++++++++++
- configure.ac         |  2 +-
- version.sh           | 24 ------------------------
- windows/build.bash   |  2 +-
- 5 files changed, 28 insertions(+), 28 deletions(-)
-
-commit 84af9d8770451339a692e9b70f96cf56156a6069
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-28 10:53:02 +0300
-
-    Update .gitignore.
-
- .gitignore | 10 +++++++++-
- 1 file changed, 9 insertions(+), 1 deletion(-)
-
-commit 31575a449ac64c523da3bab8d0c0b522cdc7c780
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-28 01:17:14 +0300
-
-    Fix accomodate -> accommodate on the xz man page.
-
- src/xz/xz.1 | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit cec0ddc8ec4ce81685a51998b978e22167e461f9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-27 23:29:34 +0300
-
-    Major man page updates.
-    
-    Lots of content was updated on the xz man page.
-    
-    Technical improvements:
-      - Start a new sentence on a new line.
-      - Use fairly short lines.
-      - Use constant-width font for examples (where supported).
-      - Some minor cleanups.
-    
-    Thanks to Jonathan Nieder for some language fixes.
-
- src/lzmainfo/lzmainfo.1 |   25 +-
- src/scripts/xzdiff.1    |   15 +-
- src/scripts/xzgrep.1    |   11 +-
- src/scripts/xzless.1    |   13 +-
- src/scripts/xzmore.1    |    9 +-
- src/xz/xz.1             | 1964 ++++++++++++++++++++++++++++++++---------------
- src/xzdec/xzdec.1       |   39 +-
- 7 files changed, 1435 insertions(+), 641 deletions(-)
-
-commit 075257ab0416a0603be930082e31a5703e4ba345
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-26 18:10:31 +0300
-
-    Fix the preset -3e.
-    
-    depth=0 was missing.
-
- src/liblzma/lzma/lzma_encoder_presets.c | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 2577da9ebdba13fbe99ae5ee8bde35f7ed60f6d1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-23 14:03:10 +0300
-
-    Add translations.bash and translation notes to README.
-    
-    translations.bash prints some messages from xz, which
-    hopefully makes it a bit easier to test translations.
-
- README                 |  96 +++++++++++++++++++++++++++++++++++++++++++++--
- debug/translation.bash | 100 +++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 192 insertions(+), 4 deletions(-)
-
-commit a3c5997c57e5b1a20aae6d1071b584b4f17d0b23
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-17 22:14:30 +0300
-
-    xz: Update the Czech translation.
-    
-    Thanks to Marek Černocký.
-
- po/cs.po | 202 +++++++++++++++++++++++++++++++++++++++++----------------------
- 1 file changed, 131 insertions(+), 71 deletions(-)
-
-commit a1766af582dc23fddd9da1eeb4b9d61e3eb4c2e6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-16 23:40:41 +0300
-
-    xz: Add Italian translation.
-    
-    Thanks to Milo Casagrande and Lorenzo De Liso.
-
- THANKS     |   2 +
- po/LINGUAS |   1 +
- po/it.po   | 902 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 3 files changed, 905 insertions(+)
-
-commit 21088018554e2b0e02914205377ceb6e34a090bd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-15 00:34:13 +0300
-
-    xz: Edit a translators comment.
-
- src/xz/list.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit be16e28ece1b492b8f93382b7fa1cc4da23c6ff6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-14 22:47:14 +0300
-
-    xz: Add German translation.
-    
-    Thanks to Andre Noll.
-
- THANKS     |   1 +
- po/LINGUAS |   1 +
- po/de.po   | 903 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 3 files changed, 905 insertions(+)
-
-commit e23ea74f3240e6b69683f9e69d1716e0f9e9092b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-10 14:30:25 +0300
-
-    Updated README.
-
- README | 2 --
- 1 file changed, 2 deletions(-)
-
-commit 8dad2fd69336985adb9f774fa96dc9c0efcb5a71
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-10 14:30:07 +0300
-
-    Updated INSTALL.
-
- INSTALL | 7 ++++---
- 1 file changed, 4 insertions(+), 3 deletions(-)
-
-commit 0b5f07fe3728c27cce416ddc40f7e4803ae96ac2
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-10 14:26:20 +0300
-
-    Updated the git repository address in ChangeLog.
-
- ChangeLog | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit a8760203f93a69bc39fd14520a6e9e7b7d70be06
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-10 14:09:33 +0300
-
-    xz: Add a comment to translators about "literal context bits".
-
- src/xz/message.c | 4 ++++
- 1 file changed, 4 insertions(+)
-
-commit bb0b1004f83cdc4d309e1471c2ecaf9f95ce60c5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-10 10:30:33 +0300
-
-    xz: Multiple fixes.
-    
-    The code assumed that printing numbers with thousand separators
-    and decimal points would always produce only US-ASCII characters.
-    This was used for buffer sizes (with snprintf(), no overflows)
-    and aligning columns of the progress indicator and --list. That
-    assumption was wrong (e.g. LC_ALL=fi_FI.UTF-8 with glibc), so
-    multibyte character support was added in this commit. The old
-    way is used if the operating system doesn't have enough multibyte
-    support (e.g. lacks wcwidth()).
-    
-    The sizes of buffers were increased to accomodate multibyte
-    characters. I don't know how big they should be exactly, but
-    they aren't used for anything critical, so it's not too bad.
-    If they still aren't big enough, I hopefully get a bug report.
-    snprintf() takes care of avoiding buffer overflows.
-    
-    Some static buffers were replaced with buffers allocated on
-    stack. double_to_str() was removed. uint64_to_str() and
-    uint64_to_nicestr() now share the static buffer and test
-    for thousand separator support.
-    
-    Integrity check names "None" and "Unknown-N" (2 <= N <= 15)
-    were marked to be translated. I had forgot these, plus they
-    wouldn't have worked correctly anyway before this commit,
-    because printing tables with multibyte strings didn't work.
-    
-    Thanks to Marek Černocký for reporting the bug about
-    misaligned table columns in --list output.
-
- configure.ac                    |   1 +
- m4/tuklib_mbstr.m4              |  30 ++++++
- src/common/tuklib_mbstr.h       |  66 +++++++++++++
- src/common/tuklib_mbstr_fw.c    |  31 ++++++
- src/common/tuklib_mbstr_width.c |  64 +++++++++++++
- src/xz/Makefile.am              |   4 +-
- src/xz/list.c                   | 205 +++++++++++++++++++++++++++-------------
- src/xz/message.c                |  56 +++++++----
- src/xz/message.h                |  10 +-
- src/xz/private.h                |   1 +
- src/xz/util.c                   | 136 +++++++++-----------------
- src/xz/util.h                   |   7 --
- 12 files changed, 424 insertions(+), 187 deletions(-)
-
-commit 639f8e2af33cf8a184d59ba56b6df7c098679d61
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-08 08:49:22 +0300
-
-    Update the Czech translation.
-    
-    Thanks to Marek Černocký.
-
- po/cs.po | 655 +++++++++++++++++++++++++++++++++++++++++++--------------------
- 1 file changed, 454 insertions(+), 201 deletions(-)
-
-commit 41bc9956ebfd7c86777d33676acf34c45e7ca7c7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-07 12:31:40 +0300
-
-    xz: Add a note to translators.
-
- src/xz/hardware.c | 2 ++
- 1 file changed, 2 insertions(+)
-
-commit 77a7746616e555fc08028e883a56d06bf0088b81
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-07 10:42:13 +0300
-
-    Fix use of N_() and ngettext().
-    
-    I had somehow thought that N_() is usually used
-    as shorthand for ngettext().
-    
-    This also fixes a missing \n from a call to ngettext().
-
- src/common/tuklib_gettext.h | 4 ++--
- src/xz/list.c               | 4 ++--
- 2 files changed, 4 insertions(+), 4 deletions(-)
-
-commit e6ad39335842343e622ab51207d1d3cb9caad801
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-06 19:43:12 +0300
-
-    Add missing files to POTFILES.in.
-
- po/POTFILES.in | 3 +++
- 1 file changed, 3 insertions(+)
-
-commit 58f55131820d2e08a1a6beb9ec0ee2378044eb30
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-06 10:16:24 +0300
-
-    xz: Improve a comment.
-
- src/xz/file_io.c | 7 ++++---
- 1 file changed, 4 insertions(+), 3 deletions(-)
-
-commit bcb1b898341f7073f51660d7052d7ed6c5461a66
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-05 21:34:29 +0300
-
-    xz: Update the comment about NetBSD in file_io.c.
-    
-    Thanks to Joerg Sonnenberger.
-
- src/xz/file_io.c | 8 ++++----
- 1 file changed, 4 insertions(+), 4 deletions(-)
-
-commit da014d55972f5addbf6b4360d3d8ed2ef4282170
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-05 21:11:33 +0300
-
-    xz: Use an array instead of pointer for stdin_filename.
-    
-    Thanks Joerg Sonnenberger.
-
- src/xz/args.c | 2 +-
- src/xz/args.h | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
-
-commit 8c7d3d1a0781c296c6b6e2465becaffd2132f7ee
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-05 12:16:17 +0300
-
-    xz: Hopefully ease translating the messages in list.c.
-
- src/xz/list.c | 33 +++++++++++++++++++++++----------
- 1 file changed, 23 insertions(+), 10 deletions(-)
-
-commit ef840950ad99cf2955c754875af0e01acf125079
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-04 23:14:44 +0300
-
-    xz: Fix grammar.
-
- src/xz/options.c | 3 +--
- 1 file changed, 1 insertion(+), 2 deletions(-)
-
-commit c46afd6edc04ea140db6c59e8486f5707c810c13
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-04 23:12:20 +0300
-
-    xz: Use lzma_lzma_preset() to initialize the options structure.
-
- src/xz/options.c | 14 ++------------
- 1 file changed, 2 insertions(+), 12 deletions(-)
-
-commit 8fd3ac046d0b1416a2094fecc456d9e0f4d5d065
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-04 22:16:28 +0300
-
-    Don't set lc=4 with --extreme.
-    
-    This should reduce the cases where --extreme makes
-    compression worse. On the other hand, some other
-    files may now benefit slightly less from --extreme.
-
- src/liblzma/lzma/lzma_encoder_presets.c | 1 -
- 1 file changed, 1 deletion(-)
-
-commit 474bac0c33e94aeaca8ada17ab19972b1424bc2b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-04 22:10:32 +0300
-
-    xz: Minor improvements to --help and --long-help.
-
- src/xz/message.c | 24 ++++++++++++------------
- 1 file changed, 12 insertions(+), 12 deletions(-)
-
-commit 373ee26f955617295c5c537b04a153a1969140d2
-Author: Jonathan Nieder <jrnieder@gmail.com>
-Date:   2010-09-03 16:49:15 -0500
-
-    Adjust memory limits in test_compress.sh
-    
-    Testing compression at level -4 now requires 48 MiB of free store at
-    compression time and 5 MiB at decompression time.
-    
-    Signed-off-by: Jonathan Nieder <jrnieder@gmail.com>
-
- tests/test_compress.sh | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 2fce9312f36727ea82f3430cc5d3a7d243c5f087
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-03 15:54:40 +0300
-
-    xz: Make -vv show also decompressor memory usage.
-
- src/xz/coder.c | 7 +++++++
- 1 file changed, 7 insertions(+)
-
-commit b4b1cbcb53624ab832f8b3189c74450dc7ea29b6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-03 15:13:12 +0300
-
-    Tweak the compression presets -0 .. -5.
-    
-    "Extreme" mode might need some further tweaking still.
-    Docs were not updated yet.
-
- src/liblzma/lzma/lzma_encoder_presets.c | 29 +++++++++++++++++++----------
- 1 file changed, 19 insertions(+), 10 deletions(-)
-
-commit 77fe5954cd3d10fb1837372684cbc133b56b6a87
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-03 12:28:41 +0300
-
-    liblzma: Adjust default depth calculation for HC3 and HC4.
-    
-    It was 8 + nice_len / 4, now it is 4 + nice_len / 4.
-    This allows faster settings at lower nice_len values,
-    even though it seems that I won't use automatic depth
-    calcuation with HC3 and HC4 in the presets.
-
- src/liblzma/lz/lz_encoder.c | 7 ++++---
- 1 file changed, 4 insertions(+), 3 deletions(-)
-
-commit fce69059cf901ce8075a78c7607d591f144a3b5a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-03 11:11:25 +0300
-
-    xz: Make --help two lines shorter.
-    
-    At least for now, the --help option doesn't list any
-    options that take arguments, so "Mandatory arguments to..."
-    can be omitted.
-
- src/xz/message.c | 7 +++++--
- 1 file changed, 5 insertions(+), 2 deletions(-)
-
-commit a848e47ced6e5e2a564b5c454b2f5a19c2f40298
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-02 19:22:35 +0300
-
-    xz: Make setting a preset override a custom filter chain.
-    
-    This is more logical behavior than ignoring preset level
-    options once a custom filter chain has been specified.
-
- src/xz/coder.c | 9 +++++++++
- 1 file changed, 9 insertions(+)
-
-commit b3ff7ba044eaeab3e424d7b51fe914daf681b1a3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-09-02 19:09:57 +0300
-
-    xz: Always warn if adjusting dictionary size due to memlimit.
-
- src/xz/coder.c | 28 +++++++++-------------------
- 1 file changed, 9 insertions(+), 19 deletions(-)
-
-commit d5653ba8a1ea9c00de4fddc617aba3c51e18139d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-08-10 11:04:30 +0300
-
-    Fix test_compress.sh.
-    
-    It broke when --memory option was removed from xzdec.
-    
-    Thanks to Jonathan Nieder.
-
- tests/test_compress.sh | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
-
-commit 792331bdee706aa852a78b171040ebf814c6f3ae
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-08-07 20:45:18 +0300
-
-    Disable the memory usage limiter by default.
-    
-    For several people, the limiter causes bigger problems that
-    it solves, so it is better to have it disabled by default.
-    Those who want to have a limiter by default need to enable
-    it via the environment variable XZ_DEFAULTS.
-    
-    Support for environment variable XZ_DEFAULTS was added. It is
-    parsed before XZ_OPT and technically identical with it. The
-    intended uses differ quite a bit though; see the man page.
-    
-    The memory usage limit can now be set separately for
-    compression and decompression using --memlimit-compress and
-    --memlimit-decompress. To set both at once, -M or --memlimit
-    can be used. --memory was retained as a legacy alias for
-    --memlimit for backwards compatibility.
-    
-    The semantics of --info-memory were changed in backwards
-    incompatible way. Compatibility wasn't meaningful due to
-    changes in the memory usage limiter functionality.
-    
-    The memory usage limiter info is no longer shown at the
-    bottom of xz --long -help.
-    
-    The memory usage limiter support for removed completely from xzdec.
-    
-    xz's man page was updated to match the above changes. Various
-    unrelated fixes were also made to the man page.
-
- src/xz/args.c     |  87 +++++++++-----
- src/xz/coder.c    |   8 +-
- src/xz/hardware.c |  96 +++++++++------
- src/xz/hardware.h |  23 ++--
- src/xz/list.c     |   2 +-
- src/xz/message.c  |  39 ++-----
- src/xz/message.h  |   4 -
- src/xz/xz.1       | 341 ++++++++++++++++++++++++++++++++++--------------------
- src/xzdec/xzdec.1 |  45 +------
- src/xzdec/xzdec.c | 176 +---------------------------
- 10 files changed, 373 insertions(+), 448 deletions(-)
-
-commit 4a45dd4c39f75d25c7a37b6400cb24d4010ca801
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-08-06 20:22:16 +0300
-
-    Add missing const to a global constant in xz.
-
- src/xz/args.c | 2 +-
- src/xz/args.h | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
-
-commit 01aa4869cb220b7fdad6d1acbabb2233045daa8f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-07-28 11:44:55 +0300
-
-    Language fixes for man pages.
-    
-    Thanks to A. Costa and Jonathan Nieder.
-
- src/lzmainfo/lzmainfo.1 | 4 ++--
- src/xz/xz.1             | 6 +++---
- 2 files changed, 5 insertions(+), 5 deletions(-)
-
-commit ce1f0deafe8504e1492bf1b1efb3e3ec950b1a2b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-07-27 20:47:12 +0300
-
-    Windows: Add a note about building a Git repository snapshot
-
- windows/INSTALL-Windows.txt | 9 +++++++++
- 1 file changed, 9 insertions(+)
-
-commit 507a4a4dea1e5462f12f7ed4b076c34e02054a38
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-07-27 20:45:03 +0300
-
-    Windows: build.sh is a bash script so name it correctly.
-
- INSTALL                     |   2 +-
- windows/INSTALL-Windows.txt |   6 +-
- windows/build.bash          | 189 ++++++++++++++++++++++++++++++++++++++++++++
- windows/build.sh            | 189 --------------------------------------------
- 4 files changed, 193 insertions(+), 193 deletions(-)
-
-commit b1cbfd40f049a646a639eb78a3e41e9e3ef73339
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-07-27 20:27:32 +0300
-
-    Windows: Don't strip liblzma.a too much.
-
- windows/build.sh | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
-
-commit a540198ffb25fad36380c5e92ac20c2d28eec46a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-07-13 20:07:26 +0300
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit bab0f01ed931f606b4675aa9f9331a17cec09bad
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-07-13 19:55:50 +0300
-
-    Add two simple example programs.
-    
-    Hopefully these help a bit when learning the basics
-    of liblzma API. I plan to write detailed examples about
-    both basic and advanced features with lots of comments,
-    but these two examples are good have right now.
-    
-    The examples were written by Daniel Mealha Cabrita. Thanks.
-
- doc/examples/xz_pipe_comp.c   | 127 ++++++++++++++++++++++++++++++++++++++++++
- doc/examples/xz_pipe_decomp.c | 115 ++++++++++++++++++++++++++++++++++++++
- 2 files changed, 242 insertions(+)
-
-commit c15c42abb3c8c6e77c778ef06c97a4a10b8b5d00
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-15 14:06:29 +0300
-
-    Add --no-adjust.
-
- src/xz/args.c    |  6 ++++++
- src/xz/coder.c   |  8 ++------
- src/xz/coder.h   |  4 ++++
- src/xz/message.c |  6 +++++-
- src/xz/xz.1      | 13 +++++++++++--
- 5 files changed, 28 insertions(+), 9 deletions(-)
-
-commit 2130926dd1c839280358172dfadd8d3054bde2b4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-11 21:51:32 +0300
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit bc612d0e0c9e4504c59d49168e87a7ae3e458443
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-11 21:48:32 +0300
-
-    Clarify the description of the default memlimit in the man page.
-    
-    Thanks to Denis Excoffier.
-
- src/xz/xz.1 | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit e1b6935d60a00405e6b5b455a3426d2248cc926c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-11 21:43:28 +0300
-
-    Fix string to uint64_t conversion.
-    
-    Thanks to Denis Excoffier for the bug report.
-
- src/xz/util.c     | 10 ++++++++--
- src/xzdec/xzdec.c | 13 +++++++++++--
- 2 files changed, 19 insertions(+), 4 deletions(-)
-
-commit 3e49c8acb0f5312948eddb2342dbb5802d4571d0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-11 10:40:28 +0300
-
-    Put the git commit to the filename in mydist rule.
-
- Makefile.am | 6 +++++-
- 1 file changed, 5 insertions(+), 1 deletion(-)
-
-commit d8b41eedce486d400f701b757b7b5e4e32276618
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-02 23:13:55 +0300
-
-    Fix compiling with -Werror.
-
- src/xz/message.c | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit b5fbab6123a39c9a55cd5d7af410e9aae067d5f8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-02 23:09:22 +0300
-
-    Silence a bogus Valgrind warning.
-    
-    When using -O2 with GCC, it liked to swap two comparisons
-    in one "if" statement. It's otherwise fine except that
-    the latter part, which is seemingly never executed, got
-    executed (nothing wrong with that) and then triggered
-    warning in Valgrind about conditional jump depending on
-    uninitialized variable. A few people find this annoying
-    so do things a bit differently to avoid the warning.
-
- src/liblzma/lz/lz_encoder.c | 6 +++++-
- 1 file changed, 5 insertions(+), 1 deletion(-)
-
-commit 29a7b250e685852f2f97615493ec49acaf528623
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-02 21:32:12 +0300
-
-    Fix a Windows-specific FIXME in signal handling code.
-
- src/xz/main.c    | 40 +++++++++++++++++++++++++++++++++++-----
- src/xz/private.h |  5 +++++
- src/xz/signals.c | 16 ++++++++--------
- 3 files changed, 48 insertions(+), 13 deletions(-)
-
-commit e89d987056cee7d4e279be3ef3a6cc690bfc0e6d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-02 17:46:58 +0300
-
-    Adjust SA_RESTART workaround.
-    
-    I want to get a bug report if something else than
-    DJGPP lacks SA_RESTART.
-
- src/xz/message.c | 14 +++++++-------
- 1 file changed, 7 insertions(+), 7 deletions(-)
-
-commit e243145c84ab5c3be8259fd486ead0de5235b3f0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-01 16:02:30 +0300
-
-    xz man page updates.
-    
-    - Concatenating .xz files and padding
-    - List mode
-    - Robot mode
-    - A few examples (but many more are needed)
-
- src/xz/xz.1 | 385 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++---
- 1 file changed, 366 insertions(+), 19 deletions(-)
-
-commit ce6dc3c0a891f23a862f80ec08d3b6f0beb2a562
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-01 15:51:44 +0300
-
-    Major update to xz --list.
-
- src/xz/list.c | 652 ++++++++++++++++++++++++++++++++++++++++++----------------
- 1 file changed, 471 insertions(+), 181 deletions(-)
-
-commit 905e54804a899e4ad526d38fdba7e803ab9b71bd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-01 14:13:03 +0300
-
-    Rename message_filters_get() to message_filters_to_str().
-
- src/xz/message.c | 4 ++--
- src/xz/message.h | 2 +-
- 2 files changed, 3 insertions(+), 3 deletions(-)
-
-commit 4b346ae8af20045027ae5efb068c6d69da3324d2
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-06-01 14:09:12 +0300
-
-    Fix a comment.
-
- src/liblzma/api/lzma/index.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 07dc34f6da45c9ab757dad7fd5eef522ad27d296
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-27 16:17:42 +0300
-
-    Fix lzma_block_compressed_size().
-
- src/liblzma/common/block_util.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
-
-commit 44d70cb154225e47eebf15a3cfbdf3794cbb4593
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-27 14:32:51 +0300
-
-    Take Cygwin into account in some #if lines.
-    
-    This change is no-op, but good to have just in case
-    for the future.
-
- src/xz/signals.c | 2 +-
- src/xz/signals.h | 4 ++--
- 2 files changed, 3 insertions(+), 3 deletions(-)
-
-commit a334348dc02803241cf4e0a539eecdc0e7ad2cc7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-27 13:42:44 +0300
-
-    Remove references to the Subblock filter in xz and tests.
-    
-    Thanks to Jonathan Nieder.
-
- src/xz/message.c          |  9 ---------
- tests/test_filter_flags.c | 23 -----------------------
- 2 files changed, 32 deletions(-)
-
-commit 70e5e2f6a7084e6af909deee88ceac2f6efa7893
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-27 13:35:36 +0300
-
-    Remove unused chunk_size.c.
-    
-    Thanks to Jonathan Nieder for the reminder.
-
- src/liblzma/common/chunk_size.c | 67 -----------------------------------------
- 1 file changed, 67 deletions(-)
-
-commit 01a414eaf4be6352c06b48001b041b47e8202faa
-Author: Jonathan Nieder <jrnieder@gmail.com>
-Date:   2010-05-27 02:31:33 -0500
-
-    Use my_min() instead of MIN() in src/xz/list.c
-    
-    This should have been done in
-    920a69a8d8e4203c5edddd829d932130eac188ea.
-
- src/xz/list.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 920a69a8d8e4203c5edddd829d932130eac188ea
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-26 10:36:46 +0300
-
-    Rename MIN() and MAX() to my_min() and my_max().
-    
-    This should avoid some minor portability issues.
-
- debug/full_flush.c                             |  2 +-
- debug/sync_flush.c                             |  2 +-
- src/common/sysdefs.h                           | 12 +++++-------
- src/liblzma/common/block_buffer_encoder.c      |  2 +-
- src/liblzma/common/common.c                    |  2 +-
- src/liblzma/common/stream_buffer_encoder.c     |  2 +-
- src/liblzma/delta/delta_encoder.c              |  2 +-
- src/liblzma/lz/lz_decoder.c                    |  7 ++++---
- src/liblzma/lz/lz_decoder.h                    |  2 +-
- src/liblzma/lz/lz_encoder.c                    |  2 +-
- src/liblzma/lz/lz_encoder.h                    |  2 +-
- src/liblzma/lz/lz_encoder_mf.c                 |  4 ++--
- src/liblzma/lzma/lzma2_encoder.c               |  2 +-
- src/liblzma/lzma/lzma_encoder_optimum_fast.c   |  2 +-
- src/liblzma/lzma/lzma_encoder_optimum_normal.c | 14 +++++++-------
- src/xz/args.c                                  |  3 ++-
- 16 files changed, 31 insertions(+), 31 deletions(-)
-
-commit 019ae27c24d0c694545a6a46f8b9fb552198b015
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-26 10:30:20 +0300
-
-    Fix compilation of debug/known_sizes.c.
-
- debug/known_sizes.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 98a4856a6ea84f79c790057a6eb89a25bc45b074
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-26 10:28:54 +0300
-
-    Remove references to Subblock filter in debug/sync_flush.c.
-
- debug/sync_flush.c | 13 -------------
- 1 file changed, 13 deletions(-)
-
-commit 703d2c33c095c41ae0693ee8c27c45e3847e4535
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-26 10:16:57 +0300
-
-    Better #error message.
-
- src/common/sysdefs.h | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit d8a55c48b39703dd83f11089ad01e1ff2ac102e0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-26 09:55:47 +0300
-
-    Remove the Subblock filter code for now.
-    
-    The spec isn't finished and the code didn't compile anymore.
-    It won't be included in XZ Utils 5.0.0. It's easy to get it
-    back once the spec is done.
-
- configure.ac                                   |   6 +-
- src/liblzma/Makefile.am                        |   5 -
- src/liblzma/api/Makefile.am                    |   1 -
- src/liblzma/api/lzma.h                         |   1 -
- src/liblzma/api/lzma/subblock.h                | 200 -----
- src/liblzma/common/common.h                    |   6 -
- src/liblzma/common/filter_common.c             |   9 -
- src/liblzma/common/filter_decoder.c            |  16 -
- src/liblzma/common/filter_encoder.c            |  12 -
- src/liblzma/subblock/Makefile.inc              |  20 -
- src/liblzma/subblock/subblock_decoder.c        | 630 ----------------
- src/liblzma/subblock/subblock_decoder.h        |  22 -
- src/liblzma/subblock/subblock_decoder_helper.c |  70 --
- src/liblzma/subblock/subblock_decoder_helper.h |  29 -
- src/liblzma/subblock/subblock_encoder.c        | 984 -------------------------
- src/liblzma/subblock/subblock_encoder.h        |  21 -
- src/xz/args.c                                  |   9 +-
- src/xz/options.c                               |  61 --
- src/xz/options.h                               |   7 -
- 19 files changed, 4 insertions(+), 2105 deletions(-)
-
-commit b6377fc990f9b8651149cae0fecb8b9c5904e26d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-16 18:42:22 +0300
-
-    Split message_filters().
-    
-    message_filters_to_str() converts the filter chain to
-    a string. message_filters_show() replaces the original
-    message_filters().
-    
-    uint32_to_optstr() was also added to show the dictionary
-    size in nicer format when possible.
-
- src/xz/coder.c   |   2 +-
- src/xz/message.c | 187 +++++++++++++++++++++++++++++++++++--------------------
- src/xz/message.h |  14 ++++-
- 3 files changed, 134 insertions(+), 69 deletions(-)
-
-commit d9986db782d6cf0f314342127280519339378fa0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-14 23:17:20 +0300
-
-    Omit lzma_restrict from the API headers.
-    
-    It isn't really useful so omitting it makes things
-    shorter and slightly more readable.
-
- src/liblzma/api/lzma.h       | 12 ------------
- src/liblzma/api/lzma/index.h |  5 ++---
- src/liblzma/api/lzma/vli.h   | 11 +++++------
- 3 files changed, 7 insertions(+), 21 deletions(-)
-
-commit 0d3489efca0a723dca0394809fa3e6170843af4b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-10 19:57:24 +0300
-
-    Updated INSTALL.
-
- INSTALL | 5 -----
- 1 file changed, 5 deletions(-)
-
-commit 3fb3d594a2b53886adee161b6261e92277f05f7c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-10 19:54:52 +0300
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 6548e304657e77d3a972053db3c41c5daf591113
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-05-10 19:54:15 +0300
-
-    Updates to tuklib_physmem and tuklib_cpucores.
-    
-    Don't use #error to generate compile error, because some
-    compilers actually don't take it as an error. This fixes
-    tuklib_physmem on IRIX.
-    
-    Fix incorrect error check for sysconf() return values.
-    
-    Add AIX, HP-UX, and Tru64 specific code to detect the
-    amount RAM.
-    
-    Add HP-UX specific code to detect the number of CPU cores.
-    
-    Thanks a lot to Peter O'Gorman for initial patches,
-    testing, and debugging these fixes.
-
- m4/tuklib_cpucores.m4        | 33 ++++++++++++++++----
- m4/tuklib_physmem.m4         | 72 ++++++++++++++++++++++++++++++++++++++++++--
- src/common/tuklib_cpucores.c | 14 +++++++--
- src/common/tuklib_physmem.c  | 33 +++++++++++++++++++-
- 4 files changed, 141 insertions(+), 11 deletions(-)
-
-commit a290cfee3e23f046889c022aa96b4eca2016fdda
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-04-12 21:55:56 +0300
-
-    Show both elapsed time and estimated remaining time in xz -v.
-    
-    The extra space for showing both has been taken from the
-    sizes field. If the sizes grow big, bigger units than MiB
-    will be used. It makes it slightly difficult to see that
-    progress is still happening with huge files, but it should
-    be OK in practice.
-    
-    Thanks to Trent W. Buck for <http://bugs.debian.org/574583>
-    and Jonathan Nieder for suggestions how to fix it.
-
- THANKS           |  1 +
- src/xz/message.c | 86 +++++++++++++++++++++++++-------------------------------
- 2 files changed, 39 insertions(+), 48 deletions(-)
-
-commit a1f7a986b8d708f9290da9799ca1b8d7082fad3e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-03-31 16:47:25 +0300
-
-    Add a simple tip to faq.txt about tar and xz.
-    
-    Thanks to Gilles Espinasse.
-
- THANKS      | 1 +
- doc/faq.txt | 6 ++++++
- 2 files changed, 7 insertions(+)
-
-commit c737eec91d200d730aa82662affd6b06ebb0bff0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-03-22 21:03:03 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit f4b2b52624b802c786e4e2a8eb6895794dd93b24
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-03-07 19:52:25 +0200
-
-    Fix xzgrep to not break if filenames have spaces or quotes.
-    
-    Thanks to someone who reported the bug on IRC.
-
- src/scripts/xzgrep.in | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit cf38da00a140bd3bd65b192390ae5553380fd774
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-03-07 13:59:32 +0200
-
-    Treat all integer multiplier suffixes as base-2.
-    
-    Originally both base-2 and base-10 were supported, but since
-    there seems to be little need for base-10 in XZ Utils, treat
-    everything as base-2 and also be more relaxed about the case
-    of the first letter of the suffix. Now xz will accept e.g.
-    KiB, Ki, k, K, kB, and KB, and interpret them all as 1024. The
-    recommended spelling of the suffixes are still KiB, MiB, and GiB.
-
- src/xz/util.c     | 53 +++++++++++++++++++++++------------------------------
- src/xz/xz.1       | 48 ++++++++++++++++++++++++++++--------------------
- src/xzdec/xzdec.c | 42 ++++++++++++++++--------------------------
- 3 files changed, 67 insertions(+), 76 deletions(-)
-
-commit 00fc1211ae7b687ac912098f4479112059deccbd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-03-07 13:50:23 +0200
-
-    Consistently round up the memory usage limit in messages.
-    
-    It still feels a bit wrong to round 1 byte to 1 MiB but
-    at least it is now done consistently so that the same
-    byte value is always rounded the same way to MiB.
-
- src/xz/message.c  | 5 +++--
- src/xzdec/xzdec.c | 7 +++++--
- 2 files changed, 8 insertions(+), 4 deletions(-)
-
-commit 9886d436ff5615fc70eef32ff757b1e934069621
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-03-07 13:34:34 +0200
-
-    Change the default of --enable-assume-ram from 32 to 128 MiB.
-    
-    This is to allow files created with "xz -9" to be decompressed
-    if the amount of RAM cannot be determined.
-
- INSTALL      |  5 ++---
- configure.ac | 11 ++++++-----
- 2 files changed, 8 insertions(+), 8 deletions(-)
-
-commit 2672bcc9f85ba28ff648e092e9eb4cd9e69ce418
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-03-07 13:29:28 +0200
-
-    Increase the default memory usage limit on "low-memory" systems.
-    
-    Previously the default limit was always 40 % of RAM. The
-    new limit is a little bit more complex:
-    
-      - If 40 % of RAM is at least 80 MiB, 40 % of RAM is used
-        as the limit.
-    
-      - If 80 % of RAM is over 80 MiB, 80 MiB is used as the limit.
-    
-      - Otherwise 80 % of RAM is used as the limit.
-    
-    This should make it possible to decompress files created with
-    "xz -9" on more systems. Swapping is generally more expected
-    on systems with less RAM, so higher default limit on them
-    shouldn't cause too bad surprises in terms of heavy swapping.
-    Instead, the higher default limit should reduce the number of
-    bad surprises when it used to prevent decompression of files
-    created with "xz -9". The DoS prevention system shouldn't be
-    a DoS itself.
-    
-    Note that even with the new default limit, a system with 64 MiB
-    RAM cannot decompress files created with "xz -9" without user
-    overriding the limit. This should be OK, because if xz is going
-    to need more memory than the system has RAM, it will run very
-    very slowly and thus it's good that user has to override the limit
-    in that case.
-
- src/xz/hardware.c | 43 +++++++++++++++++++++++++++++++------------
- src/xz/xz.1       | 21 +++++++++++++++------
- src/xzdec/xzdec.1 |  8 ++++----
- src/xzdec/xzdec.c | 42 ++++++++++++++++++++++++++++++------------
- 4 files changed, 80 insertions(+), 34 deletions(-)
-
-commit 5527b7269a997e7f335d60f237a64bbf225d9dc7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-03-06 21:36:19 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit d0d1c51aea4351288a7e533cce28cb7f852f6b05
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-03-06 21:17:20 +0200
-
-    Fix missing initialization in lzma_strm_init().
-    
-    With bad luck, lzma_code() could return LZMA_BUF_ERROR
-    when it shouldn't.
-    
-    This has been here since the early days of liblzma.
-    It got triggered by the modifications made to the xz
-    tool in commit 18c10c30d2833f394cd7bce0e6a821044b15832f
-    but only when decompressing .lzma files. Somehow I managed
-    to miss testing that with Valgrind earlier.
-    
-    This fixes <http://bugs.gentoo.org/show_bug.cgi?id=305591>.
-    Thanks to Rafał Mużyło for helping to debug it on IRC.
-
- src/liblzma/common/common.c | 1 +
- 1 file changed, 1 insertion(+)
-
-commit eb7d51a3faf9298c0c7aa9aaeae1023dcf9e37ea
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-02-12 13:16:15 +0200
-
-    Collection of language fixes to comments and docs.
-    
-    Thanks to Jonathan Nieder.
-
- README                                         |  2 +-
- configure.ac                                   |  2 +-
- doc/faq.txt                                    |  2 +-
- extra/7z2lzma/7z2lzma.bash                     |  2 +-
- src/common/tuklib_progname.c                   |  2 +-
- src/common/tuklib_progname.h                   |  2 +-
- src/liblzma/api/lzma/base.h                    |  8 ++++----
- src/liblzma/api/lzma/bcj.h                     |  2 +-
- src/liblzma/api/lzma/block.h                   |  2 +-
- src/liblzma/api/lzma/check.h                   |  2 +-
- src/liblzma/api/lzma/filter.h                  |  4 ++--
- src/liblzma/api/lzma/index.h                   |  6 +++---
- src/liblzma/api/lzma/lzma.h                    |  2 +-
- src/liblzma/api/lzma/version.h                 |  2 +-
- src/liblzma/api/lzma/vli.h                     |  2 +-
- src/liblzma/common/block_header_encoder.c      |  2 +-
- src/liblzma/common/chunk_size.c                |  4 ++--
- src/liblzma/common/common.h                    |  4 ++--
- src/liblzma/common/filter_buffer_decoder.c     |  2 +-
- src/liblzma/common/filter_encoder.c            |  4 ++--
- src/liblzma/common/index.c                     |  6 +++---
- src/liblzma/common/index_encoder.c             |  2 +-
- src/liblzma/common/stream_encoder.c            |  2 +-
- src/liblzma/common/vli_decoder.c               |  2 +-
- src/liblzma/lz/lz_encoder.c                    |  2 +-
- src/liblzma/lz/lz_encoder.h                    |  2 +-
- src/liblzma/lzma/lzma2_encoder.c               |  2 +-
- src/liblzma/lzma/lzma_decoder.c                |  4 ++--
- src/liblzma/lzma/lzma_decoder.h                |  2 +-
- src/liblzma/lzma/lzma_encoder_optimum_fast.c   |  2 +-
- src/liblzma/lzma/lzma_encoder_optimum_normal.c |  2 +-
- src/liblzma/lzma/lzma_encoder_private.h        |  2 +-
- src/liblzma/simple/simple_coder.c              |  2 +-
- src/liblzma/subblock/subblock_encoder.c        |  2 +-
- src/scripts/xzdiff.1                           |  2 +-
- src/scripts/xzless.1                           | 10 +++++-----
- src/xz/coder.c                                 |  2 +-
- src/xz/file_io.c                               |  2 +-
- src/xz/main.c                                  |  6 +++---
- src/xz/main.h                                  |  2 +-
- src/xz/message.c                               | 10 +++++-----
- src/xz/message.h                               |  2 +-
- src/xz/xz.1                                    | 16 ++++++++--------
- src/xzdec/lzmadec_w32res.rc                    |  2 +-
- src/xzdec/xzdec_w32res.rc                      |  2 +-
- tests/test_index.c                             |  2 +-
- windows/build.sh                               |  4 ++--
- 47 files changed, 77 insertions(+), 77 deletions(-)
-
-commit 4785f2021aa6a23f1caf724fcc823e562584f225
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-02-12 12:41:20 +0200
-
-    Fix jl -> jb in ASM files.
-
- src/liblzma/check/crc32_x86.S | 2 +-
- src/liblzma/check/crc64_x86.S | 4 ++--
- 2 files changed, 3 insertions(+), 3 deletions(-)
-
-commit 6b50c9429bf85521d355adc61745d06ee017f8c8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-02-12 12:31:22 +0200
-
-    Use __APPLE__ instead of __MACH__ in ASM files.
-    
-    This allows the files to work on HURD.
-    
-    Thanks to Jonathan Nieder.
-
- src/liblzma/check/crc32_x86.S | 8 ++++----
- src/liblzma/check/crc64_x86.S | 8 ++++----
- 2 files changed, 8 insertions(+), 8 deletions(-)
-
-commit 6503fde658a5cdbdd907a788865470dd64771601
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-02-07 19:48:06 +0200
-
-    Subtle change to liblzma Block handling API.
-    
-    lzma_block.version has to be initialized even for
-    lzma_block_header_decode(). This way a future version
-    of liblzma won't allocate memory in a way that an old
-    application doesn't know how to free it.
-    
-    The subtlety of this change is that all current apps
-    using lzma_block_header_decode() will keep working for
-    now, because the only possible version value is zero,
-    and lzma_block_header_decode() unconditionally sets the
-    version to zero even now. Unless fixed, these apps will
-    break in the future if a new version of the Block options
-    is ever needed.
-
- src/liblzma/api/lzma/block.h        | 39 ++++++++++++++++---------------------
- src/liblzma/common/stream_decoder.c |  3 +++
- 2 files changed, 20 insertions(+), 22 deletions(-)
-
-commit dd7c3841ff78cb94ce02b0220c6e4748460970f7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-02-02 11:50:11 +0200
-
-    Fix wrong assertion.
-    
-    This was added in 455e68c030fde8a8c2f5e254c3b3ab9489bf3735.
-
- src/xz/main.c | 5 +++--
- 1 file changed, 3 insertions(+), 2 deletions(-)
-
-commit 9d67588c1597849504a3e5ac8bf6f06e7d2ee8be
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-02-01 22:48:42 +0200
-
-    Updated TODO.
-
- TODO | 4 ----
- 1 file changed, 4 deletions(-)
-
-commit fef6333f52c8801308c3b78acb7942988541d137
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-02-01 22:47:54 +0200
-
-    Fix typos in comments.
-
- src/xz/list.c    | 2 +-
- windows/build.sh | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
-
-commit 455e68c030fde8a8c2f5e254c3b3ab9489bf3735
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-02-01 22:46:56 +0200
-
-    Fix signal handling for --list.
-
- src/xz/main.c | 19 ++++++++++++++-----
- 1 file changed, 14 insertions(+), 5 deletions(-)
-
-commit 82220a149015616f75641ee8bbea415137535b9b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-02-01 11:44:45 +0200
-
-    Fix compression of symlinks with --force.
-    
-    xz --force accepted symlinks, but didn't remove
-    them after successful compression. Instead, an error
-    message was displayed.
-
- src/xz/file_io.c | 14 +++++++++++++-
- 1 file changed, 13 insertions(+), 1 deletion(-)
-
-commit d4da177d5ba3d2ef7323a6f1e06ca16e0478810e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-02-01 10:20:57 +0200
-
-    Fix a comment.
-
- windows/build.sh | 5 ++---
- 1 file changed, 2 insertions(+), 3 deletions(-)
-
-commit f9dd797a423a148903cf345b4146cb1fe1eab11d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-31 23:43:54 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit ee5ddb8b28419fe4923ded5c18a50570a762dcab
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-31 23:41:29 +0200
-
-    Updated TODO.
-
- TODO | 17 +++++++++++------
- 1 file changed, 11 insertions(+), 6 deletions(-)
-
-commit 11936ad3f5a2e97bda3463c7a56a2f4bb9265ea6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-31 23:35:04 +0200
-
-    Mention TODO in README.
-
- README | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 2901a8e7e82af05675b8cd8758a8ceddb111359f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-31 23:31:14 +0200
-
-    Updated INSTALL.
-
- INSTALL | 52 ++++++++++++++++++++++++++--------------------------
- 1 file changed, 26 insertions(+), 26 deletions(-)
-
-commit 8884e16864ba53fb4b58623d7537d7ef30c28e11
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-31 23:28:51 +0200
-
-    Revise the Windows build files.
-    
-    The old Makefile + config.h was deleted, because it
-    becomes outdated too easily and building with the
-    Autotools based build system works fine even on Windows.
-    
-    windows/build.sh hasn't got much testing, but it should
-    work to build 32-bit x86 and x86-64 versions of XZ Utils
-    using MSYS, MinGW or MinGW-w32, and MinGW-w64.
-    
-    windows/INSTALL-Windows.txt describes what packages are
-    needed and how to install them.
-    
-    windows/README-Windows.txt is a readme file for the binary
-    package that build.sh hopefully builds.
-    
-    There are no instructions about using Autotools for now,
-    so those using a git snapshot may want to run
-    "autoreconf -fi && ./configure && make mydist" on a UN*X
-    box and then copy the resulting .tar.gz to a Windows.
-
- windows/INSTALL-Windows.txt | 131 ++++++++++++++++++
- windows/Makefile            | 320 --------------------------------------------
- windows/README              | 155 ---------------------
- windows/README-Windows.txt  | 115 ++++++++++++++++
- windows/build.sh            | 189 ++++++++++++++++++++++++++
- windows/config.h            | 170 -----------------------
- 6 files changed, 435 insertions(+), 645 deletions(-)
-
-commit 34eb5e201d62f7f46bbe6fe97cfe08cb31b3b88c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-31 19:52:38 +0200
-
-    Select the default integrity check type at runtime.
-    
-    Previously it was set statically to CRC64 or CRC32
-    depending on options passed to the configure script.
-
- src/xz/coder.c | 19 ++++++++++++++-----
- 1 file changed, 14 insertions(+), 5 deletions(-)
-
-commit 96a4f840e3b9ca5c81e5711ff9c267b194f93ef1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-31 18:17:50 +0200
-
-    Improve displaying of the memory usage limit.
-
- src/xz/coder.c   |  8 +++-----
- src/xz/message.c | 37 +++++++++++++++++++++++++++++--------
- src/xz/util.c    |  7 +++++++
- src/xz/util.h    |  6 ++++++
- 4 files changed, 45 insertions(+), 13 deletions(-)
-
-commit b3cc4d8edd68a0250cc69680c99b9f7343f99cf2
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-31 12:53:56 +0200
-
-    Don't use uninitialized sigset_t.
-    
-    If signal handlers haven't been established, then it's
-    useless to try to block them, especially since the sigset_t
-    used for blocking hasn't been initialized yet.
-
- src/xz/signals.c | 34 ++++++++++++++++++++++++----------
- 1 file changed, 24 insertions(+), 10 deletions(-)
-
-commit 231c3c7098f1099a56abb8afece76fc9b8699f05
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-31 12:01:54 +0200
-
-    Delay opening the destionation file and other fixes.
-    
-    The opening of the destination file is now delayed a little.
-    The coder is initialized, and if decompressing, the memory
-    usage of the first Block compared against the memory
-    usage limit before the destination file is opened. This
-    means that if --force was used, the old "target" file won't
-    be deleted so easily when something goes wrong very early.
-    Thanks to Mark K for the bug report.
-    
-    The above fix required some changes to progress message
-    handling. Now there is a separate function for setting and
-    printing the filename. It is used also in list.c.
-    
-    list_file() now handles stdin correctly (gives an error).
-    
-    A useless check for user_abort was removed from file_io.c.
-
- src/xz/coder.c   |  64 ++++++++++++++++++++++-----------
- src/xz/file_io.c | 107 +++++++++++++++++++++++++++----------------------------
- src/xz/file_io.h |   8 +++--
- src/xz/list.c    |  28 +++++----------
- src/xz/message.c |  46 +++++++++++++-----------
- src/xz/message.h |  29 ++++++++++-----
- 6 files changed, 157 insertions(+), 125 deletions(-)
-
-commit 0dbd0641db99d5e73d51d04ce7a71e52dc6b4105
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-29 22:48:04 +0200
-
-    Add list.h to src/xz/Makefile.am.
-    
-    This should have been already in
-    0bc9eab243dee3be764b3530433a7fcdc3f7c6a1.
-
- src/xz/Makefile.am | 1 +
- 1 file changed, 1 insertion(+)
-
-commit b4b1a56e0cbd597157858264f5c7189201ac9018
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-29 13:24:27 +0200
-
-    Add lzmainfo.1 to manfiles list to convert to .txt and .pdf.
-
- Makefile.am | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 5574d64e03ad3a3d6e00e4b0d3e81c7b5529ec95
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-27 16:42:11 +0200
-
-    Silence two compiler warnings on DOS-like systems.
-
- src/common/tuklib_open_stdxxx.c | 6 +++++-
- src/xz/file_io.c                | 3 +++
- 2 files changed, 8 insertions(+), 1 deletion(-)
-
-commit b063cc34a30a4edf109343ff373b2b62b8ca72d3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-27 13:31:03 +0200
-
-    Use PACKAGE_URL instead of custom PACKAGE_HOMEPAGE.
-
- configure.ac              | 9 ++-------
- src/liblzma/liblzma.pc.in | 2 +-
- src/lzmainfo/lzmainfo.c   | 2 +-
- src/xz/message.c          | 2 +-
- src/xzdec/xzdec.c         | 2 +-
- 5 files changed, 6 insertions(+), 11 deletions(-)
-
-commit 38b8035b5cb5f56457c5fa5a891d6900fcf5984f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-26 23:37:46 +0200
-
-    Add a missing space to an error message.
-    
-    Thanks to Robert Readman.
-
- src/xz/args.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit e5496f9628ff5979392a80421d0b63a4de8015b4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-26 22:53:37 +0200
-
-    Use past tense in error message in io_unlink().
-    
-    Added a note to translators too.
-    
-    Thanks to Robert Readman.
-
- THANKS           |  1 +
- src/xz/file_io.c | 14 ++++++++++++--
- 2 files changed, 13 insertions(+), 2 deletions(-)
-
-commit d9a9800597ea540090e434132c3b511217df0a2b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-26 15:42:24 +0200
-
-    Fix too small static buffer in util.c.
-    
-    This was introduced in
-    0dd6d007669b946543ca939a44243833c79e08f4 two days ago.
-
- src/xz/util.c | 9 ++++-----
- 1 file changed, 4 insertions(+), 5 deletions(-)
-
-commit d0b4bbf5da068503c099cd456e294d7673548cc0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-26 14:46:43 +0200
-
-    Minor comment fix.
-
- src/xz/main.c | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit 0bc9eab243dee3be764b3530433a7fcdc3f7c6a1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-24 23:50:54 +0200
-
-    Add initial version of xz --list.
-    
-    This is a bit rough but should be useful for basic things.
-    Ideas (with detailed examples) about the output format are
-    welcome.
-    
-    The output of --robot --list is not necessarily stable yet,
-    although I don't currently have any plans about changing it.
-    
-    The man page hasn't been updated yet.
-
- src/xz/Makefile.am |   1 +
- src/xz/list.c      | 988 ++++++++++++++++++++++++++++++++++-------------------
- src/xz/list.h      |  18 +
- src/xz/main.c      |  19 +-
- src/xz/private.h   |   1 +
- 5 files changed, 668 insertions(+), 359 deletions(-)
-
-commit df254ce03be016e217b511e7acd5d493f9929ca5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-24 22:46:11 +0200
-
-    Add io_pread().
-    
-    It will be used by --list.
-
- src/xz/file_io.c | 25 +++++++++++++++++++++++++
- src/xz/file_io.h | 17 +++++++++++++++++
- 2 files changed, 42 insertions(+)
-
-commit ef68dd4a92976276304de2aedfbe34ae91a86abb
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-24 22:45:14 +0200
-
-    Set LC_NUMERIC=C when --robot is used.
-    
-    It is to ensure that floating point numbers
-    will always have a dot as the decimal separator.
-
- src/xz/args.c | 4 ++++
- 1 file changed, 4 insertions(+)
-
-commit 0dd6d007669b946543ca939a44243833c79e08f4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-24 16:57:40 +0200
-
-    Some improvements to printing sizes in xz.
-
- src/xz/coder.c   | 56 +++++++++++++++------------------------
- src/xz/message.c | 80 ++++++++++++++++++--------------------------------------
- src/xz/message.h |  4 +++
- src/xz/util.c    | 72 ++++++++++++++++++++++++++++++++++++++++++++++++++
- src/xz/util.h    | 44 +++++++++++++++++++++++++++++++
- 5 files changed, 166 insertions(+), 90 deletions(-)
-
-commit 2a98fdffd68c66371279c211c29153c808ad5c1d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-20 22:02:35 +0200
-
-    Fix a typo in README.
-    
-    Thanks to R. Bijker.
-
- README | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-commit 07a11dad44e041b01dcfc73e8d4e00731158c06d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-17 11:59:54 +0200
-
-    Updated windows/Makefile.
-    
-    Thanks to Dan Shechter for the patch.
-    
-    It is likely that windows/Makefile will be removed
-    completely, because Autotols based build nowadays
-    works well with both 32-bit and 64-bit MinGW (I
-    just need to update the docs).
-
- windows/Makefile | 38 +++++++++++++++++++++++++-------------
- windows/config.h |  2 ++
- 2 files changed, 27 insertions(+), 13 deletions(-)
-
-commit 37f31ead9d2b4e467df11450cf29ed7d7e3e25f3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-15 11:05:11 +0200
-
-    Update the xz man page to match the previous two commits.
-
- src/xz/xz.1 | 9 +++------
- 1 file changed, 3 insertions(+), 6 deletions(-)
-
-commit 3ffd5d81a43210c8da56da5c5b3637d3f8bc63c7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-13 19:10:25 +0200
-
-    Don't read compressed data from a terminal or write it
-    to a terminal even if --force is specified.
-    
-    It just seems more reasonable this way.
-    
-    The new behavior matches bzip2. The old one matched gzip.
-
- src/xz/main.c | 20 +++++++++-----------
- src/xz/util.c |  8 ++++----
- 2 files changed, 13 insertions(+), 15 deletions(-)
-
-commit 23ac2c44c3ac76994825adb7f9a8f719f78b5ee4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-13 18:12:40 +0200
-
-    Don't compress or decompress special files unless writing
-    to stdout even if --force is used.
-    
-    --force will still enable compression of symlinks, but only
-    in case they point to a regular file.
-    
-    The new way simply seems more reasonable. It matches gzip's
-    behavior while the old one matched bzip2's behavior.
-
- src/xz/file_io.c | 15 ++++++++++-----
- 1 file changed, 10 insertions(+), 5 deletions(-)
-
-commit cee12aa852ec0902983dc1f153346ef750157fb9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-12 16:30:33 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 153c7740c54b3c90129dbd3d6153ac1303c4d605
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-12 16:18:14 +0200
-
-    Add IRIX-specific code to tuklib_physmem and tuklib_cpucores.
-    
-    This is untested but it will get tested soon and, if needed,
-    fixed before 5.0.0.
-    
-    Thanks to Stuart Shelton.
-
- m4/tuklib_cpucores.m4        | 11 +++++++++--
- m4/tuklib_physmem.m4         | 22 +++++++++++++++++++++-
- src/common/tuklib_cpucores.c |  6 ++++++
- src/common/tuklib_physmem.c  | 19 +++++++++++++++++++
- 4 files changed, 55 insertions(+), 3 deletions(-)
-
-commit 8ea8dc754a7a5bc2d60db1eac201839cabdab6a1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2010-01-01 00:29:10 +0200
-
-    Fix _memconfig() functions.
-    
-    This affects lzma_memusage() and lzma_memlimit_get().
-
- src/liblzma/api/lzma/index.h        |  7 -------
- src/liblzma/common/alone_decoder.c  | 11 +++++++----
- src/liblzma/common/index_decoder.c  | 10 ++++++----
- src/liblzma/common/stream_decoder.c | 11 +++++++----
- 4 files changed, 20 insertions(+), 19 deletions(-)
-
-commit 1a7ec87c8ee61dfc2e496d2e1fb7ab0939804691
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-12-31 22:45:53 +0200
-
-    Revised the Index handling code.
-    
-    This breaks API and ABI but most apps are not affected
-    since most apps don't use this part of the API. You will
-    get a compile error if you are using anything that got
-    broken.
-    
-    Summary of changes:
-    
-      - Ability to store Stream Flags, which are needed
-        for random-access reading in multi-Stream files.
-    
-      - Separate function to set size of Stream Padding.
-    
-      - Iterator structure makes it possible to read the same
-        lzma_index from multiple threads at the same time.
-    
-      - A lot faster code to locate Blocks.
-    
-      - Removed lzma_index_equal() without adding anything
-        to replace it. I don't know what it should do exactly
-        with the new features and what actually needs this
-        function in the first place other than test_index.c,
-        which now has its own code to compare lzma_indexes.
-
- src/liblzma/api/lzma/index.h               |  572 +++++++---
- src/liblzma/common/index.c                 | 1553 ++++++++++++++++++----------
- src/liblzma/common/index.h                 |    6 +
- src/liblzma/common/index_decoder.c         |   12 +-
- src/liblzma/common/index_encoder.c         |   36 +-
- src/liblzma/common/index_encoder.h         |    2 +-
- src/liblzma/common/stream_buffer_encoder.c |    6 +-
- src/liblzma/common/stream_encoder.c        |    3 +-
- tests/test_index.c                         |  371 ++++---
- 9 files changed, 1703 insertions(+), 858 deletions(-)
-
-commit f29997a846e673cb3b8cbd57de47ed313b3978bb
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-12-31 21:13:25 +0200
-
-    Remove c-format tag in cs.po.
-    
-    It was fixed in the C code earlier.
-
- po/cs.po | 1 -
- 1 file changed, 1 deletion(-)
-
-commit 097bad000363e0bf29f8274ad2d7ab59f7dbf644
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-12-31 21:11:05 +0200
-
-    Add missing lzma_nothrow in filter.h.
-
- src/liblzma/api/lzma/filter.h | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-commit b56cb1fc31fa2381f92eefc040df85667048d626
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-12-09 18:13:44 +0200
-
-    Remove redefinition of _(msgid) macro from lzmainfo.c.
-
- src/lzmainfo/lzmainfo.c | 7 -------
- 1 file changed, 7 deletions(-)
-
-commit 171b03febfe09d9fae6ac8be6aa4518bcaf427d2
-Author: Jonathan Nieder <jrnieder@gmail.com>
-Date:   2009-12-08 19:41:57 -0600
-
-    update po/.gitignore
-    
-    Since the *.gmo files are deleted by the maintainer-clean target,
-    I assume they are not meant to be tracked.
-    
-    Also add the other files listed in the Makefile’s clean targets
-    (stamp-poT, xz.po, xz.[12].po, *.new.po, xz.mo) to make sure they
-    are not accidentally tracked.  Most of these are intermediate
-    files that would not appear unless a build is interrupted or
-    fails.
-    
-    Split the list of untracked files by origin to make it easier to
-    tell if files are missing in the future.
-    
-    Signed-off-by: Jonathan Nieder <jrnieder@gmail.com>
-
- po/.gitignore | 28 ++++++++++++++++++++++------
- 1 file changed, 22 insertions(+), 6 deletions(-)
-
-commit f7e44c6c11f630519072971b8b07a5729c096c36
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-12-09 00:38:55 +0200
-
-    Always rely on GCC's auto-import on Windows.
-    
-    I understood that this is nicer, because then people
-    don't need to worry about the LZMA_API_STATIC macro.
-    
-    Thanks to Charles Wilson and Keith Marshall.
-
- src/liblzma/api/lzma.h | 16 +++++++++-------
- 1 file changed, 9 insertions(+), 7 deletions(-)
-
-commit 7b76a3e2336f25088957cba92b0dbd854d9caa3c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-12-07 21:46:53 +0200
-
-    Fix file_io.c on DOS-like systems.
-    
-    The problem was introduced when adding sparse file
-    support in 465d1b0d6518c5d980f2db4c2d769f9905bdd902.
-    
-    Thanks to Charles Wilson.
-
- src/xz/file_io.c | 4 ++++
- 1 file changed, 4 insertions(+)
-
-commit 0696f5d268362221380e039bad48a86e29067c6a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-12-07 20:54:21 +0200
-
-    Add Czech translation.
-    
-    Thanks to Marek Černocký.
-    
-    Other people planning to translate xz: Note that the
-    messages are a little bit in flux still. Translations
-    are still welcome, just be prepared to some extra work
-    in case there are changes.
-
- THANKS     |   1 +
- po/LINGUAS |   1 +
- po/cs.po   | 637 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 3 files changed, 639 insertions(+)
-
-commit 5e817a50d276f0a3607638c1c1d449d50b9aa4e5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-12-07 20:32:08 +0200
-
-    Add a note for translators to add a bug reporting address
-    for translation bugs.
-
- src/xz/message.c | 4 ++++
- 1 file changed, 4 insertions(+)
-
-commit 6db1c35be9e1e364cdacff6878910e1b7aac2a37
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-12-07 20:07:02 +0200
-
-    Prevent xgettext from taking one regular string as a C format string.
-    
-    Thanks to Marek Černocký.
-
- src/xz/message.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/liblzma/Makefile.am        | 2 +-
+ src/liblzma/api/lzma/version.h | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit e0c2776b6ffbd2b1900fde353aceac734edc93d7
+commit cbe0cec8476bdd0416c7ca9bc83895c9bea1cf78
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-28 17:45:22 +0200
-
-    Remove duplicate code in io_open_dest().
+Date:   2015-09-29 13:57:28 +0300
     
-    Fix a missing _() in the error message too.
+    Update NEWS for 5.2.2.
 
- src/xz/file_io.c | 9 +--------
- 1 file changed, 1 insertion(+), 8 deletions(-)
+ NEWS | 18 ++++++++++++++++++
+ 1 file changed, 18 insertions(+)
 
-commit f057a33c6f7c5992389479f2d4feabf2900ba7ee
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-26 10:11:23 +0200
+commit 49427ce7eececdd18bbd35dab23c81910d083e1c
+Author: Andre Noll <maan@tuebingen.mpg.de>
+Date:   2015-05-28 15:50:00 +0200
 
-    Typo fix to sysdefs.h.
+    Fix typo in German translation.
     
-    Thanks to Jonathan Nieder.
+    As pointed out by Robert Pollak, there's a typo in the German
+    translation of the compression preset option (-0 ... -9) help text.
+    "The compressor" translates to "der Komprimierer", and the genitive
+    form is "des Komprimierers". The old word makes no sense at all.
 
- src/common/sysdefs.h | 2 +-
+ po/de.po | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 8767b41534eafdf5e742e12190646bf5740b0cdb
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-26 10:10:36 +0200
-
-    Fix a memory leak in test_index.c.
-    
-    This was introduced in
-    bd13b04e202b6f495a68eb0766f97085b7c50a06.
-    
-    Thanks to Jim Meyering for noticing it.
-
- tests/test_index.c | 2 ++
- 1 file changed, 2 insertions(+)
-
-commit 919fbaff860acdaa4bcd216500a0b1c960a6db92
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-25 14:22:19 +0200
-
-    Add missing error check to coder.c.
-    
-    With bad luck this could cause a segfault due to
-    reading (but not writing) past the end of the buffer.
-
- src/xz/coder.c | 20 +++++++++++---------
- 1 file changed, 11 insertions(+), 9 deletions(-)
-
-commit bd13b04e202b6f495a68eb0766f97085b7c50a06
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-25 13:04:10 +0200
-
-    Fix bugs in lzma_index_read() and lzma_index_cat().
-    
-    lzma_index_read() didn't skip over Stream Padding
-    if it was the first record in the Index.
-    
-    lzma_index_cat() didn't combine small Indexes correctly.
-    
-    The test suite was updated to check for these bugs.
-    
-    These bugs didn't affect the xz command line tool or
-    most users of liblzma in any way.
-
- src/liblzma/common/index.c | 30 +++++++++++++++++++-----------
- tests/test_index.c         | 28 +++++++++++++++++++++++++---
- 2 files changed, 44 insertions(+), 14 deletions(-)
-
-commit 1f196909143b888e062bd9a0c4ba8c34d3019bfa
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-25 12:52:56 +0200
-
-    Index decoder fixes.
-    
-    The Index decoder code didn't perfectly match the API docs,
-    which said that *i will be set to point to the decoded Index
-    only after decoding has succeeded. The docs were a bit unclear
-    too.
-    
-    Now the decoder will initially set *i to NULL. *i will be set
-    to point to the decoded Index once decoding has succeeded.
-    This simplifies applications too, since it avoids dangling
-    pointers.
-
- src/liblzma/api/lzma/index.h       | 23 ++++++++++++-----------
- src/liblzma/common/index_decoder.c | 26 ++++++++++++++++++++------
- 2 files changed, 32 insertions(+), 17 deletions(-)
-
-commit 465d1b0d6518c5d980f2db4c2d769f9905bdd902
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-25 11:19:20 +0200
-
-    Create sparse files by default when decompressing into
-    a regular file.
-    
-    Sparse file creation can be disabled with --no-sparse.
-    I don't promise yet that the name of this option won't
-    change before 5.0.0. It's possible that the code, that
-    checks when it is safe to use sparse output on stdout,
-    is not good enough, and a more flexible command line
-    option is needed to configure sparse file handling.
-
- src/xz/args.c    |   6 ++
- src/xz/coder.c   |  33 ++++----
- src/xz/file_io.c | 243 +++++++++++++++++++++++++++++++++++++++++++++++--------
- src/xz/file_io.h |  34 ++++++--
- src/xz/message.c |   1 +
- src/xz/xz.1      |  11 +++
- 6 files changed, 272 insertions(+), 56 deletions(-)
-
-commit 37de544414fc2dc5039471d1002ebd015eb3e627
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-22 12:43:06 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit f1a28b96c900c658fe016852ff62f6c24d1f50fa
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-22 12:05:33 +0200
-
-    Add missing consts to pointer casts.
-
- src/liblzma/check/crc32_fast.c | 4 ++--
- src/liblzma/check/crc64_fast.c | 5 +++--
- 2 files changed, 5 insertions(+), 4 deletions(-)
-
-commit b9b5c54cd438b3ae47b44cc211b71f3bc53e35ef
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-22 12:00:30 +0200
-
-    Enable assembler code only if it is known to work
-    on that operating system.
-    
-    I'm too lazy to think how to make a good Autoconf test
-    for this and it's not that important anyway.
-    
-    No longer define HAVE_ASM_X86 or HAVE_ASM_X86_64.
-    Inline assembler (if any) is used if a macro like
-    __i386__ or __x86_64__ is defined.
-
- configure.ac | 26 ++++++++++++--------------
- 1 file changed, 12 insertions(+), 14 deletions(-)
-
-commit 0733f4c9994db696420a405810d5f02c79ebc404
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-22 11:55:03 +0200
-
-    Make fastpos.h use tuklib_integer.h instead of bsr.h
-    when --enable-small has been specified.
-
- src/liblzma/common/Makefile.inc |  1 -
- src/liblzma/common/bsr.h        | 60 -----------------------------------------
- src/liblzma/lzma/fastpos.h      |  5 +---
- 3 files changed, 1 insertion(+), 65 deletions(-)
-
-commit 7ac3985d891dcc5773543f84cc5bce6c14841b12
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-22 11:52:30 +0200
-
-    Update tuklib_integer.h with bit scan functions.
-    
-    Thanks to Joachim Henke for the original patch.
-
- src/common/tuklib_integer.h | 189 ++++++++++++++++++++++++++++++++++++++++++--
- 1 file changed, 181 insertions(+), 8 deletions(-)
-
-commit c74c132f7f79a842c073c66575a4fdb985e4c2e3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-20 12:51:19 +0200
-
-    Update tuklib_cpucores.m4 and tuklib_physmem.m4 from tuklib,
-    which now use AC_CACHE_CHECK. Using the cache variable,
-    configure now warns if there is no method to detect the amount
-    of RAM and recommends using --enable-assume-ram.
-
- configure.ac          | 16 ++++++++++++++++
- m4/tuklib_cpucores.m4 | 31 ++++++++++++++++++-------------
- m4/tuklib_physmem.m4  | 50 +++++++++++++++++++++++++++-----------------------
- 3 files changed, 61 insertions(+), 36 deletions(-)
-
-commit d315ca4930ff96e1428c6021c96f209e1abdd83e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-16 18:16:45 +0200
-
-    Add support for --info-memory and --robot to xz.
-    
-    Currently --robot works only with --info-memory and
-    --version. --help and --long-help work too, but --robot
-    has no effect on them.
-    
-    Thanks to Jonathan Nieder for the original patches.
-
- src/xz/args.c    | 85 +++++++++++++++++++++++++++++++++-----------------------
- src/xz/args.h    |  1 +
- src/xz/main.c    | 11 +++++---
- src/xz/message.c | 47 +++++++++++++++++++++++--------
- src/xz/message.h |  4 +++
- src/xz/xz.1      | 40 +++++++++++++++++++++++---
- 6 files changed, 133 insertions(+), 55 deletions(-)
-
-commit e330fb7e6b8162894280c8a3dc22fdc05cd2d85e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-15 12:54:45 +0200
-
-    Fix wrong indentation caused by incorrect settings
-    in the text editor.
-
- src/liblzma/lz/lz_decoder.c                    | 18 +++++++++---------
- src/liblzma/lzma/lzma2_encoder.c               |  6 +++---
- src/liblzma/lzma/lzma_encoder_optimum_normal.c |  2 +-
- 3 files changed, 13 insertions(+), 13 deletions(-)
-
-commit 93e418562cf127a9171e87bcd4e9af8e1bfcdae4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-15 12:40:17 +0200
-
-    Add lzma_physmem().
-    
-    I had hoped to keep liblzma as purely a compression
-    library as possible (e.g. file I/O will go into
-    a different library), but it seems that applications
-    linking agaisnt liblzma need some way to determine
-    the memory usage limit, and knowing the amount of RAM
-    is one reasonable way to help making such decisions.
-    
-    Thanks to Jonathan Nieder for the original patch.
-
- src/liblzma/Makefile.am               |  5 ++--
- src/liblzma/api/Makefile.am           |  1 +
- src/liblzma/api/lzma.h                |  3 +++
- src/liblzma/api/lzma/hardware.h       | 51 +++++++++++++++++++++++++++++++++++
- src/liblzma/common/Makefile.inc       |  1 +
- src/liblzma/common/hardware_physmem.c | 25 +++++++++++++++++
- src/xz/Makefile.am                    |  1 -
- src/xz/hardware.c                     |  3 +--
- src/xzdec/Makefile.am                 |  6 ++---
- src/xzdec/xzdec.c                     |  3 +--
- 10 files changed, 88 insertions(+), 11 deletions(-)
-
-commit cf39faca59083d38422058c6c97aa757ea7797d0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-14 20:21:19 +0200
-
-    Updated THANKS.
-
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
-
-commit 2ddcae247c284cc2f396b6cfdab57790c7588b5f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-14 20:20:03 +0200
-
-    Some updates to xz man page.
-
- src/xz/xz.1 | 54 +++++++++++++++++++++++++++++++++++++++++++++++++-----
- 1 file changed, 49 insertions(+), 5 deletions(-)
-
-commit 19b2674f07f8b588dfaf6638396b4b42866d7e23
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-14 19:51:03 +0200
-
-    Fix description of --memory in --long-help.
-
- src/xz/message.c | 3 +--
- 1 file changed, 1 insertion(+), 2 deletions(-)
-
-commit 2291346f0cccf88e605d84b75c9c5aaaaddb5df8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-14 19:45:39 +0200
-
-    Update the debug programs so that they compile again.
-
- debug/crc32.c      |  1 +
- debug/memusage.c   |  6 ++++--
- debug/sync_flush.c | 14 +++++++++-----
- 3 files changed, 14 insertions(+), 7 deletions(-)
-
-commit 418d64a32e8144210f98a810738fed5a897e8367
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-11-14 18:59:19 +0200
-
-    Fix a design error in liblzma API.
-    
-    Originally the idea was that using LZMA_FULL_FLUSH
-    with Stream encoder would read the filter chain
-    from the same array that was used to intialize the
-    Stream encoder. Since most apps wouldn't use
-    LZMA_FULL_FLUSH, most apps wouldn't need to keep
-    the filter chain available after initializing the
-    Stream encoder. However, due to my mistake, it
-    actually required keeping the array always available.
-    
-    Since setting the new filter chain via the array
-    used at initialization time is not a nice way to do
-    it for a couple of reasons, this commit ditches it
-    and introduces lzma_filters_update(). This new function
-    replaces also the "persistent" flag used by LZMA2
-    (and to-be-designed Subblock filter), which was also
-    an ugly thing to do.
-    
-    Thanks to Alexey Tourbin for reminding me about the problem
-    that Stream encoder used to require keeping the filter
-    chain allocated.
-
- src/liblzma/api/lzma/filter.h           | 30 +++++++++++++
- src/liblzma/api/lzma/lzma.h             | 13 ------
- src/liblzma/common/block_encoder.c      | 14 ++++++
- src/liblzma/common/common.c             | 20 ++++++++-
- src/liblzma/common/common.h             | 22 ++++++++++
- src/liblzma/common/easy_encoder.c       | 63 ++-------------------------
- src/liblzma/common/filter_common.c      |  3 ++
- src/liblzma/common/filter_encoder.c     | 27 ++++++++++++
- src/liblzma/common/filter_encoder.h     |  2 +-
- src/liblzma/common/stream_encoder.c     | 76 ++++++++++++++++++++++++++++-----
- src/liblzma/delta/delta_common.c        |  5 +--
- src/liblzma/delta/delta_decoder.c       |  3 +-
- src/liblzma/delta/delta_encoder.c       | 17 +++++++-
- src/liblzma/delta/delta_private.h       |  2 +-
- src/liblzma/lz/lz_encoder.c             | 17 ++++++++
- src/liblzma/lz/lz_encoder.h             |  4 ++
- src/liblzma/lzma/lzma2_encoder.c        | 59 ++++++++++++++-----------
- src/liblzma/lzma/lzma_encoder_presets.c |  1 -
- src/liblzma/simple/simple_coder.c       | 12 ++++++
- src/xz/options.c                        |  1 -
- 20 files changed, 273 insertions(+), 118 deletions(-)
-
-commit f0bf7634b77263a4dd02b20c71861ab67995da68
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-10-17 11:11:58 +0300
-
-    Fix wrong function name in the previous commit.
-    
-    It was meant to be lzma_filters_copy(), not lzma_filters_dup().
-
- src/liblzma/api/lzma/filter.h      | 2 +-
- src/liblzma/common/filter_common.c | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
-
-commit 6d118a0b9def82e96afba7386ec8d7da0b59649f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-10-17 01:47:07 +0300
-
-    Add lzma_filters_copy().
-    
-    This will be needed internally by liblzma once I fix
-    a design mistake in the encoder API. This function may
-    be useful to applications too so it's good to export it.
-
- src/liblzma/api/lzma/filter.h      | 31 ++++++++++++++
- src/liblzma/common/filter_common.c | 82 ++++++++++++++++++++++++++++++++++++++
- 2 files changed, 113 insertions(+)
-
-commit 78e92c18470483e161388e679c1ee556adb3a691
-Author: Jonathan Nieder <jrnieder@gmail.com>
-Date:   2009-10-15 20:44:13 -0500
-
-    Escape dashes in xzmore.1
-    
-    A minus sign is larger, easier to see in a printout, and more
-    likely to use the same glyph as ASCII hyphen-minus in a terminal
-    than a hyphen.  Since broken manual pagers do not find hyphens
-    when the user searches for a hyphen-minus, minus signs are also
-    easier to search for.  So use minus signs instead of hyphens to
-    render sample terminal output.
+commit 608d6f06c940e7f28c25de005e8b99bdff42d27c
+Author: Hauke Henningsen <sqrt@entless.org>
+Date:   2015-08-17 04:59:54 +0200
 
- src/scripts/xzmore.1 | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+    Update German translation, mostly wrt orthography
 
-commit 7b7fe902d98da28e5769e2aa1e0c08c92384f7ee
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-10-16 20:35:39 +0300
+    Provide an update of the German translation.
+    * A lot of compound words were previously written with spaces, while
+      German orthography is relatively clear in that the components
+      should not be separated.
+    * When referring to the actual process of (de)compression rather than the
+      concept, replace “(De-)Kompression” with “(De-)Komprimierung”.
+      Previously, both forms were used in this context and are now used in a
+      manner consistent with “Komprimierung” being more likely to refer to
+      a process.
+    * Consistently translate “standard input”/“output”
+    * Use “Zeichen” instead of false friend “Charakter” for “character”
+    * Insert commas around relative clauses (as required in German)
+    * Some other minor corrections
+    * Capitalize “ß” as “ẞ”
+    * Consistently start option descriptions in --help with capital letters
 
-    Mention --check=none in --long-help. It was already in
-    the man page though.
+    Acked-By: Andre Noll <maan@tuebingen.mpg.de>
     
-    Thanks to Jim Meyering for noticing this.
+    * Update after msgmerge
 
- src/xz/message.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ po/de.po | 383 ++++++++++++++++++++++++++++++++-------------------------------
+ 1 file changed, 196 insertions(+), 187 deletions(-)
 
-commit ebfb2c5e1f344e5c6e549b9dedaa49b0749a4a24
+commit c8988414e5b67b8ef2fe0ba7b1ccdd0ec73c60d3
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-10-04 22:57:12 +0300
-
-    Use a tuklib module for integer handling.
-    
-    This replaces bswap.h and integer.h.
-    
-    The tuklib module uses <byteswap.h> on GNU,
-    <sys/endian.h> on *BSDs and <sys/byteorder.h>
-    on Solaris, which may contain optimized code
-    like inline assembly.
-
- configure.ac                              |  54 +----
- m4/tuklib_integer.m4                      |  74 +++++++
- src/common/bswap.h                        |  52 -----
- src/common/integer.h                      | 170 ---------------
- src/common/tuklib_config.h                |   8 +-
- src/common/tuklib_integer.h               | 350 ++++++++++++++++++++++++++++++
- src/liblzma/check/check.c                 |   4 +-
- src/liblzma/check/crc32_fast.c            |   4 +-
- src/liblzma/check/crc32_tablegen.c        |   8 +-
- src/liblzma/check/crc64_fast.c            |   4 +-
- src/liblzma/check/crc64_tablegen.c        |   8 +-
- src/liblzma/check/crc_macros.h            |   2 -
- src/liblzma/check/sha256.c                |  18 +-
- src/liblzma/common/alone_encoder.c        |   2 +-
- src/liblzma/common/block_header_decoder.c |   2 +-
- src/liblzma/common/block_header_encoder.c |   2 +-
- src/liblzma/common/common.h               |   2 +-
- src/liblzma/common/stream_flags_decoder.c |   6 +-
- src/liblzma/common/stream_flags_encoder.c |   6 +-
- src/liblzma/lz/lz_encoder_hash.h          |   2 +-
- src/liblzma/lzma/lzma_decoder.c           |   2 +-
- src/liblzma/lzma/lzma_encoder.c           |   2 +-
- src/liblzma/lzma/lzma_encoder_private.h   |   2 +-
- src/liblzma/simple/simple_decoder.c       |   2 +-
- src/liblzma/simple/simple_encoder.c       |   2 +-
- tests/test_block_header.c                 |   4 +-
- tests/test_stream_flags.c                 |   6 +-
- tests/tests.h                             |   2 +-
- 28 files changed, 467 insertions(+), 333 deletions(-)
+Date:   2015-08-11 13:23:04 +0300
 
-commit 29fd321033276261b87da7be5223db33d879a4c7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-10-02 14:35:56 +0300
+    Build: Minor Cygwin cleanup.
 
-    Add support for --enable-assume-ram=SIZE.
+    Some tests used "cygwin*" and some used "cygwin". I changed
+    them all to use "cygwin". Shouldn't affect anything in practice.
 
- INSTALL           | 16 ++++++++++++++++
- configure.ac      | 24 ++++++++++++++++++++++++
- src/xz/hardware.c |  7 +++----
- src/xzdec/xzdec.c |  5 +++--
- 4 files changed, 46 insertions(+), 6 deletions(-)
+ configure.ac | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
 
-commit 3782b3fee4812b0dd4ffdfa6563ed49f73060f25
+commit 85a6dfed53477906bfe9a7c0123dd412e391cb48
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-10-02 11:28:17 +0300
+Date:   2015-08-11 13:21:52 +0300
 
-    Use unaligned access (if possible) on both endiannesses
-    in lz_encoder_hash.h.
+    Build: Support building of MSYS2 binaries.
 
- src/liblzma/lz/lz_encoder_hash.h | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+ configure.ac | 16 +++++++++++-----
+ 1 file changed, 11 insertions(+), 5 deletions(-)
 
-commit c5f68b5cc79085a87f950fea53843e27f328068e
+commit 77f270be8432df2e4516a0c48814b6976d6618c5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-10-02 11:03:26 +0300
-
-    Make liblzma produce the same output on both endiannesses.
+Date:   2015-08-09 21:06:26 +0300
     
-    Seems that it is a problem in some cases if the same
-    version of XZ Utils produces different output on different
-    endiannesses, so this commit fixes that problem. The output
-    will still vary between different XZ Utils versions, but I
-    cannot avoid that for now.
-    
-    This commit bloatens the code on big endian systems by 1 KiB,
-    which should be OK since liblzma is bloated already. ;-)
-
- src/liblzma/check/crc32_tablegen.c     | 30 +++++++++++++++
- src/liblzma/lz/Makefile.inc            |  1 +
- src/liblzma/lz/lz_encoder.c            |  7 +++-
- src/liblzma/lz/lz_encoder_hash.h       | 35 +++++++++++------
- src/liblzma/lz/lz_encoder_hash_table.h | 68 ++++++++++++++++++++++++++++++++++
- src/liblzma/lz/lz_encoder_mf.c         |  1 -
- 6 files changed, 128 insertions(+), 14 deletions(-)
-
-commit 4a84d1adfda35e4fb4d41ecf0feb8223b100517a
-Author: Mike Frysinger <vapier@gentoo.org>
-Date:   2009-09-26 12:51:50 -0400
+    Windows: Define DLL_EXPORT when building liblzma.dll with MSVC.
 
-    add lzmainfo to gitignore
+    src/liblzma/common/common.h uses it to set __declspec(dllexport)
+    for the API symbols.
     
-    Signed-off-by: Mike Frysinger <vapier@gentoo.org>
+    Thanks to Adam Walling.
 
- .gitignore | 2 ++
- 1 file changed, 2 insertions(+)
+ windows/liblzma_dll.vcxproj | 12 ++++++------
+ 1 file changed, 6 insertions(+), 6 deletions(-)
 
-commit 188a1dcd0cc7867810ed3a55c598d0680922c63b
+commit 8c975446c5903090a5a8493b5b96b71003056a88
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-27 11:53:36 +0300
+Date:   2015-08-09 21:02:20 +0300
 
-    Updated THANKS.
+    Windows: Omit unneeded header files from MSVC project files.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+ windows/liblzma.vcxproj     | 5 -----
+ windows/liblzma_dll.vcxproj | 5 -----
+ 2 files changed, 10 deletions(-)
 
-commit db9119b9181b307e7ac5d2bae82444d04b902b59
+commit 119a00434954726ca58e4a578e6469f530fca30e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-27 11:48:54 +0300
-
-    Work around a bug in Interix header files.
+Date:   2015-07-12 20:48:19 +0300
     
-    Thanks to Markus Duft for the patch.
+    liblzma: A MSVC-specific hack isn't needed with MSVC 2013 and newer.
 
- src/common/sysdefs.h | 6 ++++++
- 1 file changed, 6 insertions(+)
+ src/liblzma/api/lzma.h | 18 +++++++++++++-----
+ 1 file changed, 13 insertions(+), 5 deletions(-)
 
-commit b3d105e69786a45963176fd2193abe75e05ba738
+commit d4e7c557fcab353539c9481a8d95cb04bcb15c7c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-24 17:50:17 +0300
-
-    Fix an error in OpenVMS-specific code.
+Date:   2015-06-19 20:38:55 +0300
     
-    Thanks to Jouk Jansen.
+    Update THANKS.
 
- src/xz/file_io.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ THANKS | 2 ++
+ 1 file changed, 2 insertions(+)
 
-commit 5e000ff00d4d01e559397b49eb648ad3f159d496
+commit 98001740ca56c894a7bd32eb47e9857a8a7d878d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-22 18:59:56 +0300
+Date:   2015-06-19 20:21:30 +0300
 
-    Added OpenVMS-specific information to INSTALL.
+    Windows: Update the docs.
 
- INSTALL | 11 +++++++++++
- 1 file changed, 11 insertions(+)
+ INSTALL                                            | 29 ++++++++-----
+ windows/INSTALL-MSVC.txt                           | 47 ++++++++++++++++++++++
+ windows/{INSTALL-Windows.txt => INSTALL-MinGW.txt} |  2 +-
+ 3 files changed, 67 insertions(+), 11 deletions(-)
 
-commit 932b2e204463d70f3eee5b8a1ea5a23bf9d001a4
+commit 28195e4c877007cc760ecea1d17f740693d66873
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-22 14:03:02 +0300
+Date:   2015-06-19 17:25:31 +0300
 
-    Better fixes for OpenVMS support.
+    Windows: Add MSVC project files for building liblzma.
     
-    Thanks to Jouk Jansen.
+    Thanks to Adam Walling for creating these files.
 
- src/xz/file_io.c | 19 ++++++++++++++++---
- 1 file changed, 16 insertions(+), 3 deletions(-)
+ windows/liblzma.vcxproj     | 359 ++++++++++++++++++++++++++++++++++++++++
+ windows/liblzma_dll.vcxproj | 388 ++++++++++++++++++++++++++++++++++++++++++++
+ windows/xz_win.sln          |  48 ++++++
+ 3 files changed, 795 insertions(+)
 
-commit 4c3630ec4179fe9265407a35c4db1374ffc82372
+commit 960440f3230dc628f6966d9f7614fc1b28baf44e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-22 13:40:19 +0300
+Date:   2015-05-13 20:57:55 +0300
 
-    Avoid non-standard preprocessor construct.
+    Tests: Fix a memory leak in test_bcj_exact_size.
     
-    Thanks to Jouk Jansen.
+    Thanks to Cristian Rodríguez.
 
- src/common/tuklib_common.h | 11 +++++++----
- 1 file changed, 7 insertions(+), 4 deletions(-)
+ tests/test_bcj_exact_size.c | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 0deb1bb60addd1306b525e0ac0ad2a84eb0390d9
+commit 68cd35acafbdcdf4e8ea8b5bb843c736939d6f8b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-21 19:50:09 +0300
+Date:   2015-05-12 18:08:24 +0300
 
-    Make sure that TUKLIB_DOSLIKE doesn't get defined on Cygwin.
+    Fix NEWS about threading in 5.2.0.
     
-    Thanks to Charles Wilson.
+    Thanks to Andy Hochhaus.
 
- src/common/tuklib_common.h | 3 ++-
+ NEWS | 3 ++-
  1 file changed, 2 insertions(+), 1 deletion(-)
 
-commit e599bba4216c0edb8cc8f40adad3a6dba88685f4
+commit ff96ed6d25786728356017a13baf8c14731b4f1e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-19 09:47:30 +0300
-
-    Various changes.
+Date:   2015-05-11 21:26:16 +0300
     
-    Separate a few reusable components from XZ Utils specific
-    code. The reusable code is now in "tuklib" modules. A few
-    more could be separated still, e.g. bswap.h.
+    xz: Document that threaded decompression hasn't been implemented yet.
     
-    Fix some bugs in lzmainfo.
+ src/xz/xz.1 | 10 +++++++++-
+ 1 file changed, 9 insertions(+), 1 deletion(-)
     
-    Fix physmem and cpucores code on OS/2. Thanks to Elbert Pol
-    for help.
+commit 00d37b64a64ea8597fd2422d5187afd761ab9531
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2015-04-20 20:20:29 +0300
     
-    Add OpenVMS support into physmem. Add a few #ifdefs to ease
-    building XZ Utils on OpenVMS. Thanks to Jouk Jansen for the
-    original patch.
+    Update THANKS.
 
  THANKS                          |   1 +
- configure.ac                    |  12 ++--
- m4/lc_cpucores.m4               |  57 ----------------
- m4/lc_physmem.m4                |  84 -----------------------
- m4/tuklib_common.m4             |  22 ++++++
- m4/tuklib_cpucores.m4           |  72 ++++++++++++++++++++
- m4/tuklib_physmem.m4            | 119 ++++++++++++++++++++++++++++++++
- m4/tuklib_progname.m4           |  25 +++++++
- src/common/cpucores.h           |  51 --------------
- src/common/open_stdxxx.h        |  49 --------------
- src/common/physmem.h            | 144 ---------------------------------------
- src/common/sysdefs.h            |   4 --
- src/common/tuklib_common.h      |  67 ++++++++++++++++++
- src/common/tuklib_config.h      |   1 +
- src/common/tuklib_cpucores.c    |  46 +++++++++++++
- src/common/tuklib_cpucores.h    |  23 +++++++
- src/common/tuklib_exit.c        |  57 ++++++++++++++++
- src/common/tuklib_exit.h        |  25 +++++++
- src/common/tuklib_gettext.h     |  44 ++++++++++++
- src/common/tuklib_open_stdxxx.c |  51 ++++++++++++++
- src/common/tuklib_open_stdxxx.h |  23 +++++++
- src/common/tuklib_physmem.c     | 146 ++++++++++++++++++++++++++++++++++++++++
- src/common/tuklib_physmem.h     |  28 ++++++++
- src/common/tuklib_progname.c    |  50 ++++++++++++++
- src/common/tuklib_progname.h    |  32 +++++++++
- src/lzmainfo/Makefile.am        |   5 +-
- src/lzmainfo/lzmainfo.c         |  65 ++++++------------
- src/xz/Makefile.am              |   7 +-
- src/xz/args.c                   |   8 +--
- src/xz/file_io.c                |  43 ++++++------
- src/xz/hardware.c               |   8 +--
- src/xz/main.c                   | 100 ++++++---------------------
- src/xz/main.h                   |   7 --
- src/xz/message.c                |  30 +++++----
- src/xz/message.h                |   8 +--
- src/xz/private.h                |  11 +--
- src/xz/signals.c                |   2 +
- src/xz/signals.h                |  17 +++--
- src/xz/suffix.c                 |   2 +-
- src/xzdec/Makefile.am           |  13 +++-
- src/xzdec/xzdec.c               |  55 +++++----------
- 41 files changed, 974 insertions(+), 640 deletions(-)
+ 1 file changed, 1 insertion(+)
 
-commit 49cfc8d392cf535f8dd10233225b1fc726fec9ef
+commit db190a832c49ca3aed6d69cc992fa5583cae7b11
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-15 21:07:23 +0300
-
-    Fix incorrect use of "restrict".
+Date:   2015-04-20 19:59:18 +0300
 
- src/liblzma/api/lzma/vli.h       | 4 ++--
- src/liblzma/common/vli_decoder.c | 2 +-
- src/liblzma/common/vli_encoder.c | 2 +-
- 3 files changed, 4 insertions(+), 4 deletions(-)
+    Revert "xz: Use pipe2() if available."
 
-commit 15ffd675ab7af84592eb1c23b0e9f4699aa0fd8c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-12 14:09:17 +0300
+    This reverts commit 7a11c4a8e5e15f13d5fa59233b3172e65428efdd.
+    It is a problem when libc has pipe2() but the kernel is too
+    old to have pipe2() and thus pipe2() fails. In xz it's pointless
+    to have a fallback for non-functioning pipe2(); it's better to
+    avoid pipe2() completely.
 
-    Fix GCC version check for nothrow attribute.
+    Thanks to Michael Fox for the bug report.
 
- src/liblzma/api/lzma.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ configure.ac     | 4 ++--
+ src/xz/file_io.c | 9 +--------
+ 2 files changed, 3 insertions(+), 10 deletions(-)
 
-commit 6bfdd3a88a819f04c8f202e7d3c6f88a01c7d224
+commit eccd8155e107c5ada03d13e7730675cdf1a44ddc
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-12 14:08:15 +0300
+Date:   2015-03-29 22:14:47 +0300
 
-    Updated THANKS.
+    Update THANKS.
 
  THANKS | 1 +
  1 file changed, 1 insertion(+)
 
-commit 4ab7b16b9573bdfa32279e4adadff684d5cd58ac
+commit 25263fd9e7a8a913395cb93d7c104cd48c2b4a00
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-12 14:07:36 +0300
+Date:   2015-03-29 22:13:48 +0300
 
-    A few grammar fixes.
+    Fix the detection of installed RAM on QNX.
     
-    Thanks to Christian Weisgerber for pointing out some of these.
+    The earlier version compiled but didn't actually work
+    since sysconf(_SC_PHYS_PAGES) always fails (or so I was told).
 
- src/liblzma/api/lzma.h                    |  4 ++--
- src/liblzma/api/lzma/vli.h                |  4 ++--
- src/liblzma/common/block_header_encoder.c |  2 +-
- src/liblzma/common/filter_common.c        |  2 +-
- src/liblzma/lz/lz_encoder.h               | 10 +++++-----
- src/xz/message.c                          | 22 +++++++++++-----------
- src/xzdec/xzdec.c                         |  2 +-
- 7 files changed, 23 insertions(+), 23 deletions(-)
+    Thanks to Ole André Vadla Ravnås for the patch and testing.
+
+ m4/tuklib_physmem.m4        |  6 +++---
+ src/common/tuklib_physmem.c | 14 +++++++++++++-
+ 2 files changed, 16 insertions(+), 4 deletions(-)
 
-commit 8905a33daadcd2d6557c83c81c490b827d566c94
+commit 4c544d2410903d38402221cb783ed85585b6a007
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-11 17:08:15 +0300
+Date:   2015-03-27 22:39:07 +0200
 
-    Updated THANKS.
+    Fix CPU core count detection on QNX.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+    It tried to use sysctl() on QNX but
+      - it broke the build because sysctl() needs -lsocket on QNX;
+      - sysctl() doesn't work for detecting the core count on QNX
+        even if it compiled.
 
-commit 68059334ff435300ab1ce2c616b0eee1b0d88dd9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-11 17:06:32 +0300
+    sysconf() works. An alternative would have been to use
+    QNX-specific SYSPAGE_ENTRY(num_cpu) from <sys/syspage.h>.
 
-    Add PACKAGE_HOMEPAGE to {windows,dos}/config.h to fix build errors.
+    Thanks to Ole André Vadla Ravnås.
 
- dos/config.h     | 3 +++
- windows/config.h | 3 +++
- 2 files changed, 6 insertions(+)
+ m4/tuklib_cpucores.m4 | 15 +++++++++++----
+ 1 file changed, 11 insertions(+), 4 deletions(-)
 
-commit 221be761f467da76875247bc02d7a1716682075d
+commit e0ea6737b03e83ccaff4514d00e31bb926f8f0f3
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-11 10:24:09 +0300
+Date:   2015-03-07 22:05:57 +0200
 
-    Use $(LN_EXEEXT) in symlinks to executables.
+    xz: size_t/uint32_t cleanup in options.c.
     
-    This fixes "make install" on operating systems using
-    a suffix for executables.
+ src/xz/options.c | 12 ++++++------
+ 1 file changed, 6 insertions(+), 6 deletions(-)
     
-    Cygwin is treated specially. The symlink names won't have
-    .exe suffix even though the executables themselves have.
-    Thanks to Charles Wilson.
+commit 8bcca29a65335fd679c13814b70b35b68fa5daed
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2015-03-07 22:04:23 +0200
+
+    xz: Fix a comment and silence a warning in message.c.
 
- configure.ac       | 9 +++++++++
- src/xz/Makefile.am | 4 ++--
- 2 files changed, 11 insertions(+), 2 deletions(-)
+ src/xz/message.c | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
 
-commit 18a4233a53d9b82abac7db7d7804684c5fea9c2c
+commit f243f5f44c6b19a7c289a0ec73a03ee08364cb5b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-11 09:25:09 +0300
+Date:   2015-03-07 22:01:00 +0200
 
-    Fix a couple of warnings.
+    liblzma: Silence more uint32_t vs. size_t warnings.
 
- src/liblzma/common/stream_decoder.c            | 2 +-
- src/liblzma/lz/lz_encoder.c                    | 5 +----
+ src/liblzma/lz/lz_encoder.c     | 2 +-
  src/liblzma/lzma/lzma_encoder.c                | 2 +-
- src/liblzma/lzma/lzma_encoder_optimum_normal.c | 8 ++++----
- tests/tests.h                                  | 2 +-
- 5 files changed, 8 insertions(+), 11 deletions(-)
+ 2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit 429910b2ba67611d8df60d1a9da9641bdb5f82b4
+commit 7f0a4c50f4a374c40acf4b86848f301ad1e82d34
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-05 18:39:21 +0300
+Date:   2015-03-07 19:54:00 +0200
 
-    Add OS/2-specific code to physmem.h.
+    xz: Make arg_count an unsigned int to silence a warning.
     
-    Also move DJGPP-specific code near the code meant
-    for other DOS-like systems.
+    Actually the value of arg_count cannot exceed INT_MAX
+    but it's nicer as an unsigned int.
 
- src/common/physmem.h | 32 +++++++++++++++++++++-----------
- 1 file changed, 21 insertions(+), 11 deletions(-)
+ src/xz/args.h | 2 +-
+ src/xz/main.c | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit 7aca7b3174bcbba4a4915682ff0cd405d63f5740
+commit f6ec46801588b1be29c07c9db98558b521304002
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-05 01:21:15 +0300
+Date:   2015-03-07 19:33:17 +0200
 
-    Updated THANKS.
+    liblzma: Fix a warning in index.c.
 
- THANKS | 2 ++
- 1 file changed, 2 insertions(+)
+ src/liblzma/common/index.c | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
 
-commit 60ccb80c9c4a0d771acc5b7d9d6f32b17fed1071
+commit a24518971cc621315af142dd3bb7614fab04ad27
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-05 01:20:29 +0300
-
-    Use sysctl() != -1 instead of !sysctl() to check if
-    the function call succeeded.
-    
-    NetBSD 4.0 returns positive values on success, but
-    NetBSD Current and FreeBSD return zero. OpenBSD's
-    man page doesn't tell what sysctl() returns on
-    success. All these BSDs return -1 on error.
+Date:   2015-02-26 20:46:14 +0200
     
-    Thanks to Robert Elz and Thomas Klausner.
+    Build: Fix a CR+LF problem when running autoreconf -fi on OS/2.
 
- src/common/cpucores.h | 2 +-
- src/common/physmem.h  | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+ build-aux/version.sh | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 173368911cf09ab0b03fc4db8f3d4b81d86dce32
+commit dec11497a71518423b5ff0e759100cf8aadf6c7b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-02 09:43:51 +0300
+Date:   2015-02-26 16:53:44 +0200
 
-    Mention in INSTALL that --enable-small doesn't modify CFLAGS.
+    Bump version and soname for 5.2.1.
 
- INSTALL | 4 ++++
- 1 file changed, 4 insertions(+)
+ src/liblzma/Makefile.am        | 2 +-
+ src/liblzma/api/lzma/version.h | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit 319a0fd7d7e9ebbb71ca6930abfc20777cb4aacc
+commit 29e39c79975ab89ee5dd671e97064534a9f3a649
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-01 20:40:01 +0300
+Date:   2015-02-26 13:01:09 +0200
 
-    Refactored option parsing.
+    Update NEWS for 5.2.1.
 
- src/xz/options.c | 70 ++++++++++++++++++++++++++++----------------------------
- 1 file changed, 35 insertions(+), 35 deletions(-)
+ NEWS | 14 ++++++++++++++
+ 1 file changed, 14 insertions(+)
 
-commit 25adaaa56e2e51a47a910a8d73452414619a2e53
+commit 7a11c4a8e5e15f13d5fa59233b3172e65428efdd
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-01 20:23:30 +0300
-
-    Fix options parsing bug in xz.
+Date:   2015-02-22 19:38:48 +0200
     
-    xz used to reject "xz --lzma2=pb=2," while
-    "xz --lzma2=pb=2,," worked. Now both work.
+    xz: Use pipe2() if available.
 
- src/xz/options.c | 6 ++----
- 1 file changed, 2 insertions(+), 4 deletions(-)
+ configure.ac     | 4 ++--
+ src/xz/file_io.c | 9 ++++++++-
+ 2 files changed, 10 insertions(+), 3 deletions(-)
 
-commit 5f6dddc6c911df02ba660564e78e6de80947c947
+commit 117d962685c72682c63edc9bb765367189800202
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-09-01 20:20:19 +0300
+Date:   2015-02-21 23:40:26 +0200
 
-    Updated TODO.
+    liblzma: Fix a compression-ratio regression in LZMA1/2 in fast mode.
 
- TODO | 3 +++
- 1 file changed, 3 insertions(+)
+    The bug was added in the commit
+    f48fce093b07aeda95c18850f5e086d9f2383380 and thus
+    affected 5.1.4beta and 5.2.0. Luckily the bug cannot
+    cause data corruption or other nasty things.
+
+ src/liblzma/lzma/lzma_encoder_optimum_fast.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 655457b9ada5ec7db398c5392e41290f3f332ea8
+commit ae984e31c167d3bc52972ec422dd1ebd5f5d5719
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-31 21:59:25 +0300
+Date:   2015-02-21 23:00:19 +0200
 
-    Revert 43f44160b1ddcbf7e5205c37db09b3bebe7226f9
-    and use a fix that works on all systems using
-    GNU assembler.
+    xz: Fix the fcntl() usage when creating a pipe for the self-pipe trick.
     
-    Maybe the assembler code is used e.g. on Solaris x86
-    but let's worry about it if this doesn't work on it.
+    Now it reads the old flags instead of blindly setting O_NONBLOCK.
+    The old code may have worked correctly, but this is better.
 
- src/liblzma/check/crc32_x86.S | 7 ++-----
- src/liblzma/check/crc64_x86.S | 7 ++-----
- 2 files changed, 4 insertions(+), 10 deletions(-)
+ src/xz/file_io.c | 16 +++++++++++-----
+ 1 file changed, 11 insertions(+), 5 deletions(-)
 
-commit 162189c3477953805a28f96d3a75cb9ab9417928
+commit 2205bb5853098aea36a56df6f5747037175f66b4
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-30 17:29:19 +0300
+Date:   2015-02-10 15:29:34 +0200
 
-    Updated THANKS.
+    Update THANKS.
 
  THANKS | 1 +
  1 file changed, 1 insertion(+)
 
-commit 2331f5f97af3e5897e23da45d9df3d664099c7f8
+commit d935b0cdf3db440269b9d952b2b281b18f8c7b08
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-30 17:28:52 +0300
+Date:   2015-02-10 15:28:30 +0200
 
-    Add more OS/2 specific info to INSTALL.
+    tuklib_cpucores: Use cpuset_getaffinity() on FreeBSD if available.
 
- INSTALL | 5 +++++
- 1 file changed, 5 insertions(+)
+    In FreeBSD, cpuset_getaffinity() is the preferred way to get
+    the number of available cores.
 
-commit 94c66b3297b3ad307eee93cf6b160e3c43997f11
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-29 14:43:52 +0300
+    Thanks to Rui Paulo for the patch. I edited it slightly, but
+    hopefully I didn't break anything.
 
-    Use even more hackish way to support thousand separators.
+ m4/tuklib_cpucores.m4        | 23 ++++++++++++++++++++++-
+ src/common/tuklib_cpucores.c | 18 ++++++++++++++++++
+ 2 files changed, 40 insertions(+), 1 deletion(-)
     
-    Seems that in addition on Windows and DOS, also OpenBSD
-    lacks support for %'d style printf() format strings.
-    So far that is the only modern POSIX-like system I know
-    with this problem, but after this hack, the thousand
-    separator shouldn't be a problem on any system.
+commit eb61bc58c20769cac4d05f363b9c0e8c9c71a560
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2015-02-09 22:08:37 +0200
     
-    Maybe testing if a format string like %'d produces
-    reasonable output is invoking undefined behavior on some
-    systems, but so far all the problematic systems I've tried
-    just print the raw format string (e.g. %'d prints 'd).
+    xzdiff: Make the mktemp usage compatible with FreeBSD's mktemp.
     
-    Maybe Autoconf test would have been better, but this
-    hack works also for cross-compilation, and avoids
-    recompilation in case the system libc starts to support
-    the thousand separator.
+    Thanks to Rui Paulo for the fix.
 
- src/xz/util.c | 36 +++++++++++++++++++++++++-----------
- 1 file changed, 25 insertions(+), 11 deletions(-)
+ src/scripts/xzdiff.in | 7 ++++++-
+ 1 file changed, 6 insertions(+), 1 deletion(-)
 
-commit 3432e9c6aab851da1227b63dce645d7f190c04d8
+commit b9a5b6b7a29029680af733082b6a46e0fc01623a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-29 13:42:56 +0300
+Date:   2015-02-03 21:45:53 +0200
 
-    Updated THANKS.
+    Add a few casts to tuklib_integer.h to silence possible warnings.
 
- THANKS | 3 +++
- 1 file changed, 3 insertions(+)
+    I heard that Visual Studio 2013 gave warnings without the casts.
+    
+    Thanks to Gabi Davar.
 
-commit 27414daadf5727e8ab942374b5ec1c8990122878
+ src/common/tuklib_integer.h | 24 ++++++++++++------------
+ 1 file changed, 12 insertions(+), 12 deletions(-)
+
+commit c45757135f40e4a0de730ba5fff0100219493982
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-29 13:39:21 +0300
+Date:   2015-01-26 21:24:39 +0200
+
+    liblzma: Set LZMA_MEMCMPLEN_EXTRA depending on the compare method.
 
-    Fix sysctl() usage.
+ src/liblzma/common/memcmplen.h | 15 ++++++++++-----
+ 1 file changed, 10 insertions(+), 5 deletions(-)
     
-    This fixes build on *BSDs and Darwin.
+commit 3c500174ed5485f550972a2a6109c361e875f069
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2015-01-26 20:40:16 +0200
     
-    Thanks to Jukka Salmi for the patches.
-    Richard Koch reported the problem too.
+    Update THANKS.
 
- m4/lc_cpucores.m4     | 2 +-
- m4/lc_physmem.m4      | 2 +-
- src/common/cpucores.h | 2 +-
- src/common/physmem.h  | 2 +-
- 4 files changed, 4 insertions(+), 4 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 43f44160b1ddcbf7e5205c37db09b3bebe7226f9
+commit fec88d41e672d9e197c9442aecf02bd0dfa6d516
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-29 13:35:23 +0300
+Date:   2015-01-26 20:39:28 +0200
 
-    Fix x86 assembler on GCC 3.
+    liblzma: Silence harmless Valgrind errors.
     
-    Thanks to Karl Berry.
+    Thanks to Torsten Rupp for reporting this. I had
+    forgotten to run Valgrind before the 5.2.0 release.
 
- src/liblzma/check/crc32_x86.S | 7 +++++--
- src/liblzma/check/crc64_x86.S | 7 +++++--
- 2 files changed, 10 insertions(+), 4 deletions(-)
+ src/liblzma/lz/lz_encoder.c | 6 ++++++
+ 1 file changed, 6 insertions(+)
 
-commit 682efdc1f9492fdd76c9ce82e7c00ca0768067e8
+commit a9b45badfec0928d20a27c7176c005fa637f7d1e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 18:36:59 +0300
+Date:   2015-01-09 21:50:19 +0200
 
-    "make dist" fixes
+    xz: Fix comments.
 
- Makefile.am | 13 ++++++-------
- 1 file changed, 6 insertions(+), 7 deletions(-)
+ src/xz/file_io.c | 12 ++++++++----
+ 1 file changed, 8 insertions(+), 4 deletions(-)
 
-commit c8c184db1c95bf70f78256ec6237845a57f342af
+commit 541aee6dd4aa97a809aba281475a21b641bb89e2
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 17:08:33 +0300
+Date:   2015-01-09 21:35:06 +0200
 
-    Update xz man page date.
+    Update THANKS.
 
- src/xz/xz.1 | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 9756fce565e98b8fa5fe6ead296d84e7601ec254
+commit 4170edc914655310d2363baccf5e615e09b04911
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 17:00:22 +0300
+Date:   2015-01-09 21:34:06 +0200
 
-    Fix the debug directory.
+    xz: Don't fail if stdout doesn't support O_NONBLOCK.
+    
+    This is similar to the case with stdin.
     
-    6a2eb54092fc625d59921a607ff68cd1a90aa898 and
-    71f18e8a066a01dda0c8e5508b135ef104e43e4c required
-    some changes that weren't applied in debug.
+    Thanks to Brad Smith for the bug report and testing
+    on OpenBSD.
 
- debug/Makefile.am   | 5 +++--
- debug/full_flush.c  | 1 +
- debug/known_sizes.c | 1 +
- debug/memusage.c    | 1 +
- debug/sync_flush.c  | 1 +
- 5 files changed, 7 insertions(+), 2 deletions(-)
+ src/xz/file_io.c | 36 +++++++++++++++---------------------
+ 1 file changed, 15 insertions(+), 21 deletions(-)
 
-commit 77007a7fb20187fcf3d1dd9839c79ace2d63f2ea
+commit 04bbc0c2843c50c8ad1cba42b937118e38b0508d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 16:36:40 +0300
+Date:   2015-01-07 19:18:20 +0200
 
-    Add missing files to EXTRA_DIST.
+    xz: Fix a memory leak in DOS-specific code.
 
- Makefile.am | 11 +++++++----
- 1 file changed, 7 insertions(+), 4 deletions(-)
+ src/xz/file_io.c | 2 ++
+ 1 file changed, 2 insertions(+)
 
-commit 04dcbfdeb921e5f361a4487134e91e23fffbe09d
+commit f0f1f6c7235ffa901cf76fe18e33749e200b3eea
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 16:21:22 +0300
+Date:   2015-01-07 19:08:06 +0200
 
-    Bumped version to 4.999.9beta.
+    xz: Don't fail if stdin doesn't support O_NONBLOCK.
 
- src/liblzma/api/lzma/version.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    It's a problem at least on OpenBSD which doesn't support
+    O_NONBLOCK on e.g. /dev/null. I'm not surprised if it's
+    a problem on other OSes too since this behavior is allowed
+    in POSIX-1.2008.
+    
+    The code relying on this behavior was committed in June 2013
+    and included in 5.1.3alpha released on 2013-10-26. Clearly
+    the development releases only get limited testing.
+
+ src/xz/file_io.c | 18 +++++++-----------
+ 1 file changed, 7 insertions(+), 11 deletions(-)
 
-commit fd7618611a22f42a6913bc8d518c9bbc9252d6b4
+commit d2d484647d9d9d679f03c75abb0404f67069271c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 16:17:47 +0300
+Date:   2015-01-06 20:30:15 +0200
 
-    Updated THANKS.
+    Tests: Don't hide unexpected error messages in test_files.sh.
 
- THANKS | 2 ++
- 1 file changed, 2 insertions(+)
+    Hiding them makes no sense since normally there's no error
+    when testing the "good" files. With "bad" files errors are
+    expected and then it makes sense to keep the messages hidden.
+
+ tests/test_files.sh | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
 
-commit c29e76c0f910fca0a90a50b78d337f6c32623e9d
+commit aae6a6aeda51cf94a47e39ad624728f9bee75e30
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 16:12:52 +0300
+Date:   2014-12-30 11:17:16 +0200
 
-    .xz file format specification 1.0.4 (probably).
+    Update Solaris notes in INSTALL.
     
-    Thanks to Christian von Roques, Peter Lawler,
-    and Jim Meyering for the fixes.
+    Mention the possible "make check" failure on Solaris in the
+    Solaris-specific section of INSTALL. It was already in
+    section 4.5 but it is better mention it in the OS-specific
+    section too.
 
- doc/xz-file-format.txt | 26 +++++++++++++++-----------
- 1 file changed, 15 insertions(+), 11 deletions(-)
+ INSTALL | 4 ++++
+ 1 file changed, 4 insertions(+)
 
-commit 696d7ee3953beaf4f0ed18e78917ccf300431966
+commit 7815112153178800a3521b9f31960e7cdc26cfba
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 15:43:54 +0300
+Date:   2014-12-26 12:00:05 +0200
 
-    Require GNU libtool 2.2.
+    Build: POSIX shell isn't required if scripts are disabled.
 
- configure.ac | 13 +++----------
- 1 file changed, 3 insertions(+), 10 deletions(-)
+ INSTALL      | 3 ++-
+ configure.ac | 2 +-
+ 2 files changed, 3 insertions(+), 2 deletions(-)
 
-commit 4c3558aa8305a8f8b6c43b8569eb539717ca9e8d
+commit a0cd05ee71d330b79ead6eb9222e1b24e1559d3a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 15:34:45 +0300
+Date:   2014-12-21 20:48:37 +0200
 
-    Add "dos" to EXTRA_DIST.
+    DOS: Update Makefile.
 
- Makefile.am | 1 +
+ dos/Makefile | 1 +
  1 file changed, 1 insertion(+)
 
-commit 35b29e4424ced5a3ababf132283e519080c7b298
+commit b85ee0905ec4ab7656d22e63519fdd3bedb21f2e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 15:23:27 +0300
+Date:   2014-12-21 19:50:38 +0200
 
-    Updated TODO.
+    Windows: Fix bin_i486 to bin_i686 in build.bash.
 
- TODO | 6 ++++++
- 1 file changed, 6 insertions(+)
+ windows/build.bash | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 23414377192c21f3f34c84cdfe0ef0fbd06a1dea
+commit cbafa710918195dbba3db02c3fab4f0538235206
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 15:17:00 +0300
+Date:   2014-12-21 18:58:44 +0200
 
-    Some xz man page improvements.
+    Docs: Use lzma_cputhreads() in 04_compress_easy_mt.c.
 
- src/xz/xz.1 | 78 ++++++++++++++++++++++++++++++++++++++++++++++++-------------
- 1 file changed, 62 insertions(+), 16 deletions(-)
+ doc/examples/04_compress_easy_mt.c | 30 ++++++++++++++++++++++++++----
+ 1 file changed, 26 insertions(+), 4 deletions(-)
 
-commit 371b04e19fc9051dbaeec51ec0badec6a1f0699d
+commit 8dbb57238d372c7263cfeb3e7f7fd9a73173156a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 10:41:01 +0300
+Date:   2014-12-21 18:56:44 +0200
 
-    Removed doc/bugs.txt.
+    Docs: Update docs/examples/00_README.txt.
 
- doc/bugs.txt | 46 ----------------------------------------------
- 1 file changed, 46 deletions(-)
+ doc/examples/00_README.txt | 4 ++++
+ 1 file changed, 4 insertions(+)
 
-commit d88c4072b36d3a76f839185799fb1d91037a1b81
+commit 6060f7dc76fd6c2a8a1f8e85d0e4d86bb78273e6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 10:40:25 +0300
+Date:   2014-12-21 18:11:17 +0200
 
-    Updated README.
+    Bump version and soname for 5.2.0.
     
-    It now includes bug reporting instructions/tips.
+    I know that soname != app version, but I skip AGE=1
+    in -version-info to make the soname match the liblzma
+    version anyway. It doesn't hurt anything as long as
+    it doesn't conflict with library versioning rules.
 
- README | 65 +++++++++++++++++++++++++++++++++++++++++++++++++++++++----------
- 1 file changed, 55 insertions(+), 10 deletions(-)
+ src/liblzma/Makefile.am        | 2 +-
+ src/liblzma/api/lzma/version.h | 6 +++---
+ src/liblzma/liblzma.map        | 2 +-
+ 3 files changed, 5 insertions(+), 5 deletions(-)
 
-commit 92e536d8b8d33a6b12d0802bcd7be4437046f13e
+commit 3e8bd1d15e417f2d588e9be50ce027ee3d48b2da
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 10:21:18 +0300
+Date:   2014-12-21 18:05:03 +0200
 
-    Fix a typo in FAQ.
+    Avoid variable-length arrays in the debug programs.
     
-    Thanks to Jim Meyering.
+ debug/full_flush.c | 3 ++-
+ debug/sync_flush.c | 3 ++-
+ 2 files changed, 4 insertions(+), 2 deletions(-)
+
+commit 72f7307cfdceb941aeb2bf30d424cc0d13621786
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2014-12-21 18:01:45 +0200
     
-    (From now on, I try to always remember to put
-    the relevant thanks to commit messages.)
+    Build: Include 04_compress_easy_mt.c in the tarball.
 
- doc/faq.txt | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ Makefile.am | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 3e2ba8b58585743e59251e69ad2783eb08357079
+commit 2cb82ff21c62def11f3683a8bb0aaf363102aaa0
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-27 10:13:46 +0300
+Date:   2014-12-21 18:00:38 +0200
 
-    Updates to liblzma API headers.
+    Fix build when --disable-threads is used.
     
-    Added lzma_nothrow for every function. It adds
-    throw() when the header is used in C++ code.
+ src/common/mythread.h | 2 ++
+ 1 file changed, 2 insertions(+)
     
-    Some lzma_attrs were added or removed.
+commit 9b9e3536e458ef958f66b0e8982efc9d36de4d17
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-12-21 15:56:15 +0100
     
-    Lots of comments were improved.
+    po/fr: improve wording for help for --lzma1/--lzma2.
 
- src/liblzma/api/lzma.h              | 20 ++++++++
- src/liblzma/api/lzma/base.h         | 48 +++++++++---------
- src/liblzma/api/lzma/block.h        | 38 ++++++++-------
- src/liblzma/api/lzma/check.h        | 22 +++++----
- src/liblzma/api/lzma/container.h    | 36 ++++++++------
- src/liblzma/api/lzma/filter.h       | 81 +++++++++++++++++++------------
- src/liblzma/api/lzma/index.h        | 97 ++++++++++++++++++++++---------------
- src/liblzma/api/lzma/index_hash.h   | 14 ++++--
- src/liblzma/api/lzma/lzma.h         | 87 +++++++++++++++++----------------
- src/liblzma/api/lzma/stream_flags.h | 12 ++---
- src/liblzma/api/lzma/version.h      | 10 ++--
- src/liblzma/api/lzma/vli.h          |  7 +--
- 12 files changed, 275 insertions(+), 197 deletions(-)
+ po/fr.po | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 8e8ebc17c535a1f8846718059b48417409c37050
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-18 00:30:09 +0300
+commit a8b6b569e7fadbf5b5b9139d53bc764015c15027
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-12-21 15:55:48 +0100
 
-    Install faq.txt.
+    po/fr: missing line in translation of --extreme.
 
- Makefile.am | 1 +
+ po/fr.po | 1 +
  1 file changed, 1 insertion(+)
 
-commit b198e770a146e4a41f91a93f0b233713f2515848
+commit f168a6fd1a888cf4f0caaddcafcb21dadc6ab6e9
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-18 00:26:48 +0300
-
-    Updated faq.txt.
+Date:   2014-12-21 14:32:33 +0200
     
-    Some questions worth answering were removed, because I
-    currently don't have good up to date answers to them.
+    Update NEWS for 5.2.0.
 
- doc/faq.txt | 239 +++++++++++++++++++-----------------------------------------
- 1 file changed, 73 insertions(+), 166 deletions(-)
+ NEWS | 65 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 65 insertions(+)
 
-commit fe111a25cd788d31b581996e4533910388a7f0a9
+commit cec2ee863b3a88f4bf039cb00f73c4a4fc93a429
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-17 22:45:50 +0300
+Date:   2014-12-21 14:32:22 +0200
 
-    Some xz man changes.
+    Update NEWS for 5.0.8.
 
- src/xz/xz.1 | 88 ++++++++++++++++++++++++++++++-------------------------------
- 1 file changed, 43 insertions(+), 45 deletions(-)
+ NEWS | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
 
-commit 10242a21e9abda0c5c6a03501703cc40b8a699a5
+commit 42e97a32649bf53ce43be2258b902a417c6e7fa1
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-16 22:15:42 +0300
+Date:   2014-12-21 14:07:54 +0200
 
-    Updated THANKS.
+    xz: Fix a comment.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+ src/xz/options.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
 
-commit 3ce1916c83041113b9cad9ead5c97a527cf8aa1d
+commit 29b95d5d6665cedffa6a9d6d3d914f981e852182
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-16 22:15:13 +0300
-
-    Fix data corruption in LZ/LZMA2 encoder.
+Date:   2014-12-20 20:43:14 +0200
     
-    Thanks to Jonathan Stott for the bug report.
+    Update INSTALL about the dependencies of the scripts.
 
- src/liblzma/lz/lz_encoder.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ INSTALL | 15 ++++++++++-----
+ 1 file changed, 10 insertions(+), 5 deletions(-)
 
-commit 66da129c8ec33dd66acc92f113f7c1ca740ca81a
+commit 3af91040bb42c21afbb81f5568c3313125e61192
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-13 15:15:37 +0300
+Date:   2014-12-20 20:42:33 +0200
 
-    Updated INSTALL and PACKAGERS to match the changes
-    made in --enable-dynamic.
+    Windows: Update build instructions.
 
- INSTALL   | 20 ++++++++++++++++----
- PACKAGERS | 11 ++++++-----
- 2 files changed, 22 insertions(+), 9 deletions(-)
+ INSTALL                     | 15 +++++++++------
+ windows/INSTALL-Windows.txt | 44 +++++++++++++++++++++-----------------------
+ 2 files changed, 30 insertions(+), 29 deletions(-)
 
-commit 8238c4b2402f952c4e492e5b778aa272e57b6705
+commit 0152f72bf6289d744823dc6c849538f3a139ad70
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-13 15:03:46 +0300
+Date:   2014-12-20 20:41:48 +0200
 
-    Link lzmainfo against shared liblzma by default.
+    Windows: Update the build script and README-Windows.txt.
 
- src/lzmainfo/Makefile.am | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+    The 32-bit build is now for i686 or newer because the
+    prebuilt MinGW-w64 toolchains include i686 code in the
+    executables even if one uses -march=i486.
 
-commit 71f18e8a066a01dda0c8e5508b135ef104e43e4c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-13 15:00:21 +0300
+    The build script builds 32-bit SSE2 enabled version too.
+    Run-time detection of SSE2 support would be nice (on any OS)
+    but it's not implemented in XZ Utils yet.
+
+ windows/README-Windows.txt | 30 ++++++++++++++++--------------
+ windows/build.bash         | 23 ++++++++++++++---------
+ 2 files changed, 30 insertions(+), 23 deletions(-)
 
-    Make --enable-dynamic a tristate option.
+commit 4a1f6133ee5533cee8d91e06fcc22443e5f1881a
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2014-12-19 15:51:50 +0200
     
-    Some programs will by default be linked against static
-    liblzma and some against shared liblzma. --enable-dynamic
-    now allows overriding the default to both directions
-    (all dynamic or all static) even when building both
-    shared and static liblzma.
+    Windows: Define TUKLIB_SYMBOL_PREFIX in config.h.
     
-    This is quite messy compared to how simple thing it is supposed
-    to be. The complexity is mostly due to Windows support.
+    It is to keep all symbols in the lzma_ namespace.
 
- configure.ac | 77 ++++++++++++++++++++++++++++++++++++++++++++----------------
- 1 file changed, 57 insertions(+), 20 deletions(-)
+ windows/config.h | 3 +++
+ 1 file changed, 3 insertions(+)
 
-commit 5aa4678b2342dcfc1d2b31aa9fa4f39c539e4b61
+commit 7f7d093de79eee0c7dbfd7433647e46302f19f82
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-13 12:56:47 +0300
-
-    Fix xz Makefile.am for the man page.
+Date:   2014-12-16 21:00:09 +0200
     
-    install-exec-hook -> install-data-hook
+    xz: Update the man page about --threads.
 
- src/xz/Makefile.am | 2 ++
- 1 file changed, 2 insertions(+)
+ src/xz/xz.1 | 5 -----
+ 1 file changed, 5 deletions(-)
 
-commit e51b4e49e800bd84e6d589dca2964d3985e88139
+commit 009823448b82aa5f465668878a544c5842885407
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-13 12:55:45 +0300
+Date:   2014-12-16 20:57:43 +0200
 
-    Add lzmainfo for backward compatibility with LZMA Utils.
+    xz: Update the man page about --block-size.
     
-    lzmainfo now links against static liblzma. In contrast
-    to other command line tools in XZ Utils, linking lzmainfo
-    against static liblzma by default is dumb. This will be
-    fixed once I have fixed some related issues in configure.ac.
+ src/xz/xz.1 | 41 +++++++++++++++++++++++++++++++++--------
+ 1 file changed, 33 insertions(+), 8 deletions(-)
 
- configure.ac             |   1 +
- src/Makefile.am          |   2 +-
- src/lzmainfo/Makefile.am |  29 ++++++
- src/lzmainfo/lzmainfo.1  |  55 +++++++++++
- src/lzmainfo/lzmainfo.c  | 242 +++++++++++++++++++++++++++++++++++++++++++++++
- 5 files changed, 328 insertions(+), 1 deletion(-)
+commit 7dddfbeb499e528940bc12047355c184644aafe9
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-12-10 22:26:57 +0100
 
-commit a4165d0584376d948c213ec93c6065d24ff6a5e7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-13 12:42:36 +0300
+    po/fr: several more translation updates: reword and handle --ignore-check.
+
+ po/fr.po | 50 ++++++++++++++++++++++++++------------------------
+ 1 file changed, 26 insertions(+), 24 deletions(-)
+
+commit 6eca5be40e04ddc4b738d493e4e56835956d8b69
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-12-10 22:23:01 +0100
 
-    Sync some error messages from xz to xzdec.
+    po/fr: yet another place where my email address had to be updated.
     
-    Make xz error message translation usable outside
-    xz (at least in upcoming lzmainfo).
+ po/fr.po | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
- src/xz/main.c     | 4 ++--
- src/xzdec/xzdec.c | 6 +++---
- 2 files changed, 5 insertions(+), 5 deletions(-)
+commit d1003673e92ba47edd6aeeb3dbea05c18269d0e7
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-12-10 22:22:20 +0100
 
-commit df636eb4e066b4e154ce8e66e82c87ba1db652a6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-13 09:37:21 +0300
+    po/fr: fix several typos that have been around since the beginning.
 
-    Add xz man page to manfiles in toplevel Makefile.am.
+ po/fr.po | 22 +++++++++++-----------
+ 1 file changed, 11 insertions(+), 11 deletions(-)
 
- Makefile.am | 1 +
- 1 file changed, 1 insertion(+)
+commit 4c5aa911a0df027e46171e368debc543d2fa72b2
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-12-03 20:02:31 +0100
 
-commit 180bdf58ea5bb07941e0a99b304d9aa832198748
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-13 09:37:01 +0300
+    po/fr: last batch of new translations for now.
 
-    Fix first line of xz man page.
+    Four new error messages.
 
- src/xz/xz.1 | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ po/fr.po | 16 ++++++++--------
+ 1 file changed, 8 insertions(+), 8 deletions(-)
 
-commit e1ce2291e759b50ebfcf7cbbcc04cd098f1705a4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-10 11:22:31 +0300
+commit 3e3099e36d27059499e7996fb38a62e8ab01d356
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-12-03 20:01:32 +0100
 
-    Added a rough version of the xz man page.
+    po/fr: translations for --threads, --block-size and --block-list.
 
- src/xz/Makefile.am |   15 +
- src/xz/xz.1        | 1206 ++++++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 1221 insertions(+)
+ po/fr.po | 12 ++++++++----
+ 1 file changed, 8 insertions(+), 4 deletions(-)
 
-commit e71903fc6101f1c039d702e335b08aad1e1b4100
-Author: Jonathan Nieder <jrnieder@gmail.com>
-Date:   2009-08-09 13:41:20 -0500
+commit e7d96a5933eec4e9d4a62569ee88df0ebb0f1d53
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-12-03 20:00:53 +0100
 
-    “xzdiff a.xz b.xz” always fails
+    po/fr: remove fuzzy marker for error messages that will be kept in English.
     
-    Attempts to compare two compressed files result in no output and
-    exit status 2.
+    The following is a copy of a comment inside fr.po:
     
-    Instead of going to standard output, ‘diff’ output is being
-    captured in the xz_status variable along with the exit status from
-    the decompression commands.  Later, when this variable is examined
-    for nonzero status codes, numerals from dates in the ‘diff’ output
-    make it appear as though decompression failed.
+    Note from translator on "file status flags".
+    The following entry is kept un-translated on purpose. It is difficult to
+    translate and should only happen in exceptional circumstances which means
+    that translating would:
+    - lose some of the meaning
+    - make it more difficult to look up in search engines; it might happen one
+    in
+    a million times, if we dilute the error message in 20 languages, it will be
+    almost impossible to find an explanation and support for the error.
     
-    So let the ‘diff’ output leak to standard output with another file
-    descriptor.  (This trick is used in all similar contexts elsewhere
-    in xzdiff and in the analogous context in gzip’s zdiff script.)
+ po/fr.po | 22 ++++++++++++++++------
+ 1 file changed, 16 insertions(+), 6 deletions(-)
 
- src/scripts/xzdiff.in | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+commit 46cbb9033af8a21fafe543302d6919746e0d72af
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-12-03 19:58:25 +0100
 
-commit 1d314b81aa5b0c4530638ffabd4e0edb52e5362c
-Author: Jonathan Nieder <jrnieder@gmail.com>
-Date:   2009-08-09 13:22:12 -0500
+    po/fr: several minor updates and better wording.
 
-    xzless: Support compressed standard input
+    Meaning doesn't change at all: it's only for better wording and/or
+    formatting of a few strings.
     
-    It can be somewhat confusing that
+ po/fr.po | 14 +++++++-------
+ 1 file changed, 7 insertions(+), 7 deletions(-)
     
-    	less < some_file.txt
+commit 7ce49d444f04e73145f79c832eb4d510594b074a
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-12-03 19:56:12 +0100
     
-    works fine, whereas
+    po/fr: update my email address and copyright years.
     
-    	xzless < some_file.txt.xz
+ po/fr.po | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
     
-    does not.  Since version 429, ‘less’ allows a filter specified in
-    the LESSOPEN environment variable to preprocess its input even if
-    it comes from standard input, if $LESSOPEN begins with ‘|-’.  So
-    set $LESSOPEN to take advantage of this feature.
+commit 214c553ebc3047cd720da1ce5c80cf7c38118d3c
+Author: Adrien Nader <adrien@notk.org>
+Date:   2014-11-26 10:08:26 +0100
     
-    Check less’s version at runtime so xzless can continue to work
-    with older versions.
+    fr.po: commit file after only "update-po" so actual is readable.
 
- src/scripts/xzless.in | 8 +++++++-
- 1 file changed, 7 insertions(+), 1 deletion(-)
+ po/fr.po | 311 ++++++++++++++++++++++++++++++++++++++++-----------------------
+ 1 file changed, 199 insertions(+), 112 deletions(-)
 
-commit a7f5d2fe4826ac68839d00059f05004fb81d5c69
+commit 1190c641af09cde85f8bd0fbe5c4906f4a29431b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-09 20:57:46 +0300
+Date:   2014-12-02 20:04:07 +0200
 
-    GPLv2+ not GPLv2 for Doxyfile.in is probably OK.
+    liblzma: Document how lzma_mt.block_size affects memory usage.
 
- Doxyfile.in | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/liblzma/api/lzma/container.h | 4 ++++
+ 1 file changed, 4 insertions(+)
 
-commit b735cde20cc14857136ae65a0e5d336ed7ddc862
+commit e4fc1d2f9571fba79ce383595be2ea2a9257def0
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-02 00:27:29 +0300
-
-    Added a copyright notice to Doxyfile.in since it contains
-    lots of comments from Doxygen.
+Date:   2014-11-28 20:07:18 +0200
     
-    It seems that the Doxygen authors' intent is to not apply
-    their copyright on generated files, but since it doesn't
-    matter for XZ Utils at all, better safe than sorry.
+    Update INSTALL about a "make check" failure in test_scripts.sh.
 
- Doxyfile.in | 3 +++
- 1 file changed, 3 insertions(+)
+ INSTALL | 24 +++++++++++++++++-------
+ 1 file changed, 17 insertions(+), 7 deletions(-)
 
-commit 0fd157cc008446adfc8f91394f5503868025a642
+commit 34f9e40a0a0c3bd2c2730cdb9cd550bbb8a3f2fe
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-02 00:11:37 +0300
+Date:   2014-11-26 20:12:27 +0200
 
-    Updated THANKS.
+    Remove LZMA_UNSTABLE macro.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+ src/liblzma/api/lzma/container.h | 4 ----
+ src/liblzma/common/common.h      | 2 --
+ src/xz/private.h                 | 1 -
+ 3 files changed, 7 deletions(-)
 
-commit b198da96ff9ac8c89b466b4d196c5f3fe1c7904f
+commit 6d9c0ce9f2677b159e32b224aba5b535b304a705
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-08-02 00:10:22 +0300
+Date:   2014-11-26 20:10:33 +0200
 
-    Updated TODO.
+    liblzma: Update lzma_stream_encoder_mt() API docs.
 
- TODO | 4 ++++
- 1 file changed, 4 insertions(+)
+ src/liblzma/api/lzma/container.h | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
 
-commit 669413bb2db954bbfde3c4542fddbbab53891eb4
+commit 2301f3f05dd9742f42cda8f0f318864f5dc39ab3
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-30 12:25:55 +0300
+Date:   2014-11-25 12:32:05 +0200
 
-    Updated THANKS.
+    liblzma: Verify the filter chain in threaded encoder initialization.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+    This way an invalid filter chain is detected at the Stream
+    encoder initialization instead of delaying it to the first
+    call to lzma_code() which triggers the initialization of
+    the actual filter encoder(s).
 
-commit dbbd8fb870ae789d96497911006c869d37148c15
-Author: Jonathan Nieder <jrnieder@gmail.com>
-Date:   2009-07-28 17:37:24 -0500
+ src/liblzma/common/stream_encoder_mt.c | 9 ++++++---
+ 1 file changed, 6 insertions(+), 3 deletions(-)
 
-    xzdiff: add missing ;; to case statement
+commit 107a263d5bb63cd3593fd6a5c938706539f84523
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2014-11-17 19:11:49 +0200
 
- src/scripts/xzdiff.in | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
+    Build: Update m4/ax_pthread.m4 from Autoconf Archive.
+
+ m4/ax_pthread.m4 | 71 +++++++++++++++++++++++++++++++++++++-------------------
+ 1 file changed, 47 insertions(+), 24 deletions(-)
 
-commit adbad2d16cb5909f85d4a429011005613ea62ffe
+commit b13a781833399ff5726cfc997f3cb2f0acbdbf31
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-24 13:15:06 +0300
+Date:   2014-11-17 18:52:21 +0200
 
-    Added history.txt to doc_DATA.
+    Build: Replace obsolete AC_HELP_STRING with AS_HELP_STRING.
 
- Makefile.am | 1 +
- 1 file changed, 1 insertion(+)
+ configure.ac         | 36 ++++++++++++++++++------------------
+ m4/tuklib_integer.m4 |  2 +-
+ 2 files changed, 19 insertions(+), 19 deletions(-)
 
-commit e0236f12569eb36f9b81ce7a1e52e0f73698ac27
+commit 542cac122ed3550148a2af0033af22b757491378
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-24 12:00:40 +0300
+Date:   2014-11-17 18:43:19 +0200
+
+    Build: Fix Autoconf warnings about escaped backquotes.
 
-    Updated .gitignore files.
+    Thanks to Daniel Richard G. for pointing out that it's
+    good to sometimes run autoreconf -fi with -Wall.
 
- .gitignore    | 36 +++++++++++++++++++-----------------
- po/.gitignore |  3 +++
- 2 files changed, 22 insertions(+), 17 deletions(-)
+ configure.ac | 7 +++----
+ 1 file changed, 3 insertions(+), 4 deletions(-)
 
-commit 2f34fb269265e3aba43a2a9c734020a45268826d
+commit 7b03a15cea8cd4f19ed680b51c4bcbae3ce4142f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-24 11:34:02 +0300
+Date:   2014-11-10 18:54:40 +0200
 
-    Minor improvements to COPYING.
+    xzdiff: Use mkdir if mktemp isn't available.
 
- COPYING | 11 ++++++++---
- 1 file changed, 8 insertions(+), 3 deletions(-)
+ src/scripts/xzdiff.in | 17 ++++++++++++++++-
+ 1 file changed, 16 insertions(+), 1 deletion(-)
 
-commit 0db1befcfbc120377df4b89923762f16d25f548a
+commit f8c13e5e3609581d5dd9f8777985ca07f2390ad7
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-23 19:10:55 +0300
+Date:   2014-11-10 18:45:01 +0200
 
-    Fix incorrect usage of getopt_long(), which caused
-    invalid memory access if XZ_OPT was defined.
+    xzdiff: Create a temporary directory to hold a temporary file.
 
- src/xz/args.c | 1 -
- 1 file changed, 1 deletion(-)
+    This avoids the possibility of "File name too long" when
+    creating a temp file when the input file name is very long.
 
-commit 8f8ec942d6d21ada2096eaf063411bc8bc7e2d48
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-20 15:43:32 +0300
+    This also means that other users on the system can no longer
+    see the input file names in /tmp (or whatever $TMPDIR is)
+    since the temporary directory will have a generic name. This
+    usually doesn't matter since on many systems one can see
+    the arguments given to all processes anyway.
 
-    Avoid internal error with --format=xz --lzma1.
+    The number X chars to mktemp where increased from 6 to 10.
 
- src/xz/coder.c | 16 ++++++++++++----
- 1 file changed, 12 insertions(+), 4 deletions(-)
+    Note that with some shells temp files or dirs won't be used at all.
 
-commit 99f9e879a6a8bb54a65da99c12e0f390216c152a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-19 13:14:20 +0300
+ src/scripts/xzdiff.in | 10 +++++-----
+ 1 file changed, 5 insertions(+), 5 deletions(-)
 
-    Major documentation update.
+commit 7716dcf9df7f457500cb657314e7a9aea5fedb06
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2014-11-10 15:38:47 +0200
     
-    Installation and packaging instructions were added.
-    README and other generic docs were revised.
+    liblzma: Fix lzma_mt.preset in lzma_stream_encoder_mt_memusage().
     
-    Some of the documentation files are now installed to $docdir.
+    It read the filter chain from a wrong variable. This is a similar
+    bug that was fixed in 9494fb6d0ff41c585326f00aa8f7fe58f8106a5e.
 
- AUTHORS         |  35 +++---
- ChangeLog       |   7 +-
- INSTALL         | 327 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- INSTALL.generic | 302 +++++++++++++++++++++++++++++++++++++++++++++++++++
- Makefile.am     |  11 ++
- PACKAGERS       | 278 +++++++++++++++++++++++++++++++++++++++++++++++
- README          | 263 ++++++++++++++++++++-------------------------
- THANKS          |  17 +--
- 8 files changed, 1070 insertions(+), 170 deletions(-)
+ src/liblzma/common/stream_encoder_mt.c | 3 +--
+ 1 file changed, 1 insertion(+), 2 deletions(-)
 
-commit ef4cf1851de89022cba5674784f1a8f6343c15b0
+commit 230fa4a605542c84b4178a57381695a0af4e779b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-19 11:09:31 +0300
+Date:   2014-11-10 14:49:55 +0200
 
-    Added missing author notice to xzless.in.
+    Update THANKS.
 
- src/scripts/xzless.in | 1 +
+ THANKS | 1 +
  1 file changed, 1 insertion(+)
 
-commit 4c9c989d45b188667799a7a1d6c728ed43f7bf77
+commit 4e4ae08bc7c1711e399c9f2d26eb375d39d08101
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-18 18:54:55 +0300
-
-    Use AC_CONFIG_AUX_DIR to clean up the toplevel directory
-    a little.
-    
-    Fixed a related bug in the toplevel Makefile.am.
+Date:   2014-10-29 21:28:25 +0200
     
-    Added the build-aux directory to .gitignore.
+    Update .gitignore files.
 
- .gitignore   | 1 +
- Makefile.am  | 1 -
- configure.ac | 3 ++-
- 3 files changed, 3 insertions(+), 2 deletions(-)
+ .gitignore    | 2 ++
+ m4/.gitignore | 3 +++
+ 2 files changed, 5 insertions(+)
 
-commit 366e436090a7a87215e9bf0e3ddcd55f05b50587
+commit c923b140b27d1a055db6284e10fd546ad1a7fcdb
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-18 14:34:08 +0300
+Date:   2014-10-29 21:15:35 +0200
 
-    Updated the totally outdated TODO file.
+    Build: Prepare to support Automake's subdir-objects.
 
- TODO | 117 ++++++++++++++++---------------------------------------------------
- 1 file changed, 27 insertions(+), 90 deletions(-)
+    Due to a bug in Automake, subdir-objects won't be enabled
+    for now.
 
-commit 64e498c89d8b9966e8663f43bf64d47c26c55c62
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-18 11:26:39 +0300
+    http://debbugs.gnu.org/cgi/bugreport.cgi?bug=17354
 
-    Added public domain notice into a few files.
+    Thanks to Daniel Richard G. for the original patches.
 
- src/common/common_w32res.rc   | 9 ++++++++-
- src/liblzma/liblzma.pc.in     | 7 +++++++
- src/liblzma/liblzma_w32res.rc | 7 +++++++
- src/xz/xz_w32res.rc           | 7 +++++++
- src/xzdec/xzdec_w32res.rc     | 7 +++++++
- 5 files changed, 36 insertions(+), 1 deletion(-)
+ configure.ac             |  7 ++++++-
+ src/Makefile.am          | 22 +++++++++++++++++++++-
+ src/liblzma/Makefile.am  |  4 ++--
+ src/lzmainfo/Makefile.am |  4 ++--
+ src/xz/Makefile.am       | 10 +++++-----
+ src/xzdec/Makefile.am    |  8 ++++----
+ 6 files changed, 40 insertions(+), 15 deletions(-)
 
-commit a35755c5de808df027675688855d1b621a4fb428
+commit 08c2aa16bea0df82828f665d51fba2e0a5e8997f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-14 21:10:36 +0300
+Date:   2014-10-24 20:09:29 +0300
 
-    Allow extra commas in filter-specific options on xz command line.
+    Translations: Update the Italian translation.
     
-    This may slightly ease writing scripts that construct
-    filter-specific option strings dynamically.
+    Thanks to Milo Casagrande.
 
- src/xz/options.c | 7 +++++++
- 1 file changed, 7 insertions(+)
+ po/it.po | 452 ++++++++++++++++++++++++++++++++++++++-------------------------
+ 1 file changed, 275 insertions(+), 177 deletions(-)
 
-commit 98f3cac1ad31191c5160a7e48398bf85141e941c
+commit 2f9f61aa83539c54ff6c118a2693890f0519b3dd
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-14 18:04:31 +0300
+Date:   2014-10-18 18:51:45 +0300
 
-    Accept --lzma2=preset=6e where "e" is equivalent to --extreme
-    when no custom chain is in use.
+    Translations: Update the Polish translation.
 
- src/xz/options.c | 80 +++++++++++++++++++++++++++++++++++++++++---------------
- 1 file changed, 59 insertions(+), 21 deletions(-)
+    Thanks to Jakub Bogusz.
 
-commit d873a09e956363e54bf58c577c8f7e487b6fb464
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-12 19:08:30 +0300
+ po/pl.po | 332 ++++++++++++++++++++++++++++++++++++++++-----------------------
+ 1 file changed, 214 insertions(+), 118 deletions(-)
 
-    Add dist-hook to create ChangeLog from the commit log,
-    and to conver the man pages to PDF and plain text, which
-    may be convenient to those who cannot render man pages.
+commit 4f9d233f67aea25e532824d11b7642cf7dee7a76
+Author: Andre Noll <maan@tuebingen.mpg.de>
+Date:   2014-10-14 17:30:30 +0200
 
- Makefile.am | 31 +++++++++++++++++++++++++++++++
- 1 file changed, 31 insertions(+)
+    l10n: de.po: Change translator email address.
 
-commit cd69a5a6c16c289f6f8e2823b03c72289472270f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-10 11:39:38 +0300
+    Although the old address is still working, the new one should
+    be preferred. So this commit changes all three places in de.po
+    accordingly.
 
-    BCJ filters: Reject invalid start offsets with LZMA_OPTIONS_ERROR.
+    Signed-off-by: Andre Noll <maan@tuebingen.mpg.de>
     
-    This is a quick and slightly dirty fix to make the code
-    conform to the latest file format specification. Without
-    this patch, it's possible to make corrupt files by
-    specifying start offset that is not a multiple of the
-    filter's alignment. Custom start offset is almost never
-    used, so this was only a minor bug.
+ po/de.po | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
     
-    The xz command line tool doesn't validate the start offset,
-    so one will get a bit unclear error message if trying to use
-    an invalid start offset.
+commit 00502b2bedad43f0cc167ac17ae0608837ee196b
+Author: Andre Noll <maan@tuebingen.mpg.de>
+Date:   2014-10-14 17:30:29 +0200
 
- src/liblzma/simple/arm.c            | 2 +-
- src/liblzma/simple/armthumb.c       | 2 +-
- src/liblzma/simple/ia64.c           | 2 +-
- src/liblzma/simple/powerpc.c        | 2 +-
- src/liblzma/simple/simple_coder.c   | 5 ++++-
- src/liblzma/simple/simple_private.h | 3 ++-
- src/liblzma/simple/sparc.c          | 2 +-
- src/liblzma/simple/x86.c            | 2 +-
- 8 files changed, 12 insertions(+), 8 deletions(-)
+    l10n: de.po: Update German translation
 
-commit eed9953732b801f6c97317fb3160445a8754180b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-10 11:33:21 +0300
+    Signed-off-by: Andre Noll <maan@systemlinux.org>
 
-    Look for full command names instead of substrings
-    like "un", "cat", and "lz" when determining if
-    xz is run as unxz, xzcat, lzma, unlzma, or lzcat.
+ po/de.po | 531 +++++++++++++++++++++++++++++++++------------------------------
+ 1 file changed, 281 insertions(+), 250 deletions(-)
     
-    This is to ensure that if xz is renamed (e.g. via
-    --program-transform-name), it doesn't so easily
-    work in wrong mode.
+commit 706b0496753fb609e69f1570ec603f11162189d1
+Author: Andre Noll <maan@tuebingen.mpg.de>
+Date:   2014-10-14 17:30:28 +0200
 
- src/xz/args.c | 22 +++++++++++++---------
- 1 file changed, 13 insertions(+), 9 deletions(-)
+    l10n: de.po: Fix typo: Schießen -> Schließen.
 
-commit 6f62fa88f4ff7ba78565c314c0e6e71c498fa658
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-08 23:06:46 +0300
+    That's a funny one since "schießen" means to shoot :)
 
-    Updated THANKS.
+    Signed-off-by: Andre Noll <maan@systemlinux.org>
 
- THANKS | 2 ++
- 1 file changed, 2 insertions(+)
+ po/de.po | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 1754b7e03e2aa7e2e0196807fe8b0f3f5a637b0e
+commit 7c32e6a935c3d7ee366abad1679bd5f322f0c7d4
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-08 23:05:29 +0300
+Date:   2014-10-09 19:42:26 +0300
 
-    Portability improvement to version.sh.
+    Update THANKS.
 
- version.sh | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 3bdb53792c0e3e3febe9370e56eda5b08f89410f
+commit 076258cc458f1e705041ac7a729b15ffe8c5214a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-08 22:50:16 +0300
-
-    Remove --force from xzdec.
-    
-    It was ignored for compatibility with xz, but now that
-    --decompress --stdout --force copies unrecognized files
-    as is to stdout, simply ignoring --force in xzdec would
-    be wrong. xzdec will not support copying unrecognized
-    data as is to stdout, so it cannot support --force.
-
- src/xzdec/xzdec.1 | 5 -----
- src/xzdec/xzdec.c | 5 +----
- 2 files changed, 1 insertion(+), 9 deletions(-)
+Date:   2014-10-09 19:41:51 +0300
 
-commit 5f16ef4abf220028a9ddbcb138217597a9455f62
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-06 10:36:04 +0300
+    Add support for AmigaOS/AROS to tuklib_physmem().
 
-    Use sed instead of $(SED) so that we don't need to
-    use AC_PROG_SED. We don't do anything fancy with sed,
-    so this should work OK. libtool 2.2 sets SED but 1.5
-    doesn't, so $(SED) happened to work when using libtool 2.2.
+    Thanks to Fredrik Wikstrom.
 
- src/liblzma/Makefile.am |  2 +-
- src/scripts/Makefile.am | 28 ++++++++++++++--------------
- src/xz/Makefile.am      |  6 +++---
- src/xzdec/Makefile.am   |  6 +++---
- 4 files changed, 21 insertions(+), 21 deletions(-)
-
-commit 96e4b257e101d72072d43e144897d92920270669
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-05 22:25:17 +0300
-
-    Major update to the xzgrep and other scripts based on
-    the latest versions found from gzip CVS repository.
-    
-    configure will try to find a POSIX shell to be used by
-    the scripts. This should ease portability on systems
-    which have pre-POSIX /bin/sh.
-    
-    xzgrep and xzdiff support .xz, .lzma, .gz, and .bz2 files.
-    xzmore and xzless support only .xz and .lzma files.
-    
-    The name of the xz executable used in these scripts is
-    now correct even if --program-transform-name has been used.
-
- configure.ac            |  14 ++++
- m4/posix-shell.m4       |  63 ++++++++++++++++
- src/scripts/Makefile.am |  24 +++---
- src/scripts/xzdiff      |  67 -----------------
- src/scripts/xzdiff.1    |  58 ++++++++------
- src/scripts/xzdiff.in   | 172 ++++++++++++++++++++++++++++++++++++++++++
- src/scripts/xzgrep      | 123 ------------------------------
- src/scripts/xzgrep.1    |  85 ++++++++++++---------
- src/scripts/xzgrep.in   | 196 ++++++++++++++++++++++++++++++++++++++++++++++++
- src/scripts/xzless.1    |  66 ++++++++++++++++
- src/scripts/xzless.in   |  51 +++++++++++++
- src/scripts/xzmore      |  74 ------------------
- src/scripts/xzmore.1    |  64 +++++++---------
- src/scripts/xzmore.in   |  78 +++++++++++++++++++
- 14 files changed, 766 insertions(+), 369 deletions(-)
+ m4/tuklib_physmem.m4        | 3 ++-
+ src/common/tuklib_physmem.c | 7 +++++++
+ 2 files changed, 9 insertions(+), 1 deletion(-)
 
-commit 25cc7a6e8c2506a0d80084a4c1c67d33e7439100
+commit efa7b0a210e1baa8e128fc98c5443a944c39ad24
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-05 19:26:53 +0300
-
-    Use @PACKAGE_HOMEPAGE@ in liblzma.pc.in.
+Date:   2014-10-09 18:42:14 +0300
 
- src/liblzma/liblzma.pc.in | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    xzgrep: Avoid passing both -q and -l to grep.
 
-commit 18c10c30d2833f394cd7bce0e6a821044b15832f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-04 00:40:44 +0300
+    The behavior of grep -ql varies:
+      - GNU grep behaves like grep -q.
+      - OpenBSD grep behaves like grep -l.
 
-    Make "xz --decompress --stdout --force" copy unrecognized
-    files as is to standard output.
+    POSIX doesn't make it 100 % clear what behavior is expected.
+    Anyway, using both -q and -l at the same time makes no sense
+    so both options simply should never be used at the same time.
     
-    This feature is needed to be more compatible with gzip's
-    behavior. This was more complicated to implement than it
-    sounds, because the way liblzma is able to return errors with
-    files of only a few bytes in size. xz now has its own file
-    type detection code and no longer uses lzma_auto_decoder().
+    Thanks to Christian Weisgerber.
 
- src/xz/coder.c | 213 +++++++++++++++++++++++++++++++++++++++++++++++----------
- 1 file changed, 178 insertions(+), 35 deletions(-)
+ src/scripts/xzgrep.in | 6 ++++--
+ 1 file changed, 4 insertions(+), 2 deletions(-)
 
-commit 0a289c01ac821ea9c4250aa906b0ae3cfa953633
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-02 14:30:38 +0300
+commit 9c5f76098c9986b48d2fc574a0b764f4cde0c538
+Author: Trần Ngọc Quân <vnwildman@gmail.com>
+Date:   2014-09-25 09:22:45 +0700
 
-    Define PACKAGE_HOMEPAGE in configure.ac and use it in
-    xz and xzdec.
+    l10n: vi.po: Update Vietnamese translation
     
-    Use also PACKAGE_NAME instead of hardcoding "XZ Utils".
+    Signed-off-by: Trần Ngọc Quân <vnwildman@gmail.com>
 
- configure.ac      | 5 +++++
- src/xz/message.c  | 4 ++--
- src/xzdec/xzdec.c | 4 ++--
- 3 files changed, 9 insertions(+), 4 deletions(-)
+ po/vi.po | 136 +++++++++++++++++++++++++++++++++++++++------------------------
+ 1 file changed, 84 insertions(+), 52 deletions(-)
 
-commit 5cc99db5bae8633f85559e5cdaef4cd905a4ee9c
+commit c4911f2db36d811896c73c008b4218d8fa9a4730
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-07-01 12:21:24 +0300
-
-    Avoid visibility related compiler warnings on Windows.
+Date:   2014-09-25 18:38:48 +0300
 
- configure.ac | 20 +++++++++-----------
- 1 file changed, 9 insertions(+), 11 deletions(-)
+    Build: Detect supported compiler warning flags better.
 
-commit 7653d1cf48080e63b189ed9d58dea0e82b6b1c5e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-30 17:14:39 +0300
+    Clang and nowadays also GCC accept any -Wfoobar option
+    but then may give a warning that an unknown warning option
+    was specified. To avoid adding unsupported warning options,
+    the options are now tested with -Werror.
 
-    Use static liblzma by default also for tests.
+    Thanks to Charles Diza.
 
- tests/Makefile.am | 5 ++++-
- 1 file changed, 4 insertions(+), 1 deletion(-)
+ configure.ac | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
 
-commit f42ee981668b545ab6d06c6072e262c29605273c
+commit 76e75522ed6f5c228d55587dee5a997893f6e474
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-30 17:09:57 +0300
+Date:   2014-09-20 21:01:21 +0300
 
-    Build system fixes
+    Update NEWS for 5.0.7.
     
-    Don't use libtool convenience libraries to avoid recently
-    discovered long-standing subtle but somewhat severe bugs
-    in libtool (at least 1.5.22 and 2.2.6 are affected). It
-    was found when porting XZ Utils to Windows
-    <http://lists.gnu.org/archive/html/libtool/2009-06/msg00070.html>
-    but the problem is significant also e.g. on GNU/Linux.
-    
-    Unless --disable-shared is passed to configure, static
-    library built from a set of convenience libraries will
-    contain PIC objects. That is, while libtool builds non-PIC
-    objects too, only PIC objects will be used from the
-    convenience libraries. On 32-bit x86 (tested on mobile XP2400+),
-    using PIC instead of non-PIC makes the decompressor 10 % slower
-    with the default CFLAGS.
-    
-    So while xz was linked against static liblzma by default,
-    it got the slower PIC objects unless --disable-shared was
-    used. I tend develop and benchmark with --disable-shared
-    due to faster build time, so I hadn't noticed the problem
-    in benchmarks earlier.
-    
-    This commit also adds support for building Windows resources
-    into liblzma and executables.
-
- configure.ac                        | 34 ++++++++++------
- src/liblzma/Makefile.am             | 79 +++++++++++++++++++++++++++++--------
- src/liblzma/check/Makefile.am       | 47 ----------------------
- src/liblzma/check/Makefile.inc      | 51 ++++++++++++++++++++++++
- src/liblzma/common/Makefile.am      | 78 ------------------------------------
- src/liblzma/common/Makefile.inc     | 67 +++++++++++++++++++++++++++++++
- src/liblzma/common/common.h         | 16 +++++---
- src/liblzma/delta/Makefile.am       | 28 -------------
- src/liblzma/delta/Makefile.inc      | 23 +++++++++++
- src/liblzma/lz/Makefile.am          | 29 --------------
- src/liblzma/lz/Makefile.inc         | 21 ++++++++++
- src/liblzma/lzma/Makefile.am        | 51 ------------------------
- src/liblzma/lzma/Makefile.inc       | 43 ++++++++++++++++++++
- src/liblzma/rangecoder/Makefile.am  | 26 ------------
- src/liblzma/rangecoder/Makefile.inc | 21 ++++++++++
- src/liblzma/simple/Makefile.am      | 51 ------------------------
- src/liblzma/simple/Makefile.inc     | 47 ++++++++++++++++++++++
- src/liblzma/subblock/Makefile.am    | 26 ------------
- src/liblzma/subblock/Makefile.inc   | 20 ++++++++++
- src/xz/Makefile.am                  | 11 +++++-
- src/xzdec/Makefile.am               | 20 +++++++++-
- 21 files changed, 417 insertions(+), 372 deletions(-)
+ NEWS | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
 
-commit 89dac1db6f168d7469cfbc4432651d4724c5c0de
+commit d62028b4c1174fc67b6929f126f5eb24c018c700
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-29 22:19:51 +0300
-
-    Added a comment about "autoconf -fi" to autogen.sh.
+Date:   2014-09-20 19:42:56 +0300
 
- autogen.sh | 3 +++
- 1 file changed, 3 insertions(+)
+    liblzma: Fix a portability problem in Makefile.am.
 
-commit 6e685aae4594bc0af1b5032e01bb37d0edaa3ebd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-28 10:04:24 +0300
+    POSIX supports $< only in inference rules (suffix rules).
+    Using it elsewhere is a GNU make extension and doesn't
+    work e.g. with OpenBSD make.
 
-    Add -no-undefined to get shared liblzma on Windows.
+    Thanks to Christian Weisgerber for the patch.
 
  src/liblzma/Makefile.am | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 73f560ee5fa064992b76688d9472baf139432540
+commit c35de31d4283edad3e57d37ffe939406542cb7bb
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-27 22:57:15 +0300
+Date:   2014-09-14 21:54:09 +0300
 
-    Make physmem() work on Cygwin 1.5 and older.
+    Bump the version number to 5.1.4beta.
 
- src/common/physmem.h | 77 +++++++++++++++++++++++++++-------------------------
- 1 file changed, 40 insertions(+), 37 deletions(-)
+ src/liblzma/api/lzma/version.h | 4 ++--
+ src/liblzma/liblzma.map        | 2 +-
+ 2 files changed, 3 insertions(+), 3 deletions(-)
 
-commit 7ff0004fbce24ae72eddfe392828ffd7d4639ed1
+commit e9e097e22cacdaa23e5414fea7913535449cb340
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-27 17:28:01 +0300
+Date:   2014-09-14 21:50:13 +0300
 
-    Moved the Windows resource files outside the windows directory
-    to prepare for building them with Autotools.
+    Update NEWS for 5.0.6 and 5.1.4beta.
 
- src/common/common_w32res.rc   | 46 +++++++++++++++++++++++++++++++++++++++++++
- src/liblzma/liblzma_w32res.rc |  5 +++++
- src/xz/xz_w32res.rc           |  5 +++++
- src/xzdec/lzmadec_w32res.rc   |  5 +++++
- src/xzdec/xzdec_w32res.rc     |  5 +++++
- windows/Makefile              | 35 +++++++++++++++++---------------
- windows/common.rc             | 46 -------------------------------------------
- windows/liblzma.rc            |  5 -----
- windows/lzmadec.rc            |  5 -----
- windows/xz.rc                 |  5 -----
- windows/xzdec.rc              |  5 -----
- 11 files changed, 85 insertions(+), 82 deletions(-)
+ NEWS | 50 ++++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 50 insertions(+)
 
-commit 449c634674f35336a4815d398172e447659a135e
+commit 642f856bb8562ab66704b1e01ac7bc08b6d0a663
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-27 13:05:03 +0300
+Date:   2014-09-14 21:02:41 +0300
 
-    Added missing $(EXEEXT).
+    Update TODO.
 
- src/xz/Makefile.am | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ TODO | 38 ++++++++++++++++++++++++++++++++++----
+ 1 file changed, 34 insertions(+), 4 deletions(-)
 
-commit 792db79f27ad9ab1fb977e23be65c7761f545752
+commit 6b5e3b9eff5b8cedb2aac5f524d4d60fc8a48124
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-27 12:32:40 +0300
+Date:   2014-08-05 22:32:36 +0300
 
-    Create correct symlinks even when
-    --program-{prefix,suffix,transform} is passed to configure.
+    xz: Add --ignore-check.
 
- src/scripts/Makefile.am | 80 ++++++++++++++++++++++++++++---------------------
- src/xz/Makefile.am      | 21 ++++++++-----
- src/xzdec/Makefile.am   |  9 ++++--
- 3 files changed, 65 insertions(+), 45 deletions(-)
+ src/xz/args.c    |  7 +++++++
+ src/xz/args.h    |  1 +
+ src/xz/coder.c   | 10 +++++++++-
+ src/xz/message.c |  2 ++
+ src/xz/xz.1      | 19 +++++++++++++++++++
+ 5 files changed, 38 insertions(+), 1 deletion(-)
 
-commit 0adc72feb84f5b903f6ad9d3f759b1c326fafc6b
+commit 9adbc2ff373f979c917cdfd3679ce0ebd59f1040
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-27 10:02:24 +0300
+Date:   2014-08-05 22:15:07 +0300
 
-    Silence a compiler warning on DOS-like systems.
+    liblzma: Add support for LZMA_IGNORE_CHECK.
 
- src/xz/file_io.c | 5 ++++-
- 1 file changed, 4 insertions(+), 1 deletion(-)
+ src/liblzma/api/lzma/container.h    | 24 ++++++++++++++++++++++++
+ src/liblzma/common/common.h         |  1 +
+ src/liblzma/common/stream_decoder.c | 14 ++++++++++++--
+ 3 files changed, 37 insertions(+), 2 deletions(-)
 
-commit ad12edc95254ede3f0cb8dec8645e8789e984c4f
+commit 0e0f34b8e4f1c60ecaec15c2105982381cc9c3e6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-27 09:35:15 +0300
+Date:   2014-08-05 22:03:30 +0300
 
-    Updated the filenames in POTFILES.in too.
+    liblzma: Add support for lzma_block.ignore_check.
 
- po/POTFILES.in | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+    Note that this slightly changes how lzma_block_header_decode()
+    has been documented. Earlier it said that the .version is set
+    to the lowest required value, but now it says that the .version
+    field is kept unchanged if possible. In practice this doesn't
+    affect any old code, because before this commit the only
+    possible .version was 0.
+
+ src/liblzma/api/lzma/block.h              | 50 ++++++++++++++++++++++++-------
+ src/liblzma/common/block_buffer_encoder.c |  2 +-
+ src/liblzma/common/block_decoder.c        | 18 ++++++++---
+ src/liblzma/common/block_encoder.c        |  2 +-
+ src/liblzma/common/block_header_decoder.c | 12 ++++++--
+ src/liblzma/common/block_header_encoder.c |  2 +-
+ src/liblzma/common/block_util.c           |  2 +-
+ 7 files changed, 68 insertions(+), 20 deletions(-)
 
-commit b2b1f867532732fe9969131f8713bdd6b0731763
+commit 71e1437ab585b46f7a25f5a131557d3d1c0cbaa2
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-27 00:43:06 +0300
+Date:   2014-08-04 19:25:58 +0300
+
+    liblzma: Use lzma_memcmplen() in the BT3 match finder.
+    
+    I had missed this when writing the commit
+    5db75054e900fa06ef5ade5f2c21dffdd5d16141.
 
-    Hopefully improved portability of the assembler code in
-    Autotools based builds on Windows.
+    Thanks to Jun I Jin.
 
- src/liblzma/check/crc32_x86.S | 8 +++++++-
- src/liblzma/check/crc64_x86.S | 8 +++++++-
- 2 files changed, 14 insertions(+), 2 deletions(-)
+ src/liblzma/lz/lz_encoder_mf.c | 5 ++---
+ 1 file changed, 2 insertions(+), 3 deletions(-)
 
-commit c393055947247627a09b6a6b8f20aa0c32f9be16
+commit 41dc9ea06e1414ebe8ef52afc8fc15b6e3282b04
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-26 21:17:29 +0300
+Date:   2014-08-04 00:25:44 +0300
 
-    Updated THANKS (most of today's commits are based on
-    Charles Wilson's patches).
+    Update THANKS.
 
  THANKS | 1 +
  1 file changed, 1 insertion(+)
 
-commit da0af22e4b4139b8a10710945f8b245b3a77c97d
+commit 5dcffdbcc23a68abc3ac3539b30be71bc9b5af84
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-26 21:00:35 +0300
-
-    Updated comments to match renamed files.
+Date:   2014-08-03 21:32:25 +0300
 
- src/xz/coder.c   | 2 +-
- src/xz/coder.h   | 2 +-
- src/xz/file_io.c | 2 +-
- src/xz/file_io.h | 2 +-
- 4 files changed, 4 insertions(+), 4 deletions(-)
+    liblzma: SHA-256: Optimize the Maj macro slightly.
 
-commit 65014fd211dfbd4be48685998cb5a12aaa29c8d2
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-26 20:49:54 +0300
+    The Maj macro is used where multiple things are added
+    together, so making Maj a sum of two expressions allows
+    some extra freedom for the compiler to schedule the
+    instructions.
 
-    Rename process.[hc] to coder.[hc] and io.[hc] to file_io.[hc]
-    to avoid problems on systems with system headers with those
-    names.
+    I learned this trick from
+    <http://www.hackersdelight.org/corres.txt>.
 
- dos/Makefile       |   4 +-
- src/xz/Makefile.am |   8 +-
- src/xz/coder.c     | 488 ++++++++++++++++++++++++++++++++++++
- src/xz/coder.h     |  57 +++++
- src/xz/file_io.c   | 716 +++++++++++++++++++++++++++++++++++++++++++++++++++++
- src/xz/file_io.h   |  86 +++++++
- src/xz/io.c        | 716 -----------------------------------------------------
- src/xz/io.h        |  86 -------
- src/xz/private.h   |   4 +-
- src/xz/process.c   | 488 ------------------------------------
- src/xz/process.h   |  57 -----
- windows/Makefile   |   4 +-
- 12 files changed, 1357 insertions(+), 1357 deletions(-)
+ src/liblzma/check/sha256.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 5e1257466dcb66f1d7a3f71814a5ad885cba43e8
+commit a9477d1e0c6fd0e47e637d051e7b9e2a5d9af517
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-26 20:43:36 +0300
-
-    Rename process_file() to coder_run().
+Date:   2014-08-03 21:08:12 +0300
 
- src/xz/main.c    | 6 +++---
- src/xz/process.c | 6 +++---
- src/xz/process.h | 5 ++---
- 3 files changed, 8 insertions(+), 9 deletions(-)
+    liblzma: SHA-256: Optimize the way rotations are done.
 
-commit cad62551c5fa9865dbe0841a0b3bc729c4fbe8fc
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-26 20:36:45 +0300
+    This looks weird because the rotations become sequential,
+    but it helps quite a bit on both 32-bit and 64-bit x86:
 
-    Ugly hack to make it possible to use the thousand separator
-    format character with snprintf() on POSIX systems but not
-    on non-POSIX systems and still keep xgettext working.
+      - It requires fewer instructions on two-operand
+        instruction sets like x86.
 
- dos/Makefile     | 16 +++-------------
- src/xz/message.c | 17 +++++++++--------
- src/xz/process.c | 30 +++++++++++++++---------------
- src/xz/util.c    | 34 ++++++++++++++++++++++++++++++++++
- src/xz/util.h    | 20 ++++++++++++++++++++
- windows/Makefile | 13 +++----------
- 6 files changed, 84 insertions(+), 46 deletions(-)
+      - It requires one register less which matters especially
+        on 32-bit x86.
 
-commit fe378d47074b16c52b00fe184d119287c68ce2e7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-26 15:40:40 +0300
+    I hope this doesn't hurt other archs.
 
-    Added missing source files to windows/Makefile.
+    I didn't invent this idea myself, but I don't remember where
+    I saw it first.
 
- windows/Makefile | 2 ++
- 1 file changed, 2 insertions(+)
+ src/liblzma/check/sha256.c | 17 +++++++++++------
+ 1 file changed, 11 insertions(+), 6 deletions(-)
 
-commit 390a6408563067613b29de895cb40e4d0386d62c
+commit 5a76c7c8ee9a0afbeedb1c211db9224260404347
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-26 15:37:53 +0300
-
-    Basic support for building with Cygwin and MinGW using
-    the Autotools based build system. It's not good yet, more
-    fixes will follow.
+Date:   2014-08-03 20:38:13 +0300
 
- configure.ac                  |  7 +++++++
- src/liblzma/api/lzma.h        |  7 +++++--
- src/liblzma/check/crc32_x86.S |  7 ++++---
- src/liblzma/check/crc64_x86.S |  7 ++++---
- src/liblzma/common/common.h   |  2 +-
- windows/Makefile              | 16 +++++++---------
- 6 files changed, 28 insertions(+), 18 deletions(-)
+    liblzma: SHA-256: Remove the GCC #pragma that became unneeded.
 
-commit 1c9360b7d1197457aaad2f8888b99f1149861579
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-26 14:47:31 +0300
+    The unrolling in the previous commit should avoid the
+    situation where a compiler may think that an uninitialized
+    variable might be accessed.
 
-    Fix @variables@ to $(variables) in Makefile.am files.
-    Fix the ordering of libgnu.a and LTLIBINTL on the linker
-    command line and added missing LTLIBINTL to tests/Makefile.am.
-
- debug/Makefile.am                  | 12 ++++++------
- src/liblzma/check/Makefile.am      |  4 ++--
- src/liblzma/common/Makefile.am     | 16 ++++++++--------
- src/liblzma/delta/Makefile.am      |  4 ++--
- src/liblzma/lz/Makefile.am         |  6 +++---
- src/liblzma/lzma/Makefile.am       |  8 ++++----
- src/liblzma/rangecoder/Makefile.am |  4 ++--
- src/liblzma/simple/Makefile.am     |  4 ++--
- src/liblzma/subblock/Makefile.am   |  4 ++--
- src/xz/Makefile.am                 | 21 +++++++++++----------
- src/xzdec/Makefile.am              | 19 ++++++++++---------
- tests/Makefile.am                  | 12 +++++++-----
- 12 files changed, 59 insertions(+), 55 deletions(-)
+ src/liblzma/check/sha256.c | 5 -----
+ 1 file changed, 5 deletions(-)
 
-commit d45615c555e250209ebb55aa3649abe790f1eeac
+commit 9a096f8e57509775c331950b8351bbca77bdcfa8
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-26 14:20:02 +0300
-
-    Allow to explicitly specify autotool versions in autogen.sh.
-
- autogen.sh | 12 ++++++------
- 1 file changed, 6 insertions(+), 6 deletions(-)
+Date:   2014-08-03 20:33:38 +0300
 
-commit eaf8367368a329afa48785380f9dca6b681f3397
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-26 14:18:32 +0300
+    liblzma: SHA-256: Unroll a little more.
 
-    Add version.sh to EXTRA_DIST.
+    This way a branch isn't needed for each operation
+    to choose between blk0 and blk2, and still the code
+    doesn't grow as much as it would with full unrolling.
 
- Makefile.am | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
+ src/liblzma/check/sha256.c | 25 ++++++++++++++++---------
+ 1 file changed, 16 insertions(+), 9 deletions(-)
 
-commit b317b218e2d383dd27a700094c0de4510540ea18
+commit bc7650d87bf27f85f1a2a806dc2db1780e09e6a5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-24 20:14:10 +0300
+Date:   2014-08-03 19:56:43 +0300
 
-    Support HW_PHYSMEM64
+    liblzma: SHA-256: Do the byteswapping without a temporary buffer.
 
- src/common/physmem.h | 30 +++++++++++++++++++-----------
- 1 file changed, 19 insertions(+), 11 deletions(-)
+ src/liblzma/check/sha256.c | 13 +------------
+ 1 file changed, 1 insertion(+), 12 deletions(-)
 
-commit ae82dde5d9cc60c80cc89601b6c51cc1611d48e7
+commit 544aaa3d13554e8640f9caf7db717a96360ec0f6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-24 13:01:59 +0300
-
-    Cast a char argument to isspace() to unsigned char.
-
- src/xz/args.c | 11 +++++++++--
- 1 file changed, 9 insertions(+), 2 deletions(-)
+Date:   2014-07-25 22:38:28 +0300
 
-commit 1735d31ea347210e914df038eeea4b2626e76e42
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-05 13:46:26 +0300
+    liblzma: Use lzma_memcmplen() in normal mode of LZMA.
 
-    A few more spelling fixes. Released the .xz spec 1.0.3.
+    Two locations were not changed yet because the simplest change
+    assumes that the initial "len" may be greater than "limit".
 
- doc/xz-file-format.txt | 12 +++++++-----
- 1 file changed, 7 insertions(+), 5 deletions(-)
+ src/liblzma/lzma/lzma_encoder_optimum_normal.c | 20 +++++---------------
+ 1 file changed, 5 insertions(+), 15 deletions(-)
 
-commit 8ed156ce894966103e895aa08f2a9fb912f6fad5
+commit f48fce093b07aeda95c18850f5e086d9f2383380
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-04 23:42:12 +0300
+Date:   2014-07-25 22:30:38 +0300
 
-    Added xzdec man page.
+    liblzma: Simplify LZMA fast mode code by using memcmp().
 
- src/xzdec/Makefile.am |  11 ++++
- src/xzdec/xzdec.1     | 173 ++++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 184 insertions(+)
+ src/liblzma/lzma/lzma_encoder_optimum_fast.c | 11 +----------
+ 1 file changed, 1 insertion(+), 10 deletions(-)
 
-commit f6df39afaa84f71439507178a49b2a5dda6e824c
+commit 6bf5308e34e23dede5b301b1b9b4f131dacd9218
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-04 23:26:47 +0300
+Date:   2014-07-25 22:29:49 +0300
 
-    Harmonized xzdec --memory with xz --memory and made
-    minor cleanups.
+    liblzma: Use lzma_memcmplen() in fast mode of LZMA.
 
- src/xzdec/xzdec.c | 74 +++++++++++++++++++++++++++++++++++++++----------------
- 1 file changed, 53 insertions(+), 21 deletions(-)
+ src/liblzma/lzma/lzma_encoder_optimum_fast.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
 
-commit 1774f27c61ce294a56712ca2f4785f90a62441bc
+commit 353212137e51e45b105a3a3fc2e6879f1cf0d492
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-04 22:59:55 +0300
+Date:   2014-07-25 21:16:23 +0300
 
-    Fix purporse -> purpose. Thanks to Andrew Dudman.
-    Released .xz spec 1.0.2 due to this fix too.
+    Update THANKS.
 
  THANKS                    | 1 +
- doc/xz-file-format.txt    | 8 +++++---
- src/liblzma/liblzma.pc.in | 2 +-
- windows/Makefile          | 2 +-
- 4 files changed, 8 insertions(+), 5 deletions(-)
+ 1 file changed, 1 insertion(+)
 
-commit cb613455642f48fb51059e22018615f64c59b70f
+commit 5db75054e900fa06ef5ade5f2c21dffdd5d16141
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-06-01 14:53:57 +0300
+Date:   2014-07-25 21:15:07 +0300
 
-    The .xz file format version 1.0.1
+    liblzma: Use lzma_memcmplen() in the match finders.
+    
+    This doesn't change the match finder output.
 
- doc/xz-file-format.txt | 29 ++++++++++++++++++++++-------
- 1 file changed, 22 insertions(+), 7 deletions(-)
+ src/liblzma/lz/lz_encoder.c    | 13 ++++++++++++-
+ src/liblzma/lz/lz_encoder_mf.c | 33 +++++++++++----------------------
+ 2 files changed, 23 insertions(+), 23 deletions(-)
 
-commit 083c23c680ff844846d177cfc58bb7a874e7e6b9
+commit e1c8f1d01f4a4e2136173edab2dc63c71ef038f4
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-26 14:48:48 +0300
+Date:   2014-07-25 20:57:20 +0300
+
+    liblzma: Add lzma_memcmplen() for fast memory comparison.
+    
+    This commit just adds the function. Its uses will be in
+    separate commits.
 
-    Make the raw value of the Check field available to applications
-    via lzma_block structure.
+    This hasn't been tested much yet and it's perhaps a bit early
+    to commit it but if there are bugs they should get found quite
+    quickly.
     
-    This changes ABI but not doesn't break API.
+    Thanks to Jun I Jin from Intel for help and for pointing out
+    that string comparison needs to be optimized in liblzma.
 
- src/liblzma/api/lzma/block.h              | 17 ++++++++++++++++
- src/liblzma/common/block_buffer_encoder.c |  1 +
- src/liblzma/common/block_decoder.c        | 34 ++++++++++++++-----------------
- src/liblzma/common/block_encoder.c        | 21 ++++++++-----------
- 4 files changed, 42 insertions(+), 31 deletions(-)
+ configure.ac                    |  13 +++
+ src/liblzma/common/Makefile.inc |   1 +
+ src/liblzma/common/memcmplen.h  | 170 ++++++++++++++++++++++++++++++++++++++++
+ 3 files changed, 184 insertions(+)
 
-commit b4f5c814090dc07d4350453576305e41eb9c998d
+commit 765735cf52e5123586e74a51b9c073b5257f631f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-23 16:57:21 +0300
+Date:   2014-07-12 21:10:09 +0300
 
-    Remove undocumented alternative option names --bcj, --ppc,
-    and --itanium.
+    Update THANKS.
 
- src/xz/args.c | 3 ---
- 1 file changed, 3 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit b1edee2cdc7ef4411b1a21c07094ec763f071281
+commit 59da01785ef66c7e62f36e70ca808fd2824bb995
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-23 15:12:23 +0300
+Date:   2014-07-12 20:06:08 +0300
+
+    Translations: Add Vietnamese translation.
 
-    Add support for specifying the BCJ filter start offset
-    in the xz command line tool.
+    Thanks to Trần Ngọc Quân.
 
- src/xz/args.c    | 36 +++++++++++++++++++++---------------
- src/xz/message.c | 14 ++++++++------
- src/xz/options.c | 40 ++++++++++++++++++++++++++++++++++++++++
- src/xz/options.h |  7 +++++++
- 4 files changed, 76 insertions(+), 21 deletions(-)
+ po/LINGUAS |    1 +
+ po/vi.po   | 1007 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ 2 files changed, 1008 insertions(+)
 
-commit 72aa0e9c5f4289f10ef5bf240a9448d3017f1ceb
+commit 17215f751c354852700e7f8592ccf319570a0721
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-23 14:51:09 +0300
+Date:   2014-06-29 20:54:14 +0300
 
-    Updated THANKS.
+    xz: Update the help message of a few options.
 
- THANKS | 2 ++
- 1 file changed, 2 insertions(+)
+    Updated: --threads, --block-size, and --block-list
+    Added: --flush-timeout
 
-commit dcedb6998cefeca6597dd1219328a3abf5acf66d
+ src/xz/message.c | 18 +++++++++++-------
+ 1 file changed, 11 insertions(+), 7 deletions(-)
+
+commit 96864a6ddf91ad693d102ea165f3d7918744d582
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-22 16:40:50 +0300
+Date:   2014-06-18 22:07:06 +0300
 
-    Added support for --quiet and --no-warn to xzdec.
-    Cleaned up the --help message a little.
+    xz: Use lzma_cputhreads() instead of own copy of tuklib_cpucores().
 
- src/xzdec/xzdec.c | 76 +++++++++++++++++++++++++++++++++++--------------------
- 1 file changed, 49 insertions(+), 27 deletions(-)
+ src/xz/Makefile.am |  1 -
+ src/xz/hardware.c  | 12 +++++++++---
+ 2 files changed, 9 insertions(+), 4 deletions(-)
 
-commit 5f735dae80aa629853f4831d7b84ec1c614979eb
+commit a115cc3748482e277f42a968baa3cd266f031dba
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-22 15:11:52 +0300
-
-    Use the 40 % of RAM memory usage limit in xzdec too.
+Date:   2014-06-18 22:04:24 +0300
     
-    Update the memory usage info text in --help to match
-    the text in xz --long-help.
+    liblzma: Add lzma_cputhreads().
 
- src/xzdec/xzdec.c | 10 +++++-----
- 1 file changed, 5 insertions(+), 5 deletions(-)
+ src/liblzma/Makefile.am                  |  8 +++++++-
+ src/liblzma/api/lzma/hardware.h          | 14 ++++++++++++++
+ src/liblzma/common/Makefile.inc          |  1 +
+ src/liblzma/common/hardware_cputhreads.c | 22 ++++++++++++++++++++++
+ src/liblzma/liblzma.map                  |  1 +
+ 5 files changed, 45 insertions(+), 1 deletion(-)
 
-commit b60376249e0c586910c4121fab4f791820cc1289
+commit 3ce3e7976904fbab4e6482bafa442856f77a51fa
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-22 14:43:00 +0300
+Date:   2014-06-18 19:11:52 +0300
+
+    xz: Check for filter chain compatibility for --flush-timeout.
 
-    Add --no-warn.
+    This avoids LZMA_PROG_ERROR from lzma_code() with filter chains
+    that don't support LZMA_SYNC_FLUSH.
 
- src/xz/args.c    |  8 +++++++-
- src/xz/main.c    | 17 +++++++++++++++++
- src/xz/main.h    |  6 ++++++
- src/xz/message.c |  4 ++++
- 4 files changed, 34 insertions(+), 1 deletion(-)
+ src/xz/coder.c | 30 +++++++++++++++++++++---------
+ 1 file changed, 21 insertions(+), 9 deletions(-)
 
-commit b4f92f522d4b854c0adb7c38be7531e1a6a7b008
+commit 381ac14ed79e5d38809f251705be8b3193bba417
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-22 14:27:40 +0300
+Date:   2014-06-13 19:21:54 +0300
 
-    Fix a comment.
+    xzgrep: List xzgrep_expected_output in tests/Makefile.am.
 
- src/xz/main.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ tests/Makefile.am | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
 
-commit 4dd21d23f22569285ae706b58b0e5904b8db1839
+commit 4244b65b06d5ecaf6f9dd0387ac7e3166bd2364e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-22 14:21:20 +0300
+Date:   2014-06-13 18:58:22 +0300
+
+    xzgrep: Improve the test script.
 
-    Remove the --info option, which was an alias for --list.
+    Now it should be close to the functionality of the original
+    version by Pavel Raiskup.
 
- src/xz/args.c | 1 -
- 1 file changed, 1 deletion(-)
+ tests/Makefile.am            |  3 ++-
+ tests/test_scripts.sh        | 24 ++++++++++++++----------
+ tests/xzgrep_expected_output | 39 +++++++++++++++++++++++++++++++++++++++
+ 3 files changed, 55 insertions(+), 11 deletions(-)
 
-commit 8836139b63ce774bdd62abf17ab69b290e08229e
+commit 1e60f2c0a0ee6c18b02943ce56214799a70aac26
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-22 12:27:43 +0300
+Date:   2014-06-11 21:03:25 +0300
 
-    If xz is run as lzma, unlzma, or lzcat, simply imply
-    --format=lzma. This means that xz emulating lzma
-    doesn't decompress .xz files, while before this
-    commit it did. The new way is slightly simpler in
-    code and especially in upcoming documentation.
+    xzgrep: Add a test for the previous fix.
+    
+    This is a simplified version of Pavel Raiskup's
+    original patch.
 
- src/xz/args.c | 17 ++++++-----------
- 1 file changed, 6 insertions(+), 11 deletions(-)
+ tests/test_scripts.sh | 26 ++++++++++++++++++++++----
+ 1 file changed, 22 insertions(+), 4 deletions(-)
 
-commit b0063023f8adb06ea735ec4af5c6f5b7bdb8e84d
+commit ceca37901783988204caaf40dff4623d535cc789
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-22 11:29:50 +0300
+Date:   2014-06-11 20:43:28 +0300
 
-    Make the default memory usage limit 40 % of RAM for both
-    compressing and decompressing. This should be OK now that
-    xz automatically scales down the compression settings if
-    they would exceed the memory usage limit (earlier, the limit
-    for compression was increased to 90 % because low limit broke
-    scripts that used "xz -9" on systems with low RAM).
+    xzgrep: exit 0 when at least one file matches.
     
-    Support spcifying the memory usage limit as a percentage
-    of RAM (e.g. --memory=50%).
+    Mimic the original grep behavior and return exit_success when
+    at least one xz compressed file matches given pattern.
     
-    Support --threads=0 to reset the thread limit to the default
-    value (number of available CPU cores). Use UINT32_MAX instead
-    of SIZE_MAX as the maximum in args.c. hardware.c was already
-    expecting uint32_t value.
+    Original bugreport:
+    https://bugzilla.redhat.com/show_bug.cgi?id=1108085
     
-    Cleaned up the output of --help and --long-help.
+    Thanks to Pavel Raiskup for the patch.
 
- src/xz/args.c     | 28 +++++++++++++-----
- src/xz/hardware.c | 86 +++++++++++++++++++++++--------------------------------
- src/xz/hardware.h | 10 +++----
- src/xz/message.c  | 28 +++++++++---------
- src/xz/process.c  | 18 +++++-------
- 5 files changed, 82 insertions(+), 88 deletions(-)
+ src/scripts/xzgrep.in | 15 +++++++++++++--
+ 1 file changed, 13 insertions(+), 2 deletions(-)
 
-commit 071b825b23911a69dd1cd2f8cda004ef8a781fae
+commit 8c19216baccb92d011694590df8a1262da2e980c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-21 17:22:01 +0300
-
-    Support special value "max" where xz and xzdec accept an integer.
-    Don't round the memory usage limit in xzdec --help to avoid
-    an integer overflow and to not give wrong impression that
-    the limit is high enough when it may not actually be.
+Date:   2014-06-09 21:21:24 +0300
 
- src/xz/util.c     | 4 ++++
- src/xzdec/xzdec.c | 6 +++++-
- 2 files changed, 9 insertions(+), 1 deletion(-)
+    xz: Force single-threaded mode when --flush-timeout is used.
 
-commit 03ca67fd37dd43fa7f590de340899cd497c10802
-Author: ABCD <en.abcd@gmail.com>
-Date:   2009-05-20 17:31:18 -0400
+ src/xz/coder.c | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
 
-    Install lzdiff, lzgrep, and lzmore as symlinks
+commit 87f1a24810805187d7bbc8ac5512e7eec307ddf5
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2014-05-25 22:05:39 +0300
     
-    This adds lzdiff, lzgrep, and lzmore to the list of symlinks to install.
-    It also installs symlinks for the manual pages and removes the new
-    symlinks on uninstall.
+    Update THANKS.
 
- src/scripts/Makefile.am | 16 ++++++++++++++--
- 1 file changed, 14 insertions(+), 2 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit a6f43e64128a6da5cd641de1e1e527433b3e5638
+commit da1718f266fcfc091e7bf08aae1bc986d0e6cc6b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-02 16:10:14 +0300
+Date:   2014-05-25 21:45:56 +0300
 
-    Use a GCC-specific #pragma instead of GCC-specific
-    -Wno-uninitialized to silence a bogus warning.
+    liblzma: Use lzma_alloc_zero() in LZ encoder initialization.
 
- configure.ac                  | 13 -------------
- src/liblzma/check/Makefile.am |  5 -----
- src/liblzma/check/sha256.c    |  5 +++++
- 3 files changed, 5 insertions(+), 18 deletions(-)
+    This avoids a memzero() call for a newly-allocated memory,
+    which can be expensive when encoding small streams with
+    an over-sized dictionary.
 
-commit f6ce63ebdb45a857c8949960c83c9580ae888951
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-02 14:46:50 +0300
+    To avoid using lzma_alloc_zero() for memory that doesn't
+    need to be zeroed, lzma_mf.son is now allocated separately,
+    which requires handling it separately in normalize() too.
 
-    Removed --disable-encoder and --disable-decoder. Use the values
-    given to --enable-encoders and --enable-decoders to determine
-    if any encoder or decoder support is wanted.
+    Thanks to Vincenzo Innocente for reporting the problem.
 
- configure.ac | 48 ++++++++----------------------------------------
- 1 file changed, 8 insertions(+), 40 deletions(-)
+ src/liblzma/lz/lz_encoder.c    | 84 ++++++++++++++++++++++--------------------
+ src/liblzma/lz/lz_encoder.h    |  2 +-
+ src/liblzma/lz/lz_encoder_mf.c | 31 +++++++++-------
+ 3 files changed, 62 insertions(+), 55 deletions(-)
 
-commit be06858d5cf8ba46557395035d821dc332f3f830
+commit 28af24e9cf2eb259997c85dce13d4c97b3daa47a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-01 11:28:52 +0300
+Date:   2014-05-25 19:25:57 +0300
 
-    Remove docs that are too outdated to be updated
-    (rewrite will be better).
+    liblzma: Add the internal function lzma_alloc_zero().
 
- doc/liblzma-advanced.txt | 324 -----------------------------------------------
- doc/liblzma-hacking.txt  | 112 ----------------
- doc/liblzma-intro.txt    | 194 ----------------------------
- doc/liblzma-security.txt | 219 --------------------------------
- doc/lzma-intro.txt       | 107 ----------------
- 5 files changed, 956 deletions(-)
+ src/liblzma/common/common.c | 21 +++++++++++++++++++++
+ src/liblzma/common/common.h |  6 ++++++
+ 2 files changed, 27 insertions(+)
 
-commit 0255401e57c96af87c6b159eca28974e79430a82
+commit ed9ac85822c490e34b68c259afa0b385d21d1c40
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-01 11:21:46 +0300
+Date:   2014-05-08 18:03:09 +0300
 
-    Added documentation about the legacy .lzma file format.
+    xz: Fix uint64_t vs. size_t which broke 32-bit build.
+    
+    Thanks to Christian Hesse.
 
- doc/lzma-file-format.txt | 166 +++++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 166 insertions(+)
+ src/xz/coder.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 1496ff437c46f38303e0e94c511ca604b3a11f85
+commit d716acdae3fa7996f9e68a7bac012e6d8d13dd02
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-05-01 11:20:23 +0300
+Date:   2014-05-04 11:09:11 +0300
 
-    Renamed the file format specification to xz-file-format.txt
-    which is the filename used on the WWW.
+    Docs: Update comments to refer to lzma/lzma12.h in example programs.
 
- doc/file-format.txt    | 1127 ------------------------------------------------
- doc/xz-file-format.txt | 1127 ++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 1127 insertions(+), 1127 deletions(-)
+ doc/examples/03_compress_custom.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
 
-commit 21c6b94373d239d7e86bd480fcd558e30391712f
+commit 4d5b7b3fda31241ca86ed35e08e73f776ee916e0
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-04-28 23:08:32 +0300
-
-    Fixed a crash in liblzma.
+Date:   2014-05-04 11:07:17 +0300
     
-    liblzma tries to avoid useless free()/malloc() pairs in
-    initialization when multiple files are handled using the
-    same lzma_stream. This didn't work with filter chains
-    due to comparison of wrong pointers in lzma_next_coder_init(),
-    making liblzma think that no memory reallocation is needed
-    even when it actually is.
+    liblzma: Rename the private API header lzma/lzma.h to lzma/lzma12.h.
     
-    Easy way to trigger this bug is to decompress two files with
-    a single xz command. The first file should have e.g. x86+LZMA2
-    as the filter chain, and the second file just LZMA2.
+    It can be confusing that two header files have the same name.
+    The public API file is still lzma.h.
 
- src/liblzma/common/alone_decoder.c  | 2 +-
- src/liblzma/common/alone_encoder.c  | 4 ++--
- src/liblzma/common/auto_decoder.c   | 2 +-
- src/liblzma/common/block_decoder.c  | 2 +-
- src/liblzma/common/block_encoder.c  | 2 +-
- src/liblzma/common/common.h         | 4 ++--
- src/liblzma/common/easy_encoder.c   | 2 +-
- src/liblzma/common/index_decoder.c  | 2 +-
- src/liblzma/common/index_encoder.c  | 2 +-
- src/liblzma/common/stream_decoder.c | 2 +-
- src/liblzma/common/stream_encoder.c | 2 +-
- 11 files changed, 13 insertions(+), 13 deletions(-)
+ src/liblzma/api/Makefile.am               | 2 +-
+ src/liblzma/api/lzma.h                    | 2 +-
+ src/liblzma/api/lzma/{lzma.h => lzma12.h} | 2 +-
+ 3 files changed, 3 insertions(+), 3 deletions(-)
 
-commit e518d167aa5958e469982f4fb3a24b9b6a2b5d1c
+commit 1555a9c5664afc7893a2b75e9970105437f01ef1
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-04-15 14:13:38 +0300
+Date:   2014-04-25 17:53:42 +0300
 
-    Fix uint32_t -> size_t in ARM and ARM-Thumb filters.
+    Build: Fix the combination of --disable-xzdec --enable-lzmadec.
     
-    On 64-bit system it would have gone into infinite
-    loop if a single input buffer was over 4 GiB (unlikely).
+    In this case "make install" could fail if the man page directory
+    didn't already exist at the destination. If it did exist, a
+    dangling symlink was created there. Now the link is omitted
+    instead. This isn't the best fix but it's better than the old
+    behavior.
 
- src/liblzma/simple/arm.c      | 2 +-
- src/liblzma/simple/armthumb.c | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+ src/xzdec/Makefile.am | 10 +++++++++-
+ 1 file changed, 9 insertions(+), 1 deletion(-)
 
-commit 31decdce041581e57c0d8a407d4795b114ef27ca
+commit 56056571df3377eaa6ae6233b3ccc5d72e81d43d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-04-14 11:48:46 +0300
+Date:   2014-04-25 17:44:26 +0300
 
-    Minor fixes to test files' README.
+    Build: Add --disable-doc to configure.
 
- tests/files/README | 17 +++++++++--------
- 1 file changed, 9 insertions(+), 8 deletions(-)
+ INSTALL      | 6 ++++++
+ Makefile.am  | 2 ++
+ configure.ac | 6 ++++++
+ 3 files changed, 14 insertions(+)
 
-commit 4787d654434891c7df5b43959b0d2873718f06e0
+commit 6de61d8721097a6214810841aa85b08e303ac538
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-04-13 16:36:41 +0300
-
-    Updated history.txt.
+Date:   2014-04-24 18:06:24 +0300
 
- doc/history.txt | 123 ++++++++++++++++++++++++++++++--------------------------
- 1 file changed, 66 insertions(+), 57 deletions(-)
+    Update INSTALL.
 
-commit 2f0bc9cd40f709152a0177c8e585c0757e9af9c9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-04-13 14:49:48 +0300
+    Add a note about failing "make check". The source of
+    the problem should be fixed in libtool (if it really is
+    a libtool bug and not mine) but I'm unable to spend time
+    on that for now. Thanks to Nelson H. F. Beebe for reporting
+    the issue.
 
-    Quick & dirty update to support xz in diff/grep/more scripts.
+    Add a note about a possible need to run "ldconfig" after
+    "make install".
 
- src/scripts/Makefile.am |  38 +++++++++------
- src/scripts/lzdiff      |  67 --------------------------
- src/scripts/lzdiff.1    |  51 --------------------
- src/scripts/lzgrep      | 123 ------------------------------------------------
- src/scripts/lzgrep.1    |  61 ------------------------
- src/scripts/lzmore      |  74 -----------------------------
- src/scripts/lzmore.1    |  55 ----------------------
- src/scripts/xzdiff      |  67 ++++++++++++++++++++++++++
- src/scripts/xzdiff.1    |  58 +++++++++++++++++++++++
- src/scripts/xzgrep      | 123 ++++++++++++++++++++++++++++++++++++++++++++++++
- src/scripts/xzgrep.1    |  77 ++++++++++++++++++++++++++++++
- src/scripts/xzmore      |  74 +++++++++++++++++++++++++++++
- src/scripts/xzmore.1    |  66 ++++++++++++++++++++++++++
- 13 files changed, 489 insertions(+), 445 deletions(-)
+ INSTALL | 25 +++++++++++++++++++++++++
+ 1 file changed, 25 insertions(+)
 
-commit 02ddf09bc3079b3e17297729b9e43f14d407b8fc
+commit 54df428799a8d853639b753d0e6784694d73eb3e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-04-13 11:27:40 +0300
+Date:   2014-04-09 17:26:10 +0300
 
-    Put the interesting parts of XZ Utils into the public domain.
-    Some minor documentation cleanups were made at the same time.
+    xz: Rename a variable to avoid a namespace collision on Solaris.
 
- COPYING                                        | 67 ++++++++++++++++++++------
- ChangeLog                                      |  2 +-
- Doxyfile.in                                    |  8 +--
- Makefile.am                                    | 13 ++---
- autogen.sh                                     |  9 ++++
- configure.ac                                   | 13 ++---
- debug/Makefile.am                              | 13 ++---
- debug/crc32.c                                  | 13 ++---
- debug/full_flush.c                             | 13 ++---
- debug/hex2bin.c                                |  7 ++-
- debug/known_sizes.c                            | 13 ++---
- debug/memusage.c                               | 13 ++---
- debug/repeat.c                                 | 13 ++---
- debug/sync_flush.c                             | 13 ++---
- doc/faq.txt                                    | 38 ++-------------
- lib/Makefile.am                                | 18 +++----
- src/Makefile.am                                | 13 ++---
- src/common/bswap.h                             |  7 ++-
- src/common/cpucores.h                          |  7 ++-
- src/common/integer.h                           |  7 ++-
- src/common/mythread.h                          |  4 +-
- src/common/open_stdxxx.h                       |  7 ++-
- src/common/physmem.h                           |  7 ++-
- src/common/sysdefs.h                           | 13 ++---
- src/liblzma/Makefile.am                        | 13 ++---
- src/liblzma/api/Makefile.am                    | 13 ++---
- src/liblzma/api/lzma.h                         | 38 +++++++++------
- src/liblzma/api/lzma/base.h                    | 20 +++-----
- src/liblzma/api/lzma/bcj.h                     | 18 +++----
- src/liblzma/api/lzma/block.h                   | 18 +++----
- src/liblzma/api/lzma/check.h                   | 18 +++----
- src/liblzma/api/lzma/container.h               | 18 +++----
- src/liblzma/api/lzma/delta.h                   | 18 +++----
- src/liblzma/api/lzma/filter.h                  | 18 +++----
- src/liblzma/api/lzma/index.h                   | 18 +++----
- src/liblzma/api/lzma/index_hash.h              | 22 +++------
- src/liblzma/api/lzma/lzma.h                    | 18 +++----
- src/liblzma/api/lzma/stream_flags.h            | 18 +++----
- src/liblzma/api/lzma/subblock.h                | 18 +++----
- src/liblzma/api/lzma/version.h                 | 18 +++----
- src/liblzma/api/lzma/vli.h                     | 46 ++++++++----------
- src/liblzma/check/Makefile.am                  |  8 ++-
- src/liblzma/check/check.c                      |  7 ++-
- src/liblzma/check/check.h                      |  7 ++-
- src/liblzma/check/crc32_fast.c                 | 30 +++++-------
- src/liblzma/check/crc32_small.c                |  7 ++-
- src/liblzma/check/crc32_table.c                |  7 ++-
- src/liblzma/check/crc32_tablegen.c             |  7 ++-
- src/liblzma/check/crc32_x86.S                  | 21 +++++---
- src/liblzma/check/crc64_fast.c                 | 20 +++-----
- src/liblzma/check/crc64_small.c                |  7 ++-
- src/liblzma/check/crc64_table.c                |  7 ++-
- src/liblzma/check/crc64_tablegen.c             |  7 ++-
- src/liblzma/check/crc64_x86.S                  | 14 ++++--
- src/liblzma/check/crc_macros.h                 |  9 ++--
- src/liblzma/check/sha256.c                     | 23 +++++----
- src/liblzma/common/Makefile.am                 | 13 ++---
- src/liblzma/common/alone_decoder.c             | 13 ++---
- src/liblzma/common/alone_decoder.h             | 13 ++---
- src/liblzma/common/alone_encoder.c             | 13 ++---
- src/liblzma/common/auto_decoder.c              | 13 ++---
- src/liblzma/common/block_buffer_decoder.c      | 13 ++---
- src/liblzma/common/block_buffer_encoder.c      | 13 ++---
- src/liblzma/common/block_decoder.c             | 13 ++---
- src/liblzma/common/block_decoder.h             | 13 ++---
- src/liblzma/common/block_encoder.c             | 13 ++---
- src/liblzma/common/block_encoder.h             | 13 ++---
- src/liblzma/common/block_header_decoder.c      | 13 ++---
- src/liblzma/common/block_header_encoder.c      | 13 ++---
- src/liblzma/common/block_util.c                | 13 ++---
- src/liblzma/common/bsr.h                       |  7 ++-
- src/liblzma/common/chunk_size.c                | 13 ++---
- src/liblzma/common/common.c                    | 13 ++---
- src/liblzma/common/common.h                    | 13 ++---
- src/liblzma/common/easy_buffer_encoder.c       | 13 ++---
- src/liblzma/common/easy_decoder_memusage.c     | 13 ++---
- src/liblzma/common/easy_encoder.c              | 13 ++---
- src/liblzma/common/easy_encoder_memusage.c     | 13 ++---
- src/liblzma/common/easy_preset.c               | 13 ++---
- src/liblzma/common/easy_preset.h               | 13 ++---
- src/liblzma/common/filter_buffer_decoder.c     | 13 ++---
- src/liblzma/common/filter_buffer_encoder.c     | 13 ++---
- src/liblzma/common/filter_common.c             | 13 ++---
- src/liblzma/common/filter_common.h             | 13 ++---
- src/liblzma/common/filter_decoder.c            | 13 ++---
- src/liblzma/common/filter_decoder.h            | 13 ++---
- src/liblzma/common/filter_encoder.c            | 13 ++---
- src/liblzma/common/filter_encoder.h            | 13 ++---
- src/liblzma/common/filter_flags_decoder.c      | 13 ++---
- src/liblzma/common/filter_flags_encoder.c      | 13 ++---
- src/liblzma/common/index.c                     | 13 ++---
- src/liblzma/common/index.h                     | 13 ++---
- src/liblzma/common/index_decoder.c             | 13 ++---
- src/liblzma/common/index_encoder.c             | 13 ++---
- src/liblzma/common/index_encoder.h             | 13 ++---
- src/liblzma/common/index_hash.c                | 13 ++---
- src/liblzma/common/stream_buffer_decoder.c     | 13 ++---
- src/liblzma/common/stream_buffer_encoder.c     | 13 ++---
- src/liblzma/common/stream_decoder.c            | 13 ++---
- src/liblzma/common/stream_decoder.h            | 13 ++---
- src/liblzma/common/stream_encoder.c            | 13 ++---
- src/liblzma/common/stream_encoder.h            | 13 ++---
- src/liblzma/common/stream_flags_common.c       | 13 ++---
- src/liblzma/common/stream_flags_common.h       | 13 ++---
- src/liblzma/common/stream_flags_decoder.c      | 13 ++---
- src/liblzma/common/stream_flags_encoder.c      | 13 ++---
- src/liblzma/common/vli_decoder.c               | 13 ++---
- src/liblzma/common/vli_encoder.c               | 13 ++---
- src/liblzma/common/vli_size.c                  | 13 ++---
- src/liblzma/delta/Makefile.am                  | 13 ++---
- src/liblzma/delta/delta_common.c               | 13 ++---
- src/liblzma/delta/delta_common.h               | 13 ++---
- src/liblzma/delta/delta_decoder.c              | 13 ++---
- src/liblzma/delta/delta_decoder.h              | 13 ++---
- src/liblzma/delta/delta_encoder.c              | 13 ++---
- src/liblzma/delta/delta_encoder.h              | 13 ++---
- src/liblzma/delta/delta_private.h              | 13 ++---
- src/liblzma/lz/Makefile.am                     | 13 ++---
- src/liblzma/lz/lz_decoder.c                    | 17 ++-----
- src/liblzma/lz/lz_decoder.h                    | 17 ++-----
- src/liblzma/lz/lz_encoder.c                    | 17 ++-----
- src/liblzma/lz/lz_encoder.h                    | 17 ++-----
- src/liblzma/lz/lz_encoder_hash.h               | 13 ++---
- src/liblzma/lz/lz_encoder_mf.c                 | 17 ++-----
- src/liblzma/lzma/Makefile.am                   | 13 ++---
- src/liblzma/lzma/fastpos.h                     | 17 ++-----
- src/liblzma/lzma/fastpos_tablegen.c            | 17 ++-----
- src/liblzma/lzma/lzma2_decoder.c               | 17 ++-----
- src/liblzma/lzma/lzma2_decoder.h               | 17 ++-----
- src/liblzma/lzma/lzma2_encoder.c               | 17 ++-----
- src/liblzma/lzma/lzma2_encoder.h               | 17 ++-----
- src/liblzma/lzma/lzma_common.h                 | 17 ++-----
- src/liblzma/lzma/lzma_decoder.c                | 17 ++-----
- src/liblzma/lzma/lzma_decoder.h                | 17 ++-----
- src/liblzma/lzma/lzma_encoder.c                | 17 ++-----
- src/liblzma/lzma/lzma_encoder.h                | 17 ++-----
- src/liblzma/lzma/lzma_encoder_optimum_fast.c   | 13 ++---
- src/liblzma/lzma/lzma_encoder_optimum_normal.c | 13 ++---
- src/liblzma/lzma/lzma_encoder_presets.c        | 13 ++---
- src/liblzma/lzma/lzma_encoder_private.h        | 17 ++-----
- src/liblzma/rangecoder/Makefile.am             | 13 ++---
- src/liblzma/rangecoder/price.h                 | 13 ++---
- src/liblzma/rangecoder/price_tablegen.c        | 16 ++----
- src/liblzma/rangecoder/range_common.h          | 17 ++-----
- src/liblzma/rangecoder/range_decoder.h         | 17 ++-----
- src/liblzma/rangecoder/range_encoder.h         | 17 ++-----
- src/liblzma/simple/Makefile.am                 | 13 ++---
- src/liblzma/simple/arm.c                       | 17 ++-----
- src/liblzma/simple/armthumb.c                  | 17 ++-----
- src/liblzma/simple/ia64.c                      | 17 ++-----
- src/liblzma/simple/powerpc.c                   | 17 ++-----
- src/liblzma/simple/simple_coder.c              | 13 ++---
- src/liblzma/simple/simple_coder.h              | 14 ++----
- src/liblzma/simple/simple_decoder.c            | 13 ++---
- src/liblzma/simple/simple_decoder.h            | 13 ++---
- src/liblzma/simple/simple_encoder.c            | 13 ++---
- src/liblzma/simple/simple_encoder.h            | 13 ++---
- src/liblzma/simple/simple_private.h            | 13 ++---
- src/liblzma/simple/sparc.c                     | 17 ++-----
- src/liblzma/simple/x86.c                       | 17 ++-----
- src/liblzma/subblock/Makefile.am               | 13 ++---
- src/liblzma/subblock/subblock_decoder.c        | 13 ++---
- src/liblzma/subblock/subblock_decoder.h        | 13 ++---
- src/liblzma/subblock/subblock_decoder_helper.c | 13 ++---
- src/liblzma/subblock/subblock_decoder_helper.h | 13 ++---
- src/liblzma/subblock/subblock_encoder.c        | 13 ++---
- src/liblzma/subblock/subblock_encoder.h        | 13 ++---
- src/scripts/Makefile.am                        |  7 +++
- src/xz/Makefile.am                             | 13 ++---
- src/xz/args.c                                  | 13 ++---
- src/xz/args.h                                  | 13 ++---
- src/xz/hardware.c                              | 13 ++---
- src/xz/hardware.h                              | 13 ++---
- src/xz/io.c                                    | 13 ++---
- src/xz/io.h                                    | 13 ++---
- src/xz/list.c                                  | 13 ++---
- src/xz/main.c                                  | 13 ++---
- src/xz/main.h                                  | 13 ++---
- src/xz/message.c                               | 13 ++---
- src/xz/message.h                               | 13 ++---
- src/xz/options.c                               | 13 ++---
- src/xz/options.h                               | 13 ++---
- src/xz/private.h                               | 13 ++---
- src/xz/process.c                               | 13 ++---
- src/xz/process.h                               | 13 ++---
- src/xz/signals.c                               | 13 ++---
- src/xz/signals.h                               | 13 ++---
- src/xz/suffix.c                                | 13 ++---
- src/xz/suffix.h                                | 13 ++---
- src/xz/util.c                                  | 13 ++---
- src/xz/util.h                                  | 13 ++---
- src/xzdec/Makefile.am                          | 13 ++---
- src/xzdec/xzdec.c                              | 13 ++---
- tests/Makefile.am                              | 13 ++---
- tests/bcj_test.c                               |  7 ++-
- tests/create_compress_files.c                  | 13 ++---
- tests/test_block.c                             | 13 ++---
- tests/test_block_header.c                      | 13 ++---
- tests/test_check.c                             | 13 ++---
- tests/test_compress.sh                         | 13 ++---
- tests/test_files.sh                            | 13 ++---
- tests/test_filter_flags.c                      | 13 ++---
- tests/test_index.c                             | 13 ++---
- tests/test_stream_flags.c                      | 13 ++---
- tests/tests.h                                  | 13 ++---
- windows/common.rc                              |  2 +-
- 206 files changed, 868 insertions(+), 2023 deletions(-)
-
-commit e79c42d854657ae7f75613bd80c1a35ff7c525cb
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-04-10 11:17:02 +0300
+    I don't know the details but I have an impression that there's
+    no problem in practice if using GCC since people have built xz
+    with GCC (without patching xz), but renaming the variable cannot
+    hurt either.
 
-    Fix off-by-one in LZ decoder.
+    Thanks to Mark Ashley.
     
-    Fortunately, this bug had no security risk other than accepting
-    some corrupt files as valid.
+ src/xz/signals.c | 12 +++++++-----
+ 1 file changed, 7 insertions(+), 5 deletions(-)
 
- src/liblzma/lz/lz_decoder.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+commit 5876ca27daa1429676b1160007d9688266907f00
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2014-01-29 20:19:41 +0200
 
-commit 94eb9ad46f1fded6d8369cf3d38bb9754c1375af
-Author: Pavel Roskin <proski@gnu.org>
-Date:   2009-03-31 12:15:01 -0400
+    Docs: Add example program for threaded encoding.
 
-    Fix minor typos in README
+    I didn't add -DLZMA_UNSTABLE to Makefile so one has to
+    specify it manually as long as LZMA_UNSTABLE is needed.
 
- README | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
+ doc/examples/04_compress_easy_mt.c | 184 +++++++++++++++++++++++++++++++++++++
+ doc/examples/Makefile              |   3 +-
+ 2 files changed, 186 insertions(+), 1 deletion(-)
 
-commit 9bab5336ebd765ec4e12252f416eefdf04eba750
+commit 9494fb6d0ff41c585326f00aa8f7fe58f8106a5e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-03-31 21:52:51 +0300
-
-    Add a note and work-around instructions to README about
-    problems detecting a C99 compiler when some standard
-    headers are missing.
-
- README | 11 +++++++++++
- 1 file changed, 11 insertions(+)
+Date:   2014-01-29 20:13:51 +0200
 
-commit a0497ff7a06f9350349264fe9b52dfefc6d53ead
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-03-18 16:54:38 +0200
+    liblzma: Fix lzma_mt.preset not working with lzma_stream_encoder_mt().
 
-    Updated THANKS.
+    It read the filter chain from a wrong variable.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+ src/liblzma/common/stream_encoder_mt.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
 
-commit 390e69887fc5e0a108eb41203bed9acd100a3d76
+commit 673a4cb53de3a715685cb1b836da57a3c7dcd43c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-03-18 16:51:41 +0200
+Date:   2014-01-20 11:20:40 +0200
 
-    Fix wrong macro names in lc_cpucores.m4 and cpucores.h.
-    Thanks to Bert Wesarg.
+    liblzma: Fix typo in a comment.
 
- m4/lc_cpucores.m4     | 4 ++--
- src/common/cpucores.h | 4 ++--
- 2 files changed, 4 insertions(+), 4 deletions(-)
+ src/liblzma/api/lzma/block.h | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 0df9299e2478c2a0c62c05b1ae14a85a353e20d6
+commit ad96a871a1470eb76d6233d3890ce9338047b7a3
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-03-01 09:03:08 +0200
+Date:   2014-01-12 19:38:43 +0200
 
-    Test for Linux-specific sysinfo() only on Linux systems.
-    Some other systems have sysinfo() with different semantics.
+    Windows: Add config.h for building liblzma with MSVC 2013.
 
- m4/lc_physmem.m4 | 28 +++++++++++++++++++---------
- 1 file changed, 19 insertions(+), 9 deletions(-)
+    This is for building liblzma. Building xz tool too requires
+    a little more work. Maybe it will be supported, but for most
+    MSVC users it's enough to be able to build liblzma.
 
-commit cf751edfde3ad6e088dc18e0522d31ae38405933
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-03-01 09:00:06 +0200
+    C99 support in MSVC 2013 is almost usable which is a big
+    improvement over earlier versions. It's "almost" because
+    there's a dumb bug that breaks mixed declarations after
+    an "if" statements unless the "if" statement uses braces:
 
-    Added AC_CONFIG_MACRO_DIR to configure.ac.
+    https://connect.microsoft.com/VisualStudio/feedback/details/808650/visual-studio-2013-c99-compiler-bug
+    https://connect.microsoft.com/VisualStudio/feedback/details/808472/c99-support-of-mixed-declarations-and-statements-fails-with-certain-types-and-constructs
 
- configure.ac | 1 +
- 1 file changed, 1 insertion(+)
+    Hopefully it will get fixed. Then liblzma should be
+    compilable with MSVC 2013 without patching.
 
-commit 63df14c57dee7c461717784287056688482a7eb9
+ windows/config.h | 139 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 139 insertions(+)
+
+commit 3d5c090872fab4212b57c290e8ed4d02c78c1737
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-03-01 08:58:41 +0200
+Date:   2014-01-12 17:41:14 +0200
 
-    Fix the Autoconf test for getopt_long replacement.
-    It was broken by e114502b2bc371e4a45449832cb69be036360722.
+    xz: Fix a comment.
 
- m4/getopt.m4 | 4 ++++
- 1 file changed, 4 insertions(+)
+ src/xz/coder.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
 
-commit fd6a380f4eda4f00be5f2aa8d222992cd74a714f
+commit 69fd4e1c932c7975476a0143c86e45d81b60d3f9
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-22 19:07:54 +0200
+Date:   2014-01-12 17:04:33 +0200
 
-    Add a rough explanation of --extreme to output of --help.
+    Windows: Add MSVC defines for inline and restrict keywords.
 
- src/xz/message.c | 4 ++++
- 1 file changed, 4 insertions(+)
+ src/common/sysdefs.h | 10 ++++++++++
+ 1 file changed, 10 insertions(+)
 
-commit 68bf7ac2984d3627369a240ef0491934d53f7899
+commit a19d9e8575ee6647cd9154cf1f20203f1330485f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-22 18:52:49 +0200
-
-    Fixes to progress message handling in xz:
-    
-      - Don't use Windows-specific code on Windows. The old code
-        required at least Windows 2000. Now it should work on
-        Windows 98 and later, and maybe on Windows 95 too.
+Date:   2014-01-12 16:44:52 +0200
     
-      - Use less precision when showing estimated remaining time.
+    liblzma: Avoid C99 compound literal arrays.
     
-      - Fix some small design issues.
+    MSVC 2013 doesn't like them. Maybe they aren't so good
+    for readability either since many aren't used to them.
 
- src/xz/message.c | 483 +++++++++++++++++++++++++++++++++++--------------------
- src/xz/message.h |  28 ++--
- src/xz/process.c |  53 +++---
- 3 files changed, 351 insertions(+), 213 deletions(-)
+ src/liblzma/lzma/lzma_encoder_presets.c | 8 +++++---
+ 1 file changed, 5 insertions(+), 3 deletions(-)
 
-commit 47c2e21f82242f50f18713a27d644c2c94ab3fea
+commit e28528f1c867b2ed4ac91195ad08efb9bb8a6263
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-18 13:00:10 +0200
+Date:   2014-01-12 12:50:30 +0200
+
+    liblzma: Remove a useless C99ism from sha256.c.
 
-    Added files missing from the previous commit.
+    Unsurprisingly it makes no difference in compiled output.
 
- src/liblzma/api/lzma/container.h | 33 +++++++++++++++++++++++++++++++++
- src/liblzma/common/Makefile.am   |  7 ++++++-
- 2 files changed, 39 insertions(+), 1 deletion(-)
+ src/liblzma/check/sha256.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 489a3dbaa0465f04400804e956a1cfbbee3654a2
+commit 5ad1effc45adfb7dabc9a98e79736077e6b7e2d5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-17 10:43:00 +0200
+Date:   2014-01-12 12:17:08 +0200
+
+    xz: Fix use of wrong variable.
 
-    Added lzma_easy_buffer_encode(). Splitted easy.c into small
-    pieces to avoid unneeded dependencies making statically
-    linked applications bigger than needed.
+    Since the only call to suffix_set() uses optarg
+    as the argument, fixing this bug doesn't change
+    the behavior of the program.
 
- dos/Makefile                               |   6 +-
- src/liblzma/common/easy.c                  | 128 -----------------------------
- src/liblzma/common/easy_buffer_encoder.c   |  34 ++++++++
- src/liblzma/common/easy_decoder_memusage.c |  31 +++++++
- src/liblzma/common/easy_encoder.c          |  87 ++++++++++++++++++++
- src/liblzma/common/easy_encoder_memusage.c |  31 +++++++
- src/liblzma/common/easy_preset.c           |  34 ++++++++
- src/liblzma/common/easy_preset.h           |  39 +++++++++
- windows/Makefile                           |   6 +-
- 9 files changed, 266 insertions(+), 130 deletions(-)
+ src/xz/suffix.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 7494816ab08d82f4d6409788825930c4e43cfd0d
+commit 3e62c68d75b5a3fdd46dbb34bb335d73289860d5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-15 15:48:45 +0200
+Date:   2014-01-12 12:11:36 +0200
 
-    Make physmem.h work on old Windows versions.
-    Thanks to Hongbo Ni for the original patch.
+    Fix typos in comments.
 
- src/common/physmem.h | 31 +++++++++++++++++++++++++++----
- 1 file changed, 27 insertions(+), 4 deletions(-)
+ src/common/mythread.h          | 2 +-
+ src/liblzma/check/crc32_fast.c | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit 11ae4ae35fd70182c713f2d914b7cb1143bc76f0
+commit e90ea601fb72867ec04adf456cbe4bf9520fd412
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-14 20:44:52 +0200
+Date:   2013-11-26 18:20:16 +0200
 
-    Fix microsecond vs. nanosecond confusion in my_time().
+    Update THANKS.
 
- src/xz/message.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 3084d662d2646ab7eb58daf0dc32cf3f9a74eec7
+commit b22e94d8d15764416354e04729382a7371ae2c30
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-14 00:45:29 +0200
+Date:   2013-11-26 18:20:09 +0200
 
-    Cleanups to the code that detects the amount of RAM and
-    the number of CPU cores. Added support for using sysinfo()
-    on Linux systems whose libc lacks appropriate sysconf()
-    support (at least dietlibc). The Autoconf macros were
-    split into separate files, and CPU core count detection
-    was moved from hardware.c to cpucores.h. The core count
-    isn't used for anything real for now, so a problematic
-    part in process.c was commented out.
-
- configure.ac          | 89 ++-------------------------------------------------
- m4/lc_cpucores.m4     | 57 +++++++++++++++++++++++++++++++++
- m4/lc_physmem.m4      | 74 ++++++++++++++++++++++++++++++++++++++++++
- src/common/cpucores.h | 52 ++++++++++++++++++++++++++++++
- src/common/physmem.h  | 21 +++++++-----
- src/xz/args.c         |  4 +--
- src/xz/hardware.c     | 50 +++++++++++++----------------
- src/xz/hardware.h     | 11 +++++--
- src/xz/message.c      |  5 +--
- src/xz/process.c      |  2 ++
- 10 files changed, 235 insertions(+), 130 deletions(-)
-
-commit 9c62371eab2706c46b1072f5935e28cb4cd9dca8
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-13 18:23:50 +0200
-
-    Initial port to DOS using DJGPP.
-
- dos/Makefile | 261 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- dos/README   | 113 ++++++++++++++++++++++++++
- dos/config.h | 150 ++++++++++++++++++++++++++++++++++
- 3 files changed, 524 insertions(+)
-
-commit 0dae8b7751d09e9c5a482d5519daaee4800ce203
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-13 18:02:05 +0200
-
-    Windows port: Take advantage of the version number macros.
-    Now the version number is not duplicated in the
-    Windows-specific files anymore.
-
- windows/Makefile  |  2 +-
- windows/common.rc | 16 ++++++++--------
- windows/config.h  | 15 ---------------
- 3 files changed, 9 insertions(+), 24 deletions(-)
-
-commit fdbc0cfa71f7d660855098a609175ba384259529
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-13 18:00:03 +0200
-
-    Changed how the version number is specified in various places.
-    Now configure.ac will get the version number directly from
-    src/liblzma/api/lzma/version.h. The intent is to reduce the
-    number of places where the version number is duplicated. In
-    future, support for displaying Git commit ID may be added too.
+    liblzma: Document the need for block->check for lzma_block_header_decode().
 
- configure.ac                   |  3 +-
- src/liblzma/api/lzma/version.h | 70 ++++++++++++++++++++++++++++++++++++++++--
- src/liblzma/common/common.c    |  2 +-
- src/xz/message.c               |  2 +-
- src/xzdec/xzdec.c              |  2 +-
- version.sh                     | 23 ++++++++++++++
- 6 files changed, 95 insertions(+), 7 deletions(-)
+    Thanks to Tomer Chachamu.
 
-commit 1d924e584b146136989f48c13fff2632896efb3d
+ src/liblzma/api/lzma/block.h | 3 +++
+ 1 file changed, 3 insertions(+)
+
+commit d1cd8b1cb824b72421d1ee370e628024d2fcbec4
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-13 17:30:30 +0200
+Date:   2013-11-12 16:38:57 +0200
 
-    Fix handling of integrity check type in the xz command line tool.
+    xz: Update the man page about --block-size and --block-list.
 
- src/xz/args.c    | 9 ++++++++-
- src/xz/process.c | 4 ++++
- 2 files changed, 12 insertions(+), 1 deletion(-)
+ src/xz/xz.1 | 24 +++++++++++++++---------
+ 1 file changed, 15 insertions(+), 9 deletions(-)
 
-commit 96c46df7deb231ea68a03d8d1da9de4c774e36d8
+commit 76be7c612e6bcc38724488ccc3b8bcb1cfec9f0a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-13 17:29:02 +0200
+Date:   2013-11-12 16:30:53 +0200
 
-    Improve support for DOS-like systems.
-    Here DOS-like means DOS, Windows, and OS/2.
+    Update THANKS.
 
- src/common/physmem.h          | 12 ++++++++++++
- src/common/sysdefs.h          |  4 ++++
- src/liblzma/check/crc32_x86.S |  6 +++---
- src/liblzma/check/crc64_x86.S |  6 +++---
- src/xz/args.c                 | 13 +++++--------
- src/xz/io.c                   | 39 +++++++++++++++++++++++++--------------
- src/xz/main.c                 | 23 +++++++++++++++++++++++
- src/xz/message.c              |  3 +++
- src/xz/suffix.c               |  5 +++++
- src/xzdec/xzdec.c             |  5 +++--
- 10 files changed, 86 insertions(+), 30 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit b6a30ee8c2de60ecd722cd05223e4ba72f822e33
+commit dd750acbe2259d75444ef0f8da2d4bacc90d7afc
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-11 20:02:32 +0200
-
-    Remove dead directories from .gitignore.
-
- .gitignore | 2 --
- 1 file changed, 2 deletions(-)
+Date:   2013-11-12 16:29:48 +0200
 
-commit 1ec5b0027911d94cb6f98892cbc690f818d8a861
-Author: Jim Meyering <jim@meyering.net>
-Date:   2009-02-11 14:45:14 +0100
+    xz: Make --block-list and --block-size work together in single-threaded.
 
-    .gitignore vs. Makefiles
+    Previously, --block-list and --block-size only worked together
+    in threaded mode. Boundaries are specified by --block-list, but
+    --block-size specifies the maximum size for a Block. Now this
+    works in single-threaded mode too.
     
-    How about this for those of us who do srcdir builds?
+    Thanks to James M Leddy for the original patch.
 
- .gitignore | 22 ++++++++++++++++++++++
- 1 file changed, 22 insertions(+)
+ src/xz/coder.c | 90 ++++++++++++++++++++++++++++++++++++++++++++++++----------
+ 1 file changed, 75 insertions(+), 15 deletions(-)
 
-commit 154f5aec2de201c674841de4fcc9804c2a87af07
+commit ae222fe9805d0161d022d75ba8485dab8bf6d7d5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-10 21:48:35 +0200
+Date:   2013-10-26 13:26:14 +0300
 
-    Removed Makefile from .gitignore since not all Makefiles
-    in the repository are generated by Autotools. People
-    should do test builds in a separate build directory anyway.
+    Bump the version number to 5.1.3alpha.
 
- .gitignore | 1 -
- 1 file changed, 1 deletion(-)
+ src/liblzma/api/lzma/version.h | 2 +-
+ src/liblzma/liblzma.map        | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit e605c2663691b0a4c307786aa368d124ea081daa
+commit 2193837a6a597cd3bf4e9ddf49421a5697d8e155
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-10 21:48:05 +0200
+Date:   2013-10-26 13:25:02 +0300
 
-    Added resource files for the Windows build.
+    Update NEWS for 5.1.3alpha.
 
- windows/Makefile   | 37 ++++++++++++++++++++++---------------
- windows/common.rc  | 46 ++++++++++++++++++++++++++++++++++++++++++++++
- windows/liblzma.rc |  5 +++++
- windows/lzmadec.rc |  5 +++++
- windows/xz.rc      |  5 +++++
- windows/xzdec.rc   |  5 +++++
- 6 files changed, 88 insertions(+), 15 deletions(-)
+ NEWS | 35 +++++++++++++++++++++++++++++++++++
+ 1 file changed, 35 insertions(+)
 
-commit a3bbbe05d32b1f7ea9eb98805df4dda2e811b476
+commit ed48e75e2763876173aef8902da407a8eb28854b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-09 14:54:31 +0200
+Date:   2013-10-26 12:47:04 +0300
 
-    Let the user specify custom CFLAGS on the make command
-    line. Previously custom CFLAGS worked only when they were
-    passed to configure.
+    Update TODO.
 
- configure.ac                  | 58 ++++++++++++++++++++++---------------------
- src/liblzma/check/Makefile.am |  2 +-
- 2 files changed, 31 insertions(+), 29 deletions(-)
+ TODO | 4 ----
+ 1 file changed, 4 deletions(-)
 
-commit 53f7598998b1860a69c51243b5d2e34623c6bf60
+commit 841da0352d79a56a44796a4c39163429c9f039a3
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-08 21:35:11 +0200
-
-    Fix aliasing issue in physmem.h.
-
- src/common/physmem.h | 19 ++++++++++---------
- 1 file changed, 10 insertions(+), 9 deletions(-)
+Date:   2013-10-25 22:41:28 +0300
 
-commit 0e27028d74c5c7a8e036ae2a9b8cecb0ac79d3a6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-08 18:24:50 +0200
+    xz: Document behavior of --block-list with threads.
 
-    Add a separate internal function to initialize the CRC32
-    table, which is used also by LZ encoder. This was needed
-    because calling lzma_crc32() and ignoring the result is
-    a no-op due to lzma_attr_pure.
+    This needs to be updated before 5.2.0.
 
- src/liblzma/check/check.h       |  1 +
- src/liblzma/check/crc32_small.c | 10 +++++++++-
- src/liblzma/lz/lz_encoder.c     |  4 ++--
- 3 files changed, 12 insertions(+), 3 deletions(-)
+ src/xz/xz.1 | 24 +++++++++++++++++++++---
+ 1 file changed, 21 insertions(+), 3 deletions(-)
 
-commit ae1ad9af54210c9a2be336b1316532da5071516c
+commit 56feb8665b78c1032aabd53c619c62af51defe64
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-08 18:17:05 +0200
+Date:   2013-10-22 20:03:12 +0300
 
-    Make "xz --force" to write to terminal as the error
-    message suggests.
+    xz: Document --flush-timeout=TIMEOUT on the man page.
 
- src/xz/main.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/xz/xz.1 | 37 ++++++++++++++++++++++++++++++++++++-
+ 1 file changed, 36 insertions(+), 1 deletion(-)
 
-commit 79e25eded48d2fe33f31441ab7a034f902e335f8
+commit ba413da1d5bb3324287cf3174922acd921165971
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-08 10:37:50 +0200
-
-    Support both slash and backslash as path component
-    separator on Windows when parsing argv[0].
+Date:   2013-10-22 19:51:55 +0300
 
- src/xz/args.c | 9 +++++++++
- 1 file changed, 9 insertions(+)
+    xz: Take advantage of LZMA_FULL_BARRIER with --block-list.
 
-commit bc7c7109cc4410055a888c1c70cbd1c9445c4361
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-07 23:18:13 +0200
+    Now if --block-list is used in threaded mode, the encoder
+    won't need to flush at each Block boundary specified via
+    --block-list. This improves performance a lot, making
+    threading helpful with --block-list.
 
-    Omit the wrong and (even if corrected) nowadays useless rm
-    from autogen.sh.
+    The flush timer was reset after LZMA_FULL_FLUSH but since
+    LZMA_FULL_BARRIER doesn't flush, resetting the timer is
+    no longer done.
 
- autogen.sh | 28 ----------------------------
- 1 file changed, 28 deletions(-)
+ src/xz/coder.c | 32 +++++++++++++++-----------------
+ 1 file changed, 15 insertions(+), 17 deletions(-)
 
-commit edfc2031e56f8a2ccda063f02936b3a848d88723
+commit 0cd45fc2bc5537de287a0bc005e2d67467a92148
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-07 21:41:52 +0200
+Date:   2013-10-02 20:05:23 +0300
 
-    Updated THANKS.
+    liblzma: Support LZMA_FULL_FLUSH and _BARRIER in threaded encoder.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+    Now --block-list=SIZES works with in the threaded mode too,
+    although the performance is still bad due to the use of
+    LZMA_FULL_FLUSH instead of the new LZMA_FULL_BARRIER.
+
+ src/liblzma/common/stream_encoder_mt.c | 55 ++++++++++++++++++++++++----------
+ 1 file changed, 39 insertions(+), 16 deletions(-)
 
-commit 880c3309386aac58fc4f3d7ca99bd31bcb1526a3
+commit 97bb38712f414fabecca908af2e38a12570293fd
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-07 21:17:07 +0200
+Date:   2013-10-02 12:55:11 +0300
 
-    Make it easy to choose if command line tools should be
-    linked statically or dynamically against liblzma. The
-    default is still to use static liblzma, but it can now
-    be changed by passing --enable-dynamic to configure.
-    Thanks to Mike Frysinger for the original patch.
+    liblzma: Add LZMA_FULL_BARRIER support to single-threaded encoder.
     
-    Fixed a few minor bugs in configure.ac.
+    In the single-threaded encoder LZMA_FULL_BARRIER is simply
+    an alias for LZMA_FULL_FLUSH.
 
- configure.ac          | 39 +++++++++++++++++++++++++++++++++++++++
- src/xz/Makefile.am    |  8 +++-----
- src/xzdec/Makefile.am |  5 +++--
- 3 files changed, 45 insertions(+), 7 deletions(-)
+ src/liblzma/api/lzma/base.h         | 37 ++++++++++++++++++++++++++++++-------
+ src/liblzma/common/common.c         | 17 +++++++++++++++--
+ src/liblzma/common/common.h         |  7 ++++++-
+ src/liblzma/common/stream_encoder.c |  4 +++-
+ 4 files changed, 54 insertions(+), 11 deletions(-)
 
-commit 3f86532407e4ace3debb62be16035e009b56ca36
-Author: Mike Frysinger <vapier@gentoo.org>
-Date:   2009-02-06 23:38:39 -0500
+commit fef0c6b410c08e581c9178700a4e7599f0895ff9
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2013-09-17 11:57:51 +0300
 
-    add gitignore files
+    liblzma: Add block_buffer_encoder.h into Makefile.inc.
     
-    Signed-off-by: Mike Frysinger <vapier@gentoo.org>
+    This should have been in b465da5988dd59ad98fda10c2e4ea13d0b9c73bc.
 
- .gitignore    | 32 ++++++++++++++++++++++++++++++++
- m4/.gitignore | 35 +++++++++++++++++++++++++++++++++++
- po/.gitignore | 12 ++++++++++++
- 3 files changed, 79 insertions(+)
+ src/liblzma/common/Makefile.inc | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit bd7ca1dad5c146b6217799ffaa230c32d207a3e5
+commit 8083e03291b6d21c0f538163e187b4e8cd5594e4
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-07 17:07:52 +0200
+Date:   2013-09-17 11:55:38 +0300
 
-    Assume 32 MiB of RAM on unsupported operating systems like
-    the comment in hardware.c already said.
+    xz: Add a missing test for TUKLIB_DOSLIKE.
 
- src/xz/hardware.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/xz/file_io.c | 2 ++
+ 1 file changed, 2 insertions(+)
 
-commit d0ab8c1c73ae712adb0d26fbb9da762d99a63618
+commit 6b44b4a775fe29ecc7bcb7996e086e3bc09e5fd0
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-07 16:26:58 +0200
-
-    MinGW support: Don't build fastpos_tablegen.c as part of
-    liblzma. Build both static and dynamic liblzma, and also
-    static and dynamic versions of the command line tools.
+Date:   2013-09-17 11:52:28 +0300
 
- windows/Makefile | 92 ++++++++++++++++++++++++++++++++++++++++++--------------
- windows/README   | 10 ------
- 2 files changed, 69 insertions(+), 33 deletions(-)
+    Add native threading support on Windows.
 
-commit bfd91198e44a52bd9bfe3cd6dcae5edab7c6eb45
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-07 15:55:47 +0200
+    Now liblzma only uses "mythread" functions and types
+    which are defined in mythread.h matching the desired
+    threading method.
 
-    Support LZMA_API_STATIC in assembler files to
-    avoid __declspec(dllexport) equivalent.
+    Before Windows Vista, there is no direct equivalent to
+    pthread condition variables. Since this package doesn't
+    use pthread_cond_broadcast(), pre-Vista threading can
+    still be kept quite simple. The pre-Vista code doesn't
+    use anything that wasn't already available in Windows 95,
+    so the binaries should run even on Windows 95 if someone
+    happens to care.
 
- src/liblzma/check/crc32_x86.S | 4 ++++
- src/liblzma/check/crc64_x86.S | 2 ++
- 2 files changed, 6 insertions(+)
+ INSTALL                                |  41 ++-
+ configure.ac                           | 118 ++++++--
+ src/common/mythread.h                  | 513 ++++++++++++++++++++++++++-------
+ src/liblzma/common/stream_encoder_mt.c |  83 +++---
+ src/xz/coder.c                         |   8 +-
+ windows/README-Windows.txt             |   2 +-
+ windows/build.bash                     |  23 +-
+ 7 files changed, 573 insertions(+), 215 deletions(-)
 
-commit 3306cf3883492720b3c34baa02f4eb4227d91c73
+commit ae0ab74a88d5b9b15845f1d9a24ade4349a54f9f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-07 11:11:50 +0200
-
-    Introduced LZMA_API_STATIC macro, which the applications
-    need to #define when linking against static liblzma on
-    platforms like Windows. Most developers don't need to
-    care about LZMA_API_STATIC at all.
-
- src/liblzma/api/lzma.h      | 31 ++++++++++++++++++++++++-------
- src/liblzma/common/common.h |  2 +-
- 2 files changed, 25 insertions(+), 8 deletions(-)
+Date:   2013-09-11 14:40:35 +0300
 
-commit b719e63c5f4c91d2d5e2ea585d4c055ec3767d0b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-06 16:55:45 +0200
+    Build: Remove a comment about Automake 1.10 from configure.ac.
 
-    Another grammar fix
+    The previous commit supports silent rules and that requires
+    Automake 1.11.
 
- README | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ configure.ac | 2 --
+ 1 file changed, 2 deletions(-)
 
-commit fe5434f940f75fec3611cf9d9edf78c4da8ac760
+commit 72975df6c8c59aaf849138ab3606e8fb6970596a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-06 12:30:23 +0200
+Date:   2013-09-09 20:37:03 +0300
 
-    Grammar fix in README.
+    Build: Create liblzma.pc in a src/liblzma/Makefile.am.
 
- README | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    Previously it was done in configure, but doing that goes
+    against the Autoconf manual. Autoconf requires that it is
+    possible to override e.g. prefix after running configure
+    and that doesn't work correctly if liblzma.pc is created
+    by configure.
 
-commit 3dfa58a9eedf5a0e566452b078801c9cbcf7a245
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-06 10:06:32 +0200
+    A potential downside of this change is that now e.g.
+    libdir in liblzma.pc is a standalone string instead of
+    being defined via ${prefix}, so if one overrides prefix
+    when running pkg-config the libdir won't get the new value.
+    I don't know if this matters in practice.
 
-    Some MSYS installations (e.g. MsysGit) don't include
-    install.exe, so don't rely on it.
+    Thanks to Vincent Torri.
 
- windows/Makefile | 12 +++++++-----
- windows/README   | 11 ++++++-----
- 2 files changed, 13 insertions(+), 10 deletions(-)
+ configure.ac            |  1 -
+ src/liblzma/Makefile.am | 20 ++++++++++++++++++++
+ 2 files changed, 20 insertions(+), 1 deletion(-)
 
-commit 975d8fd72a5148d46b2e1745f7a211cf1dfd9d31
+commit 1c2b6e7e8382ed390f53e140f160488bb2205ecc
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-06 09:13:15 +0200
-
-    Recreated the BCJ test files for x86 and SPARC. The old files
-    were linked with crt*.o, which are copyrighted, and thus the
-    old test files were not in the public domain as a whole. They
-    are freely distributable though, but it is better to be careful
-    and avoid including any copyrighted pieces in the test files.
-    The new files are just compiled and assembled object files,
-    and thus don't contain any copyrighted code.
+Date:   2013-08-04 15:24:09 +0300
 
- tests/bcj_test.c                  |   2 +-
- tests/compress_prepared_bcj_sparc | Bin 6804 -> 1240 bytes
- tests/compress_prepared_bcj_x86   | Bin 4649 -> 1388 bytes
- tests/files/good-1-sparc-lzma2.xz | Bin 2296 -> 612 bytes
- tests/files/good-1-x86-lzma2.xz   | Bin 1936 -> 716 bytes
- 5 files changed, 1 insertion(+), 1 deletion(-)
+    Fix the previous commit which broke the build.
 
-commit 094b1b09a531f0d201ec81f2b07346a995fd80b9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-05 21:21:27 +0200
+    Apparently I didn't even compile-test the previous commit.
 
-    Add the "windows" directory to EXTRA_DIST.
+    Thanks to Christian Hesse.
 
- Makefile.am | 1 +
- 1 file changed, 1 insertion(+)
+ src/common/tuklib_cpucores.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit e1c3412eec7acec7ca3b32c9c828f3147dc65b49
+commit 124eb69c7857f618b4807588c51bc9ba21bf8691
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-05 09:17:51 +0200
+Date:   2013-08-03 13:52:58 +0300
 
-    Added initial experimental makefile for use with MinGW.
+    Windows: Add Windows support to tuklib_cpucores().
 
- windows/Makefile | 253 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
- windows/README   | 164 ++++++++++++++++++++++++++++++++++++
- windows/config.h | 180 +++++++++++++++++++++++++++++++++++++++
- 3 files changed, 597 insertions(+)
+    It is used for Cygwin too. I'm not sure if that is
+    a good or bad idea.
 
-commit 75905a9afc0ee89954ede7d08af70d1148bf0fd9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-05 09:12:57 +0200
+    Thanks to Vincent Torri.
 
-    Various code cleanups the the xz command line tool.
-    It now builds with MinGW.
+ m4/tuklib_cpucores.m4        | 19 +++++++++++++++++--
+ src/common/tuklib_cpucores.c | 13 ++++++++++++-
+ 2 files changed, 29 insertions(+), 3 deletions(-)
 
- src/common/physmem.h |  13 ++++
- src/xz/Makefile.am   |   2 +
- src/xz/args.h        |   8 ---
- src/xz/hardware.h    |  10 +--
- src/xz/io.c          |  93 +++++++++++++++++++-------
- src/xz/io.h          |  12 ++--
- src/xz/main.c        | 132 ++-----------------------------------
- src/xz/main.h        |  22 -------
- src/xz/message.c     |  65 ++++++++++++++++---
- src/xz/message.h     |   6 --
- src/xz/options.h     |   8 ---
- src/xz/private.h     |  18 ++++--
- src/xz/process.h     |  10 +--
- src/xz/signals.c     | 180 +++++++++++++++++++++++++++++++++++++++++++++++++++
- src/xz/signals.h     |  51 +++++++++++++++
- src/xz/suffix.h      |   5 --
- src/xz/util.c        |   5 +-
- src/xz/util.h        |   5 --
- 18 files changed, 399 insertions(+), 246 deletions(-)
+commit eada8a875ce3fd521cb42e4ace2624d3d49c5f35
+Author: Anders F Bjorklund <afb@users.sourceforge.net>
+Date:   2013-08-02 15:59:46 +0200
 
-commit d0c0b9e94e0af59d1d8f7f4829695d6efe19ccfe
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-03 12:15:17 +0200
+    macosx: separate liblzma package
 
-    Another utime() fix.
+ macosx/build.sh | 23 +++++++++++++++--------
+ 1 file changed, 15 insertions(+), 8 deletions(-)
 
- src/xz/io.c | 9 +++++----
- 1 file changed, 5 insertions(+), 4 deletions(-)
+commit be0100d01ca6a75899d051bee00acf17e6dc0c15
+Author: Anders F Bjorklund <afb@users.sourceforge.net>
+Date:   2013-08-02 15:58:44 +0200
 
-commit ccf92a29e8c7234284f1568c1ec0fd7cb98356ca
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-03 10:41:11 +0200
+    macosx: set minimum to leopard
 
-    Fix wrong filename argument for utime() and utimes().
-    This doesn't affect most systems, since most systems
-    have better functions available.
+ macosx/build.sh | 13 ++++++++-----
+ 1 file changed, 8 insertions(+), 5 deletions(-)
 
- src/xz/io.c | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+commit 416729e2d743f4b2fe9fd438eedeb98adce033c3
+Author: Anders F Bjorklund <afb@users.sourceforge.net>
+Date:   2011-08-07 13:13:30 +0200
 
-commit 99c1c2abfae2e87f3c17e929783e6d1bb7a3f302
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-02 21:19:01 +0200
+    move configurables into variables
 
-    Updated the x86 assembler code:
-      - Use call/ret pair to get instruction pointer for PIC.
-      - Use PIC only if PIC or __PIC__ is #defined.
-      - The code should work on MinGW and Darwin in addition
-        to GNU/Linux and Solaris.
-
- configure.ac                  |  6 ----
- src/liblzma/check/crc32_x86.S | 84 ++++++++++++++++++++++++++++++++++++-------
- src/liblzma/check/crc64_x86.S | 82 ++++++++++++++++++++++++++++++++++++------
- 3 files changed, 144 insertions(+), 28 deletions(-)
-
-commit 22a0c6dd940b78cdac2f4a4b4b0e7cc0ac15021f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-02 20:14:03 +0200
-
-    Modify LZMA_API macro so that it works on Windows with
-    other compilers than MinGW. This may hurt readability
-    of the API headers slightly, but I don't know any
-    better way to do this.
-
- src/liblzma/api/lzma.h                     |  6 ++---
- src/liblzma/api/lzma/base.h                | 11 ++++----
- src/liblzma/api/lzma/block.h               | 22 ++++++++--------
- src/liblzma/api/lzma/check.h               | 10 ++++----
- src/liblzma/api/lzma/container.h           | 22 ++++++++--------
- src/liblzma/api/lzma/filter.h              | 28 ++++++++++-----------
- src/liblzma/api/lzma/index.h               | 40 +++++++++++++++---------------
- src/liblzma/api/lzma/index_hash.h          | 10 ++++----
- src/liblzma/api/lzma/lzma.h                |  6 ++---
- src/liblzma/api/lzma/stream_flags.h        | 10 ++++----
- src/liblzma/api/lzma/version.h             |  4 +--
- src/liblzma/api/lzma/vli.h                 |  6 ++---
- src/liblzma/check/check.c                  |  4 +--
- src/liblzma/check/crc32_fast.c             |  2 +-
- src/liblzma/check/crc32_small.c            |  2 +-
- src/liblzma/check/crc64_fast.c             |  2 +-
- src/liblzma/check/crc64_small.c            |  2 +-
- src/liblzma/common/alone_decoder.c         |  2 +-
- src/liblzma/common/alone_encoder.c         |  2 +-
- src/liblzma/common/auto_decoder.c          |  2 +-
- src/liblzma/common/block_buffer_decoder.c  |  2 +-
- src/liblzma/common/block_buffer_encoder.c  |  4 +--
- src/liblzma/common/block_decoder.c         |  2 +-
- src/liblzma/common/block_encoder.c         |  2 +-
- src/liblzma/common/block_header_decoder.c  |  2 +-
- src/liblzma/common/block_header_encoder.c  |  4 +--
- src/liblzma/common/block_util.c            |  6 ++---
- src/liblzma/common/chunk_size.c            |  2 +-
- src/liblzma/common/common.c                | 16 ++++++------
- src/liblzma/common/common.h                |  2 +-
- src/liblzma/common/easy.c                  |  6 ++---
- src/liblzma/common/filter_buffer_decoder.c |  2 +-
- src/liblzma/common/filter_buffer_encoder.c |  2 +-
- src/liblzma/common/filter_decoder.c        |  8 +++---
- src/liblzma/common/filter_encoder.c        | 12 ++++-----
- src/liblzma/common/filter_flags_decoder.c  |  2 +-
- src/liblzma/common/filter_flags_encoder.c  |  4 +--
- src/liblzma/common/index.c                 | 32 ++++++++++++------------
- src/liblzma/common/index_decoder.c         |  4 +--
- src/liblzma/common/index_encoder.c         |  4 +--
- src/liblzma/common/index_hash.c            | 10 ++++----
- src/liblzma/common/stream_buffer_decoder.c |  2 +-
- src/liblzma/common/stream_buffer_encoder.c |  4 +--
- src/liblzma/common/stream_decoder.c        |  2 +-
- src/liblzma/common/stream_encoder.c        |  2 +-
- src/liblzma/common/stream_flags_common.c   |  2 +-
- src/liblzma/common/stream_flags_decoder.c  |  4 +--
- src/liblzma/common/stream_flags_encoder.c  |  4 +--
- src/liblzma/common/vli_decoder.c           |  2 +-
- src/liblzma/common/vli_encoder.c           |  2 +-
- src/liblzma/common/vli_size.c              |  2 +-
- src/liblzma/lz/lz_encoder.c                |  2 +-
- src/liblzma/lzma/lzma_encoder.c            |  2 +-
- src/liblzma/lzma/lzma_encoder_presets.c    |  2 +-
- 54 files changed, 177 insertions(+), 176 deletions(-)
+ macosx/build.sh | 25 ++++++++++++++++++-------
+ 1 file changed, 18 insertions(+), 7 deletions(-)
 
-commit 8dd7b6052e18621e2e6c62f40f762ee88bd3eb65
+commit 16581080e5f29f9a4e49efece21c5bf572323acc
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-01 22:40:35 +0200
+Date:   2013-07-15 14:08:41 +0300
 
-    Fix a bug in lzma_block_buffer_decode(), although this
-    function should be rewritten anyway.
+    Update THANKS.
 
- src/liblzma/common/block_buffer_decoder.c | 8 ++++----
- 1 file changed, 4 insertions(+), 4 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 55fd41431e61fb8178858283d636b6781e33e847
+commit 3e2b198ba37b624efd9c7caee2a435dc986b46c6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-01 22:39:07 +0200
-
-    Added initial version of raw buffer-to-buffer coding
-    functions, and cleaned up filter.h API header a little.
-    May be very buggy, not tested yet.
-
- src/liblzma/api/lzma/filter.h              | 84 +++++++++++++++++++-------
- src/liblzma/common/Makefile.am             |  2 +
- src/liblzma/common/filter_buffer_decoder.c | 94 ++++++++++++++++++++++++++++++
- src/liblzma/common/filter_buffer_encoder.c | 61 +++++++++++++++++++
- 4 files changed, 221 insertions(+), 20 deletions(-)
+Date:   2013-07-15 14:08:02 +0300
 
-commit 3e54ecee5cad30a5ca361a88a99230407abc0699
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-01 00:11:20 +0200
+    Build: Fix the detection of missing CRC32.
 
-    Fix missing newlines in xzdec.c.
+    Thanks to Vincent Torri.
 
- src/xzdec/xzdec.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
+ configure.ac | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit d64ca34f1b6f34e86adefc7f735b4eff8e6d4a35
+commit dee6ad3d5915422bc30a6821efeacaeb8ca8ef00
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-02-01 00:10:07 +0200
-
-    Use __cdecl also for function pointers in liblzma API when
-    on Windows.
+Date:   2013-07-04 14:18:46 +0300
 
- src/liblzma/api/lzma.h      | 18 +++++++++++-------
- src/liblzma/api/lzma/base.h |  4 ++--
- src/liblzma/common/common.h | 18 +++++++-----------
- 3 files changed, 20 insertions(+), 20 deletions(-)
-
-commit 6a2eb54092fc625d59921a607ff68cd1a90aa898
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-31 11:01:48 +0200
-
-    Add LZMA_API to liblzma API headers. It's useful at least
-    on Windows. sysdefs.h no longer #includes lzma.h, so lzma.h
-    has to be #included separately where needed.
-
- src/common/sysdefs.h                |  2 --
- src/liblzma/api/lzma.h              | 17 ++++++++++++++
- src/liblzma/api/lzma/base.h         | 10 ++++----
- src/liblzma/api/lzma/block.h        | 25 +++++++++++---------
- src/liblzma/api/lzma/check.h        | 12 ++++++----
- src/liblzma/api/lzma/container.h    | 23 +++++++++---------
- src/liblzma/api/lzma/filter.h       | 24 +++++++++----------
- src/liblzma/api/lzma/index.h        | 47 +++++++++++++++++++++----------------
- src/liblzma/api/lzma/index_hash.h   | 11 +++++----
- src/liblzma/api/lzma/lzma.h         |  8 ++++---
- src/liblzma/api/lzma/stream_flags.h | 10 ++++----
- src/liblzma/api/lzma/version.h      |  4 ++--
- src/liblzma/api/lzma/vli.h          | 10 ++++----
- src/liblzma/common/common.h         | 13 ++++++++--
- src/xz/private.h                    |  1 +
- src/xzdec/xzdec.c                   |  1 +
- tests/tests.h                       |  1 +
- 17 files changed, 131 insertions(+), 88 deletions(-)
+    xz: Add preliminary support for --flush-timeout=TIMEOUT.
 
-commit d9993fcb4dfc1f93abaf31ae23b3ef1f3123892b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-31 10:13:09 +0200
+    When --flush-timeout=TIMEOUT is used, xz will use
+    LZMA_SYNC_FLUSH if read() would block and at least
+    TIMEOUT milliseconds has elapsed since the previous flush.
 
-    Use _WIN32 instead of WIN32 in xzdec.c to test if compiling on Windows.
+    This can be useful in realtime-like use cases where the
+    data is simultanously decompressed by another process
+    (possibly on a different computer). If new uncompressed
+    input data is produced slowly, without this option xz could
+    buffer the data for a long time until it would become
+    decompressible from the output.
 
- src/xzdec/xzdec.c | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+    If TIMEOUT is 0, the feature is disabled. This is the default.
 
-commit 2dbdc5befb33c3703e4609809101047c67caf343
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-31 10:02:52 +0200
+    This commit affects the compression side. Using xz for
+    the decompression side for the above purpose doesn't work
+    yet so well because there is quite a bit of input and
+    output buffering when decompressing.
 
-    Fix two lines in lzma.h on which the # wasn't at the
-    beginning of the line.
+    The --long-help or man page were not updated yet.
+    The details of this feature may change.
 
- src/liblzma/api/lzma.h | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+ src/xz/args.c    |  7 +++++++
+ src/xz/coder.c   | 46 +++++++++++++++++++++++++++++++++++-----------
+ src/xz/file_io.c | 46 ++++++++++++++++++++++++++++++++++++----------
+ 3 files changed, 78 insertions(+), 21 deletions(-)
 
-commit 4ab760109106dc04f39dd81c97d50f528d1b51c1
+commit fa381acaf9a29a8114e1c0a97de99bab9adb014e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-31 09:55:05 +0200
+Date:   2013-07-04 13:41:03 +0300
 
-    Add support for using liblzma headers in MSVC, which has no
-    stdint.h or inttypes.h.
+    xz: Don't set src_eof=true after an I/O error because it's useless.
 
- src/liblzma/api/lzma.h | 70 +++++++++++++++++++++++++++++++++-----------------
- 1 file changed, 46 insertions(+), 24 deletions(-)
+ src/xz/file_io.c | 3 ---
+ 1 file changed, 3 deletions(-)
 
-commit b2172cf823d3be34cb0246cb4cb32d105e2a34c9
+commit ea00545beace5b950f709ec21e46878e0f448678
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-31 08:49:54 +0200
-
-    Fix # -> ## in a macro in lzma.h.
-
- src/liblzma/api/lzma.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+Date:   2013-07-04 13:25:11 +0300
 
-commit 1aae8698746d3c87a93f8398cdde2de9ba1f7208
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-30 18:50:16 +0200
+    xz: Fix the test when to read more input.
 
-    Updated README.
+    Testing for end of file was no longer correct after full flushing
+    became possible with --block-size=SIZE and --block-list=SIZES.
+    There was no bug in practice though because xz just made a few
+    unneeded zero-byte reads.
 
- README | 30 ++++++++++++++++++++----------
- 1 file changed, 20 insertions(+), 10 deletions(-)
+ src/xz/coder.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
 
-commit f54bcf6f80d585236bc03ce49f7c73e1abaa17eb
+commit 736903c64bef394c06685d79908e397bcb08b88f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-30 00:29:58 +0200
-
-    Remove dangling crc64_init.c.
+Date:   2013-07-04 12:51:57 +0300
 
- src/liblzma/check/crc64_init.c | 55 ------------------------------------------
- 1 file changed, 55 deletions(-)
+    xz: Move some of the timing code into mytime.[hc].
 
-commit 982da7ed314398420c38bf154a8f759d5f18b480
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-28 17:16:38 +0200
+    This switches units from microseconds to milliseconds.
 
-    The .xz file format specification version 1.0.0 is now
-    officially released. The format has been technically the same
-    since 2008-11-19, but now that it is frozen, people can start
-    using it without a fear that the format will break.
+    New clock_gettime(CLOCK_MONOTONIC) will be used if available.
+    There is still a fallback to gettimeofday().
 
- doc/file-format.txt | 84 +++++++++++++++++++++++++++++++----------------------
- 1 file changed, 49 insertions(+), 35 deletions(-)
+ src/xz/Makefile.am |  2 ++
+ src/xz/coder.c     |  5 +++
+ src/xz/message.c   | 54 +++++++++------------------------
+ src/xz/mytime.c    | 89 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ src/xz/mytime.h    | 47 ++++++++++++++++++++++++++++
+ src/xz/private.h   |  1 +
+ 6 files changed, 158 insertions(+), 40 deletions(-)
 
-commit c4683a660b4372156bdaf92f0cdc54a58f95ee6f
+commit 24edf8d807e24ffaa1e793114d94cca3b970027d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-28 08:45:59 +0200
+Date:   2013-07-01 14:35:03 +0300
 
-    Updated THANKS.
+    Update THANKS.
 
  THANKS | 1 +
  1 file changed, 1 insertion(+)
 
-commit 3241317093595db9f79104faafe93cb989c9f858
+commit c0627b3fceacfa1ed162f5f55235360ea26f569a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-28 08:43:26 +0200
+Date:   2013-07-01 14:34:11 +0300
+
+    xz: Silence a warning seen with _FORTIFY_SOURCE=2.
 
-    Fix uninitialized variables in alone_decoder.c. This bug was
-    triggered by the previous commit, since these variables were
-    not used by anything before support for a preset dictionary.
+    Thanks to Christian Hesse.
 
- src/liblzma/common/alone_decoder.c | 2 ++
- 1 file changed, 2 insertions(+)
+ src/xz/file_io.c | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
 
-commit f76e39cf930f888d460b443d18f977ebedea8b2a
+commit 1936718bb38ee394bd89836fdd4eabc0beb02443
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-27 18:36:05 +0200
+Date:   2013-06-30 19:40:11 +0300
 
-    Added initial support for preset dictionary for raw LZMA1
-    and LZMA2. It is not supported by the .xz format or the xz
-    command line tool yet.
+    Update NEWS for 5.0.5.
 
- src/liblzma/lz/lz_decoder.c      | 35 +++++++++++++++++++++++++----------
- src/liblzma/lz/lz_decoder.h      |  9 ++++++++-
- src/liblzma/lz/lz_encoder.c      | 18 ++++++++++++++++--
- src/liblzma/lzma/lzma2_decoder.c |  9 ++++++---
- src/liblzma/lzma/lzma2_encoder.c | 12 +++++++-----
- src/liblzma/lzma/lzma_decoder.c  | 10 ++++++----
- src/liblzma/lzma/lzma_decoder.h  |  2 +-
- src/liblzma/lzma/lzma_encoder.c  |  9 ++++++++-
- 8 files changed, 77 insertions(+), 27 deletions(-)
+ NEWS | 52 ++++++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 52 insertions(+)
 
-commit 449b8c832b26c3633f3bec60095e57d2d3ada1f3
+commit a37ae8b5eb6093a530198f109c6f7a538c80ecf0
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-26 20:09:17 +0200
-
-    Regenerate the CRC tables without trailing blanks.
-
- src/liblzma/check/crc32_table_be.h | 1008 +++++++++++++++++------------------
- src/liblzma/check/crc32_table_le.h | 1008 +++++++++++++++++------------------
- src/liblzma/check/crc64_table_be.h | 1016 ++++++++++++++++++------------------
- src/liblzma/check/crc64_table_le.h | 1016 ++++++++++++++++++------------------
- 4 files changed, 2024 insertions(+), 2024 deletions(-)
+Date:   2013-06-30 18:02:27 +0300
 
-commit 850f7400428dc9c5fd08a2f35a5bd2c9e45aede2
-Author: Jim Meyering <meyering@redhat.com>
-Date:   2009-01-19 21:37:16 +0100
+    Man pages: Use similar syntax for synopsis as in xz.
 
-    remove trailing blanks from all but .xz files
+    The man pages of lzmainfo, xzmore, and xzdec had similar
+    constructs as the man page of xz had before the commit
+    eb6ca9854b8eb9fbf72497c1cf608d6b19d2d494. Eric S. Raymond
+    didn't mention these man pages in his bug report, but
+    it's nice to be consistent.
 
- debug/known_sizes.c                | 2 +-
- extra/scanlzma/scanlzma.c          | 5 ++---
- src/liblzma/check/crc32_tablegen.c | 2 +-
- src/liblzma/check/crc64_tablegen.c | 2 +-
- src/scripts/lzdiff.1               | 4 ++--
- src/scripts/lzmore.1               | 6 +++---
- tests/test_compress.sh             | 4 ++--
- 7 files changed, 12 insertions(+), 13 deletions(-)
+ src/lzmainfo/lzmainfo.1 |  4 ++--
+ src/scripts/xzmore.1    |  6 +++---
+ src/xzdec/xzdec.1       | 10 +++++-----
+ 3 files changed, 10 insertions(+), 10 deletions(-)
 
-commit 667481f1aad34e1ed15738e7913a9c7e256b4cf5
+commit cdba9ddd870ae72fd6219a125662c20ec997f86c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-26 14:34:10 +0200
-
-    Add lzma_block_buffer_decode().
+Date:   2013-06-29 15:59:13 +0300
 
- src/liblzma/api/lzma/block.h              | 41 +++++++++++++++
- src/liblzma/common/Makefile.am            |  1 +
- src/liblzma/common/block_buffer_decoder.c | 87 +++++++++++++++++++++++++++++++
- 3 files changed, 129 insertions(+)
+    xz: Use non-blocking I/O for the output file.
 
-commit 5fb34d8324d3e7e0061df25d0086b64c8726b19d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-26 14:33:28 +0200
+    Now both reading and writing should be without
+    race conditions with signals.
 
-    Add more sanity checks to lzma_stream_buffer_decode().
+    They might still be signal handling issues left.
+    Signals are blocked during many operations to avoid
+    EINTR but it may cause problems e.g. if writing to
+    stderr blocks when trying to display an error message.
 
- src/liblzma/common/stream_buffer_decoder.c | 7 +++++++
- 1 file changed, 7 insertions(+)
+ src/xz/file_io.c | 57 ++++++++++++++++++++++++++++++++++++++++++++++++--------
+ 1 file changed, 49 insertions(+), 8 deletions(-)
 
-commit c129748675a5daa8838df92bde32cc04f6ce61ba
+commit e61a5c95da3fe31281d959e5e842885a8ba2b5bd
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-26 14:33:13 +0200
-
-    Avoid hardcoded constant in easy.c.
-
- src/liblzma/common/easy.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+Date:   2013-06-28 23:56:17 +0300
 
-commit 1859d22d75e072463db74c25bc3f5a7992e5fdf6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-26 13:06:49 +0200
+    xz: Fix return value type in io_write_buf().
 
-    Tiny bit better sanity check in block_util.c
+    It didn't affect the behavior of the code since -1
+    becomes true anyway.
 
- src/liblzma/common/block_util.c | 2 +-
+ src/xz/file_io.c | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 2c5fe958e4bbe9b147b10c255955dfe2827fb8e7
+commit 9dc319eabb34a826f4945f91c71620f14a60e9e2
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-25 01:35:56 +0200
-
-    Fix a dumb bug in Block decoder, which made it return
-    LZMA_DATA_ERROR with valid data. The bug was added in
-    e114502b2bc371e4a45449832cb69be036360722.
+Date:   2013-06-28 23:48:05 +0300
 
- src/liblzma/common/block_decoder.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
+    xz: Use the self-pipe trick to avoid a race condition with signals.
 
-commit c81f13ff29271de7293f8af3d81848b1dcae3d19
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-23 22:27:50 +0200
+    It is possible that a signal to set user_abort arrives right
+    before a blocking system call is made. In this case the call
+    may block until another signal arrives, while the wanted
+    behavior is to make xz clean up and exit as soon as possible.
 
-    Added lzma_stream_buffer_decode() and made minor cleanups.
+    After this commit, the race condition is avoided with the
+    input side which already uses non-blocking I/O. The output
+    side still uses blocking I/O and thus has the race condition.
 
- src/liblzma/api/lzma/block.h               |  3 +-
- src/liblzma/api/lzma/container.h           | 51 ++++++++++++++++-
- src/liblzma/common/Makefile.am             |  1 +
- src/liblzma/common/stream_buffer_decoder.c | 91 ++++++++++++++++++++++++++++++
- 4 files changed, 144 insertions(+), 2 deletions(-)
+ src/xz/file_io.c | 56 ++++++++++++++++++++++++++++++++++++++++++++------------
+ src/xz/file_io.h |  8 ++++++++
+ src/xz/signals.c |  5 +++++
+ 3 files changed, 57 insertions(+), 12 deletions(-)
 
-commit 0b3318661ce749550b8531dfd469639a08930391
+commit 3541bc79d0cfabc0ad155c99bfdad1289f17fec3
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-22 12:53:33 +0200
+Date:   2013-06-28 22:51:02 +0300
 
-    Fix a comment.
+    xz: Use non-blocking I/O for the input file.
 
- src/liblzma/common/common.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/xz/file_io.c | 156 +++++++++++++++++++++++++++++++++++++++----------------
+ 1 file changed, 111 insertions(+), 45 deletions(-)
 
-commit 9ec80355a7212a0a2f8c89d98e51b1d8b4e34eec
+commit 78673a08bed5066c81e8a8e90d20e670c28ecfd5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-20 16:37:27 +0200
-
-    Add some single-call buffer-to-buffer coding functions.
-
- src/liblzma/api/lzma/block.h               |  57 ++++++
- src/liblzma/api/lzma/container.h           |  56 ++++++
- src/liblzma/api/lzma/index.h               |  70 ++++++-
- src/liblzma/common/Makefile.am             |   2 +
- src/liblzma/common/block_buffer_encoder.c  | 305 +++++++++++++++++++++++++++++
- src/liblzma/common/index_decoder.c         |  83 ++++++--
- src/liblzma/common/index_encoder.c         |  59 +++++-
- src/liblzma/common/stream_buffer_encoder.c | 138 +++++++++++++
- tests/test_index.c                         |  24 +++
- 9 files changed, 768 insertions(+), 26 deletions(-)
+Date:   2013-06-28 18:46:13 +0300
 
-commit d8b58d099340f8f4007b24b211ee41a7210c061c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-20 13:45:41 +0200
+    xz: Remove an outdated NetBSD-specific comment.
 
-    Block encoder cleanups
+    Nowadays errno == EFTYPE is documented in open(2).
 
- src/liblzma/common/block_encoder.c | 28 +++++++---------------------
- src/liblzma/common/block_encoder.h | 25 +++++++++++++++++++++++++
- 2 files changed, 32 insertions(+), 21 deletions(-)
+ src/xz/file_io.c | 4 ----
+ 1 file changed, 4 deletions(-)
 
-commit 0c09810cb3635cb575cb54e694d41523e7d0a335
+commit a616fdad34b48b2932ef03fb87309dcc8b829527
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-20 10:35:15 +0200
-
-    Use LZMA_PROG_ERROR in lzma_code() as documented in base.h.
-
- src/liblzma/common/common.c | 24 ++++++++----------------
- 1 file changed, 8 insertions(+), 16 deletions(-)
+Date:   2013-06-28 18:09:47 +0300
 
-commit 2f1a8e8eb898f6c036cde55d153ad348bfab3c00
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-19 22:53:18 +0200
+    xz: Fix error detection of fcntl(fd, F_SETFL, flags) calls.
 
-    Fix handling of non-fatal errors in lzma_code().
+    POSIX says that fcntl(fd, F_SETFL, flags) returns -1 on
+    error and "other than -1" on success. This is how it is
+    documented e.g. on OpenBSD too. On Linux, success with
+    F_SETFL is always 0 (at least accorinding to fcntl(2)
+    from man-pages 3.51).
 
- src/liblzma/common/common.c | 9 ++++++++-
- 1 file changed, 8 insertions(+), 1 deletion(-)
+ src/xz/file_io.c | 8 ++++----
+ 1 file changed, 4 insertions(+), 4 deletions(-)
 
-commit 4810b6bc25087be872960b9dd1d11ff07735dc88
+commit 4a08a6e4c61c65ab763ab314100a6d7a3bb89298
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-19 14:00:33 +0200
-
-    Move some LZMA2 constants to lzma2_encoder.h so that they
-    can be used outside lzma2_encoder.c.
+Date:   2013-06-28 17:36:47 +0300
 
- src/liblzma/lzma/lzma2_encoder.c | 13 -------------
- src/liblzma/lzma/lzma2_encoder.h | 14 ++++++++++++++
- src/liblzma/lzma/lzma_encoder.c  |  3 ++-
- 3 files changed, 16 insertions(+), 14 deletions(-)
+    xz: Fix use of wrong variable in a fcntl() call.
 
-commit 00be5d2e09f9c7a6a8563465ad8b8042866817a4
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-19 13:52:36 +0200
+    Due to a wrong variable name, when writing a sparse file
+    to standard output, *all* file status flags were cleared
+    (to the extent the operating system allowed it) instead of
+    only clearing the O_APPEND flag. In practice this worked
+    fine in the common situations on GNU/Linux, but I didn't
+    check how it behaved elsewhere.
 
-    Remove dead code.
+    The original flags were still restored correctly. I still
+    changed the code to use a separate boolean variable to
+    indicate when the flags should be restored instead of
+    relying on a special value in stdout_flags.
 
- src/liblzma/lzma/lzma_encoder.h | 8 --------
- 1 file changed, 8 deletions(-)
+ src/xz/file_io.c | 24 +++++++++++++-----------
+ 1 file changed, 13 insertions(+), 11 deletions(-)
 
-commit 128586213f77c9bd82b7e9a62927f6d0c3769d85
+commit b790b435daa3351067f80a5973b647f8d55367a2
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-17 14:24:25 +0200
-
-    Beta was supposed to be API stable but I had forgot to rename
-    lzma_memlimit_encoder and lzma_memlimit_decoder to
-    lzma_raw_encoder_memlimit and lzma_raw_decoder_memlimit. :-(
-    Now it is fixed. Hopefully it doesn't cause too much trouble
-    to those who already thought API is stable.
-
- src/liblzma/api/lzma/filter.h       | 4 ++--
- src/liblzma/common/easy.c           | 4 ++--
- src/liblzma/common/filter_common.c  | 2 +-
- src/liblzma/common/filter_common.h  | 2 +-
- src/liblzma/common/filter_decoder.c | 4 ++--
- src/liblzma/common/filter_encoder.c | 4 ++--
- src/liblzma/common/stream_decoder.c | 2 +-
- src/xz/process.c                    | 6 +++---
- 8 files changed, 14 insertions(+), 14 deletions(-)
+Date:   2013-06-28 14:55:37 +0300
 
-commit b056379490be5c584c264a967f0540041a163a1e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-15 14:29:22 +0200
+    xz: Fix assertion related to posix_fadvise().
 
-    Updated THANKS.
+    Input file can be a FIFO or something else that doesn't
+    support posix_fadvise() so don't check the return value
+    even with an assertion. Nothing bad happens if the call
+    to posix_fadvise() fails.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+ src/xz/file_io.c | 10 ++--------
+ 1 file changed, 2 insertions(+), 8 deletions(-)
 
-commit dc8f3be06d54ef6e6cfb5134dd3d25edd08cef89
+commit 84d2da6c9dc252f441deb7626c2522202b005d4d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-15 14:27:32 +0200
-
-    Fixed a bug in 7z2lzma.bash to make it work with .7z files
-    that use something else than 2^n as the dictionary size.
-    Thanks to Dan Shechter for the bug report.
-
- extra/7z2lzma/7z2lzma.bash | 47 +++++++++++++++++++++++-----------------------
- 1 file changed, 24 insertions(+), 23 deletions(-)
+Date:   2013-06-26 13:30:57 +0300
 
-commit 8286a60b8f4bd5accfbc9d229d2204bac31994f2
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2009-01-07 18:41:15 +0200
+    xz: Check the value of lzma_stream_flags.version in --list.
 
-    Use pthread_sigmask() instead of sigprocmask() when pthreads
-    are enabled.
+    It is a no-op for now, but if an old xz version is used
+    together with a newer liblzma that supports something new,
+    then this check becomes important and will stop the old xz
+    from trying to parse files that it won't understand.
 
- src/common/mythread.h | 6 ++++++
- src/xz/main.c         | 4 ++--
- src/xz/private.h      | 1 +
- 3 files changed, 9 insertions(+), 2 deletions(-)
+ src/xz/list.c | 14 ++++++++++++++
+ 1 file changed, 14 insertions(+)
 
-commit 4fd43cb3a906f6da2943f69239ee984c4787c9a9
+commit 9376f5f8f762296f2173d61af9101112c36f38c0
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-31 20:01:00 +0200
-
-    Bumped version to 4.999.8beta right after the release
-    of 4.999.7beta.
+Date:   2013-06-26 12:17:00 +0300
 
- configure.ac                   | 2 +-
- src/liblzma/api/lzma/version.h | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+    Build: Require Automake 1.12 and use serial-tests option.
 
-commit 061748f5932719643cda73383db715167d543c22
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-31 18:59:02 +0200
+    It should actually still work with Automake 1.10 if
+    the serial-tests option is removed. Automake 1.13 started
+    using parallel tests by default and the option to get
+    the old behavior isn't supported before 1.12.
 
-    Disable Subblock filter from test_compress.sh since it is
-    disabled by default in configure.ac.
+    At least for now, parallel tests don't improve anything
+    in XZ Utils but they hide the progress output from
+    test_compress.sh.
 
- tests/test_compress.sh | 22 +++++++++++++---------
- 1 file changed, 13 insertions(+), 9 deletions(-)
+ configure.ac | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
 
-commit 9c45658ddc8bd4a7819ef8547d3e7ccf73203e78
+commit b7e200d7bd0a3c7c171c13ad37d68296d6f73374
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-31 17:44:20 +0200
+Date:   2013-06-23 18:59:13 +0300
 
-    Disable both Subblock encoder and decoder my default,
-    since they are not finished and may have security issues too.
+    Update THANKS.
 
- configure.ac | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit b59f1e98f50694cf6a8f1b342fd878feebdb2f88
+commit 46540e4c10923e363741ff5aab99e79fc0ce6ee8
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-31 17:42:50 +0200
-
-    Update some files in debug directory.
+Date:   2013-06-23 18:57:23 +0300
 
- debug/full_flush.c | 2 --
- debug/memusage.c   | 2 --
- debug/sync_flush.c | 2 --
- 3 files changed, 6 deletions(-)
+    liblzma: Avoid a warning about a shadowed variable.
 
-commit d1d17a40d33a9682424ca37282813492f2cba6d0
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-31 17:41:46 +0200
+    On Mac OS X wait() is declared in <sys/wait.h> that
+    we include one way or other so don't use "wait" as
+    a variable name.
 
-    Prepare for 4.999.7beta release.
+    Thanks to Christian Kujau.
 
- AUTHORS                        |  4 ++--
- README                         | 34 +++++++++++++++++-----------------
- configure.ac                   |  4 ++--
- src/liblzma/api/lzma/version.h |  2 +-
- 4 files changed, 22 insertions(+), 22 deletions(-)
+ src/liblzma/common/stream_encoder_mt.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
 
-commit 88d3e6b0b18e24142b6d3b41dc1b84b00c49fef3
+commit ebb501ec73cecc546c67117dd01b5e33c90bfb4a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-31 17:15:03 +0200
-
-    Cleaned up some comments in the API headers.
-
- src/liblzma/api/lzma/check.h     | 23 +++++++++++------------
- src/liblzma/api/lzma/container.h |  2 +-
- src/liblzma/api/lzma/version.h   |  4 +++-
- 3 files changed, 15 insertions(+), 14 deletions(-)
+Date:   2013-06-23 17:36:47 +0300
 
-commit 322ecf93c961e45a1da8c4a794a7fdacefcd7f40
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-31 16:29:39 +0200
+    xz: Validate Uncompressed Size from Block Header in list.c.
 
-    Renamed lzma_options_simple to lzma_options_bcj in the API.
-    The internal implementation is still using the name "simple".
-    It may need some cleanups, so I look at it later.
+    This affects only "xz -lvv". Normal decompression with xz
+    already detected if Block Header and Index had mismatched
+    Uncompressed Size fields. So this just makes "xz -lvv"
+    show such files as corrupt instead of showing the
+    Uncompressed Size from Index.
 
- src/liblzma/api/Makefile.am         |  2 +-
- src/liblzma/api/lzma.h              |  2 +-
- src/liblzma/api/lzma/bcj.h          | 94 +++++++++++++++++++++++++++++++++++++
- src/liblzma/api/lzma/simple.h       | 94 -------------------------------------
- src/liblzma/simple/simple_coder.c   |  2 +-
- src/liblzma/simple/simple_decoder.c |  4 +-
- src/liblzma/simple/simple_encoder.c |  4 +-
- tests/test_filter_flags.c           |  8 ++--
- 8 files changed, 105 insertions(+), 105 deletions(-)
+ src/xz/list.c | 14 +++++++++++++-
+ 1 file changed, 13 insertions(+), 1 deletion(-)
 
-commit 7eea8bec3abfed883efba66264a1452a1c04f6b0
+commit c09e91dd236d3cabee0fc48312b3dc8cceae41ab
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-31 00:57:27 +0200
+Date:   2013-06-21 22:08:11 +0300
 
-    Fixed missing quoting in configure.ac.
+    Update THANKS.
 
- configure.ac | 38 +++++++++++++++++++-------------------
- 1 file changed, 19 insertions(+), 19 deletions(-)
+ THANKS | 2 ++
+ 1 file changed, 2 insertions(+)
 
-commit 28e75f7086dbe9501d926c370375c69dfb1236ce
+commit eb6ca9854b8eb9fbf72497c1cf608d6b19d2d494
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-31 00:48:23 +0200
-
-    Updated src/liblzma/Makefile.am to use liblzma.pc.in, which
-    should have been in the previous commit.
+Date:   2013-06-21 22:04:45 +0300
 
- src/liblzma/Makefile.am | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+    xz: Make the man page more friendly to doclifter.
 
-commit 7ed9d943b31d3ee9c5fb2387e84a241ba33afe90
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-31 00:30:49 +0200
+    Thanks to Eric S. Raymond.
 
-    Remove lzma_init() and other init functions from liblzma API.
-    Half of developers were already forgetting to use these
-    functions, which could have caused total breakage in some future
-    liblzma version or even now if --enable-small was used. Now
-    liblzma uses pthread_once() to do the initializations unless
-    it has been built with --disable-threads which make these
-    initializations thread-unsafe.
-    
-    When --enable-small isn't used, liblzma currently gets needlessly
-    linked against libpthread (on systems that have it). While it is
-    stupid for now, liblzma will need threads in future anyway, so
-    this stupidity will be temporary only.
-    
-    When --enable-small is used, different code CRC32 and CRC64 is
-    now used than without --enable-small. This made the resulting
-    binary slightly smaller, but the main reason was to clean it up
-    and to handle the lack of lzma_init_check().
-    
-    The pkg-config file lzma.pc was renamed to liblzma.pc. I'm not
-    sure if it works correctly and portably for static linking
-    (Libs.private includes -pthread or other operating system
-    specific flags). Hopefully someone complains if it is bad.
-    
-    lzma_rc_prices[] is now included as a precomputed array even
-    with --enable-small. It's just 128 bytes now that it uses uint8_t
-    instead of uint32_t. Smaller array seemed to be at least as fast
-    as the more bloated uint32_t array on x86; hopefully it's not bad
-    on other architectures.
-
- configure.ac                              | 29 ++++++++--
- src/common/mythread.h                     | 34 ++++++++++++
- src/liblzma/api/Makefile.am               |  1 -
- src/liblzma/api/lzma.h                    |  1 -
- src/liblzma/api/lzma/init.h               | 85 -----------------------------
- src/liblzma/check/Makefile.am             | 29 ++++------
- src/liblzma/check/check.c                 | 10 ++--
- src/liblzma/check/check.h                 | 25 ++++-----
- src/liblzma/check/check_init.c            | 37 -------------
- src/liblzma/check/crc32.c                 | 88 -------------------------------
- src/liblzma/check/crc32_fast.c            | 88 +++++++++++++++++++++++++++++++
- src/liblzma/check/crc32_init.c            | 55 -------------------
- src/liblzma/check/crc32_small.c           | 54 +++++++++++++++++++
- src/liblzma/check/crc32_tablegen.c        | 55 ++++++++++++++++---
- src/liblzma/check/crc64.c                 | 75 --------------------------
- src/liblzma/check/crc64_fast.c            | 75 ++++++++++++++++++++++++++
- src/liblzma/check/crc64_small.c           | 54 +++++++++++++++++++
- src/liblzma/check/crc64_tablegen.c        | 55 ++++++++++++++++---
- src/liblzma/common/Makefile.am            |  3 --
- src/liblzma/common/common.h               |  1 +
- src/liblzma/common/init.c                 | 39 --------------
- src/liblzma/common/init_decoder.c         | 31 -----------
- src/liblzma/common/init_encoder.c         | 40 --------------
- src/liblzma/liblzma.pc.in                 | 12 +++++
- src/liblzma/lz/lz_encoder.c               |  6 +++
- src/liblzma/lzma.pc.in                    | 11 ----
- src/liblzma/rangecoder/Makefile.am        |  8 +--
- src/liblzma/rangecoder/price.h            | 16 +-----
- src/liblzma/rangecoder/price_table.c      |  2 +-
- src/liblzma/rangecoder/price_table_init.c | 55 -------------------
- src/liblzma/rangecoder/price_tablegen.c   | 51 +++++++++++++++---
- src/xz/Makefile.am                        |  5 +-
- src/xz/main.c                             |  3 --
- src/xzdec/xzdec.c                         |  3 --
- tests/test_block_header.c                 |  1 -
- tests/test_check.c                        |  2 -
- tests/test_filter_flags.c                 |  2 -
- tests/test_index.c                        |  2 -
- tests/test_stream_flags.c                 |  2 -
- tests/tests.h                             |  2 +-
- 40 files changed, 519 insertions(+), 628 deletions(-)
+ src/xz/xz.1 | 7 ++++---
+ 1 file changed, 4 insertions(+), 3 deletions(-)
 
-commit 5cda29b5665004fc0f21d0c41d78022a6a559ab2
+commit 0c0a1947e6ad90a0a10b7a5c39f6ab99a0aa5c93
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-27 19:40:31 +0200
-
-    Use 28 MiB as memory usage limit for encoding in test_compress.sh.
+Date:   2013-06-21 21:54:59 +0300
 
- tests/test_compress.sh | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    xz: A couple of man page fixes.
 
-commit 050eb14d29e2537c014662e83599fd8a77f13c45
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-27 19:32:20 +0200
+    Now the interaction of presets and custom filter chains
+    is described correctly. Earlier it contradicted itself.
 
-    Revert a change made in 3b34851de1eaf358cf9268922fa0eeed8278d680
-    that was related to LZMA_MODE_FAST. The original code is slightly
-    faster although it compresses slightly worse. But since it is fast
-    mode, it is better to select the faster version.
+    Thanks to DevHC who reported these issues on IRC to me
+    on 2012-12-14.
 
- src/liblzma/lzma/lzma_encoder_optimum_fast.c | 23 ++++++++---------------
- 1 file changed, 8 insertions(+), 15 deletions(-)
+ src/xz/xz.1 | 35 +++++++++++++++++++++++------------
+ 1 file changed, 23 insertions(+), 12 deletions(-)
 
-commit 4820f10d0f173864f6a2ea7479663b509ac53358
+commit 2fcda89939c903106c429e109083d43d894049e0
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-27 19:30:19 +0200
-
-    Some xz command line tool improvements.
+Date:   2013-06-21 21:50:26 +0300
 
- src/xz/args.c    |  23 +++++-----
- src/xz/message.c |   4 +-
- src/xz/options.c |   2 +-
- src/xz/process.c | 133 +++++++++++++++++++++++++++++++++++++++++++------------
- src/xz/process.h |   3 ++
- 5 files changed, 121 insertions(+), 44 deletions(-)
+    xz: Fix interaction between preset and custom filter chains.
 
-commit e33194e79d8f5ce07cb4aca909b324ae75098f7e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-27 19:27:49 +0200
+    There was somewhat illogical behavior when --extreme was
+    specified and mixed with custom filter chains.
 
-    Bunch of liblzma tweaks, including some API changes.
-    The API and ABI should now be very close to stable,
-    although the code behind it isn't yet.
+    Before this commit, "xz -9 --lzma2 -e" was equivalent
+    to "xz --lzma2". After it is equivalent to "xz -6e"
+    (all earlier preset options get forgotten when a custom
+    filter chain is specified and the default preset is 6
+    to which -e is applied). I find this less illogical.
 
- src/liblzma/api/lzma.h                    |  8 ++--
- src/liblzma/api/lzma/block.h              | 63 ++++++++++++++++++++++++-
- src/liblzma/api/lzma/container.h          | 76 +++++++++++++++----------------
- src/liblzma/api/lzma/lzma.h               | 41 +++++++++--------
- src/liblzma/common/alone_decoder.c        | 36 +++++++--------
- src/liblzma/common/alone_encoder.c        | 22 ++++-----
- src/liblzma/common/auto_decoder.c         |  2 +-
- src/liblzma/common/block_decoder.c        | 54 +++++++++++-----------
- src/liblzma/common/block_decoder.h        |  4 +-
- src/liblzma/common/block_encoder.c        | 37 ++++++++-------
- src/liblzma/common/block_encoder.h        |  4 +-
- src/liblzma/common/block_header_decoder.c | 41 +++++++++--------
- src/liblzma/common/block_header_encoder.c | 51 ++++++++++-----------
- src/liblzma/common/block_util.c           |  3 +-
- src/liblzma/common/easy.c                 | 45 ++++++------------
- src/liblzma/common/stream_decoder.c       |  3 +-
- src/liblzma/common/stream_decoder.h       |  2 +-
- src/liblzma/common/stream_encoder.c       |  3 +-
- src/liblzma/common/stream_encoder.h       |  2 +-
- src/liblzma/common/stream_flags_decoder.c |  2 +-
- src/liblzma/common/stream_flags_encoder.c |  2 +-
- src/liblzma/lzma/lzma_encoder.c           |  2 +-
- src/liblzma/lzma/lzma_encoder_presets.c   | 53 +++++++--------------
- 23 files changed, 294 insertions(+), 262 deletions(-)
+    This also affects the meaning of "xz -9e --lzma2 -7".
+    Earlier it was equivalent to "xz -7e" (the -e specified
+    before a custom filter chain wasn't forgotten). Now it
+    is "xz -7". Note that "xz -7e" still is the same as "xz -e7".
 
-commit 4d00652e75dd2736aedc3a3a8baff3dd0ea38074
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-18 13:42:52 +0200
+    Hopefully very few cared about this in the first place,
+    so pretty much no one should even notice this change.
 
-    Updated Makefile.am that was missing from the previous commit.
+    Thanks to Conley Moorhous.
 
- src/liblzma/common/Makefile.am | 1 -
- 1 file changed, 1 deletion(-)
+ src/xz/coder.c | 35 +++++++++++++++++++++--------------
+ 1 file changed, 21 insertions(+), 14 deletions(-)
 
-commit 634636fa56ccee6e744f78b0abed76c8940f2f8f
+commit 97379c5ea758da3f8b0bc444d5f7fa43753ce610
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-17 21:49:53 +0200
+Date:   2013-04-27 22:07:46 +0300
 
-    Remove the alignment functions for now. Maybe they will
-    be added back in some form later, but the current version
-    wasn't modular, so it would need fixing anyway.
+    Build: Use -Wvla with GCC if supported.
 
- src/liblzma/api/Makefile.am      |   1 -
- src/liblzma/api/lzma.h           |   1 -
- src/liblzma/api/lzma/alignment.h |  60 ---------------------
- src/liblzma/common/alignment.c   | 114 ---------------------------------------
- 4 files changed, 176 deletions(-)
+    Variable-length arrays are mandatory in C99 but optional in C11.
+    The code doesn't currently use any VLAs and it shouldn't in the
+    future either to stay compatible with C11 without requiring any
+    optional C11 features.
 
-commit 4fed98417d1687f5eccccb42a133fde3ec81216a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-17 20:11:23 +0200
+ configure.ac | 1 +
+ 1 file changed, 1 insertion(+)
 
-    xz message handling improvements
+commit 8957c58609d3987c58aa72b96c436cf565cc4917
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2013-04-15 19:29:09 +0300
 
- src/xz/message.c | 125 ++++++++++++++++++++++++++++++++++++++++++++++++++-----
- src/xz/message.h |   7 +++-
- src/xz/process.c |  28 ++++++++++++-
- 3 files changed, 146 insertions(+), 14 deletions(-)
+    xzdec: Improve the --help message.
 
-commit 653e457e3756ef35e5d1b2be3523b3e4b1e9ee4d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-15 23:26:43 +0200
+    The options are now ordered in the same order as in xz's help
+    message.
 
-    Fix a dumb bug in .lzma decoder which was introduced in
-    the previous commit. (Probably the previous commit has
-    other bugs too, it wasn't tested.)
+    Descriptions were added to the options that are ignored.
+    I left them in parenthesis even if it looks a bit weird
+    because I find it easier to spot the ignored vs. non-ignored
+    options from the list that way.
 
- src/liblzma/common/alone_decoder.c | 29 ++++++++++++++---------------
- 1 file changed, 14 insertions(+), 15 deletions(-)
+ src/xzdec/xzdec.c | 10 +++++-----
+ 1 file changed, 5 insertions(+), 5 deletions(-)
 
-commit 671a5adf1e844bfdd6fd327016c3c28694493158
+commit ed886e1a92534a24401d0e99c11f1dcff3b5220a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-15 19:39:13 +0200
+Date:   2013-04-05 19:25:40 +0300
+
+    Update THANKS.
 
-    Bunch of liblzma API cleanups and fixes.
+ THANKS | 2 ++
+ 1 file changed, 2 insertions(+)
 
- src/liblzma/api/lzma.h              | 122 +++++++++++----------
- src/liblzma/api/lzma/base.h         | 174 ++++++++++++++++++-----------
- src/liblzma/api/lzma/block.h        | 211 +++++++++++++++++++++++-------------
- src/liblzma/api/lzma/check.h        |  28 ++---
- src/liblzma/api/lzma/container.h    | 155 +++++++++++++-------------
- src/liblzma/api/lzma/delta.h        |  12 +-
- src/liblzma/api/lzma/filter.h       |  27 +++--
- src/liblzma/api/lzma/index.h        |  97 ++++++++++++++---
- src/liblzma/api/lzma/index_hash.h   |  26 +++--
- src/liblzma/api/lzma/init.h         |   2 +-
- src/liblzma/api/lzma/lzma.h         |  12 +-
- src/liblzma/api/lzma/simple.h       |   4 +-
- src/liblzma/api/lzma/stream_flags.h |  46 +++++---
- src/liblzma/api/lzma/version.h      |   6 +-
- src/liblzma/api/lzma/vli.h          |  17 ++-
- src/liblzma/common/alone_decoder.c  |  47 +++++---
- src/liblzma/common/auto_decoder.c   |  29 +++++
- src/liblzma/common/block_util.c     |  52 +++++----
- src/liblzma/common/common.c         |  58 ++++++++++
- src/liblzma/common/common.h         |   9 +-
- src/liblzma/common/easy.c           |  33 ++++--
- src/liblzma/common/filter_common.c  |   2 +-
- src/liblzma/common/index.c          |  11 ++
- src/liblzma/common/index_decoder.c  |  46 ++++++--
- src/liblzma/common/stream_decoder.c |  47 ++++++--
- src/liblzma/lzma/lzma2_encoder.c    |   6 +-
- tests/test_index.c                  |  10 +-
- 27 files changed, 863 insertions(+), 426 deletions(-)
+commit 5019413a055ce29e660dbbf15e02443cb5a26c59
+Author: Jeff Bastian <jbastian@redhat.com>
+Date:   2013-04-03 13:59:17 +0200
 
-commit 17781c2c20fd77029cb32e77792889f2f211d69d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-15 14:26:52 +0200
+    xzgrep: make the '-h' option to be --no-filename equivalent
 
-    The LZMA2 decoder fix introduced a bug to LZ decoder,
-    which made LZ decoder return too early after dictionary
-    reset. This fixes it.
+    * src/scripts/xzgrep.in: Accept the '-h' option in argument parsing.
 
- src/liblzma/lz/lz_decoder.c | 33 +++++++++++++++++++++++----------
- 1 file changed, 23 insertions(+), 10 deletions(-)
+ src/scripts/xzgrep.in | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit f9f2d1e74398500724041f7fb3c38db35ad8c8d8
+commit 5ea900cb5ad862bca81316729f92357c1fc040ce
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-15 11:20:22 +0200
+Date:   2013-03-23 22:25:15 +0200
 
-    Added two new test files.
+    liblzma: Be less picky in lzma_alone_decoder().
+    
+    To avoid false positives when detecting .lzma files,
+    rare values in dictionary size and uncompressed size fields
+    were rejected. They will still be rejected if .lzma files
+    are decoded with lzma_auto_decoder(), but when using
+    lzma_alone_decoder() directly, such files will now be accepted.
+    Hopefully this is an OK compromise.
 
- tests/files/README            |   7 +++++++
- tests/files/bad-1-lzma2-8.xz  | Bin 0 -> 464 bytes
- tests/files/good-1-lzma2-4.xz | Bin 0 -> 464 bytes
- 3 files changed, 7 insertions(+)
+    This doesn't affect xz because xz still has its own file
+    format detection code. This does affect lzmadec though.
+    So after this commit lzmadec will accept files that xz or
+    xz-emulating-lzma doesn't.
 
-commit ff7fb2c605bccc411069e07b9f11fb957aea2ddf
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-15 10:01:59 +0200
+    NOTE: lzma_alone_decoder() still won't decode all .lzma files
+    because liblzma's LZMA decoder doesn't support lc + lp > 4.
 
-    Fix data corruption in LZMA2 decoder.
+    Reported here:
+    http://sourceforge.net/projects/lzmautils/forums/forum/708858/topic/7068827
 
- src/liblzma/lz/lz_decoder.c      | 17 ++++++++++++++++-
- src/liblzma/lz/lz_decoder.h      |  8 +++++---
- src/liblzma/lzma/lzma2_decoder.c | 15 +++++++++++----
- 3 files changed, 32 insertions(+), 8 deletions(-)
+ src/liblzma/common/alone_decoder.c | 22 ++++++++++++++--------
+ src/liblzma/common/alone_decoder.h |  5 +++--
+ src/liblzma/common/auto_decoder.c  |  2 +-
+ 3 files changed, 18 insertions(+), 11 deletions(-)
 
-commit 1ceebcf7e1bd30b95125f0ad67a09fdb6215d613
+commit bb117fffa84604b6e3811b068c80db82bf7f7b05
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-13 00:54:11 +0200
+Date:   2013-03-23 21:55:13 +0200
+
+    liblzma: Use lzma_block_buffer_bound64() in threaded encoder.
 
-    Name the package "xz" in configure.ac.
+    Now it uses lzma_block_uncomp_encode() if the data doesn't
+    fit into the space calculated by lzma_block_buffer_bound64().
 
- configure.ac | 11 ++++-------
- 1 file changed, 4 insertions(+), 7 deletions(-)
+ src/liblzma/common/stream_encoder_mt.c | 66 +++++++++++++++++++++++++---------
+ 1 file changed, 50 insertions(+), 16 deletions(-)
 
-commit a94bf00d0af9b423851905b031be5a645a657820
+commit e572e123b55b29527e54ce5f0807f115481d78b9
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-12 22:43:21 +0200
+Date:   2013-03-23 21:51:38 +0200
 
-    Some adjustments to GCC warning flags. The important change
-    is the removal of -pedantic. It messes up -Werror (which I
-    really want to keep so that I don't miss any warnings) with
-    printf format strings that are in POSIX but not in C99.
+    liblzma: Fix another deadlock in the threaded encoder.
 
- configure.ac | 8 +++++---
- 1 file changed, 5 insertions(+), 3 deletions(-)
+    This race condition could cause a deadlock if lzma_end() was
+    called before finishing the encoding. This can happen with
+    xz with debugging enabled (non-debugging version doesn't
+    call lzma_end() before exiting).
+
+ src/liblzma/common/stream_encoder_mt.c | 9 ++++++---
+ 1 file changed, 6 insertions(+), 3 deletions(-)
 
-commit 8582d392baacd2cdac07ca60041f8c661323676d
+commit b465da5988dd59ad98fda10c2e4ea13d0b9c73bc
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-10 01:31:00 +0200
+Date:   2013-03-23 19:17:33 +0200
 
-    Remove obsolete comment.
+    liblzma: Add lzma_block_uncomp_encode().
 
- src/xz/message.c | 1 -
- 1 file changed, 1 deletion(-)
+    This also adds a new internal function
+    lzma_block_buffer_bound64() which is similar to
+    lzma_block_buffer_bound() but uses uint64_t instead
+    of size_t.
 
-commit b1ae6dd731ea3636c3c2bfc7aefa71457d3328f1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-10 01:27:15 +0200
+ src/liblzma/api/lzma/block.h              | 18 ++++++
+ src/liblzma/common/block_buffer_encoder.c | 94 +++++++++++++++++++++----------
+ src/liblzma/common/block_buffer_encoder.h | 24 ++++++++
+ src/liblzma/liblzma.map                   |  1 +
+ 4 files changed, 106 insertions(+), 31 deletions(-)
 
-    Use "decompression" consistently in --long-help.
+commit 9e6dabcf22ef4679f4faaae15ebd5b137ae2fad1
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2013-03-05 19:14:50 +0200
 
- src/xz/message.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    Avoid unneeded use of awk in xzless.
 
-commit 1ea9e7f15afd5d3981e2432710e932320597bca9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-10 01:23:58 +0200
+    Use "read" instead of "awk" in xzless to get the version
+    number of "less". The need for awk was introduced in
+    the commit db5c1817fabf7cbb9e4087b1576eb26f0747338e.
 
-    Added preset=NUM to --lzma1 and --lzma2. This makes it easy
-    to take a preset as a template and modify it a little.
+    Thanks to Ariel P for the patch.
 
- src/xz/message.c | 1 +
- src/xz/options.c | 8 ++++++++
- 2 files changed, 9 insertions(+)
+ src/scripts/xzless.in | 3 +--
+ 1 file changed, 1 insertion(+), 2 deletions(-)
 
-commit bceb3918dbb21f34976bfdd4c171a81319de71f7
+commit e7b424d267a34803db8d92a3515528be2ed45abd
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-09 17:43:31 +0200
-
-    Put the file format specification into the public domain.
-    Same will be done to the actual code later.
+Date:   2012-12-14 20:13:32 +0200
 
- doc/file-format.txt | 24 +++++++++---------------
- 1 file changed, 9 insertions(+), 15 deletions(-)
+    Make the progress indicator smooth in threaded mode.
 
-commit 6efa2d80d46a38861016f41f0eb6fa2ec9260fe6
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-09 17:41:49 +0200
+    This adds lzma_get_progress() to liblzma and takes advantage
+    of it in xz.
 
-    Make the memusage functions of LZMA1 and LZMA2 encoders
-    to validate the filter options. Add missing validation
-    to LZMA2 encoder when options are changed in the middle
-    of encoding.
+    lzma_get_progress() collects progress information from
+    the thread-specific structures so that fairly accurate
+    progress information is available to applications. Adding
+    a new function seemed to be a better way than making the
+    information directly available in lzma_stream (like total_in
+    and total_out are) because collecting the information requires
+    locking mutexes. It's waste of time to do it more often than
+    the up to date information is actually needed by an application.
 
- src/liblzma/lzma/lzma2_encoder.c |  5 ++++-
- src/liblzma/lzma/lzma_encoder.c  | 44 +++++++++++++++++++++++++++-------------
- src/liblzma/lzma/lzma_encoder.h  |  2 +-
- 3 files changed, 35 insertions(+), 16 deletions(-)
+ src/liblzma/api/lzma/base.h            | 22 +++++++++-
+ src/liblzma/common/common.c            | 16 +++++++
+ src/liblzma/common/common.h            |  6 +++
+ src/liblzma/common/stream_encoder_mt.c | 77 +++++++++++++++++++++++++++++++---
+ src/liblzma/liblzma.map                |  1 +
+ src/xz/message.c                       | 20 +++++----
+ 6 files changed, 129 insertions(+), 13 deletions(-)
 
-commit f20a03206b71ff01b827bb7a932411d6a6a4e06a
+commit 2ebbb994e367f55f2561aa7c9e7451703c171f2f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-09 10:36:24 +0200
+Date:   2012-12-14 11:01:41 +0200
 
-    Updated THANKS.
+    liblzma: Fix mythread_sync for nested locking.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+ src/common/mythread.h | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
 
-commit ef7890d56453dca1aeb2e12db29b7e418d93dde4
+commit 4c7e28705f6de418d19cc77324ef301f996e01ff
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-01 23:04:12 +0200
-
-    In command line tool, take advantage of memusage calculation's
-    ability to also validate the filter chain and options (not
-    implemented yet for all filters).
+Date:   2012-12-13 21:05:36 +0200
 
- src/xz/process.c | 8 ++++----
- 1 file changed, 4 insertions(+), 4 deletions(-)
+    xz: Mention --threads in --help.
 
-commit ccd57afa09e332d664d6d6a7498702791ea5f659
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-01 22:59:28 +0200
+    Thanks to Olivier Delhomme for pointing out that this
+    was still missing.
 
-    Validate the filter chain before checking filter-specific
-    memory usage.
+ src/xz/message.c | 4 ++++
+ 1 file changed, 4 insertions(+)
 
- src/liblzma/common/filter_common.c | 14 ++++++++++----
- 1 file changed, 10 insertions(+), 4 deletions(-)
+commit db5c1817fabf7cbb9e4087b1576eb26f0747338e
+Author: Jonathan Nieder <jrnieder@gmail.com>
+Date:   2012-11-19 00:10:10 -0800
 
-commit c596fda40b62fe1683d0ac34d0c673dcaae2aa15
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-01 22:58:22 +0200
+    xzless: Make "less -V" parsing more robust
 
-    Make the memusage functions of LZMA1 and LZMA2 decoders
-    to validate the filter options.
+    In v4.999.9beta~30 (xzless: Support compressed standard input,
+    2009-08-09), xzless learned to parse ‘less -V’ output to figure out
+    whether less is new enough to handle $LESSOPEN settings starting
+    with “|-”.  That worked well for a while, but the version string from
+    ‘less’ versions 448 (June, 2012) is misparsed, producing a warning:
 
- src/liblzma/lzma/lzma2_decoder.c |  7 ++-----
- src/liblzma/lzma/lzma_decoder.c  | 14 ++++++++++----
- src/liblzma/lzma/lzma_decoder.h  |  5 +++++
- 3 files changed, 17 insertions(+), 9 deletions(-)
+            $ xzless /tmp/test.xz; echo $?
+            /usr/bin/xzless: line 49: test: 456 (GNU regular expressions): \
+            integer expression expected
+            0
 
-commit c58f469be5bb9b0bdab825c6687445fd553f4f3a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-01 22:55:18 +0200
+    More precisely, modern ‘less’ lists the regexp implementation along
+    with its version number, and xzless passes the entire version number
+    with attached parenthetical phrase as a number to "test $a -gt $b",
+    producing the above confusing message.
 
-    Added the changes for Delta filter that should have been
-    part of 656ec87882ee74b192c4ea4a233a235eca7b04d4.
+            $ less-444 -V | head -1
+            less 444
+            $ less -V | head -1
+            less 456 (no regular expressions)
 
- src/liblzma/common/filter_decoder.c | 2 +-
- src/liblzma/common/filter_encoder.c | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+    So relax the pattern matched --- instead of expecting "less <number>",
+    look for a line of the form "less <number>[ (extra parenthetical)]".
+    While at it, improve the behavior when no matching line is found ---
+    instead of producing a cryptic message, we can fall back on a LESSPIPE
+    setting that is supported by all versions of ‘less’.
 
-commit cd708015202dbf7585b84a8781462a20c42a324b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-01 22:50:28 +0200
+    The implementation uses "awk" for simplicity.  Hopefully that’s
+    portable enough.
 
-    LZMA2 decoder cleanups. Make it require new LZMA properties
-    also in the first LZMA chunk after a dictionary reset in
-    uncompressed chunk.
+    Reported-by: Jörg-Volker Peetz <jvpeetz@web.de>
+    Signed-off-by: Jonathan Nieder <jrnieder@gmail.com>
 
- src/liblzma/lzma/lzma2_decoder.c | 95 +++++++++++++++++-----------------------
- 1 file changed, 41 insertions(+), 54 deletions(-)
+ src/scripts/xzless.in | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
 
-commit 656ec87882ee74b192c4ea4a233a235eca7b04d4
+commit 65536214a31ecd33b6b03b68a351fb597d3703d6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-12-01 16:30:11 +0200
+Date:   2012-10-03 15:54:24 +0300
 
-    Added lzma_delta_coder_memusage() which also validates
-    the options.
+    xz: Fix the note about --rsyncable on the man page.
 
- src/liblzma/delta/Makefile.am     |  3 ++-
- src/liblzma/delta/delta_common.c  | 28 ++++++++++++++++++-------
- src/liblzma/delta/delta_common.h  | 19 +----------------
- src/liblzma/delta/delta_decoder.c |  2 +-
- src/liblzma/delta/delta_decoder.h |  2 +-
- src/liblzma/delta/delta_encoder.c | 14 ++++---------
- src/liblzma/delta/delta_encoder.h |  2 +-
- src/liblzma/delta/delta_private.h | 44 +++++++++++++++++++++++++++++++++++++++
- 8 files changed, 75 insertions(+), 39 deletions(-)
+ src/xz/xz.1 | 17 +++++++++--------
+ 1 file changed, 9 insertions(+), 8 deletions(-)
 
-commit 691a9155b7a28882baf37e9d1e969e32e91dbc7a
+commit 3d93b6354927247a1569caf22ad27b07e97ee904
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-29 10:03:49 +0200
+Date:   2012-09-28 20:11:09 +0300
 
-    Automake includes the m4 directory, so don't add it in
-    Makefile.am separately.
+    xz: Improve handling of failed realloc in xrealloc.
     
-    Updated THANKS.
+    Thanks to Jim Meyering.
 
- Makefile.am | 1 -
- THANKS      | 1 +
- 2 files changed, 1 insertion(+), 1 deletion(-)
+ src/xz/util.c | 14 ++++++++++++--
+ 1 file changed, 12 insertions(+), 2 deletions(-)
 
-commit c7007ddf06ac2b0e018d71d281c21b99f16e7ae0
+commit ab225620664e235637833be2329935f9d290ba80
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-28 12:00:48 +0200
-
-    Tested using COLUMNS environment variable to avoid broken
-    progress indicator but since COLUMNS isn't usually available,
-    the code was left commented out.
-
- src/xz/message.c | 14 +++++++++-----
- 1 file changed, 9 insertions(+), 5 deletions(-)
+Date:   2012-08-24 16:27:31 +0300
 
-commit ae65dcfde27014e4d811e1a1308aa5d0fe8debbd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-27 19:28:59 +0200
+    A few typo fixes to comments and the xz man page.
 
-    Cleanups to message.c.
+    Thanks to Jim Meyering.
 
- src/xz/message.c | 47 ++++++++++++++++++-----------------------------
- 1 file changed, 18 insertions(+), 29 deletions(-)
+ configure.ac               | 2 +-
+ src/liblzma/check/sha256.c | 1 -
+ src/xz/xz.1                | 4 ++--
+ 3 files changed, 3 insertions(+), 4 deletions(-)
 
-commit a8368b75cdcd5427299001cc42839287f27b244d
+commit f3c1ec69d910175ffd431fd82968dd35cec806ed
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-25 02:37:47 +0200
+Date:   2012-08-13 21:40:09 +0300
 
-    Remove the nowadays unneeded memory limitting malloc() wrapper.
+    xz: Add a warning to --help about alpha and beta versions.
 
- src/liblzma/api/Makefile.am         |   1 -
- src/liblzma/api/lzma.h              |   1 -
- src/liblzma/api/lzma/memlimit.h     | 207 --------------------------
- src/liblzma/common/Makefile.am      |   1 -
- src/liblzma/common/memory_limiter.c | 288 ------------------------------------
- tests/Makefile.am                   |   2 -
- tests/test_memlimit.c               | 114 --------------
- 7 files changed, 614 deletions(-)
+ src/xz/message.c | 5 +++++
+ 1 file changed, 5 insertions(+)
 
-commit 69472ee5f055a2bb6f28106f0923e1461fd1d080
+commit d8eaf9d8278c23c2cf2b7ca5562d4de570d3b5db
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-23 15:09:03 +0200
-
-    VLI encoder and decoder cleanups. Made encoder return
-    LZMA_PROG_ERROR in single-call mode if there's no output
-    space.
-
- src/liblzma/common/vli_decoder.c | 15 +++++++++------
- src/liblzma/common/vli_encoder.c | 31 ++++++++++++++++++++++++-------
- 2 files changed, 33 insertions(+), 13 deletions(-)
+Date:   2012-08-02 17:13:30 +0300
 
-commit 4249c8c15a08f55b51b7012e6aaafce3aa9eb650
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-22 17:44:33 +0200
+    Build: Bump gettext version requirement to 0.18.
 
-    Typo fix
+    Otherwise too old version of m4/lib-link.m4 gets included
+    when autoreconf -fi is run.
 
- src/xz/process.c | 2 +-
+ configure.ac | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 6d1d6f4598d121253dbe1084c6866b66e95c361b
+commit 96e08902b09f0f304d4ff80c6e83ef7fff883f34
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-20 22:59:10 +0200
+Date:   2012-07-17 18:29:08 +0300
 
-    Support NetBSD's errno for O_NOFOLLOW.
+    Update THANKS.
 
- src/xz/io.c | 8 ++++++++
- 1 file changed, 8 insertions(+)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit f901a290eef67b8ea4720ccdf5f46edf775ed9d7
+commit 3778db1be53e61ff285c573af5ee468803008456
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-20 18:05:52 +0200
+Date:   2012-07-17 18:19:59 +0300
 
-    Build xzdec and lzmadec from xzdec.c. xzdec supports only .xz
-    files and lzmadec only .lzma files.
+    liblzma: Make the use of lzma_allocator const-correct.
+    
+    There is a tiny risk of causing breakage: If an application
+    assigns lzma_stream.allocator to a non-const pointer, such
+    code won't compile anymore. I don't know why anyone would do
+    such a thing though, so in practice this shouldn't cause trouble.
+    
+    Thanks to Jan Kratochvil for the patch.
 
- src/xzdec/Makefile.am |   7 +-
- src/xzdec/xzdec.c     | 311 ++++++++++++++++++++++----------------------------
- 2 files changed, 140 insertions(+), 178 deletions(-)
+ src/liblzma/api/lzma/base.h                |  4 +++-
+ src/liblzma/api/lzma/block.h               |  6 ++---
+ src/liblzma/api/lzma/container.h           |  9 +++++---
+ src/liblzma/api/lzma/filter.h              | 13 ++++++-----
+ src/liblzma/api/lzma/index.h               | 16 ++++++-------
+ src/liblzma/api/lzma/index_hash.h          |  4 ++--
+ src/liblzma/common/alone_decoder.c         |  6 ++---
+ src/liblzma/common/alone_decoder.h         |  2 +-
+ src/liblzma/common/alone_encoder.c         |  8 +++----
+ src/liblzma/common/auto_decoder.c          |  6 ++---
+ src/liblzma/common/block_buffer_decoder.c  |  2 +-
+ src/liblzma/common/block_buffer_encoder.c  |  4 ++--
+ src/liblzma/common/block_decoder.c         |  6 ++---
+ src/liblzma/common/block_decoder.h         |  2 +-
+ src/liblzma/common/block_encoder.c         |  8 +++----
+ src/liblzma/common/block_encoder.h         |  2 +-
+ src/liblzma/common/block_header_decoder.c  |  4 ++--
+ src/liblzma/common/common.c                | 10 ++++-----
+ src/liblzma/common/common.h                | 20 +++++++++--------
+ src/liblzma/common/easy_buffer_encoder.c   |  4 ++--
+ src/liblzma/common/filter_buffer_decoder.c |  3 ++-
+ src/liblzma/common/filter_buffer_encoder.c |  7 +++---
+ src/liblzma/common/filter_common.c         |  4 ++--
+ src/liblzma/common/filter_common.h         |  2 +-
+ src/liblzma/common/filter_decoder.c        |  7 +++---
+ src/liblzma/common/filter_decoder.h        |  2 +-
+ src/liblzma/common/filter_encoder.c        |  2 +-
+ src/liblzma/common/filter_encoder.h        |  2 +-
+ src/liblzma/common/filter_flags_decoder.c  |  2 +-
+ src/liblzma/common/index.c                 | 26 ++++++++++-----------
+ src/liblzma/common/index_decoder.c         | 12 +++++-----
+ src/liblzma/common/index_encoder.c         |  6 ++---
+ src/liblzma/common/index_encoder.h         |  2 +-
+ src/liblzma/common/index_hash.c            |  6 +++--
+ src/liblzma/common/outqueue.c              |  4 ++--
+ src/liblzma/common/outqueue.h              |  5 +++--
+ src/liblzma/common/stream_buffer_decoder.c |  2 +-
+ src/liblzma/common/stream_buffer_encoder.c |  3 ++-
+ src/liblzma/common/stream_decoder.c        |  9 ++++----
+ src/liblzma/common/stream_decoder.h        |  5 +++--
+ src/liblzma/common/stream_encoder.c        | 10 ++++-----
+ src/liblzma/common/stream_encoder_mt.c     | 16 ++++++-------
+ src/liblzma/delta/delta_common.c           |  4 ++--
+ src/liblzma/delta/delta_decoder.c          |  6 ++---
+ src/liblzma/delta/delta_decoder.h          |  5 +++--
+ src/liblzma/delta/delta_encoder.c          |  6 ++---
+ src/liblzma/delta/delta_encoder.h          |  3 ++-
+ src/liblzma/delta/delta_private.h          |  2 +-
+ src/liblzma/lz/lz_decoder.c                |  8 +++----
+ src/liblzma/lz/lz_decoder.h                |  7 +++---
+ src/liblzma/lz/lz_encoder.c                | 19 ++++++++--------
+ src/liblzma/lz/lz_encoder.h                |  6 ++---
+ src/liblzma/lzma/lzma2_decoder.c           |  8 +++----
+ src/liblzma/lzma/lzma2_decoder.h           |  5 +++--
+ src/liblzma/lzma/lzma2_encoder.c           |  6 ++---
+ src/liblzma/lzma/lzma2_encoder.h           |  2 +-
+ src/liblzma/lzma/lzma_decoder.c            |  8 +++----
+ src/liblzma/lzma/lzma_decoder.h            |  7 +++---
+ src/liblzma/lzma/lzma_encoder.c            |  7 +++---
+ src/liblzma/lzma/lzma_encoder.h            |  5 +++--
+ src/liblzma/simple/arm.c                   |  8 ++++---
+ src/liblzma/simple/armthumb.c              |  8 ++++---
+ src/liblzma/simple/ia64.c                  |  8 ++++---
+ src/liblzma/simple/powerpc.c               |  8 ++++---
+ src/liblzma/simple/simple_coder.c          | 10 ++++-----
+ src/liblzma/simple/simple_coder.h          | 36 ++++++++++++++++++++----------
+ src/liblzma/simple/simple_decoder.c        |  2 +-
+ src/liblzma/simple/simple_decoder.h        |  2 +-
+ src/liblzma/simple/simple_private.h        |  3 ++-
+ src/liblzma/simple/sparc.c                 |  8 ++++---
+ src/liblzma/simple/x86.c                   |  8 ++++---
+ 71 files changed, 269 insertions(+), 219 deletions(-)
 
-commit 86a0ed8f01c8ed44721223f885e679c71b7bb94c
+commit d625c7cf824fd3b61c6da84f56179e94917ff603
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-20 11:01:29 +0200
+Date:   2012-07-05 07:36:28 +0300
 
-    Minor cleanups to xzdec.
+    Tests: Remove tests/test_block.c that had gotten committed accidentally.
 
- src/xzdec/xzdec.c | 20 ++++++++++----------
- 1 file changed, 10 insertions(+), 10 deletions(-)
+ tests/test_block.c | 52 ----------------------------------------------------
+ 1 file changed, 52 deletions(-)
 
-commit 54f716ba8905d09752dcd1519455a40bd21d5317
+commit 0b09d266cce72bc4841933b171e79551e488927c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-19 23:55:22 +0200
+Date:   2012-07-05 07:33:35 +0300
+
+    Build: Include macosx/build.sh in the distribution.
 
-    Added missing check for uint16_t.
+    It has been in the Git repository since 2010 but probably
+    few people have seen it since it hasn't been included in
+    the release tarballs. :-(
 
- configure.ac | 1 +
+ Makefile.am | 1 +
  1 file changed, 1 insertion(+)
 
-commit 1880a3927b23f265f63b2adb86fbdb81ea09eb06
+commit d6e0b23d4613b9f417893dd96cc168c8005ece3d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-19 23:52:24 +0200
-
-    Renamed lzma to xz and lzmadec to xzdec. We create symlinks
-    lzma, unlzma, and lzcat in "make install" for backwards
-    compatibility with LZMA Utils 4.32.x; I'm not sure if this
-    should be the default though.
-
- configure.ac            |   4 +-
- po/POTFILES.in          |  21 +-
- src/Makefile.am         |   2 +-
- src/lzma/Makefile.am    |  72 ----
- src/lzma/args.c         | 500 ---------------------------
- src/lzma/args.h         |  56 ---
- src/lzma/hardware.c     | 122 -------
- src/lzma/hardware.h     |  45 ---
- src/lzma/io.c           | 658 -----------------------------------
- src/lzma/io.h           |  97 ------
- src/lzma/list.c         | 477 --------------------------
- src/lzma/main.c         | 402 ----------------------
- src/lzma/main.h         |  60 ----
- src/lzma/message.c      | 892 ------------------------------------------------
- src/lzma/message.h      | 132 -------
- src/lzma/options.c      | 352 -------------------
- src/lzma/options.h      |  46 ---
- src/lzma/private.h      |  52 ---
- src/lzma/process.c      | 391 ---------------------
- src/lzma/process.h      |  70 ----
- src/lzma/suffix.c       | 213 ------------
- src/lzma/suffix.h       |  40 ---
- src/lzma/util.c         | 199 -----------
- src/lzma/util.h         |  71 ----
- src/lzmadec/Makefile.am |  29 --
- src/lzmadec/lzmadec.c   | 492 --------------------------
- src/xz/Makefile.am      |  74 ++++
- src/xz/args.c           | 500 +++++++++++++++++++++++++++
- src/xz/args.h           |  56 +++
- src/xz/hardware.c       | 122 +++++++
- src/xz/hardware.h       |  45 +++
- src/xz/io.c             | 658 +++++++++++++++++++++++++++++++++++
- src/xz/io.h             |  97 ++++++
- src/xz/list.c           | 477 ++++++++++++++++++++++++++
- src/xz/main.c           | 402 ++++++++++++++++++++++
- src/xz/main.h           |  60 ++++
- src/xz/message.c        | 892 ++++++++++++++++++++++++++++++++++++++++++++++++
- src/xz/message.h        | 132 +++++++
- src/xz/options.c        | 352 +++++++++++++++++++
- src/xz/options.h        |  46 +++
- src/xz/private.h        |  52 +++
- src/xz/process.c        | 391 +++++++++++++++++++++
- src/xz/process.h        |  70 ++++
- src/xz/suffix.c         | 213 ++++++++++++
- src/xz/suffix.h         |  40 +++
- src/xz/util.c           | 199 +++++++++++
- src/xz/util.h           |  71 ++++
- src/xzdec/Makefile.am   |  29 ++
- src/xzdec/xzdec.c       | 492 ++++++++++++++++++++++++++
- tests/test_compress.sh  |  29 +-
- tests/test_files.sh     |   4 +-
- 51 files changed, 5498 insertions(+), 5500 deletions(-)
-
-commit e114502b2bc371e4a45449832cb69be036360722
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-11-19 20:46:52 +0200
-
-    Oh well, big messy commit again. Some highlights:
-      - Updated to the latest, probably final file format version.
-      - Command line tool reworked to not use threads anymore.
-        Threading will probably go into liblzma anyway.
-      - Memory usage limit is now about 30 % for uncompression
-        and about 90 % for compression.
-      - Progress indicator with --verbose
-      - Simplified --help and full --long-help
-      - Upgraded to the last LGPLv2.1+ getopt_long from gnulib.
-      - Some bug fixes
+Date:   2012-07-05 07:28:53 +0300
 
- THANKS                                       |   1 +
- configure.ac                                 |  48 +-
- debug/full_flush.c                           |   6 +-
- debug/known_sizes.c                          |   2 +-
- debug/memusage.c                             |   2 +-
- debug/sync_flush.c                           |  10 +-
- doc/file-format.txt                          | 260 ++++----
- lib/Makefile.am                              |  10 +-
- lib/getopt.c                                 |  14 +-
- lib/getopt.in.h                              | 226 +++++++
- lib/getopt1.c                                |   8 +-
- lib/getopt_.h                                | 226 -------
- lib/gettext.h                                | 240 -------
- m4/getopt.m4                                 |  64 +-
- src/common/bswap.h                           |  15 +-
- src/common/physmem.h                         |   4 +
- src/common/sysdefs.h                         |  12 +-
- src/liblzma/api/lzma/block.h                 |  47 +-
- src/liblzma/api/lzma/filter.h                |   8 +
- src/liblzma/api/lzma/index.h                 |  20 +-
- src/liblzma/api/lzma/index_hash.h            |   4 +-
- src/liblzma/common/block_decoder.c           |  59 +-
- src/liblzma/common/block_encoder.c           |  41 +-
- src/liblzma/common/block_header_decoder.c    |  31 +-
- src/liblzma/common/block_header_encoder.c    |  69 +--
- src/liblzma/common/block_util.c              |  45 +-
- src/liblzma/common/common.h                  |   8 -
- src/liblzma/common/filter_common.c           |   4 +-
- src/liblzma/common/index.c                   | 259 ++++----
- src/liblzma/common/index.h                   |  33 +-
- src/liblzma/common/index_decoder.c           |  31 +-
- src/liblzma/common/index_encoder.c           |  16 +-
- src/liblzma/common/index_hash.c              |  68 +-
- src/liblzma/common/stream_decoder.c          |   9 +-
- src/liblzma/common/stream_encoder.c          |   6 +-
- src/liblzma/lz/lz_decoder.h                  |   4 +-
- src/liblzma/subblock/subblock_decoder.c      |   3 +-
- src/lzma/Makefile.am                         |   9 +-
- src/lzma/alloc.c                             | 106 ----
- src/lzma/alloc.h                             |  42 --
- src/lzma/args.c                              | 531 +++++++---------
- src/lzma/args.h                              |  42 +-
- src/lzma/error.c                             | 162 -----
- src/lzma/error.h                             |  67 --
- src/lzma/hardware.c                          |  75 ++-
- src/lzma/hardware.h                          |  16 +-
- src/lzma/help.c                              | 170 -----
- src/lzma/help.h                              |  32 -
- src/lzma/io.c                                | 757 +++++++++++------------
- src/lzma/io.h                                |  51 +-
- src/lzma/main.c                              | 392 ++++++++----
- src/lzma/main.h                              |  60 ++
- src/lzma/message.c                           | 892 +++++++++++++++++++++++++++
- src/lzma/message.h                           | 132 ++++
- src/lzma/options.c                           |  42 +-
- src/lzma/options.h                           |   6 +-
- src/lzma/private.h                           |  28 +-
- src/lzma/process.c                           | 525 ++++++++--------
- src/lzma/process.h                           |  40 ++
- src/lzma/suffix.c                            |  52 +-
- src/lzma/suffix.h                            |  17 +-
- src/lzma/util.c                              | 100 +--
- src/lzma/util.h                              |  43 +-
- src/lzmadec/lzmadec.c                        |  36 +-
- tests/files/README                           |  12 +-
- tests/files/bad-1-block_header-1.xz          | Bin 64 -> 64 bytes
- tests/files/bad-1-block_header-2.xz          | Bin 64 -> 64 bytes
- tests/files/bad-1-block_header-3.xz          | Bin 68 -> 68 bytes
- tests/files/bad-1-block_header-4.xz          | Bin 72 -> 76 bytes
- tests/files/bad-1-block_header-5.xz          | Bin 0 -> 72 bytes
- tests/files/bad-1-check-crc32.xz             | Bin 68 -> 68 bytes
- tests/files/bad-1-check-crc64.xz             | Bin 72 -> 72 bytes
- tests/files/bad-1-check-sha256.xz            | Bin 96 -> 96 bytes
- tests/files/bad-1-lzma2-1.xz                 | Bin 64 -> 64 bytes
- tests/files/bad-1-lzma2-2.xz                 | Bin 424 -> 424 bytes
- tests/files/bad-1-lzma2-3.xz                 | Bin 424 -> 424 bytes
- tests/files/bad-1-lzma2-4.xz                 | Bin 408 -> 408 bytes
- tests/files/bad-1-lzma2-5.xz                 | Bin 408 -> 408 bytes
- tests/files/bad-1-lzma2-6.xz                 | Bin 68 -> 68 bytes
- tests/files/bad-1-lzma2-7.xz                 | Bin 408 -> 408 bytes
- tests/files/bad-1-stream_flags-1.xz          | Bin 68 -> 68 bytes
- tests/files/bad-1-stream_flags-2.xz          | Bin 68 -> 68 bytes
- tests/files/bad-1-stream_flags-3.xz          | Bin 68 -> 68 bytes
- tests/files/bad-1-vli-1.xz                   | Bin 72 -> 72 bytes
- tests/files/bad-1-vli-2.xz                   | Bin 72 -> 76 bytes
- tests/files/bad-2-compressed_data_padding.xz | Bin 92 -> 92 bytes
- tests/files/bad-2-index-1.xz                 | Bin 92 -> 92 bytes
- tests/files/bad-2-index-2.xz                 | Bin 92 -> 92 bytes
- tests/files/bad-2-index-3.xz                 | Bin 92 -> 92 bytes
- tests/files/bad-2-index-4.xz                 | Bin 92 -> 92 bytes
- tests/files/bad-2-index-5.xz                 | Bin 0 -> 92 bytes
- tests/files/good-1-3delta-lzma2.xz           | Bin 528 -> 528 bytes
- tests/files/good-1-block_header-1.xz         | Bin 72 -> 72 bytes
- tests/files/good-1-block_header-2.xz         | Bin 68 -> 68 bytes
- tests/files/good-1-block_header-3.xz         | Bin 68 -> 68 bytes
- tests/files/good-1-check-crc32.xz            | Bin 68 -> 68 bytes
- tests/files/good-1-check-crc64.xz            | Bin 72 -> 72 bytes
- tests/files/good-1-check-none.xz             | Bin 64 -> 64 bytes
- tests/files/good-1-check-sha256.xz           | Bin 96 -> 96 bytes
- tests/files/good-1-delta-lzma2.tiff.xz       | Bin 51312 -> 51316 bytes
- tests/files/good-1-lzma2-1.xz                | Bin 424 -> 424 bytes
- tests/files/good-1-lzma2-2.xz                | Bin 424 -> 424 bytes
- tests/files/good-1-lzma2-3.xz                | Bin 408 -> 408 bytes
- tests/files/good-1-sparc-lzma2.xz            | Bin 2292 -> 2296 bytes
- tests/files/good-1-x86-lzma2.xz              | Bin 1936 -> 1936 bytes
- tests/files/good-2-lzma2.xz                  | Bin 92 -> 92 bytes
- tests/files/unsupported-block_header.xz      | Bin 68 -> 68 bytes
- tests/files/unsupported-check.xz             | Bin 68 -> 68 bytes
- tests/files/unsupported-filter_flags-1.xz    | Bin 68 -> 68 bytes
- tests/files/unsupported-filter_flags-2.xz    | Bin 68 -> 68 bytes
- tests/files/unsupported-filter_flags-3.xz    | Bin 68 -> 68 bytes
- tests/test_block_header.c                    |  16 +-
- tests/test_index.c                           |  42 +-
- 113 files changed, 3462 insertions(+), 2946 deletions(-)
+    Build: Include validate_map.sh in the distribution.
 
-commit 3c3905b53462ae235c9438d86a4dc51086410932
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-10-09 11:12:29 +0300
+    It's required by "make mydist".
 
-    Fixed the test that should have been fixed as part
-    of 1e8e4fd1f3e50129b4541406ad765d2aa1233943.
+    Fix also the location of EXTRA_DIST+= so that those files
+    get distributed also if symbol versioning isn't enabled.
 
- tests/test_block_header.c | 2 +-
+ src/liblzma/Makefile.am | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 0f295bf7a3ece01f667caae318cc3e3424085886
+commit 19de545d86097c3954d69ab5d12820387f6a09bc
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-10-07 16:42:18 +0300
+Date:   2012-07-05 07:24:45 +0300
 
-    Fixed some help messages.
+    Docs: Fix the name LZMA Utils -> XZ Utils in debug/README.
 
- src/lzma/help.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
+ debug/README | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 1e8e4fd1f3e50129b4541406ad765d2aa1233943
+commit 672eccf57c31a40dfb956b7662db06d43e18618e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-10-07 09:40:31 +0300
-
-    Made the preset numbering more logical in liblzma API.
-
- src/liblzma/api/lzma/container.h        | 20 ++++++++++----------
- src/liblzma/api/lzma/lzma.h             |  2 +-
- src/liblzma/lzma/lzma_encoder_presets.c |  3 ++-
- src/lzma/args.c                         |  8 ++++----
- src/lzma/args.h                         |  2 +-
- 5 files changed, 18 insertions(+), 17 deletions(-)
-
-commit 5e4df4c3c09c82bbbb1a916784e3dc717ca4ff81
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-10-03 19:36:09 +0300
-
-    Removed fi from po/LINGUAS.
-
- po/LINGUAS | 1 -
- 1 file changed, 1 deletion(-)
-
-commit fcfb86c7770328cfffa2e83b176af9a1ba2d9128
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-10-03 07:06:48 +0300
-
-    Fixed suffix handling with --format=raw.
-
- src/lzma/suffix.c | 28 +++++++++++++++++++---------
- 1 file changed, 19 insertions(+), 9 deletions(-)
-
-commit bd137524f2f50e30ba054f42f1f6536cd3cee920
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-10-02 22:51:46 +0300
-
-    Initial changes to change the suffix of the new format to .xz.
-    This also fixes a bug related to --suffix option. Some issues
-    with suffixes with --format=raw were not fixed.
-
- src/lzma/args.c        | 67 +++++++++++++++++++++++++++++++--------------
- src/lzma/args.h        | 13 +++++----
- src/lzma/help.c        |  4 +--
- src/lzma/process.c     | 24 +++++++++-------
- src/lzma/suffix.c      | 74 +++++++++++++++++++++++++++++++++++++++++---------
- tests/test_compress.sh |  3 +-
- 6 files changed, 133 insertions(+), 52 deletions(-)
-
-commit 4c321a41c482821aa3c4d64cdf886a6ed904d844
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-30 17:43:55 +0300
-
-    Renamed the test files from .lzma suffix to .xz suffix.
-
- tests/files/README                             | 128 ++++++++++++-------------
- tests/files/bad-0-backward_size.lzma           | Bin 32 -> 0 bytes
- tests/files/bad-0-backward_size.xz             | Bin 0 -> 32 bytes
- tests/files/bad-0-empty-truncated.lzma         | Bin 31 -> 0 bytes
- tests/files/bad-0-empty-truncated.xz           | Bin 0 -> 31 bytes
- tests/files/bad-0-footer_magic.lzma            | Bin 32 -> 0 bytes
- tests/files/bad-0-footer_magic.xz              | Bin 0 -> 32 bytes
- tests/files/bad-0-header_magic.lzma            | Bin 32 -> 0 bytes
- tests/files/bad-0-header_magic.xz              | Bin 0 -> 32 bytes
- tests/files/bad-0-nonempty_index.lzma          | Bin 32 -> 0 bytes
- tests/files/bad-0-nonempty_index.xz            | Bin 0 -> 32 bytes
- tests/files/bad-0cat-alone.lzma                | Bin 55 -> 0 bytes
- tests/files/bad-0cat-alone.xz                  | Bin 0 -> 55 bytes
- tests/files/bad-0cat-header_magic.lzma         | Bin 64 -> 0 bytes
- tests/files/bad-0cat-header_magic.xz           | Bin 0 -> 64 bytes
- tests/files/bad-0catpad-empty.lzma             | Bin 69 -> 0 bytes
- tests/files/bad-0catpad-empty.xz               | Bin 0 -> 69 bytes
- tests/files/bad-0pad-empty.lzma                | Bin 37 -> 0 bytes
- tests/files/bad-0pad-empty.xz                  | Bin 0 -> 37 bytes
- tests/files/bad-1-block_header-1.lzma          | Bin 64 -> 0 bytes
- tests/files/bad-1-block_header-1.xz            | Bin 0 -> 64 bytes
- tests/files/bad-1-block_header-2.lzma          | Bin 64 -> 0 bytes
- tests/files/bad-1-block_header-2.xz            | Bin 0 -> 64 bytes
- tests/files/bad-1-block_header-3.lzma          | Bin 68 -> 0 bytes
- tests/files/bad-1-block_header-3.xz            | Bin 0 -> 68 bytes
- tests/files/bad-1-block_header-4.lzma          | Bin 72 -> 0 bytes
- tests/files/bad-1-block_header-4.xz            | Bin 0 -> 72 bytes
- tests/files/bad-1-check-crc32.lzma             | Bin 68 -> 0 bytes
- tests/files/bad-1-check-crc32.xz               | Bin 0 -> 68 bytes
- tests/files/bad-1-check-crc64.lzma             | Bin 72 -> 0 bytes
- tests/files/bad-1-check-crc64.xz               | Bin 0 -> 72 bytes
- tests/files/bad-1-check-sha256.lzma            | Bin 96 -> 0 bytes
- tests/files/bad-1-check-sha256.xz              | Bin 0 -> 96 bytes
- tests/files/bad-1-lzma2-1.lzma                 | Bin 64 -> 0 bytes
- tests/files/bad-1-lzma2-1.xz                   | Bin 0 -> 64 bytes
- tests/files/bad-1-lzma2-2.lzma                 | Bin 424 -> 0 bytes
- tests/files/bad-1-lzma2-2.xz                   | Bin 0 -> 424 bytes
- tests/files/bad-1-lzma2-3.lzma                 | Bin 424 -> 0 bytes
- tests/files/bad-1-lzma2-3.xz                   | Bin 0 -> 424 bytes
- tests/files/bad-1-lzma2-4.lzma                 | Bin 408 -> 0 bytes
- tests/files/bad-1-lzma2-4.xz                   | Bin 0 -> 408 bytes
- tests/files/bad-1-lzma2-5.lzma                 | Bin 408 -> 0 bytes
- tests/files/bad-1-lzma2-5.xz                   | Bin 0 -> 408 bytes
- tests/files/bad-1-lzma2-6.lzma                 | Bin 68 -> 0 bytes
- tests/files/bad-1-lzma2-6.xz                   | Bin 0 -> 68 bytes
- tests/files/bad-1-lzma2-7.lzma                 | Bin 408 -> 0 bytes
- tests/files/bad-1-lzma2-7.xz                   | Bin 0 -> 408 bytes
- tests/files/bad-1-stream_flags-1.lzma          | Bin 68 -> 0 bytes
- tests/files/bad-1-stream_flags-1.xz            | Bin 0 -> 68 bytes
- tests/files/bad-1-stream_flags-2.lzma          | Bin 68 -> 0 bytes
- tests/files/bad-1-stream_flags-2.xz            | Bin 0 -> 68 bytes
- tests/files/bad-1-stream_flags-3.lzma          | Bin 68 -> 0 bytes
- tests/files/bad-1-stream_flags-3.xz            | Bin 0 -> 68 bytes
- tests/files/bad-1-vli-1.lzma                   | Bin 72 -> 0 bytes
- tests/files/bad-1-vli-1.xz                     | Bin 0 -> 72 bytes
- tests/files/bad-1-vli-2.lzma                   | Bin 72 -> 0 bytes
- tests/files/bad-1-vli-2.xz                     | Bin 0 -> 72 bytes
- tests/files/bad-2-compressed_data_padding.lzma | Bin 92 -> 0 bytes
- tests/files/bad-2-compressed_data_padding.xz   | Bin 0 -> 92 bytes
- tests/files/bad-2-index-1.lzma                 | Bin 92 -> 0 bytes
- tests/files/bad-2-index-1.xz                   | Bin 0 -> 92 bytes
- tests/files/bad-2-index-2.lzma                 | Bin 92 -> 0 bytes
- tests/files/bad-2-index-2.xz                   | Bin 0 -> 92 bytes
- tests/files/bad-2-index-3.lzma                 | Bin 92 -> 0 bytes
- tests/files/bad-2-index-3.xz                   | Bin 0 -> 92 bytes
- tests/files/bad-2-index-4.lzma                 | Bin 92 -> 0 bytes
- tests/files/bad-2-index-4.xz                   | Bin 0 -> 92 bytes
- tests/files/good-0-empty.lzma                  | Bin 32 -> 0 bytes
- tests/files/good-0-empty.xz                    | Bin 0 -> 32 bytes
- tests/files/good-0cat-empty.lzma               | Bin 64 -> 0 bytes
- tests/files/good-0cat-empty.xz                 | Bin 0 -> 64 bytes
- tests/files/good-0catpad-empty.lzma            | Bin 68 -> 0 bytes
- tests/files/good-0catpad-empty.xz              | Bin 0 -> 68 bytes
- tests/files/good-0pad-empty.lzma               | Bin 36 -> 0 bytes
- tests/files/good-0pad-empty.xz                 | Bin 0 -> 36 bytes
- tests/files/good-1-3delta-lzma2.lzma           | Bin 528 -> 0 bytes
- tests/files/good-1-3delta-lzma2.xz             | Bin 0 -> 528 bytes
- tests/files/good-1-block_header-1.lzma         | Bin 72 -> 0 bytes
- tests/files/good-1-block_header-1.xz           | Bin 0 -> 72 bytes
- tests/files/good-1-block_header-2.lzma         | Bin 68 -> 0 bytes
- tests/files/good-1-block_header-2.xz           | Bin 0 -> 68 bytes
- tests/files/good-1-block_header-3.lzma         | Bin 68 -> 0 bytes
- tests/files/good-1-block_header-3.xz           | Bin 0 -> 68 bytes
- tests/files/good-1-check-crc32.lzma            | Bin 68 -> 0 bytes
- tests/files/good-1-check-crc32.xz              | Bin 0 -> 68 bytes
- tests/files/good-1-check-crc64.lzma            | Bin 72 -> 0 bytes
- tests/files/good-1-check-crc64.xz              | Bin 0 -> 72 bytes
- tests/files/good-1-check-none.lzma             | Bin 64 -> 0 bytes
- tests/files/good-1-check-none.xz               | Bin 0 -> 64 bytes
- tests/files/good-1-check-sha256.lzma           | Bin 96 -> 0 bytes
- tests/files/good-1-check-sha256.xz             | Bin 0 -> 96 bytes
- tests/files/good-1-delta-lzma2.tiff.lzma       | Bin 51312 -> 0 bytes
- tests/files/good-1-delta-lzma2.tiff.xz         | Bin 0 -> 51312 bytes
- tests/files/good-1-lzma2-1.lzma                | Bin 424 -> 0 bytes
- tests/files/good-1-lzma2-1.xz                  | Bin 0 -> 424 bytes
- tests/files/good-1-lzma2-2.lzma                | Bin 424 -> 0 bytes
- tests/files/good-1-lzma2-2.xz                  | Bin 0 -> 424 bytes
- tests/files/good-1-lzma2-3.lzma                | Bin 408 -> 0 bytes
- tests/files/good-1-lzma2-3.xz                  | Bin 0 -> 408 bytes
- tests/files/good-1-sparc-lzma2.lzma            | Bin 2292 -> 0 bytes
- tests/files/good-1-sparc-lzma2.xz              | Bin 0 -> 2292 bytes
- tests/files/good-1-x86-lzma2.lzma              | Bin 1936 -> 0 bytes
- tests/files/good-1-x86-lzma2.xz                | Bin 0 -> 1936 bytes
- tests/files/good-2-lzma2.lzma                  | Bin 92 -> 0 bytes
- tests/files/good-2-lzma2.xz                    | Bin 0 -> 92 bytes
- tests/files/unsupported-block_header.lzma      | Bin 68 -> 0 bytes
- tests/files/unsupported-block_header.xz        | Bin 0 -> 68 bytes
- tests/files/unsupported-check.lzma             | Bin 68 -> 0 bytes
- tests/files/unsupported-check.xz               | Bin 0 -> 68 bytes
- tests/files/unsupported-filter_flags-1.lzma    | Bin 68 -> 0 bytes
- tests/files/unsupported-filter_flags-1.xz      | Bin 0 -> 68 bytes
- tests/files/unsupported-filter_flags-2.lzma    | Bin 68 -> 0 bytes
- tests/files/unsupported-filter_flags-2.xz      | Bin 0 -> 68 bytes
- tests/files/unsupported-filter_flags-3.lzma    | Bin 68 -> 0 bytes
- tests/files/unsupported-filter_flags-3.xz      | Bin 0 -> 68 bytes
- tests/test_files.sh                            |   6 +-
- 116 files changed, 66 insertions(+), 68 deletions(-)
+Date:   2012-07-05 07:23:17 +0300
 
-commit 8e60c889a2816a63013a35c99ce26bf28f5b78eb
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-30 13:57:44 +0300
+    Include debug/translation.bash in the distribution.
 
-    Fixed Stream decoder to actually use the first_stream variable.
+    Also fix the script name mentioned in README.
 
- src/liblzma/common/stream_decoder.c | 5 +++++
- 1 file changed, 5 insertions(+)
+ README            | 4 ++--
+ debug/Makefile.am | 3 +++
+ 2 files changed, 5 insertions(+), 2 deletions(-)
 
-commit 3bdbc12c054d1961133ee19802af7dd3c3494543
+commit cafb523adac1caf305e70a04bc37f25602bf990c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-30 13:56:57 +0300
-
-    Added one more test file.
-
- tests/files/README                     |  15 +++++++++++----
- tests/files/bad-0cat-header_magic.lzma | Bin 0 -> 64 bytes
- 2 files changed, 11 insertions(+), 4 deletions(-)
+Date:   2012-07-04 22:31:58 +0300
 
-commit a6639022fdc536e5659b070a465221b4cf7c51fa
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-30 13:34:07 +0300
+    xz: Document --block-list better.
 
-    Fixed uninitialized variable in Stream decoder.
+    Thanks to Jonathan Nieder.
 
- src/liblzma/common/stream_decoder.c | 1 +
- 1 file changed, 1 insertion(+)
+ src/xz/xz.1 | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
 
-commit ed3709000a3f17ecefab29b2235d7e2221b00003
+commit c7ff218528bc8f7c65e7ef73c6515777346c6794
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-30 13:27:28 +0300
+Date:   2012-07-04 20:01:49 +0300
 
-    Added two test files.
+    Bump the version number to 5.1.2alpha.
 
- tests/files/README                  |   6 ++++++
- tests/files/bad-0-footer_magic.lzma | Bin 0 -> 32 bytes
- tests/files/bad-0-header_magic.lzma | Bin 0 -> 32 bytes
- 3 files changed, 6 insertions(+)
+ src/liblzma/api/lzma/version.h | 2 +-
+ src/liblzma/liblzma.map        | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit ea560b0ea80525752bdcd0074d24f8dc170bbe29
+commit 8f3c1d886f93e6478ad509ff52102b2ce7faa999
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-27 23:49:24 +0300
+Date:   2012-07-04 20:01:19 +0300
 
-    Fix conflicting Subblock helper filter's ID.
+    Update NEWS for 5.1.2alpha.
 
- src/liblzma/common/common.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ NEWS | 41 +++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 41 insertions(+)
 
-commit ad97483b6e55142fd8d5c041db057017a891cd95
+commit 0d5fa05466e580fbc458820f87013ae7644e20e5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-27 23:37:13 +0300
-
-    Changed magic bytes to match the updated spec. Filename
-    suffix wasn't changed yet.
-
- src/liblzma/common/auto_decoder.c              |   4 ++--
- src/liblzma/common/stream_flags_common.c       |   2 +-
- tests/files/bad-0-backward_size.lzma           | Bin 32 -> 32 bytes
- tests/files/bad-0-empty-truncated.lzma         | Bin 31 -> 31 bytes
- tests/files/bad-0-nonempty_index.lzma          | Bin 32 -> 32 bytes
- tests/files/bad-0cat-alone.lzma                | Bin 55 -> 55 bytes
- tests/files/bad-0catpad-empty.lzma             | Bin 69 -> 69 bytes
- tests/files/bad-0pad-empty.lzma                | Bin 37 -> 37 bytes
- tests/files/bad-1-block_header-1.lzma          | Bin 64 -> 64 bytes
- tests/files/bad-1-block_header-2.lzma          | Bin 64 -> 64 bytes
- tests/files/bad-1-block_header-3.lzma          | Bin 68 -> 68 bytes
- tests/files/bad-1-block_header-4.lzma          | Bin 72 -> 72 bytes
- tests/files/bad-1-check-crc32.lzma             | Bin 68 -> 68 bytes
- tests/files/bad-1-check-crc64.lzma             | Bin 72 -> 72 bytes
- tests/files/bad-1-check-sha256.lzma            | Bin 96 -> 96 bytes
- tests/files/bad-1-lzma2-1.lzma                 | Bin 64 -> 64 bytes
- tests/files/bad-1-lzma2-2.lzma                 | Bin 424 -> 424 bytes
- tests/files/bad-1-lzma2-3.lzma                 | Bin 424 -> 424 bytes
- tests/files/bad-1-lzma2-4.lzma                 | Bin 408 -> 408 bytes
- tests/files/bad-1-lzma2-5.lzma                 | Bin 408 -> 408 bytes
- tests/files/bad-1-lzma2-6.lzma                 | Bin 68 -> 68 bytes
- tests/files/bad-1-lzma2-7.lzma                 | Bin 408 -> 408 bytes
- tests/files/bad-1-stream_flags-1.lzma          | Bin 68 -> 68 bytes
- tests/files/bad-1-stream_flags-2.lzma          | Bin 68 -> 68 bytes
- tests/files/bad-1-stream_flags-3.lzma          | Bin 68 -> 68 bytes
- tests/files/bad-1-vli-1.lzma                   | Bin 72 -> 72 bytes
- tests/files/bad-1-vli-2.lzma                   | Bin 72 -> 72 bytes
- tests/files/bad-2-compressed_data_padding.lzma | Bin 92 -> 92 bytes
- tests/files/bad-2-index-1.lzma                 | Bin 92 -> 92 bytes
- tests/files/bad-2-index-2.lzma                 | Bin 92 -> 92 bytes
- tests/files/bad-2-index-3.lzma                 | Bin 92 -> 92 bytes
- tests/files/bad-2-index-4.lzma                 | Bin 92 -> 92 bytes
- tests/files/good-0-empty.lzma                  | Bin 32 -> 32 bytes
- tests/files/good-0cat-empty.lzma               | Bin 64 -> 64 bytes
- tests/files/good-0catpad-empty.lzma            | Bin 68 -> 68 bytes
- tests/files/good-0pad-empty.lzma               | Bin 36 -> 36 bytes
- tests/files/good-1-3delta-lzma2.lzma           | Bin 528 -> 528 bytes
- tests/files/good-1-block_header-1.lzma         | Bin 72 -> 72 bytes
- tests/files/good-1-block_header-2.lzma         | Bin 68 -> 68 bytes
- tests/files/good-1-block_header-3.lzma         | Bin 68 -> 68 bytes
- tests/files/good-1-check-crc32.lzma            | Bin 68 -> 68 bytes
- tests/files/good-1-check-crc64.lzma            | Bin 72 -> 72 bytes
- tests/files/good-1-check-none.lzma             | Bin 64 -> 64 bytes
- tests/files/good-1-check-sha256.lzma           | Bin 96 -> 96 bytes
- tests/files/good-1-delta-lzma2.tiff.lzma       | Bin 51312 -> 51312 bytes
- tests/files/good-1-lzma2-1.lzma                | Bin 424 -> 424 bytes
- tests/files/good-1-lzma2-2.lzma                | Bin 424 -> 424 bytes
- tests/files/good-1-lzma2-3.lzma                | Bin 408 -> 408 bytes
- tests/files/good-1-sparc-lzma2.lzma            | Bin 2292 -> 2292 bytes
- tests/files/good-1-x86-lzma2.lzma              | Bin 1936 -> 1936 bytes
- tests/files/good-2-lzma2.lzma                  | Bin 92 -> 92 bytes
- tests/files/unsupported-block_header.lzma      | Bin 68 -> 68 bytes
- tests/files/unsupported-check.lzma             | Bin 68 -> 68 bytes
- tests/files/unsupported-filter_flags-1.lzma    | Bin 68 -> 68 bytes
- tests/files/unsupported-filter_flags-2.lzma    | Bin 68 -> 68 bytes
- tests/files/unsupported-filter_flags-3.lzma    | Bin 68 -> 68 bytes
- 56 files changed, 3 insertions(+), 3 deletions(-)
-
-commit 7a57069167e9e63394e2b095ee3a63253fcb51c7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-27 23:16:09 +0300
-
-    Remove po/fi.po since I'm not keeping it updated for now.
-
- po/fi.po | 446 ---------------------------------------------------------------
- 1 file changed, 446 deletions(-)
+Date:   2012-07-04 19:58:23 +0300
 
-commit 018ae09df8f2fee5a7374f307df4cb42fad0b81e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-27 23:13:54 +0300
+    xz: Fix the version number printed by xz -lvv.
 
-    Fix also test_compress.sh.
+    The decoder bug was fixed in 5.0.2 instead of 5.0.3.
 
- tests/test_compress.sh | 6 +++---
+ src/xz/list.c | 6 +++---
  1 file changed, 3 insertions(+), 3 deletions(-)
 
-commit 3a62a5fb85d2eebd8666e64ed5d364d095062858
+commit df11317985a4165731dde12bb0f0028da0e7b77f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-27 23:01:15 +0300
+Date:   2012-07-04 17:11:31 +0300
 
-    Fixed compilation of test_filter_flags.c, which was broken by
-    1dcecfb09b55157b8653d747963069c8bed74f04.
+    Build: Add a comment to configure.ac about symbol versioning.
 
- tests/test_filter_flags.c | 16 ++++++++--------
- 1 file changed, 8 insertions(+), 8 deletions(-)
+ configure.ac | 4 ++++
+ 1 file changed, 4 insertions(+)
 
-commit c6ca26eef7cd07eba449035514e2b8f9ac3111c0
+commit bd9cc179e8be3ef515201d3ed9c7dd79ae88869d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-27 19:11:02 +0300
+Date:   2012-07-04 17:06:49 +0300
 
-    Updated file format specification. It changes the suffix
-    of the new format to .xz and removes the recently added
-    LZMA filter.
+    Update TODO.
 
- doc/file-format.txt | 125 ++++++++++++++--------------------------------------
- 1 file changed, 32 insertions(+), 93 deletions(-)
+ TODO | 12 ++++++++++--
+ 1 file changed, 10 insertions(+), 2 deletions(-)
 
-commit 1dcecfb09b55157b8653d747963069c8bed74f04
+commit 4a238dd9b22f462cac5e199828bf1beb0df05884
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-27 19:09:21 +0300
+Date:   2012-07-04 17:05:46 +0300
 
-    Some API changes, bug fixes, cleanups etc.
+    Document --enable-symbol-versions in INSTALL.
 
- configure.ac                                   |  18 +-
- debug/full_flush.c                             |   7 +-
- debug/known_sizes.c                            |   6 +-
- debug/memusage.c                               |  22 +--
- debug/sync_flush.c                             |  18 +-
- src/liblzma/Makefile.am                        |   2 +-
- src/liblzma/api/lzma/delta.h                   |   8 +-
- src/liblzma/api/lzma/lzma.h                    | 230 ++++++++++++++++---------
- src/liblzma/common/alignment.c                 |   7 +-
- src/liblzma/common/alone_decoder.c             |  11 +-
- src/liblzma/common/alone_encoder.c             |   9 +-
- src/liblzma/common/chunk_size.c                |   2 +-
- src/liblzma/common/easy.c                      |  20 ++-
- src/liblzma/common/filter_common.c             |   4 +-
- src/liblzma/common/filter_decoder.c            |   4 +-
- src/liblzma/common/filter_encoder.c            |   4 +-
- src/liblzma/common/init_encoder.c              |   2 +-
- src/liblzma/delta/delta_common.c               |  12 +-
- src/liblzma/delta/delta_common.h               |   2 +-
- src/liblzma/delta/delta_decoder.c              |   2 +-
- src/liblzma/delta/delta_encoder.c              |   6 +-
- src/liblzma/lz/lz_encoder.c                    |  30 ++--
- src/liblzma/lz/lz_encoder.h                    |  26 +--
- src/liblzma/lz/lz_encoder_mf.c                 |  30 ++--
- src/liblzma/lzma/Makefile.am                   |   4 +-
- src/liblzma/lzma/lzma2_decoder.c               |  10 +-
- src/liblzma/lzma/lzma2_encoder.c               |  27 ++-
- src/liblzma/lzma/lzma_common.h                 |  26 ++-
- src/liblzma/lzma/lzma_decoder.c                |  37 ++--
- src/liblzma/lzma/lzma_encoder.c                |  51 +++---
- src/liblzma/lzma/lzma_encoder_optimum_fast.c   |  10 +-
- src/liblzma/lzma/lzma_encoder_optimum_normal.c |  20 +--
- src/liblzma/lzma/lzma_encoder_presets.c        |  50 ++++--
- src/liblzma/rangecoder/Makefile.am             |   4 +-
- src/liblzma/subblock/subblock_decoder.c        |   2 +-
- src/lzma/args.c                                |  33 ++--
- src/lzma/help.c                                |  17 +-
- src/lzma/options.c                             |  92 +++++-----
- tests/test_block_header.c                      |   9 +-
- tests/test_compress.sh                         |   4 +-
- tests/test_filter_flags.c                      |   2 +-
- 41 files changed, 482 insertions(+), 398 deletions(-)
-
-commit 5cc5064cae603b649c64c40125c7dd365de54c9d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-27 11:28:49 +0300
-
-    Added 7z2lzma.bash.
-
- extra/7z2lzma/7z2lzma.bash | 114 +++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 114 insertions(+)
-
-commit f147666a5cd15542d4e427da58629f4a71cc38e1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-17 22:11:39 +0300
-
-    Miscellaneous LZ and LZMA encoder cleanups
-
- src/liblzma/api/lzma/lzma.h              | 14 -------
- src/liblzma/lz/lz_encoder.c              |  8 +++-
- src/liblzma/lzma/Makefile.am             |  1 -
- src/liblzma/lzma/lzma_encoder.c          | 64 ++++++++++++--------------------
- src/liblzma/lzma/lzma_encoder_features.c | 59 -----------------------------
- 5 files changed, 29 insertions(+), 117 deletions(-)
+ INSTALL | 5 +++++
+ 1 file changed, 5 insertions(+)
 
-commit 13d68b069849e19c33822cd8996cd6447890abb1
+commit 88ccf47205d7f3aa314d358c72ef214f10f68b43
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-13 13:54:00 +0300
-
-    LZ decoder cleanup
+Date:   2012-07-03 21:16:39 +0300
 
- src/liblzma/lz/lz_decoder.c | 5 ++---
- 1 file changed, 2 insertions(+), 3 deletions(-)
+    xz: Add incomplete support for --block-list.
 
-commit 13a74b78e37f16c9096ba5fe1859cc04eaa2f9f7
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-13 12:10:43 +0300
+    It's broken with threads and when also --block-size is used.
 
-    Renamed constants:
-      - LZMA_VLI_VALUE_MAX -> LZMA_VLI_MAX
-      - LZMA_VLI_VALUE_UNKNOWN -> LZMA_VLI_UNKNOWN
-      - LZMA_HEADER_ERRRO -> LZMA_OPTIONS_ERROR
-
- debug/full_flush.c                        |  2 +-
- debug/known_sizes.c                       |  2 +-
- debug/sync_flush.c                        |  2 +-
- src/liblzma/api/lzma/alignment.h          |  2 +-
- src/liblzma/api/lzma/base.h               |  4 ++--
- src/liblzma/api/lzma/block.h              | 28 ++++++++++++++--------------
- src/liblzma/api/lzma/container.h          | 12 ++++++------
- src/liblzma/api/lzma/filter.h             | 28 ++++++++++++++--------------
- src/liblzma/api/lzma/index.h              |  2 +-
- src/liblzma/api/lzma/lzma.h               |  4 ++--
- src/liblzma/api/lzma/simple.h             |  2 +-
- src/liblzma/api/lzma/stream_flags.h       | 20 ++++++++++----------
- src/liblzma/api/lzma/vli.h                | 16 ++++++++--------
- src/liblzma/common/alignment.c            |  6 +++---
- src/liblzma/common/alone_decoder.c        |  2 +-
- src/liblzma/common/auto_decoder.c         |  2 +-
- src/liblzma/common/block_decoder.c        | 12 ++++++------
- src/liblzma/common/block_encoder.c        |  6 +++---
- src/liblzma/common/block_header_decoder.c | 16 ++++++++--------
- src/liblzma/common/block_header_encoder.c | 24 ++++++++++++------------
- src/liblzma/common/block_util.c           |  8 ++++----
- src/liblzma/common/chunk_size.c           |  2 +-
- src/liblzma/common/easy.c                 |  4 ++--
- src/liblzma/common/filter_common.c        | 22 +++++++++++-----------
- src/liblzma/common/filter_decoder.c       |  6 +++---
- src/liblzma/common/filter_encoder.c       | 14 +++++++-------
- src/liblzma/common/index.c                | 24 +++++++++++-------------
- src/liblzma/common/index.h                |  2 +-
- src/liblzma/common/index_hash.c           | 13 ++++++-------
- src/liblzma/common/stream_decoder.c       |  4 ++--
- src/liblzma/common/stream_encoder.c       |  4 ++--
- src/liblzma/common/stream_flags_common.c  |  6 +++---
- src/liblzma/common/stream_flags_decoder.c |  6 +++---
- src/liblzma/common/stream_flags_encoder.c |  4 ++--
- src/liblzma/common/vli_encoder.c          |  2 +-
- src/liblzma/common/vli_size.c             |  2 +-
- src/liblzma/delta/delta_common.c          |  2 +-
- src/liblzma/delta/delta_decoder.c         |  2 +-
- src/liblzma/delta/delta_encoder.c         |  2 +-
- src/liblzma/lz/lz_decoder.c               |  2 +-
- src/liblzma/lz/lz_encoder.c               |  2 +-
- src/liblzma/lzma/lzma2_decoder.c          |  6 +++---
- src/liblzma/lzma/lzma_decoder.c           | 14 +++++++-------
- src/liblzma/lzma/lzma_encoder.c           |  8 ++++----
- src/liblzma/simple/simple_coder.c         |  2 +-
- src/liblzma/simple/simple_decoder.c       |  2 +-
- src/liblzma/subblock/subblock_decoder.c   |  6 +++---
- src/liblzma/subblock/subblock_encoder.c   | 17 ++++++++---------
- src/lzma/args.c                           |  2 +-
- src/lzma/error.c                          |  2 +-
- src/lzma/list.c                           |  6 +++---
- src/lzmadec/lzmadec.c                     |  2 +-
- tests/test_block.c                        |  8 ++++----
- tests/test_block_header.c                 | 30 +++++++++++++++---------------
- tests/test_filter_flags.c                 |  2 +-
- tests/test_index.c                        |  2 +-
- tests/test_stream_flags.c                 |  8 ++++----
- tests/tests.h                             |  2 +-
- 58 files changed, 220 insertions(+), 224 deletions(-)
-
-commit 320601b2c7b08fc7da9da18d5bf7c3c1a189b080
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-12 22:41:40 +0300
-
-    Improved the Stream Flags handling API.
-
- src/liblzma/api/lzma/stream_flags.h       | 84 +++++++++++++++++++++++++++++--
- src/liblzma/common/stream_decoder.c       |  5 +-
- src/liblzma/common/stream_encoder.c       |  2 +
- src/liblzma/common/stream_flags_common.c  | 28 ++++++++---
- src/liblzma/common/stream_flags_common.h  |  9 ++++
- src/liblzma/common/stream_flags_decoder.c |  3 +-
- src/liblzma/common/stream_flags_encoder.c | 10 ++--
- tests/test_stream_flags.c                 |  8 ++-
- 8 files changed, 129 insertions(+), 20 deletions(-)
-
-commit ec490da5228263b25bf786bb23d1008468f55b30
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-11 23:10:44 +0300
-
-    Simplified debug/known_sizes.c to match the relaxed
-    requirements of Block encoder.
-
- debug/known_sizes.c | 14 +++++---------
- 1 file changed, 5 insertions(+), 9 deletions(-)
+ src/xz/args.c    | 78 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ src/xz/args.h    |  1 +
+ src/xz/coder.c   | 48 ++++++++++++++++++++++++++++------
+ src/xz/coder.h   |  4 +++
+ src/xz/main.c    |  1 +
+ src/xz/message.c |  6 +++++
+ src/xz/xz.1      | 23 +++++++++++++++--
+ 7 files changed, 151 insertions(+), 10 deletions(-)
 
-commit 16e8b98f2659347edfa74afdbbb9e73311153cb9
+commit 972179cdcdf5d8949c48ee31737d87d3050b44af
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-11 23:09:24 +0300
+Date:   2012-07-01 18:44:33 +0300
 
-    Remove a check from Block encoder that should have already
-    been removed in 2ba01bfa755e47ff6af84a978e3c8d63d7d2775e.
+    xz: Update the man page about the new field in --robot -lvv.
 
- src/liblzma/common/block_encoder.c | 5 -----
- 1 file changed, 5 deletions(-)
+ src/xz/xz.1 | 18 +++++++++++++++++-
+ 1 file changed, 17 insertions(+), 1 deletion(-)
 
-commit 5a710c3805bdf6d7e3c92e954e4e4565b27bcb13
+commit 1403707fc64a70976aebe66f8d9a9bd12f73a2c5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-11 20:02:38 +0300
-
-    Remove bogus #includes.
-
- src/liblzma/common/Makefile.am            |  1 -
- src/liblzma/common/stream_decoder.c       |  3 ---
- src/liblzma/common/stream_encoder.c       |  1 -
- src/liblzma/common/stream_flags_decoder.h | 31 -------------------------------
- 4 files changed, 36 deletions(-)
+Date:   2012-06-28 10:47:49 +0300
 
-commit 01892b2ca5f69bed0ea746e04b604030d57806bb
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-11 10:49:14 +0300
+    liblzma: Check that the first byte of range encoded data is 0x00.
 
-    Updated THANKS.
+    It is just to be more pedantic and thus perhaps catch broken
+    files slightly earlier.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+ src/liblzma/lzma/lzma_decoder.c        |  8 ++++++--
+ src/liblzma/rangecoder/range_decoder.h | 12 +++++++++---
+ 2 files changed, 15 insertions(+), 5 deletions(-)
 
-commit 962f2231d49409fe6852e44ffe8c5dbabb04bc7d
+commit eccd8017ffe2c5de473222c4963ec53c62f7fda2
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-11 10:48:12 +0300
+Date:   2012-06-22 19:00:23 +0300
 
-    Fix a compiler error on big endian systems that don't
-    support unaligned memory access.
+    Update NEWS from 5.0.4.
 
- src/common/integer.h | 32 ++++++++++++++++++--------------
- 1 file changed, 18 insertions(+), 14 deletions(-)
+ NEWS | 37 +++++++++++++++++++++++++++++++++++++
+ 1 file changed, 37 insertions(+)
 
-commit fa3ab0df8ae7a8a1ad55b52266dc0fd387458671
+commit 2e6754eac26a431e8d340c28906f63bcd1e177e8
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-11 10:46:14 +0300
+Date:   2012-06-22 14:34:03 +0300
 
-    Silence a compiler warning.
+    xz: Update man page date to match the latest update.
 
- src/lzma/process.c | 2 +-
+ src/xz/xz.1 | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 9373e81e18822db4972819442ea4c2cb9955470b
+commit b3235a0b1af45d5e1244cbe3191516966c076fa0
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-10 19:16:32 +0300
+Date:   2012-06-18 21:27:47 +0300
 
-    Bumped version to 4.999.6alpha.
+    Docs: Language fix to 01_compress_easy.c.
 
- configure.ac                   | 2 +-
- src/liblzma/api/lzma/version.h | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+    Thanks to Jonathan Nieder.
+
+ doc/examples/01_compress_easy.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit cb072b7c8442ba68bb0c62c0abbbe939794887a3
+commit f1675f765fe228cb5a5f904f853445a03e33cfe9
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-10 17:02:00 +0300
+Date:   2012-06-14 20:15:30 +0300
 
-    Check for LZMA_FILTER_RESERVED_START in filter_flags_encoder.c.
-    Use LZMA_PROG_ERROR instead of LZMA_HEADER_ERROR if the Filter ID
-    is in the reserved range. This allows Block Header encoder to
-    detect unallowed Filter IDs, which is good for Stream encoder.
+    Fix the top-level Makefile.am for the new example programs.
 
- src/liblzma/common/filter_flags_encoder.c | 7 ++++---
- 1 file changed, 4 insertions(+), 3 deletions(-)
+ Makefile.am | 12 ++++++++++--
+ 1 file changed, 10 insertions(+), 2 deletions(-)
 
-commit 123ab0acec435c9e9866a99e30482116cfbd9ba5
+commit 3a0c5378abefaf86aa39a62a7c9682bdb21568a1
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-10 16:44:32 +0300
+Date:   2012-06-14 10:52:33 +0300
+
+    Docs: Add new example programs.
 
-    Filter handling cleanups
+    These have more comments than the old examples and
+    human-readable error messages. More tutorial-like examples
+    are needed but these are a start.
 
- src/liblzma/api/lzma/filter.h       | 133 +++++++++++++++++++++++++++---------
- src/liblzma/common/filter_common.h  |   3 +
- src/liblzma/common/filter_decoder.c |  80 +++++++---------------
- src/liblzma/common/filter_decoder.h |   5 --
- src/liblzma/common/filter_encoder.c |  82 +++++++---------------
- src/liblzma/common/filter_encoder.h |   4 --
- 6 files changed, 156 insertions(+), 151 deletions(-)
+ doc/examples/00_README.txt        |  27 ++++
+ doc/examples/01_compress_easy.c   | 297 ++++++++++++++++++++++++++++++++++++++
+ doc/examples/02_decompress.c      | 287 ++++++++++++++++++++++++++++++++++++
+ doc/examples/03_compress_custom.c | 193 +++++++++++++++++++++++++
+ doc/examples/Makefile             |  23 +++
+ 5 files changed, 827 insertions(+)
 
-commit 9cfcd0c4f2f865d8fbbb46ea28344a9be0dd8ad1
+commit 1bd2c2c553e30c4a73cfb82abc6908efd6be6b8d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-10 00:33:00 +0300
-
-    Comments
-
- src/liblzma/common/stream_encoder.c | 6 +++++-
- 1 file changed, 5 insertions(+), 1 deletion(-)
+Date:   2012-06-14 10:33:27 +0300
 
-commit 2ba01bfa755e47ff6af84a978e3c8d63d7d2775e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-10 00:27:02 +0300
+    Docs: Move xz_pipe_comp.c and xz_pipe_decomp.c to doc/examples_old.
 
-    Cleaned up Block encoder and moved the no longer shared
-    code from block_private.h to block_decoder.c. Now the Block
-    encoder doesn't need compressed_size and uncompressed_size
-    from lzma_block structure to be initialized.
+    It is good to keep these around to so that if someone has
+    copied the decompressor bug from xz_pipe_decomp.c he has
+    an example how to easily fix it.
 
- src/liblzma/api/lzma/block.h       |  3 --
- src/liblzma/common/Makefile.am     |  1 -
- src/liblzma/common/block_decoder.c | 23 +++++++++-
- src/liblzma/common/block_encoder.c | 92 ++++++++++++++++++--------------------
- src/liblzma/common/block_private.h | 47 -------------------
- 5 files changed, 66 insertions(+), 100 deletions(-)
+ doc/{examples => examples_old}/xz_pipe_comp.c   | 0
+ doc/{examples => examples_old}/xz_pipe_decomp.c | 0
+ 2 files changed, 0 insertions(+), 0 deletions(-)
 
-commit 07efcb5a6bc5d7018798ebd728586f84183e7d64
+commit 905f0ab5b5ce544d4b68a2ed6077df0f3d021292
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-07 10:23:13 +0300
+Date:   2012-06-14 10:33:01 +0300
 
-    Changed Filter ID of LZMA to 0x20.
+    Docs: Fix a bug in xz_pipe_decomp.c example program.
 
- doc/file-format.txt         | 4 ++--
- src/liblzma/api/lzma/lzma.h | 2 +-
- 2 files changed, 3 insertions(+), 3 deletions(-)
+ doc/examples/xz_pipe_decomp.c | 10 +++++++++-
+ 1 file changed, 9 insertions(+), 1 deletion(-)
 
-commit 32fe5fa541e82c08e054086279079ae5016bd8d8
+commit 4bd1a3bd5fdf4870b2f96dd0b8a21657c8a58ad8
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-06 23:42:50 +0300
-
-    Comments
-
- src/liblzma/api/lzma/base.h      | 81 ++++++++++++++++++++++++++--------------
- src/liblzma/api/lzma/container.h |  6 ++-
- src/liblzma/lz/lz_encoder.c      |  3 +-
- src/liblzma/lz/lz_encoder.h      | 12 +++---
- src/liblzma/lz/lz_encoder_mf.c   |  2 +-
- 5 files changed, 65 insertions(+), 39 deletions(-)
+Date:   2012-05-30 23:14:33 +0300
 
-commit 0a31ed9d5e3cde4feb094b66f3a8b2c074605d84
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-06 15:14:30 +0300
+    Translations: Update the French translation.
 
-    Some API cleanups
+    Thanks to Adrien Nader.
 
- src/liblzma/api/lzma/base.h         | 314 +++++++++++++++++++++++-------------
- src/liblzma/api/lzma/check.h        |  10 ++
- src/liblzma/api/lzma/container.h    |  40 +++--
- src/liblzma/common/auto_decoder.c   |  18 +--
- src/liblzma/common/common.c         |   7 +
- src/liblzma/common/common.h         |  18 ++-
- src/liblzma/common/easy.c           |   2 +-
- src/liblzma/common/stream_decoder.c |  31 ++--
- src/lzma/process.c                  |   2 +-
- src/lzmadec/lzmadec.c               |   6 +-
- tests/tests.h                       |  72 +++------
- 11 files changed, 301 insertions(+), 219 deletions(-)
+ po/fr.po | 148 ++++++++++++++++++++++++++++++++++-----------------------------
+ 1 file changed, 79 insertions(+), 69 deletions(-)
 
-commit da98df54400998be2a6c3876f9655a3c51b93c10
+commit d2e836f2f3a87df6fe6bb0589b037db51205d910
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-04 11:53:06 +0300
-
-    Added support for raw encoding and decoding to the command
-    line tool, and made various cleanups. --lzma was renamed to
-    --lzma1 to prevent people from accidentally using LZMA when
-    they want LZMA2.
-
- src/lzma/args.c    | 17 +++++++++--------
- src/lzma/args.h    |  1 +
- src/lzma/help.c    | 24 ++++++------------------
- src/lzma/process.c | 42 ++++++++++++++++++++++++++++++++++--------
- 4 files changed, 50 insertions(+), 34 deletions(-)
+Date:   2012-05-29 23:42:37 +0300
 
-commit 2496aee8a7741a8a0d42987db41ff2cf1a4bdabd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-04 10:39:15 +0300
+    Translations: Update the German translation.
 
-    Don't allow LZMA_SYNC_FLUSH with decoders anymore. There's
-    simply nothing that would use it. Allow LZMA_FINISH to the
-    decoders, which will usually ignore it (auto decoder and
-    Stream decoder being exceptions).
+    The previous only included the new strings in v5.0.
 
- src/liblzma/common/alone_decoder.c  | 1 -
- src/liblzma/common/block_decoder.c  | 2 +-
- src/liblzma/common/filter_decoder.c | 2 +-
- 3 files changed, 2 insertions(+), 3 deletions(-)
+ po/de.po | 229 +++++++++++++++++++++++++++++++++++++--------------------------
+ 1 file changed, 133 insertions(+), 96 deletions(-)
 
-commit bea301c26d5d52675e11e0236faec0492af98f60
+commit c9a16151577ba459afd6e3528df23bc0ddb95171
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-03 17:06:25 +0300
+Date:   2012-05-29 22:26:27 +0300
 
-    Minor updates to the file format specification.
+    Translations: Update the German translation.
 
- doc/file-format.txt | 105 ++++++++++++++++++++++++++++++++++++++++++----------
- 1 file changed, 85 insertions(+), 20 deletions(-)
+ po/de.po | 169 ++++++++++++++++++++++++++++++++++-----------------------------
+ 1 file changed, 91 insertions(+), 78 deletions(-)
 
-commit 9c75b089b4a9e0edcf4cf7970a4383768707d6c8
+commit 1530a74fd48f8493372edad137a24541efe24713
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-02 19:33:32 +0300
+Date:   2012-05-29 22:14:21 +0300
 
-    Command line tool fixes
+    Translations: Update Polish translation.
 
- src/lzma/process.c | 21 +++++++++++++--------
- 1 file changed, 13 insertions(+), 8 deletions(-)
+ po/pl.po | 283 +++++++++++++++++++++++++++++++++++++--------------------------
+ 1 file changed, 165 insertions(+), 118 deletions(-)
 
-commit bab0590504b5aeff460ab4ca8c964dd7c1bad9e4
+commit d8db706acb8316f9861abd432cfbe001dd6d0c5c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-02 19:31:42 +0300
+Date:   2012-05-28 20:42:11 +0300
 
-    Auto decoder cleanup
+    liblzma: Fix possibility of incorrect LZMA_BUF_ERROR.
 
- src/liblzma/common/auto_decoder.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    lzma_code() could incorrectly return LZMA_BUF_ERROR if
+    all of the following was true:
 
-commit 689602336d126a46b60d791a67decab65e1e81f5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-02 19:12:12 +0300
+      - The caller knows how many bytes of output to expect
+        and only provides that much output space.
 
-    Updated auto decoder to handle LZMA_CONCATENATED when decoding
-    LZMA_Alone files. Decoding of concatenated LZMA_Alone files is
-    intentionally not supported, so it is better to put this in
-    auto decoder than LZMA_Alone decoder.
+      - When the last output bytes are decoded, the
+        caller-provided input buffer ends right before
+        the LZMA2 end of payload marker. So LZMA2 won't
+        provide more output anymore, but it won't know it
+        yet and thus won't return LZMA_STREAM_END yet.
 
- src/liblzma/common/auto_decoder.c | 87 ++++++++++++++++++++++++++++++++-------
- 1 file changed, 71 insertions(+), 16 deletions(-)
+      - A BCJ filter is in use and it hasn't left any
+        unfiltered bytes in the temp buffer. This can happen
+        with any BCJ filter, but in practice it's more likely
+        with filters other than the x86 BCJ.
 
-commit 80c4158f19904026433eb6f5d5ca98a0ecd4f66c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-02 14:56:52 +0300
+    Another situation where the bug can be triggered happens
+    if the uncompressed size is zero bytes and no output space
+    is provided. In this case the decompression can fail even
+    if the whole input file is given to lzma_code().
 
-    Stream decoder cleanups
+    A similar bug was fixed in XZ Embedded on 2011-09-19.
 
- src/liblzma/common/stream_decoder.c | 57 +++++++++++++++++++++----------------
- 1 file changed, 32 insertions(+), 25 deletions(-)
+ src/liblzma/simple/simple_coder.c |   2 +-
+ tests/Makefile.am                 |   4 +-
+ tests/test_bcj_exact_size.c       | 112 ++++++++++++++++++++++++++++++++++++++
+ 3 files changed, 116 insertions(+), 2 deletions(-)
 
-commit fc681657450ce57be1fe08f7a15d31dcc705e514
+commit 3f94b6d87f1b8f1c421ba548f8ebb83dca9c8cda
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-09-02 11:45:39 +0300
+Date:   2012-05-28 15:38:32 +0300
 
-    Some fixes to LZ encoder.
+    Update THANKS.
 
- src/liblzma/lz/lz_encoder.c    | 56 ++++++++++++++++++++-----
- src/liblzma/lz/lz_encoder.h    | 18 ++++----
- src/liblzma/lz/lz_encoder_mf.c | 95 +++++++++++++++++-------------------------
- 3 files changed, 94 insertions(+), 75 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit ede675f9ac1ca82a7d7c290324adba672118bc8d
+commit 7769ea051d739a38a1640fd448cf5eb83cb119c6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-08-31 11:47:01 +0300
+Date:   2012-05-28 15:37:43 +0300
 
-    Fix wrong pointer calculation in LZMA encoder.
+    xz: Don't show a huge number in -vv when memory limit is disabled.
 
- src/liblzma/lzma/lzma_encoder.c | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
+ src/xz/message.c | 12 +++++++++++-
+ 1 file changed, 11 insertions(+), 1 deletion(-)
 
-commit 3b34851de1eaf358cf9268922fa0eeed8278d680
+commit ec921105725e4d3ef0a683dd83eee6f24ab60ccd
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-08-28 22:53:15 +0300
-
-    Sort of garbage collection commit. :-| Many things are still
-    broken. API has changed a lot and it will still change a
-    little more here and there. The command line tool doesn't
-    have all the required changes to reflect the API changes, so
-    it's easy to get "internal error" or trigger assertions.
-
- configure.ac                                       |  356 +++---
- debug/Makefile.am                                  |    5 +-
- debug/crc32.c                                      |   45 +
- debug/full_flush.c                                 |   14 +-
- debug/hex2bin.c                                    |   54 +
- debug/known_sizes.c                                |  135 ++
- debug/memusage.c                                   |    8 +-
- debug/sync_flush.c                                 |   20 +-
- src/common/integer.h                               |   26 +-
- src/common/sysdefs.h                               |   42 +-
- src/liblzma/Makefile.am                            |   17 +-
- src/liblzma/api/Makefile.am                        |    6 +-
- src/liblzma/api/lzma.h                             |  161 ++-
- src/liblzma/api/lzma/alignment.h                   |    6 +-
- src/liblzma/api/lzma/alone.h                       |   52 -
- src/liblzma/api/lzma/auto.h                        |   36 -
- src/liblzma/api/lzma/base.h                        |   61 +-
- src/liblzma/api/lzma/block.h                       |   38 +-
- src/liblzma/api/lzma/check.h                       |   41 +-
- src/liblzma/api/lzma/container.h                   |  252 ++++
- src/liblzma/api/lzma/delta.h                       |   36 +-
- src/liblzma/api/lzma/easy.h                        |  121 --
- src/liblzma/api/lzma/filter.h                      |   74 +-
- src/liblzma/api/lzma/index.h                       |   40 +-
- src/liblzma/api/lzma/index_hash.h                  |   12 +-
- src/liblzma/api/lzma/lzma.h                        |  222 ++--
- src/liblzma/api/lzma/memlimit.h                    |   15 +-
- src/liblzma/api/lzma/raw.h                         |   60 -
- src/liblzma/api/lzma/simple.h                      |    2 +-
- src/liblzma/api/lzma/stream.h                      |   53 -
- src/liblzma/api/lzma/stream_flags.h                |   17 +-
- src/liblzma/api/lzma/subblock.h                    |    4 +-
- src/liblzma/api/lzma/version.h                     |   10 +-
- src/liblzma/api/lzma/vli.h                         |  131 +-
- src/liblzma/check/check.c                          |  128 +-
- src/liblzma/check/check.h                          |   67 +-
- src/liblzma/check/sha256.c                         |   29 +-
- src/liblzma/common/Makefile.am                     |   51 +-
- src/liblzma/common/alignment.c                     |    4 +-
- src/liblzma/common/allocator.c                     |   58 -
- src/liblzma/common/alone_decoder.c                 |   49 +-
- src/liblzma/common/alone_decoder.h                 |    9 +-
- src/liblzma/common/alone_encoder.c                 |   13 +-
- src/liblzma/common/auto_decoder.c                  |   38 +-
- src/liblzma/common/block_decoder.c                 |   67 +-
- src/liblzma/common/block_decoder.h                 |    2 +-
- src/liblzma/common/block_encoder.c                 |   42 +-
- src/liblzma/common/block_encoder.h                 |    2 +-
- src/liblzma/common/block_header_decoder.c          |    6 +-
- src/liblzma/common/block_header_encoder.c          |    9 +-
- src/liblzma/common/block_util.c                    |   10 +-
- src/liblzma/common/code.c                          |  203 ---
- src/liblzma/common/common.c                        |  298 +++++
- src/liblzma/common/common.h                        |  237 ++--
- src/liblzma/common/delta_common.c                  |   66 -
- src/liblzma/common/delta_common.h                  |   44 -
- src/liblzma/common/delta_decoder.c                 |   61 -
- src/liblzma/common/delta_decoder.h                 |   28 -
- src/liblzma/common/delta_encoder.c                 |   98 --
- src/liblzma/common/delta_encoder.h                 |   28 -
- src/liblzma/common/easy.c                          |   18 +-
- src/liblzma/common/features.c                      |   66 -
- src/liblzma/common/filter_common.c                 |  262 ++++
- src/liblzma/common/filter_common.h                 |   52 +
- src/liblzma/common/filter_decoder.c                |  236 ++++
- src/liblzma/common/filter_decoder.h                |   35 +
- src/liblzma/common/filter_encoder.c                |  308 +++++
- src/liblzma/common/filter_encoder.h                |   38 +
- src/liblzma/common/filter_flags_decoder.c          |  185 +--
- src/liblzma/common/filter_flags_encoder.c          |  261 +---
- src/liblzma/common/index_decoder.c                 |   14 +-
- src/liblzma/common/index_encoder.c                 |   16 +-
- src/liblzma/common/index_hash.c                    |    8 +-
- src/liblzma/common/init_encoder.c                  |    2 +-
- src/liblzma/common/memory_usage.c                  |  112 --
- src/liblzma/common/next_coder.c                    |   65 -
- src/liblzma/common/raw_common.c                    |  127 --
- src/liblzma/common/raw_common.h                    |   30 -
- src/liblzma/common/raw_decoder.c                   |  116 --
- src/liblzma/common/raw_decoder.h                   |   29 -
- src/liblzma/common/raw_encoder.c                   |  111 --
- src/liblzma/common/raw_encoder.h                   |   29 -
- src/liblzma/common/stream_common.c                 |   23 -
- src/liblzma/common/stream_common.h                 |   31 -
- src/liblzma/common/stream_decoder.c                |  238 +++-
- src/liblzma/common/stream_decoder.h                |    4 +-
- src/liblzma/common/stream_encoder.c                |   35 +-
- src/liblzma/common/stream_encoder.h                |    2 +-
- src/liblzma/common/stream_flags_common.c           |   40 +
- src/liblzma/common/stream_flags_common.h           |   31 +
- src/liblzma/common/stream_flags_decoder.c          |    2 +-
- src/liblzma/common/stream_flags_encoder.c          |    2 +-
- src/liblzma/common/stream_flags_equal.c            |   36 -
- src/liblzma/common/version.c                       |   25 -
- src/liblzma/common/vli_decoder.c                   |   29 +-
- src/liblzma/common/vli_encoder.c                   |   23 +-
- src/liblzma/common/vli_size.c                      |   37 +
- src/liblzma/delta/Makefile.am                      |   34 +
- src/liblzma/delta/delta_common.c                   |   66 +
- src/liblzma/delta/delta_common.h                   |   44 +
- src/liblzma/delta/delta_decoder.c                  |   82 ++
- src/liblzma/delta/delta_decoder.h                  |   32 +
- src/liblzma/delta/delta_encoder.c                  |  119 ++
- src/liblzma/delta/delta_encoder.h                  |   30 +
- src/liblzma/lz/Makefile.am                         |   35 +-
- src/liblzma/lz/bt2.c                               |   27 -
- src/liblzma/lz/bt2.h                               |   31 -
- src/liblzma/lz/bt3.c                               |   29 -
- src/liblzma/lz/bt3.h                               |   31 -
- src/liblzma/lz/bt4.c                               |   30 -
- src/liblzma/lz/bt4.h                               |   31 -
- src/liblzma/lz/hc3.c                               |   30 -
- src/liblzma/lz/hc3.h                               |   31 -
- src/liblzma/lz/hc4.c                               |   31 -
- src/liblzma/lz/hc4.h                               |   31 -
- src/liblzma/lz/lz_decoder.c                        |  547 +++-----
- src/liblzma/lz/lz_decoder.h                        |  308 ++---
- src/liblzma/lz/lz_encoder.c                        |  780 ++++++------
- src/liblzma/lz/lz_encoder.h                        |  334 +++--
- src/liblzma/lz/lz_encoder_hash.h                   |  104 ++
- src/liblzma/lz/lz_encoder_mf.c                     |  780 ++++++++++++
- src/liblzma/lz/lz_encoder_private.h                |   40 -
- src/liblzma/lz/match_c.h                           |  412 ------
- src/liblzma/lz/match_h.h                           |   69 --
- src/liblzma/lzma/Makefile.am                       |   37 +-
- src/liblzma/lzma/fastpos.h                         |    8 +-
- src/liblzma/lzma/lzma2_decoder.c                   |  318 +++++
- src/liblzma/lzma/lzma2_decoder.h                   |   35 +
- src/liblzma/lzma/lzma2_encoder.c                   |  406 ++++++
- src/liblzma/lzma/lzma2_encoder.h                   |   34 +
- src/liblzma/lzma/lzma_common.h                     |  208 +++-
- src/liblzma/lzma/lzma_decoder.c                    | 1306 ++++++++++++--------
- src/liblzma/lzma/lzma_decoder.h                    |   21 +-
- src/liblzma/lzma/lzma_encoder.c                    |  576 +++++++--
- src/liblzma/lzma/lzma_encoder.h                    |   38 +-
- src/liblzma/lzma/lzma_encoder_features.c           |    2 +-
- src/liblzma/lzma/lzma_encoder_getoptimum.c         |  925 --------------
- src/liblzma/lzma/lzma_encoder_getoptimumfast.c     |  201 ---
- src/liblzma/lzma/lzma_encoder_init.c               |  228 ----
- src/liblzma/lzma/lzma_encoder_optimum_fast.c       |  193 +++
- src/liblzma/lzma/lzma_encoder_optimum_normal.c     |  875 +++++++++++++
- src/liblzma/lzma/lzma_encoder_presets.c            |   52 +-
- src/liblzma/lzma/lzma_encoder_private.h            |  174 +--
- src/liblzma/lzma/lzma_literal.c                    |   51 -
- src/liblzma/lzma/lzma_literal.h                    |   71 --
- src/liblzma/rangecoder/Makefile.am                 |   10 +-
- src/liblzma/rangecoder/price.h                     |  111 ++
- src/liblzma/rangecoder/price_table.c               |   84 +-
- src/liblzma/rangecoder/price_table_gen.c           |   55 -
- src/liblzma/rangecoder/price_table_init.c          |   33 +-
- src/liblzma/rangecoder/price_tablegen.c            |   56 +
- src/liblzma/rangecoder/range_common.h              |   17 +-
- src/liblzma/rangecoder/range_decoder.h             |  209 ++--
- src/liblzma/rangecoder/range_encoder.h             |   92 +-
- src/liblzma/simple/Makefile.am                     |   12 +
- src/liblzma/simple/simple_coder.c                  |    8 +-
- src/liblzma/simple/simple_decoder.c                |   47 +
- src/liblzma/simple/simple_decoder.h                |   29 +
- src/liblzma/simple/simple_encoder.c                |   45 +
- src/liblzma/simple/simple_encoder.h                |   30 +
- src/liblzma/subblock/Makefile.am                   |    4 +-
- src/liblzma/subblock/subblock_decoder.c            |   20 +-
- src/liblzma/subblock/subblock_decoder_helper.c     |    2 +-
- src/liblzma/subblock/subblock_encoder.c            |   28 +-
- src/lzma/args.c                                    |   35 +-
- src/lzma/args.h                                    |    4 +-
- src/lzma/options.c                                 |   14 +-
- src/lzma/process.c                                 |   88 +-
- src/lzmadec/lzmadec.c                              |  157 +--
- tests/Makefile.am                                  |    1 +
- tests/files/README                                 |  303 ++---
- tests/files/bad-0-backward_size.lzma               |  Bin 0 -> 32 bytes
- tests/files/bad-0-empty-truncated.lzma             |  Bin 0 -> 31 bytes
- tests/files/bad-0-nonempty_index.lzma              |  Bin 0 -> 32 bytes
- tests/files/bad-0cat-alone.lzma                    |  Bin 0 -> 55 bytes
- tests/files/bad-0catpad-empty.lzma                 |  Bin 0 -> 69 bytes
- tests/files/bad-0pad-empty.lzma                    |  Bin 0 -> 37 bytes
- tests/files/bad-1-block_header-1.lzma              |  Bin 0 -> 64 bytes
- tests/files/bad-1-block_header-2.lzma              |  Bin 0 -> 64 bytes
- tests/files/bad-1-block_header-3.lzma              |  Bin 0 -> 68 bytes
- tests/files/bad-1-block_header-4.lzma              |  Bin 0 -> 72 bytes
- tests/files/bad-1-check-crc32.lzma                 |  Bin 0 -> 68 bytes
- tests/files/bad-1-check-crc64.lzma                 |  Bin 0 -> 72 bytes
- tests/files/bad-1-check-sha256.lzma                |  Bin 0 -> 96 bytes
- tests/files/bad-1-lzma2-1.lzma                     |  Bin 0 -> 64 bytes
- tests/files/bad-1-lzma2-2.lzma                     |  Bin 0 -> 424 bytes
- tests/files/bad-1-lzma2-3.lzma                     |  Bin 0 -> 424 bytes
- tests/files/bad-1-lzma2-4.lzma                     |  Bin 0 -> 408 bytes
- tests/files/bad-1-lzma2-5.lzma                     |  Bin 0 -> 408 bytes
- tests/files/bad-1-lzma2-6.lzma                     |  Bin 0 -> 68 bytes
- tests/files/bad-1-lzma2-7.lzma                     |  Bin 0 -> 408 bytes
- tests/files/bad-1-stream_flags-1.lzma              |  Bin 0 -> 68 bytes
- tests/files/bad-1-stream_flags-2.lzma              |  Bin 0 -> 68 bytes
- tests/files/bad-1-stream_flags-3.lzma              |  Bin 0 -> 68 bytes
- tests/files/bad-1-vli-1.lzma                       |  Bin 0 -> 72 bytes
- tests/files/bad-1-vli-2.lzma                       |  Bin 0 -> 72 bytes
- tests/files/bad-2-compressed_data_padding.lzma     |  Bin 0 -> 92 bytes
- tests/files/bad-2-index-1.lzma                     |  Bin 0 -> 92 bytes
- tests/files/bad-2-index-2.lzma                     |  Bin 0 -> 92 bytes
- tests/files/bad-2-index-3.lzma                     |  Bin 0 -> 92 bytes
- tests/files/bad-2-index-4.lzma                     |  Bin 0 -> 92 bytes
- tests/files/bad-cat-single-none-pad_garbage_1.lzma |  Bin 65 -> 0 bytes
- tests/files/bad-cat-single-none-pad_garbage_2.lzma |  Bin 65 -> 0 bytes
- tests/files/bad-cat-single-none-pad_garbage_3.lzma |  Bin 65 -> 0 bytes
- tests/files/bad-multi-none-1.lzma                  |  Bin 54 -> 0 bytes
- tests/files/bad-multi-none-2.lzma                  |  Bin 53 -> 0 bytes
- tests/files/bad-multi-none-3.lzma                  |  Bin 53 -> 0 bytes
- tests/files/bad-multi-none-block_1.lzma            |  Bin 66 -> 0 bytes
- tests/files/bad-multi-none-block_2.lzma            |  Bin 66 -> 0 bytes
- tests/files/bad-multi-none-block_3.lzma            |  Bin 58 -> 0 bytes
- tests/files/bad-multi-none-extra_1.lzma            |  Bin 54 -> 0 bytes
- tests/files/bad-multi-none-extra_2.lzma            |  Bin 54 -> 0 bytes
- tests/files/bad-multi-none-extra_3.lzma            |  Bin 55 -> 0 bytes
- tests/files/bad-multi-none-header_1.lzma           |  Bin 57 -> 0 bytes
- tests/files/bad-multi-none-header_2.lzma           |  Bin 61 -> 0 bytes
- tests/files/bad-multi-none-header_3.lzma           |  Bin 59 -> 0 bytes
- tests/files/bad-multi-none-header_4.lzma           |  Bin 59 -> 0 bytes
- tests/files/bad-multi-none-header_5.lzma           |  Bin 58 -> 0 bytes
- tests/files/bad-multi-none-header_6.lzma           |  Bin 59 -> 0 bytes
- tests/files/bad-multi-none-header_7.lzma           |  Bin 59 -> 0 bytes
- tests/files/bad-multi-none-index_1.lzma            |  Bin 51 -> 0 bytes
- tests/files/bad-multi-none-index_2.lzma            |  Bin 49 -> 0 bytes
- tests/files/bad-multi-none-index_3.lzma            |  Bin 51 -> 0 bytes
- tests/files/bad-multi-none-index_4.lzma            |  Bin 51 -> 0 bytes
- tests/files/bad-single-data_after_eopm_1.lzma      |  Bin 55 -> 0 bytes
- tests/files/bad-single-data_after_eopm_2.lzma      |  Bin 56 -> 0 bytes
- tests/files/bad-single-lzma-flush_beginning.lzma   |  Bin 53 -> 0 bytes
- tests/files/bad-single-lzma-flush_twice.lzma       |  Bin 63 -> 0 bytes
- tests/files/bad-single-none-empty.lzma             |  Bin 19 -> 0 bytes
- .../files/bad-single-none-footer_filter_flags.lzma |  Bin 30 -> 0 bytes
- tests/files/bad-single-none-too_long_vli.lzma      |  Bin 39 -> 0 bytes
- tests/files/bad-single-none-truncated.lzma         |  Bin 29 -> 0 bytes
- tests/files/bad-single-subblock-padding_loop.lzma  |  Bin 43 -> 0 bytes
- tests/files/bad-single-subblock1023-slow.lzma      |  Bin 7886 -> 0 bytes
- tests/files/bad-single-subblock_subblock.lzma      |  Bin 26 -> 0 bytes
- tests/files/good-0-empty.lzma                      |  Bin 0 -> 32 bytes
- tests/files/good-0cat-empty.lzma                   |  Bin 0 -> 64 bytes
- tests/files/good-0catpad-empty.lzma                |  Bin 0 -> 68 bytes
- tests/files/good-0pad-empty.lzma                   |  Bin 0 -> 36 bytes
- tests/files/good-1-3delta-lzma2.lzma               |  Bin 0 -> 528 bytes
- tests/files/good-1-block_header-1.lzma             |  Bin 0 -> 72 bytes
- tests/files/good-1-block_header-2.lzma             |  Bin 0 -> 68 bytes
- tests/files/good-1-block_header-3.lzma             |  Bin 0 -> 68 bytes
- tests/files/good-1-check-crc32.lzma                |  Bin 0 -> 68 bytes
- tests/files/good-1-check-crc64.lzma                |  Bin 0 -> 72 bytes
- tests/files/good-1-check-none.lzma                 |  Bin 0 -> 64 bytes
- tests/files/good-1-check-sha256.lzma               |  Bin 0 -> 96 bytes
- tests/files/good-1-delta-lzma2.tiff.lzma           |  Bin 0 -> 51312 bytes
- tests/files/good-1-lzma2-1.lzma                    |  Bin 0 -> 424 bytes
- tests/files/good-1-lzma2-2.lzma                    |  Bin 0 -> 424 bytes
- tests/files/good-1-lzma2-3.lzma                    |  Bin 0 -> 408 bytes
- tests/files/good-1-sparc-lzma2.lzma                |  Bin 0 -> 2292 bytes
- tests/files/good-1-x86-lzma2.lzma                  |  Bin 0 -> 1936 bytes
- tests/files/good-2-lzma2.lzma                      |  Bin 0 -> 92 bytes
- tests/files/good-cat-single-none-pad.lzma          |  Bin 64 -> 0 bytes
- tests/files/good-multi-none-1.lzma                 |  Bin 75 -> 0 bytes
- tests/files/good-multi-none-2.lzma                 |  Bin 53 -> 0 bytes
- tests/files/good-multi-none-block_1.lzma           |  Bin 66 -> 0 bytes
- tests/files/good-multi-none-block_2.lzma           |  Bin 58 -> 0 bytes
- tests/files/good-multi-none-extra_1.lzma           |  Bin 51 -> 0 bytes
- tests/files/good-multi-none-extra_2.lzma           |  Bin 79 -> 0 bytes
- tests/files/good-multi-none-extra_3.lzma           |  Bin 55 -> 0 bytes
- tests/files/good-multi-none-header_1.lzma          |  Bin 58 -> 0 bytes
- tests/files/good-multi-none-header_2.lzma          |  Bin 66 -> 0 bytes
- tests/files/good-multi-none-header_3.lzma          |  Bin 59 -> 0 bytes
- tests/files/good-single-delta-lzma.tiff.lzma       |  Bin 51409 -> 0 bytes
- tests/files/good-single-lzma-empty.lzma            |  Bin 21 -> 0 bytes
- tests/files/good-single-lzma-flush_1.lzma          |  Bin 48 -> 0 bytes
- tests/files/good-single-lzma-flush_2.lzma          |  Bin 63 -> 0 bytes
- tests/files/good-single-lzma.lzma                  |  Bin 44 -> 0 bytes
- tests/files/good-single-none-empty_1.lzma          |  Bin 18 -> 0 bytes
- tests/files/good-single-none-empty_2.lzma          |  Bin 26 -> 0 bytes
- tests/files/good-single-none-empty_3.lzma          |  Bin 19 -> 0 bytes
- tests/files/good-single-none-pad.lzma              |  Bin 32 -> 0 bytes
- tests/files/good-single-none.lzma                  |  Bin 30 -> 0 bytes
- tests/files/good-single-sparc-lzma.lzma            |  Bin 2263 -> 0 bytes
- tests/files/good-single-subblock-lzma.lzma         |  Bin 50 -> 0 bytes
- tests/files/good-single-subblock_implicit.lzma     |  Bin 35 -> 0 bytes
- tests/files/good-single-subblock_rle.lzma          |  Bin 118 -> 0 bytes
- tests/files/good-single-x86-lzma.lzma              |  Bin 1909 -> 0 bytes
- tests/files/malicious-multi-metadata-64PiB.lzma    |  Bin 51 -> 0 bytes
- tests/files/malicious-single-subblock-256MiB.lzma  |  Bin 30 -> 0 bytes
- tests/files/malicious-single-subblock-64PiB.lzma   |  Bin 45 -> 0 bytes
- tests/files/malicious-single-subblock31-slow.lzma  |  Bin 1233 -> 0 bytes
- tests/files/unsupported-block_header.lzma          |  Bin 0 -> 68 bytes
- tests/files/unsupported-check.lzma                 |  Bin 0 -> 68 bytes
- tests/files/unsupported-filter_flags-1.lzma        |  Bin 0 -> 68 bytes
- tests/files/unsupported-filter_flags-2.lzma        |  Bin 0 -> 68 bytes
- tests/files/unsupported-filter_flags-3.lzma        |  Bin 0 -> 68 bytes
- tests/test_block_header.c                          |   28 +-
- tests/test_compress.sh                             |    4 +-
- tests/test_filter_flags.c                          |   51 +-
- tests/test_stream_flags.c                          |    4 +-
- tests/tests.h                                      |    8 +
- 294 files changed, 9768 insertions(+), 8195 deletions(-)
+Date:   2012-05-27 22:30:17 +0300
 
-commit 57b9a145a527f0716822615e5ed536d33aebd3fc
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-20 17:16:32 +0300
+    xz: Document the "summary" lines of --robot -lvv.
 
-    Fix test_filter_flags to match the new restriction of lc+lp.
+    This documents only the columns that are in v5.0.
+    The new columns added in the master branch aren't
+    necessarily stable yet.
 
- tests/test_filter_flags.c | 3 +++
- 1 file changed, 3 insertions(+)
+ src/xz/xz.1 | 19 +++++++++++++++++++
+ 1 file changed, 19 insertions(+)
 
-commit eaafc4367c77ec1d910e16d11b4da293969d97a3
+commit 27d24eb0a9f6eed96d6a4594c2b0bf7a91d29f9a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-20 16:19:54 +0300
+Date:   2012-05-27 21:53:20 +0300
 
-    Remove some redundant code from LZMA encoder.
+    xz: Fix output of verbose --robot --list modes.
 
- src/liblzma/lzma/lzma_encoder.c | 15 +--------------
- 1 file changed, 1 insertion(+), 14 deletions(-)
+    It printed the filename in "filename (x/y)" format
+    which it obviously shouldn't do in robot mode.
 
-commit 0809c46534fa5664fe35d9e98d95e87312ed130e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-19 16:35:08 +0300
-
-    Add limit of lc + lp <= 4. Now we can allocate the
-    literal coder as part of the main LZMA encoder or
-    decoder structure.
-    
-    Make the LZMA decoder to rely on the current internal API
-    to free the allocated memory in case an error occurs.
-
- src/liblzma/api/lzma/lzma.h             | 10 +++++-
- src/liblzma/lzma/lzma_decoder.c         | 57 ++++++++-------------------------
- src/liblzma/lzma/lzma_encoder_init.c    | 13 ++++----
- src/liblzma/lzma/lzma_encoder_private.h |  2 +-
- src/liblzma/lzma/lzma_literal.c         | 39 +++++-----------------
- src/liblzma/lzma/lzma_literal.h         | 13 +++-----
- 6 files changed, 43 insertions(+), 91 deletions(-)
-
-commit d25ab1b96178f06a0e724f58e3cd68300b2b1275
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-18 21:45:19 +0300
-
-    Comments
-
- src/liblzma/lzma/lzma_encoder.c | 7 ++-----
- 1 file changed, 2 insertions(+), 5 deletions(-)
-
-commit 6368a2fa5901c75864be5171dd57a50af7adbb41
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-18 19:19:02 +0300
-
-    Delete old code that was supposed to be already deleted
-    from test_block_header.c.
-
- tests/test_block_header.c | 30 ------------------------------
- 1 file changed, 30 deletions(-)
-
-commit 7d17818cec8597f847b0a2537fde991bbc3d9e96
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-18 18:02:10 +0300
-
-    Update the code to mostly match the new simpler file format
-    specification. Simplify things by removing most of the
-    support for known uncompressed size in most places.
-    There are some miscellaneous changes here and there too.
-    
-    The API of liblzma has got many changes and still some
-    more will be done soon. While most of the code has been
-    updated, some things are not fixed (the command line tool
-    will choke with invalid filter chain, if nothing else).
-    
-    Subblock filter is somewhat broken for now. It will be
-    updated once the encoded format of the Subblock filter
-    has been decided.
-
- configure.ac                                   |  41 +-
- debug/full_flush.c                             |  16 +-
- debug/sync_flush.c                             |  15 +-
- src/common/bswap.h                             |  44 ++
- src/common/integer.h                           | 167 +++++
- src/liblzma/api/Makefile.am                    |   5 +-
- src/liblzma/api/lzma.h                         |   9 +-
- src/liblzma/api/lzma/alone.h                   |  32 +-
- src/liblzma/api/lzma/auto.h                    |   7 +-
- src/liblzma/api/lzma/base.h                    |  15 +
- src/liblzma/api/lzma/block.h                   | 306 +++-------
- src/liblzma/api/lzma/check.h                   |  18 +-
- src/liblzma/api/lzma/copy.h                    |  29 -
- src/liblzma/api/lzma/easy.h                    |  61 +-
- src/liblzma/api/lzma/extra.h                   | 114 ----
- src/liblzma/api/lzma/filter.h                  |   5 +-
- src/liblzma/api/lzma/index.h                   | 204 ++++++-
- src/liblzma/api/lzma/index_hash.h              |  94 +++
- src/liblzma/api/lzma/info.h                    | 315 ----------
- src/liblzma/api/lzma/lzma.h                    |   2 +-
- src/liblzma/api/lzma/metadata.h                | 100 ---
- src/liblzma/api/lzma/raw.h                     |  20 +-
- src/liblzma/api/lzma/stream.h                  | 157 +----
- src/liblzma/api/lzma/stream_flags.h            | 146 +++--
- src/liblzma/api/lzma/version.h                 |   2 +-
- src/liblzma/api/lzma/vli.h                     |  83 ++-
- src/liblzma/check/Makefile.am                  |   1 -
- src/liblzma/check/check.c                      |  55 +-
- src/liblzma/check/check.h                      |  47 +-
- src/liblzma/check/check_byteswap.h             |  43 --
- src/liblzma/check/crc32_init.c                 |   2 +-
- src/liblzma/check/crc64_init.c                 |   2 +-
- src/liblzma/check/crc_macros.h                 |   2 +-
- src/liblzma/check/sha256.c                     |  53 +-
- src/liblzma/common/Makefile.am                 |  31 +-
- src/liblzma/common/alignment.c                 |   5 +-
- src/liblzma/common/alone_decoder.c             |  77 +--
- src/liblzma/common/alone_encoder.c             |  99 ++-
- src/liblzma/common/auto_decoder.c              |  18 +-
- src/liblzma/common/block_decoder.c             | 298 +++------
- src/liblzma/common/block_encoder.c             | 228 ++-----
- src/liblzma/common/block_header_decoder.c      | 400 +++---------
- src/liblzma/common/block_header_encoder.c      | 207 +++----
- src/liblzma/common/block_private.h             |  51 +-
- src/liblzma/common/block_util.c                |  73 +++
- src/liblzma/common/common.h                    |  44 +-
- src/liblzma/common/copy_coder.c                | 144 -----
- src/liblzma/common/copy_coder.h                |  31 -
- src/liblzma/common/delta_common.c              |   4 -
- src/liblzma/common/delta_common.h              |   4 -
- src/liblzma/common/delta_decoder.c             |  55 +-
- src/liblzma/common/delta_encoder.c             |   7 +-
- src/liblzma/common/easy.c                      | 122 ++++
- src/liblzma/common/easy_common.c               |  54 --
- src/liblzma/common/easy_common.h               |  28 -
- src/liblzma/common/easy_multi.c                | 103 ----
- src/liblzma/common/easy_single.c               |  37 --
- src/liblzma/common/extra.c                     |  34 --
- src/liblzma/common/features.c                  |   4 -
- src/liblzma/common/filter_flags_decoder.c      | 384 ++++--------
- src/liblzma/common/filter_flags_encoder.c      | 120 +---
- src/liblzma/common/index.c                     | 773 ++++++++++++++++++++---
- src/liblzma/common/index.h                     |  67 ++
- src/liblzma/common/index_decoder.c             | 252 ++++++++
- src/liblzma/common/index_encoder.c             | 222 +++++++
- src/liblzma/common/index_encoder.h             |  30 +
- src/liblzma/common/index_hash.c                | 340 +++++++++++
- src/liblzma/common/info.c                      | 814 -------------------------
- src/liblzma/common/memory_usage.c              |   1 -
- src/liblzma/common/metadata_decoder.c          | 578 ------------------
- src/liblzma/common/metadata_decoder.h          |  31 -
- src/liblzma/common/metadata_encoder.c          | 435 -------------
- src/liblzma/common/metadata_encoder.h          |  30 -
- src/liblzma/common/raw_common.c                | 178 ++----
- src/liblzma/common/raw_common.h                |   5 +-
- src/liblzma/common/raw_decoder.c               |  19 +-
- src/liblzma/common/raw_decoder.h               |   3 +-
- src/liblzma/common/raw_encoder.c               | 101 +--
- src/liblzma/common/raw_encoder.h               |   3 +-
- src/liblzma/common/stream_common.h             |   3 +
- src/liblzma/common/stream_decoder.c            | 458 +++++---------
- src/liblzma/common/stream_decoder.h            |  28 +
- src/liblzma/common/stream_encoder.c            | 282 +++++++++
- src/liblzma/common/stream_encoder.h            |  30 +
- src/liblzma/common/stream_encoder_multi.c      | 445 --------------
- src/liblzma/common/stream_encoder_multi.h      |  26 -
- src/liblzma/common/stream_encoder_single.c     | 219 -------
- src/liblzma/common/stream_flags_decoder.c      | 260 ++------
- src/liblzma/common/stream_flags_encoder.c      |  56 +-
- src/liblzma/common/stream_flags_equal.c        |  36 ++
- src/liblzma/common/vli_decoder.c               |  68 ++-
- src/liblzma/common/vli_encoder.c               |  59 +-
- src/liblzma/common/vli_reverse_decoder.c       |  55 --
- src/liblzma/lz/lz_decoder.c                    |   6 +-
- src/liblzma/lz/lz_decoder.h                    |  10 +-
- src/liblzma/lzma/lzma_decoder.c                |  13 +-
- src/liblzma/lzma/lzma_decoder.h                |  10 +-
- src/liblzma/simple/simple_coder.c              |  29 +-
- src/liblzma/simple/simple_private.h            |   4 -
- src/liblzma/subblock/subblock_decoder.c        | 106 +---
- src/liblzma/subblock/subblock_decoder_helper.c |   5 +-
- src/liblzma/subblock/subblock_encoder.c        |   8 +-
- src/lzma/args.c                                |  22 +-
- src/lzma/args.h                                |   2 -
- src/lzma/error.c                               |   6 +
- src/lzma/process.c                             |  26 +-
- src/lzmadec/lzmadec.c                          |   8 +-
- tests/Makefile.am                              |   5 +-
- tests/test_block_header.c                      | 411 +++++--------
- tests/test_compress.sh                         |  65 +-
- tests/test_filter_flags.c                      | 116 ++--
- tests/test_index.c                             | 504 ++++++++++++++-
- tests/test_info.c                              | 717 ----------------------
- tests/test_stream_flags.c                      | 134 ++--
- tests/tests.h                                  |  14 +-
- 115 files changed, 4846 insertions(+), 8156 deletions(-)
-
-commit bf6348d1a3ff09fdc06940468f318f75ffa6af11
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-17 15:03:46 +0300
-
-    Update the file format specification draft. The new one is
-    a lot simpler than the previous versions, but it also means
-    that the existing code will change a lot.
-
- doc/file-format.txt | 1794 +++++++++++++++------------------------------------
- 1 file changed, 508 insertions(+), 1286 deletions(-)
+ src/xz/message.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 803194ddd26f01ff60ba4e9924c6087a56b29827
+commit ab25b82a91754d9388c89abddf806424671d9431
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-11 21:42:47 +0300
+Date:   2012-05-24 18:33:54 +0300
 
-    Fix uninitialized variable in LZMA encoder. This was
-    introduced in 369f72fd656f537a9a8e06f13e6d0d4c242be22f.
+    Build: Upgrade m4/acx_pthread.m4 to the latest version.
 
- src/liblzma/lzma/lzma_encoder_init.c | 2 ++
- 1 file changed, 2 insertions(+)
+ m4/ax_pthread.m4 | 98 +++++++++++++++++++++++++++++++++++---------------------
+ 1 file changed, 62 insertions(+), 36 deletions(-)
 
-commit 0ea98e52ba87453497b1355c51f13bad55c8924a
+commit d05d6d65c41a4bc83f162fa3d67c5d84e8751634
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-11 15:08:44 +0300
+Date:   2012-05-10 21:15:17 +0300
 
-    Improve command line integer parsing a little in lzma and
-    lzmadec to make them accept also KiB in addition Ki etc.
-    Fix also memory usage information in lzmadec --help.
+    Update THANKS.
 
- src/lzma/util.c       | 23 ++++++++++++++---------
- src/lzmadec/lzmadec.c | 31 ++++++++++++++++++-------------
- 2 files changed, 32 insertions(+), 22 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 436fa5fae96d4e35759aed33066060f09ee8c6ef
+commit e077391982f9f28dbfe542bba8800e7c5b916666
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-10 20:36:12 +0300
+Date:   2012-05-10 21:14:16 +0300
 
-    s/decompressed/compressed/ in the command line tool's
-    error message.
+    Docs: Cleanup line wrapping a bit.
 
- src/lzma/main.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ README          | 12 ++++++------
+ doc/history.txt | 49 +++++++++++++++++++++++++------------------------
+ 2 files changed, 31 insertions(+), 30 deletions(-)
 
-commit 369f72fd656f537a9a8e06f13e6d0d4c242be22f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-06-01 12:48:17 +0300
+commit fc39849c350225c6a1cd7f6e6adff1020521eabc
+Author: Benno Schulenberg <bensberg@justemail.net>
+Date:   2012-03-13 22:04:04 +0100
 
-    Fix a buffer overflow in the LZMA encoder. It was due to my
-    misunderstanding of the code. There's no tiny fix for this
-    problem, so I also cleaned up the code in general.
-    
-    This reduces the speed of the encoder 2-5 % in the fastest
-    compression mode ("lzma -1"). High compression modes should
-    have no noticeable performance difference.
-    
-    This commit breaks things (especially LZMA_SYNC_FLUSH) but I
-    will fix them once the new format and LZMA2 has been roughly
-    implemented. Plain LZMA won't support LZMA_SYNC_FLUSH at all
-    and won't be supported in the new .lzma format. This may
-    change still but this is what it looks like now.
-    
-    Support for known uncompressed size (that is, LZMA or LZMA2
-    without EOPM) is likely to go away. This means there will
-    be API changes.
-
- src/liblzma/lz/lz_encoder.c                    | 113 +----
- src/liblzma/lz/lz_encoder.h                    |  18 +-
- src/liblzma/lzma/lzma_encoder.c                | 551 ++++++++++++-------------
- src/liblzma/lzma/lzma_encoder_getoptimum.c     |  59 ++-
- src/liblzma/lzma/lzma_encoder_getoptimumfast.c |   4 +-
- src/liblzma/lzma/lzma_encoder_init.c           |   9 +-
- src/liblzma/lzma/lzma_encoder_private.h        |  15 +-
- src/liblzma/rangecoder/range_encoder.h         | 383 +++++++++--------
- 8 files changed, 532 insertions(+), 620 deletions(-)
+    Fix a few typos and add some missing articles in some documents.
 
-commit e55e0e873ce2511325749d415ae547d62ab5f00d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-05-30 11:53:41 +0300
+    Also hyphenate several compound adjectives.
 
-    Typo fixes from meyering.
+    Signed-off-by: Benno Schulenberg <bensberg@justemail.net>
 
- doc/faq.txt              | 4 ++--
- doc/liblzma-advanced.txt | 2 +-
- 2 files changed, 3 insertions(+), 3 deletions(-)
+ AUTHORS         |  6 +++---
+ README          | 42 ++++++++++++++++++++---------------------
+ doc/faq.txt     | 24 ++++++++++++------------
+ doc/history.txt | 58 ++++++++++++++++++++++++++++-----------------------------
+ 4 files changed, 65 insertions(+), 65 deletions(-)
 
-commit ed6664146fcbe9cc4a3b23b31632182ed812ea93
+commit 29fa0566d5df199cb9acb2d17bf7eea61acc7fa1
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-05-11 14:24:42 +0300
+Date:   2012-04-29 11:51:25 +0300
 
-    Remove support for pre-C89 libc versions that lack memcpy,
-    memmove, and memset.
+    Windows: Update notes about static linking with MSVC.
 
- configure.ac                   |  2 +-
- src/common/sysdefs.h           | 15 ++-------------
- src/liblzma/common/allocator.c |  2 +-
- 3 files changed, 4 insertions(+), 15 deletions(-)
+ windows/README-Windows.txt | 13 +++++++++----
+ 1 file changed, 9 insertions(+), 4 deletions(-)
 
-commit b09464bf9ae694afc2d1dc26188ac4e2e8af0a63
+commit aac1b31ea4e66cf5a7a8c116bdaa15aa45e6c56e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-05-11 14:17:21 +0300
+Date:   2012-04-19 15:25:26 +0300
 
-    Improved C99 compiler detection in configure.ac. It will
-    pass -std=gnu99 instead of -std=c99 to GCC now, but -pedantic
-    should still give warnings about GNU extensions like before
-    except with some special keywords like asm().
+    liblzma: Remove outdated comments.
 
- configure.ac | 24 ++++++++++++------------
- 1 file changed, 12 insertions(+), 12 deletions(-)
+ src/liblzma/simple/simple_coder.c   | 3 ---
+ src/liblzma/simple/simple_private.h | 3 +--
+ 2 files changed, 1 insertion(+), 5 deletions(-)
 
-commit 11de5d5267f7a0a7f0a4d34eec147e65eaf9f9cf
+commit df14a46013bea70c0bd35be7821b0b9108f97de7
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-05-06 15:15:07 +0300
-
-    Bunch of grammar fixes from meyering.
-
- doc/liblzma-security.txt        | 8 ++++----
- src/liblzma/api/lzma/memlimit.h | 6 +++---
- src/lzma/help.c                 | 2 +-
- tests/files/README              | 2 +-
- 4 files changed, 9 insertions(+), 9 deletions(-)
+Date:   2012-04-19 14:17:52 +0300
 
-commit dc192b6343ae36276c85fcf7ef6006147816eadc
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-05-06 13:41:05 +0300
+    DOS: Link against DJGPP's libemu to support FPU emulation.
 
-    Typo fix
+    This way xz should work on 386SX and 486SX. Floating point
+    only is needed for verbose output in xz.
 
- src/liblzma/api/lzma/init.h | 2 +-
+ dos/Makefile | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 944b62b93239b27b338d117f2668c0e95849659b
+commit 03ed742a3a4931bb5c821357832083b26f577b13
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-05-04 22:29:27 +0300
+Date:   2012-04-19 14:02:25 +0300
 
-    Don't print an error message on broken pipe unless --verbose
-    is used.
+    liblzma: Fix Libs.private in liblzma.pc to include -lrt when needed.
 
- src/lzma/io.c | 15 ++++++++++++++-
- 1 file changed, 14 insertions(+), 1 deletion(-)
+ src/liblzma/liblzma.pc.in | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 8e074349e47ea6832b8fdf9244e581d453733433
+commit 8c5b13ad59df70f49429bfdfd6ac120b8f892fda
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-30 22:16:17 +0300
+Date:   2012-04-19 13:58:55 +0300
 
-    Fix a crash with --format=alone if other filters than LZMA
-    are specified on the command line.
+    Docs: Update MINIX 3 information in INSTALL.
 
- src/lzma/args.c | 9 +++++++++
- 1 file changed, 9 insertions(+)
+ INSTALL | 8 +++++---
+ 1 file changed, 5 insertions(+), 3 deletions(-)
 
-commit 2f361ac19b7fd3abcd362de4d470e6a9eb495b73
+commit c7376fc415a1566f38b2de4b516a17013d516a8b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-28 17:08:27 +0300
+Date:   2012-02-22 14:23:13 +0200
 
-    Updated THANKS.
+    Update THANKS.
 
  THANKS | 1 +
  1 file changed, 1 insertion(+)
 
-commit 3be21fb12f4cec2cf07799e8960382f4cb375369
+commit cff070aba6281ba743d29a62b8c0c66e5da4b2a6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-28 17:06:34 +0300
+Date:   2012-02-22 14:02:34 +0200
 
-    Fixed wrong spelling "limitter" to "limiter". This affects
-    liblzma's API.
+    Fix exit status of xzgrep when grepping binary files.
 
- doc/liblzma-security.txt             |  14 +-
- src/liblzma/api/lzma/base.h          |   4 +-
- src/liblzma/api/lzma/memlimit.h      |  10 +-
- src/liblzma/api/lzma/stream.h        |   4 +-
- src/liblzma/common/Makefile.am       |   2 +-
- src/liblzma/common/memory_limiter.c  | 288 +++++++++++++++++++++++++++++++++++
- src/liblzma/common/memory_limitter.c | 288 -----------------------------------
- src/lzma/list.c                      |   6 +-
- src/lzmadec/lzmadec.c                |  12 +-
- tests/test_memlimit.c                |   4 +-
- 10 files changed, 316 insertions(+), 316 deletions(-)
+    When grepping binary files, grep may exit before it has
+    read all the input. In this case, gzip -q returns 2 (eating
+    SIGPIPE), but xz and bzip2 show SIGPIPE as the exit status
+    (e.g. 141). This causes wrong exit status when grepping
+    xz- or bzip2-compressed binary files.
 
-commit beeb81060821dfec4e7898e0d44b7900dcb2215e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-25 15:39:50 +0300
+    The fix checks for the special exit status that indicates SIGPIPE.
+    It uses kill -l which should be supported everywhere since it
+    is in both SUSv2 (1997) and POSIX.1-2008.
 
-    Prevent LZ encoder from hanging with known uncompressed
-    size. The "fix" breaks LZMA_SYNC_FLUSH at end of stream
-    with known uncompressed size, but since it currently seems
-    likely that support for encoding with known uncompressed
-    size will go away anyway, I'm not fixing this problem now.
+    Thanks to James Buren for the bug report.
 
- src/liblzma/lz/lz_encoder.c | 9 +++++++--
- 1 file changed, 7 insertions(+), 2 deletions(-)
+ src/scripts/xzgrep.in | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
 
-commit c324325f9f13cdeb92153c5d00962341ba070ca2
+commit 41cafb2bf9beea915710ee68f05fe929cd17759c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-25 13:58:56 +0300
+Date:   2012-02-22 12:08:43 +0200
 
-    Removed src/liblzma/common/sysdefs.h symlink, which was
-    annoying, because "make dist" put two copies of sysdefs.h
-    into the tarball instead of the symlink.
+    Update THANKS.
 
- src/liblzma/check/crc32_table.c | 2 +-
- src/liblzma/check/crc64_table.c | 2 +-
- src/liblzma/common/Makefile.am  | 1 -
- src/liblzma/common/common.h     | 2 +-
- src/liblzma/common/sysdefs.h    | 1 -
- 5 files changed, 3 insertions(+), 5 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit d3ba30243c75c13d094de1793f9c58acdbacc692
+commit 2dcea03712fa881930d69ec9eff70855c3d126d9
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-25 13:41:29 +0300
+Date:   2012-02-22 12:00:16 +0200
 
-    Added memusage.c to debug directory.
+    Fix compiling with IBM XL C on AIX.
 
- debug/Makefile.am |  3 ++-
- debug/memusage.c  | 55 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 57 insertions(+), 1 deletion(-)
+ INSTALL      | 36 ++++++++++++++++++++++--------------
+ configure.ac |  6 +++++-
+ 2 files changed, 27 insertions(+), 15 deletions(-)
 
-commit 8f804c29aa8471ccd6438ddca254092b8869ca52
+commit 7db6bdf4abcf524115be2cf5659ed540cef074c5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-25 13:32:35 +0300
+Date:   2012-01-10 17:13:03 +0200
 
-    Bumped version number to 4.999.3alpha. It will become 5.0.0
-    once we have a stable release (won't be very soon). The
-    version number is no longer related to version of LZMA SDK.
+    Tests: Fix a compiler warning with _FORTIFY_SOURCE.
     
-    Made some small Automake-related changes to toplevel
-    Makefile.am and configure.ac.
+    Reported here:
+    http://sourceforge.net/projects/lzmautils/forums/forum/708858/topic/4927385
 
- Makefile.am                    |  7 +++++--
- README                         | 29 +++++++++++++++++++++++++++++
- configure.ac                   |  4 ++--
- src/liblzma/api/lzma/version.h | 22 ++++++++++------------
- 4 files changed, 46 insertions(+), 16 deletions(-)
+ tests/create_compress_files.c | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
 
-commit c99037ea10f121cbacf60c37a36c29768ae53447
+commit 694952d545b6cf056547893ced69486eff9ece55
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-24 20:25:39 +0300
+Date:   2011-12-19 21:21:29 +0200
 
-    Fix a memory leak by calling free(extra->data) in
-    lzma_extra_free().
+    Docs: Explain the stable releases better in README.
 
- src/liblzma/common/extra.c | 1 +
- 1 file changed, 1 insertion(+)
+ README | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
 
-commit 22ba3b0b5043fa481903482ce85015fe775939e5
+commit 418fe668b3c53a9a20020b6cc652aaf25c734b29
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-24 20:23:05 +0300
+Date:   2011-11-07 13:07:52 +0200
 
-    Make unlzma and lzcat symlinks.
+    xz: Show minimum required XZ Utils version in xz -lvv.
 
- src/lzma/Makefile.am | 12 ++++++++++++
- 1 file changed, 12 insertions(+)
+    Man page wasn't updated yet.
+
+ src/xz/list.c | 63 +++++++++++++++++++++++++++++++++++++++++++++++++++++------
+ 1 file changed, 57 insertions(+), 6 deletions(-)
 
-commit 17c36422d4cbc2c70d5c83ec389406f92cd9e85e
+commit 7081d82c37326bac97184e338345fa1c327e3580
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-24 20:20:27 +0300
+Date:   2011-11-04 17:57:16 +0200
 
-    Fixed a bug in command line option parsing.
+    xz: Fix a typo in a comment.
+    
+    Thanks to Bela Lubkin.
 
- src/lzma/options.c | 2 +-
+ src/xz/args.c | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 283f939974c32c47f05d495e8dea455ec646ed64
+commit 232fe7cd70ad258d6a37f17e860e0f1b1891eeb5
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-24 20:19:20 +0300
+Date:   2011-11-03 17:08:02 +0200
 
-    Added two assert()s.
+    Update THANKS.
 
- src/liblzma/lzma/lzma_encoder.c | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit eb348a60b6e19a7c093f892434f23c4756973ffd
+commit 74d2bae4d3449c68453b0473dd3430ce91fd90c1
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-24 19:22:53 +0300
-
-    Switch to uint16_t as the type of range coder probabilities.
-
- src/liblzma/rangecoder/range_common.h | 25 +++++++++++++++++++------
- 1 file changed, 19 insertions(+), 6 deletions(-)
+Date:   2011-11-03 17:07:22 +0200
 
-commit 6c5306e312bcfd254cf654f88c04e34ba786df3d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-24 18:39:57 +0300
+    xz: Fix xz on EBCDIC systems.
 
-    Fix wrong return type (uint32_t -> bool).
+    Thanks to Chris Donawa.
 
- src/liblzma/lz/lz_encoder.c | 2 +-
- src/liblzma/lz/lz_encoder.h | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+ src/xz/coder.c | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
 
-commit 712cfe3ebfd24df24d8896b1315c53c3bc4369c8
+commit 4ac4923f47cc0ef97dd9ca5cfcc44fc53eeab34a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-24 18:38:00 +0300
+Date:   2011-10-23 17:09:10 +0300
 
-    Fix data corruption in LZ encoder with LZMA_SYNC_FLUSH.
+    Update THANKS.
 
- src/liblzma/lz/lz_encoder.c | 16 ++++++++++++++++
- src/liblzma/lz/lz_encoder.h |  4 ++++
- src/liblzma/lz/match_c.h    | 23 ++++++++++++++++++-----
- 3 files changed, 38 insertions(+), 5 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit bc04486e368d20b3027cde625267762aae063965
+commit ab50ae3ef40c81e5bf613905ca3fd636548b75e7
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-24 17:33:01 +0300
-
-    Fix fastpos problem in Makefile.am when built with --enable-small.
+Date:   2011-10-23 17:08:14 +0300
 
- src/liblzma/lzma/Makefile.am | 5 ++++-
- 1 file changed, 4 insertions(+), 1 deletion(-)
+    liblzma: Fix invalid free() in the threaded encoder.
 
-commit 7ab493924e0ed590a5121a15ee54038d238880d3
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-04-24 17:30:51 +0300
+    It was triggered if initialization failed e.g. due to
+    running out of memory.
 
-    Use 64-bit integer as range encoder's cache size. This fixes a
-    theoretical data corruption, which should be very hard to trigger
-    even intentionally.
+    Thanks to Arkadiusz Miskiewicz.
 
- src/liblzma/rangecoder/range_encoder.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/liblzma/common/outqueue.c | 4 ++++
+ 1 file changed, 4 insertions(+)
 
-commit 641998c3e1ecc8b598fe0eb051fab8b9535c291b
+commit 6b620a0f0813d28c3c544b4ff8cb595b38a6e908
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-24 16:38:40 +0200
+Date:   2011-10-23 17:05:55 +0300
 
-    Replaced the range decoder optimization that used arithmetic
-    right shift with as fast version that doesn't need
-    arithmetic right shift. Removed the related check from
-    configure.ac.
+    liblzma: Fix a deadlock in the threaded encoder.
 
- configure.ac                           |  1 -
- m4/ax_c_arithmetic_rshift.m4           | 36 -----------------------
- src/liblzma/rangecoder/range_decoder.h | 53 ++++++++++------------------------
- 3 files changed, 16 insertions(+), 74 deletions(-)
+    It was triggered when reinitializing the encoder,
+    e.g. when encoding two files.
+
+ src/liblzma/common/stream_encoder_mt.c | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
 
-commit ad999efd279d95f1e7ac555b14170e8e9020488c
+commit bd52cf150ecd51e3ab63a9cc1a3cff6a77500178
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-22 14:39:34 +0200
+Date:   2011-09-06 12:03:41 +0300
 
-    Take advantage of arithmetic right shift in range decoder.
+    Build: Fix "make check" on Windows.
 
- src/liblzma/rangecoder/range_decoder.h | 52 ++++++++++++++++++++++++----------
- 1 file changed, 37 insertions(+), 15 deletions(-)
+ tests/Makefile.am  | 7 +++++--
+ windows/build.bash | 2 ++
+ 2 files changed, 7 insertions(+), 2 deletions(-)
 
-commit 03e0e8a0d7228b6ff1f0af39e2c040a4e425973d
+commit 5c5b2256969ac473001b7d67615ed3bd0a54cc82
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-22 14:18:29 +0200
+Date:   2011-08-09 21:19:13 +0300
 
-    Added autoconf check to detect if we can use arithmetic
-    right shift for optimizations.
+    Update THANKS.
 
- configure.ac                 |  1 +
- m4/ax_c_arithmetic_rshift.m4 | 36 ++++++++++++++++++++++++++++++++++++
- 2 files changed, 37 insertions(+)
+ THANKS | 2 ++
+ 1 file changed, 2 insertions(+)
 
-commit 7521bbdc83acab834594a22bec50c8e1bd836298
+commit 5b1e1f10741af9e4bbe4cfc3261fb7c7b04f7809
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-22 01:26:36 +0200
-
-    Update a comment to use the variable name rep_len_decoder.
+Date:   2011-08-09 21:16:44 +0300
     
-    (And BTW, the previous commit actually did change the
-    program logic slightly.)
+    Workaround unusual SIZE_MAX on SCO OpenServer.
 
- src/liblzma/lzma/lzma_decoder.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/common/sysdefs.h | 9 ++++++---
+ 1 file changed, 6 insertions(+), 3 deletions(-)
 
-commit 63b74d000eedaebb8485f623e56864ff5ab71064
+commit e9ed88126eee86e2511fa42681a5c7104820cf0a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-22 00:57:33 +0200
+Date:   2011-08-06 20:37:28 +0300
 
-    Demystified the "state" variable in LZMA code. Use the
-    word literal instead of char for better consistency.
-    There are still some names with _char instead of _literal
-    in lzma_optimum, these may be changed later.
+    Run the scripts with the correct shell in test_scripts.sh.
     
-    Renamed length coder variables.
+    The scripts are now made executable in the build tree.
+    This way the scripts can be run like programs in
+    test_scripts.sh. Previously test_scripts.sh always
+    used sh but it's not correct if @POSIX_SHELL@ is set
+    to something else by configure.
     
-    This commit doesn't change the program logic.
+    Thanks to Jonathan Nieder for the patch.
 
- src/liblzma/lzma/lzma_common.h             | 69 ++++++++++++++++++++++--------
- src/liblzma/lzma/lzma_decoder.c            | 47 ++++++++++----------
- src/liblzma/lzma/lzma_encoder.c            | 14 +++---
- src/liblzma/lzma/lzma_encoder_getoptimum.c | 34 +++++++--------
- src/liblzma/lzma/lzma_encoder_init.c       |  5 ++-
- src/liblzma/lzma/lzma_encoder_private.h    |  8 ++--
- 6 files changed, 107 insertions(+), 70 deletions(-)
+ configure.ac          | 8 ++++----
+ tests/test_scripts.sh | 8 ++++----
+ 2 files changed, 8 insertions(+), 8 deletions(-)
 
-commit e6eb0a26757e851cef62b9440319a8e73b015cb9
+commit 1c673e5681720491a74fc4b2992e075f47302c22
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-14 23:16:11 +0200
+Date:   2011-07-31 11:01:47 +0300
 
-    Fix data corruption in LZMA encoder. Note that this bug was
-    specific to liblzma and was *not* present in LZMA SDK.
+    Fix exit status of "xzdiff foo.xz bar.xz".
 
- src/liblzma/lzma/lzma_encoder.c | 4 ++++
- 1 file changed, 4 insertions(+)
+    xzdiff was clobbering the exit status from diff in a case
+    statement used to analyze the exit statuses from "xz" when
+    its operands were two compressed files. Save and restore
+    diff's exit status to fix this.
 
-commit 7d516f5129e4373a6d57249d7f608c634c66bf12
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-14 21:32:37 +0200
+    The bug is inherited from zdiff in GNU gzip and was fixed
+    there on 2009-10-09.
 
-    Fix a comment API header.
+    Thanks to Jonathan Nieder for the patch and
+    to Peter Pallinger for reporting the bug.
 
- src/liblzma/api/lzma/lzma.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/scripts/xzdiff.in |  2 ++
+ tests/Makefile.am     |  4 +++-
+ tests/test_scripts.sh | 54 +++++++++++++++++++++++++++++++++++++++++++++++++++
+ 3 files changed, 59 insertions(+), 1 deletion(-)
 
-commit 748d6e4274921a350bd0a317380309717441ef9c
+commit 324cde7a864f4506c32ae7846d688c359a83fe65
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-12 23:14:50 +0200
+Date:   2011-06-16 12:15:29 +0300
 
-    Make lzma_stream.next_in const. Let's see if anyone complains.
+    liblzma: Remove unneeded semicolon.
 
- src/liblzma/api/lzma/base.h | 2 +-
+ src/liblzma/lz/lz_encoder_hash.h | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit bfde3b24a5ae25ce53c854762b6148952386b025
+commit 492c86345551a51a29bf18e55fe55a5e86f169ce
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-11 15:35:34 +0200
+Date:   2011-05-28 19:24:56 +0300
 
-    Apply a minor speed optimization to LZMA decoder.
+    Build: Make configure print if symbol versioning is enabled or not.
 
- src/liblzma/lzma/lzma_decoder.c | 85 +++++++++++++++++++++--------------------
- 1 file changed, 43 insertions(+), 42 deletions(-)
+ configure.ac | 2 ++
+ 1 file changed, 2 insertions(+)
 
-commit f310c50286d9e4e9c6170bb65348c9bb430a65b4
+commit fc4d4436969bd4d71b704d400a165875e596034a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-11 15:17:16 +0200
+Date:   2011-05-28 16:43:26 +0300
 
-    Initialize the last byte of the dictionary to zero so that
-    lz_get_byte(lz, 0) returns zero. This was broken by
-    1a3b21859818e4d8e89a1da99699233c1bfd197d.
+    Don't call close(-1) in tuklib_open_stdxxx() on error.
 
- src/liblzma/lz/lz_decoder.c | 1 +
- 1 file changed, 1 insertion(+)
+    Thanks to Jim Meyering.
+
+ src/common/tuklib_open_stdxxx.c | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
 
-commit 5ead36cf7f823093672a4e43c3180b38c9abbaff
+commit bd35d903a04c4d388adb4065b0fa271302380895
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-10 15:57:55 +0200
+Date:   2011-05-28 15:55:39 +0300
 
-    Really fix the price count initialization.
+    liblzma: Use symbol versioning.
 
- src/liblzma/lzma/lzma_encoder_init.c | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+    Symbol versioning is enabled by default on GNU/Linux,
+    other GNU-based systems, and FreeBSD.
 
-commit d4d7feb83d1a1ded8f662a82e21e053841ca726c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-10 13:47:17 +0200
+    I'm not sure how stable this is, so it may need
+    backward-incompatible changes before the next release.
 
-    Updated THANKS.
+    The idea is that alpha and beta symbols are considered
+    unstable and require recompiling the applications that
+    use those symbols. Once a symbol is stable, it may get
+    extended with new features in ways that don't break
+    compatibility with older ABI & API.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+    The mydist target runs validate_map.sh which should
+    catch some probable problems in liblzma.map. Otherwise
+    I would forget to update the map file for new releases.
+
+ Makefile.am                 |   1 +
+ configure.ac                |  21 +++++++++
+ src/liblzma/Makefile.am     |   6 +++
+ src/liblzma/liblzma.map     | 105 ++++++++++++++++++++++++++++++++++++++++++++
+ src/liblzma/validate_map.sh |  68 ++++++++++++++++++++++++++++
+ 5 files changed, 201 insertions(+)
 
-commit 0541c5ea63ef3c0ff85eeddb0a420e56b0c65258
+commit afbb244362c9426a37ce4eb9d54aab768da3adad
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-10 13:46:48 +0200
+Date:   2011-05-28 09:46:46 +0300
+
+    Translations: Update the Italian translation.
 
-    Initialize align_price_count and match_price_count in
-    lzma_encoder_init.c. While we don't call
-    fill_distances_prices() and fill_align_prices() in
-    lzma_lzma_encoder_init(), we still need to initialize
-    these two variables so that the fill functions get
-    called in lzma_encoder_getoptimum.c in the beginning
-    of a stream.
+    Thanks to Milo Casagrande.
 
- src/liblzma/lzma/lzma_encoder_init.c | 2 ++
- 1 file changed, 2 insertions(+)
+ po/it.po | 365 +++++++++++++++++++++++++++++++++++++--------------------------
+ 1 file changed, 216 insertions(+), 149 deletions(-)
 
-commit 596fa1fac72823e4ef5bc26bb53f9090445bf748
+commit 79bef85e0543c0c3723281c3c817616c6cec343b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-10 13:44:29 +0200
+Date:   2011-05-28 08:46:04 +0300
 
-    Always initialize lz->temp_size in lz_decoder.c. temp_size did
-    get initialized as a side-effect after allocating a new decoder,
-    but not when the decoder was reused.
+    Tests: Add a test file for the bug in the previous commit.
 
- src/liblzma/lz/lz_decoder.c | 11 ++++++-----
- 1 file changed, 6 insertions(+), 5 deletions(-)
+ tests/files/README                  |   4 ++++
+ tests/files/bad-1-block_header-6.xz | Bin 0 -> 72 bytes
+ 2 files changed, 4 insertions(+)
 
-commit 45e43e169527e7a98a8c8a821d37bf25822b764d
+commit c0297445064951807803457dca1611b3c47e7f0f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-03-10 13:41:25 +0200
+Date:   2011-05-27 22:25:44 +0300
 
-    Don't fill allocated memory with 0xFD when debugging is
-    enabled. It hides errors from Valgrind.
+    xz: Fix error handling in xz -lvv.
 
- src/liblzma/common/allocator.c | 7 ++++---
- 1 file changed, 4 insertions(+), 3 deletions(-)
+    It could do an invalid free() and read past the end
+    of the uninitialized filters array.
+
+ src/xz/list.c | 21 ++++++---------------
+ 1 file changed, 6 insertions(+), 15 deletions(-)
 
-commit c0e19e0662205f81a86da8903cdc325d50635870
+commit 8bd91918ac50731f00b1a2a48072980572eb2ff9
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-02-28 10:24:31 +0200
+Date:   2011-05-27 22:09:49 +0300
+
+    liblzma: Handle allocation failures correctly in lzma_index_init().
 
-    Remove two redundant validity checks from the LZMA decoder.
-    These are already checked elsewhere, so omitting these
-    gives (very) tiny speed up.
+    Thanks to Jim Meyering.
 
- src/liblzma/lzma/lzma_decoder.c | 23 ++++-------------------
- 1 file changed, 4 insertions(+), 19 deletions(-)
+ src/liblzma/common/index.c | 7 +++++--
+ 1 file changed, 5 insertions(+), 2 deletions(-)
 
-commit de7485806284d1614095ae8cb2ebbb5d74c9ac45
+commit fe00f95828ef5627721b57e054f7eb2d42a2c961
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-02-06 13:25:32 +0200
+Date:   2011-05-24 00:23:46 +0300
 
-    Tiny clean up to file-format.txt.
+    Build: Fix checking for system-provided SHA-256.
 
- doc/file-format.txt | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
+ configure.ac | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 1a3b21859818e4d8e89a1da99699233c1bfd197d
+commit 21b45b9bab541f419712cbfd473ccc31802e0397
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-02-02 14:51:06 +0200
+Date:   2011-05-23 18:30:30 +0300
 
-    Don't memzero() the history buffer when initializing LZ
-    decoder. There's no danger of information leak here, so
-    it isn't required. Doing memzero() takes a lot of time
-    with large dictionaries, which could make it easier to
-    construct DoS attack to consume too much CPU time.
+    Build: Set GZIP_ENV=-9n in top-level Makefile.am.
 
- src/liblzma/lz/lz_decoder.c | 7 +++----
- 1 file changed, 3 insertions(+), 4 deletions(-)
+ Makefile.am | 3 +++
+ 1 file changed, 3 insertions(+)
 
-commit 7e796e312bf644ea95aea0ff85480f47cfa30fc0
+commit 48053e8a4550233af46359024538bff90c870ab1
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-02-01 08:39:26 +0200
+Date:   2011-05-22 16:42:11 +0300
 
-    Do uncompressed size validation in raw encoder. This way
-    it gets done for not only raw encoder, but also Block
-    and LZMA_Alone encoders.
+    Update NEWS for 5.0.3.
 
- src/liblzma/common/raw_encoder.c | 90 ++++++++++++++++++++++++++++++++--------
- 1 file changed, 73 insertions(+), 17 deletions(-)
+ NEWS | 32 ++++++++++++++++++++++++++++++++
+ 1 file changed, 32 insertions(+)
 
-commit 7dd48578a3853e0cfab9f1830bc30927173ec4bc
+commit bba37df2c9e54ad773e15ff00a09d2d6989fb3b2
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-02-01 08:32:05 +0200
+Date:   2011-05-21 16:28:44 +0300
+
+    Add French translation.
 
-    Avoid unneeded function call in raw_common.c.
+    It is known that the BCJ filter --help text is only
+    partially translated.
 
- src/liblzma/common/raw_common.c | 20 +++++++++++---------
- 1 file changed, 11 insertions(+), 9 deletions(-)
+ po/LINGUAS |   1 +
+ po/fr.po   | 864 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ 2 files changed, 865 insertions(+)
 
-commit b596fac963c3ff96f615d4d9b427a213ec341211
+commit 4161d7634965a7a287bf208dcd79f6185f448fe8
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-26 21:42:38 +0200
+Date:   2011-05-21 15:12:10 +0300
 
-    Updated THANKS.
+    xz: Translate also the string used to print the program name.
 
- THANKS | 1 +
- 1 file changed, 1 insertion(+)
+    French needs a space before a colon, e.g. "xz : foo error".
+
+ src/xz/message.c | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
 
-commit e9f6e9c075ad93141a568d94f7d4eb0f2edbd6c2
+commit b94aa0c8380cdb18cddb33440d625474c16643cf
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-26 21:40:23 +0200
+Date:   2011-05-21 15:08:44 +0300
 
-    Added note.GNU-stack to x86 assembler files. It is needed
-    when using non-executable stack.
+    liblzma: Try to use SHA-256 from the operating system.
 
- src/liblzma/check/crc32_x86.S | 9 +++++++++
- src/liblzma/check/crc64_x86.S | 9 +++++++++
- 2 files changed, 18 insertions(+)
+    If the operating system libc or other base libraries
+    provide SHA-256, use that instead of our own copy.
+    Note that this doesn't use OpenSSL or libgcrypt or
+    such libraries to avoid creating dependencies to
+    other packages.
 
-commit 4c7ad179c78f97f68ad548cb40a9dfa6871655ae
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-26 19:12:50 +0200
+    This supports at least FreeBSD, NetBSD, OpenBSD, Solaris,
+    MINIX, and Darwin. They all provide similar but not
+    identical SHA-256 APIs; everyone is a little different.
 
-    Added api/lzma/easy.h. I had forgot to add this to the
-    git repo. Thanks to Stephan Kulow.
+    Thanks to Wim Lewis for the original patch, improvements,
+    and testing.
 
- src/liblzma/api/lzma/easy.h | 174 ++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 174 insertions(+)
+ configure.ac                   | 54 +++++++++++++++++++++++++++
+ src/liblzma/check/Makefile.inc |  2 +
+ src/liblzma/check/check.h      | 83 ++++++++++++++++++++++++++++++++++++++----
+ 3 files changed, 131 insertions(+), 8 deletions(-)
 
-commit 288b232f54c3692cd36f471d4042f51daf3ea79f
+commit f004128678d43ea10b4a6401aa184cf83252d6ec
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-26 11:09:17 +0200
+Date:   2011-05-17 12:52:18 +0300
+
+    Don't use clockid_t in mythread.h when clock_gettime() isn't available.
 
-    Added more test files.
+    Thanks to Wim Lewis for the patch.
 
- tests/files/README                       |  11 +++++++++++
- tests/files/bad-multi-none-header_7.lzma | Bin 0 -> 59 bytes
- tests/files/good-single-sparc-lzma.lzma  | Bin 0 -> 2263 bytes
- tests/files/good-single-x86-lzma.lzma    | Bin 0 -> 1909 bytes
- 4 files changed, 11 insertions(+)
+ src/common/mythread.h | 2 ++
+ 1 file changed, 2 insertions(+)
 
-commit c467b0defccf233d0c79234407bc38d7d09574d3
+commit f779516f42ebd2db47a5b7d6143459bf7737cf2f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-26 10:47:55 +0200
+Date:   2011-05-17 12:26:28 +0300
 
-    Added more test files.
+    Update THANKS.
 
- tests/files/README                       |   6 ++++++
- tests/files/bad-multi-none-block_3.lzma  | Bin 0 -> 58 bytes
- tests/files/good-multi-none-block_2.lzma | Bin 0 -> 58 bytes
- 3 files changed, 6 insertions(+)
+ THANKS | 3 +++
+ 1 file changed, 3 insertions(+)
 
-commit f9842f712732c482f2def9f24437851e57dd83f8
+commit 830ba587775bb562f6eaf05cad61bf669d1f8892
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-26 00:25:34 +0200
-
-    Return LZMA_HEADER_ERROR if LZMA_SYNC_FLUSH is used with any
-    of the so called simple filters. If there is demand, limited
-    support for LZMA_SYNC_FLUSH may be added in future.
+Date:   2011-05-17 12:21:33 +0300
     
-    After this commit, using LZMA_SYNC_FLUSH shouldn't cause
-    undefined behavior in any situation.
+    Update INSTALL with a note about linker problem on OpenSolaris x86.
 
- src/liblzma/api/lzma/simple.h     | 9 +++++++++
- src/liblzma/simple/simple_coder.c | 8 ++++++++
- 2 files changed, 17 insertions(+)
+ INSTALL | 23 +++++++++++++++++------
+ 1 file changed, 17 insertions(+), 6 deletions(-)
 
-commit e988ea1d1a286dd0f27af0657f9665d5cd8573aa
+commit ec7106309c8060e9c646dba20c4f15689a0bbb04
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-25 23:50:35 +0200
+Date:   2011-05-17 12:01:37 +0300
 
-    Added more Multi-Block test files. Improved some
-    descriptions in the test files' README.
+    Build: Fix initialization of enable_check_* variables in configure.ac.
 
- tests/files/README                       |  34 +++++++++++++++++++++++++------
- tests/files/bad-multi-none-block_1.lzma  | Bin 0 -> 66 bytes
- tests/files/bad-multi-none-block_2.lzma  | Bin 0 -> 66 bytes
- tests/files/good-multi-none-block_1.lzma | Bin 0 -> 66 bytes
- 4 files changed, 28 insertions(+), 6 deletions(-)
+    This doesn't matter much in practice since it is unlikely
+    that anyone would have such environment variable names.
 
-commit 4441e004185cd4c61bda184010eca5924c9dec87
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-25 23:12:36 +0200
+    Thanks to Wim Lewis.
 
-    Combine lzma_options_block validation needed by both Block
-    encoder and decoder, and put the shared things to
-    block_private.h. Improved the checks a little so that
-    they may detect too big Compressed Size at initialization
-    time if lzma_options_block.total_size or .total_limit is
-    known.
+ configure.ac | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+commit 4c6e146df99696920f12410fb17754412797ef36
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2011-05-17 11:54:38 +0300
     
-    Allow encoding and decoding Blocks with combinations of
-    fields that are not allowed by the file format specification.
-    Doing this requires that the application passes such a
-    combination in lzma_options_lzma; liblzma doesn't do that,
-    but it's not impossible that someone could find them useful
-    in some custom file format.
+    Add underscores to attributes (__attribute((__foo__))).
 
- src/liblzma/common/block_decoder.c | 37 ++++++++++++----------------
- src/liblzma/common/block_encoder.c | 32 +++++-------------------
- src/liblzma/common/block_private.h | 50 ++++++++++++++++++++++++++++++++++++++
- 3 files changed, 71 insertions(+), 48 deletions(-)
+ src/liblzma/common/alone_decoder.c |  2 +-
+ src/liblzma/common/alone_encoder.c |  2 +-
+ src/liblzma/common/block_encoder.c |  2 +-
+ src/liblzma/common/common.c        |  2 +-
+ src/liblzma/common/common.h        |  2 +-
+ src/liblzma/common/index_decoder.c |  9 +++++----
+ src/liblzma/common/index_encoder.c | 11 ++++++-----
+ src/liblzma/delta/delta_encoder.c  |  2 +-
+ src/liblzma/lz/lz_decoder.c        |  2 +-
+ src/liblzma/lz/lz_encoder.c        |  2 +-
+ src/liblzma/simple/arm.c           |  2 +-
+ src/liblzma/simple/armthumb.c      |  2 +-
+ src/liblzma/simple/ia64.c          |  2 +-
+ src/liblzma/simple/powerpc.c       |  2 +-
+ src/liblzma/simple/simple_coder.c  |  2 +-
+ src/liblzma/simple/sparc.c         |  2 +-
+ src/lzmainfo/lzmainfo.c            |  4 ++--
+ src/xz/coder.c                     |  2 +-
+ src/xz/hardware.h                  |  2 +-
+ src/xz/message.c                   |  2 +-
+ src/xz/message.h                   | 18 +++++++++---------
+ src/xz/options.c                   |  6 +++---
+ src/xz/signals.c                   |  2 +-
+ src/xz/util.h                      |  6 +++---
+ src/xzdec/xzdec.c                  |  6 +++---
+ 25 files changed, 49 insertions(+), 47 deletions(-)
 
-commit bf4200c818fcf9102e56328d39cde91bfa13cfb6
+commit 7a480e485938884ef3021b48c3b0b9f9699dc9b6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-25 19:21:22 +0200
-
-    Added test_memlimit.c.
+Date:   2011-05-01 12:24:23 +0300
 
- tests/Makefile.am     |   2 +
- tests/test_memlimit.c | 114 ++++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 116 insertions(+)
+    xz: Fix input file position when --single-stream is used.
 
-commit 7b8fc7e6b501a32a36636dac79ecb57099269005
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-25 19:20:28 +0200
+    Now the following works as you would expect:
 
-    Improved the memory limitter:
-      - Added lzma_memlimit_max() and lzma_memlimit_reached()
-        API functions.
-      - Added simple estimation of malloc()'s memory usage
-        overhead.
-      - Fixed integer overflow detection in lzma_memlimit_alloc().
-      - Made some white space cleanups and added more comments.
+        echo foo | xz > foo.xz
+        echo bar | xz >> foo.xz
+        ( xz -dc --single-stream ; xz -dc --single-stream ) < foo.xz
     
-    The description of lzma_memlimit_max() in memlimit.h is bad
-    and should be improved.
+    Note that it doesn't work if the input is not seekable
+    or if there is Stream Padding between the concatenated
+    .xz Streams.
 
- src/liblzma/api/lzma/memlimit.h      | 35 +++++++++++++
- src/liblzma/common/memory_limitter.c | 97 ++++++++++++++++++++++++++++++------
- 2 files changed, 118 insertions(+), 14 deletions(-)
+ src/xz/coder.c   |  1 +
+ src/xz/file_io.c | 15 +++++++++++++++
+ src/xz/file_io.h | 13 +++++++++++++
+ 3 files changed, 29 insertions(+)
 
-commit e0c3d0043da2f670cfdb1abbb3223d5a594ad8db
+commit c29e6630c1450c630c4e7b783bdd76515db9004c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-25 13:55:52 +0200
+Date:   2011-05-01 12:15:51 +0300
 
-    Use more parenthesis in succeed() macro in tests/tests.h.
+    xz: Print the maximum number of worker threads in xz -vv.
 
- tests/tests.h | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/xz/coder.c | 4 ++++
+ 1 file changed, 4 insertions(+)
 
-commit 1fd76d488179580d37f31ee11948f4932aed31fd
+commit 0b77c4a75158ccc416b07d6e81df8ee0abaea720
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-24 14:49:34 +0200
-
-    Added more Multi-Block Stream test files.
+Date:   2011-04-19 10:44:48 +0300
 
- tests/files/README                        |  23 +++++++++++++++++++++++
- tests/files/bad-multi-none-header_2.lzma  | Bin 0 -> 61 bytes
- tests/files/bad-multi-none-header_3.lzma  | Bin 0 -> 59 bytes
- tests/files/bad-multi-none-header_4.lzma  | Bin 0 -> 59 bytes
- tests/files/bad-multi-none-header_5.lzma  | Bin 0 -> 58 bytes
- tests/files/bad-multi-none-header_6.lzma  | Bin 0 -> 59 bytes
- tests/files/good-multi-none-header_3.lzma | Bin 0 -> 59 bytes
- 7 files changed, 23 insertions(+)
-
-commit 6e27b1098a28f4ce09bfa6df68ad94182dfc2936
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-24 00:46:05 +0200
-
-    Added bunch of test files containing Multi-Block Streams.
-
- tests/files/README                        |  53 ++++++++++++++++++++++++++++++
- tests/files/bad-multi-none-1.lzma         | Bin 0 -> 54 bytes
- tests/files/bad-multi-none-2.lzma         | Bin 0 -> 53 bytes
- tests/files/bad-multi-none-3.lzma         | Bin 0 -> 53 bytes
- tests/files/bad-multi-none-extra_1.lzma   | Bin 0 -> 54 bytes
- tests/files/bad-multi-none-extra_2.lzma   | Bin 0 -> 54 bytes
- tests/files/bad-multi-none-extra_3.lzma   | Bin 0 -> 55 bytes
- tests/files/bad-multi-none-header_1.lzma  | Bin 0 -> 57 bytes
- tests/files/bad-multi-none-index_1.lzma   | Bin 0 -> 51 bytes
- tests/files/bad-multi-none-index_2.lzma   | Bin 0 -> 49 bytes
- tests/files/bad-multi-none-index_3.lzma   | Bin 0 -> 51 bytes
- tests/files/bad-multi-none-index_4.lzma   | Bin 0 -> 51 bytes
- tests/files/good-multi-none-1.lzma        | Bin 0 -> 75 bytes
- tests/files/good-multi-none-2.lzma        | Bin 0 -> 53 bytes
- tests/files/good-multi-none-extra_1.lzma  | Bin 0 -> 51 bytes
- tests/files/good-multi-none-extra_2.lzma  | Bin 0 -> 79 bytes
- tests/files/good-multi-none-extra_3.lzma  | Bin 0 -> 55 bytes
- tests/files/good-multi-none-header_1.lzma | Bin 0 -> 58 bytes
- tests/files/good-multi-none-header_2.lzma | Bin 0 -> 66 bytes
- 19 files changed, 53 insertions(+)
-
-commit db9df0a9609c01a00a227329fb96e983971040f5
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 23:43:00 +0200
-
-    Fix decoding of empty Metadata Blocks, that don't have
-    even the Metadata Flags field. Earlier the code allowed
-    such files; now they are prohibited as the file format
-    specification requires.
+    Build: Warn if no supported method to detect the number of CPU cores.
 
- src/liblzma/common/metadata_decoder.c | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
+ configure.ac | 11 +++++------
+ 1 file changed, 5 insertions(+), 6 deletions(-)
 
-commit 765f0b05f6e95ed9194fb90819cee189ebbac36b
+commit e4622df9ab4982f8faa53d85b17be66216175a58
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 23:38:18 +0200
+Date:   2011-04-19 09:55:06 +0300
 
-    Fix a bug related to 99e12af4e2b866c011fe0106cd1e0bfdcc8fe9c6.
-    lzma_metadata.header_metadata_size was not properly set to
-    zero if the Metadata had only the Metadata Flags field.
+    Update THANKS.
 
- src/liblzma/common/metadata_decoder.c | 13 +++++++------
- 1 file changed, 7 insertions(+), 6 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 3a7cc5c3dec7b078941f961b0393b86c418883b6
+commit 9c1b05828a88eff54409760b92162c7cc2c7cff6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 23:35:49 +0200
-
-    Fix decoding of Extra Records that have empty Data.
-
- src/liblzma/common/metadata_decoder.c | 13 ++++++++++++-
- 1 file changed, 12 insertions(+), 1 deletion(-)
+Date:   2011-04-19 09:20:44 +0300
 
-commit e5fdec93e273855c1bcc2579b83cfb481a9a1492
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 22:02:38 +0200
+    Fix portability problems in mythread.h.
 
-    Add the trailing '\0' to lzma_extra.data as the API header
-    already documents.
+    Use gettimeofday() if clock_gettime() isn't available
+    (e.g. Darwin).
 
- src/liblzma/common/metadata_decoder.c | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
+    The test for availability of pthread_condattr_setclock()
+    and CLOCK_MONOTONIC was incorrect. Instead of fixing the
+    #ifdefs, use an Autoconf test. That way if there exists a
+    system that supports them but doesn't specify the matching
+    POSIX #defines, the features will still get detected.
 
-commit ed40dc5a2c28a8dfccab8c165b3780738eeef93e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 21:21:21 +0200
+    Don't try to use pthread_sigmask() on OpenVMS. It doesn't
+    have that function.
 
-    Added debug/full_flush.c.
+    Guard mythread.h against being #included multiple times.
 
- debug/Makefile.am  |   3 +-
- debug/full_flush.c | 105 +++++++++++++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 107 insertions(+), 1 deletion(-)
+ configure.ac          |  7 +++++++
+ src/common/mythread.h | 31 +++++++++++++++++++++++++++----
+ 2 files changed, 34 insertions(+), 4 deletions(-)
 
-commit ae0cd09a666a1682da8fc09487322227679e218d
+commit 3de00cc75da7b0e7b65e84c62b5351e231f501e9
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 21:05:33 +0200
-
-    Return LZMA_STREAM_END instead of LZMA_OK if
-    LZMA_SYNC_FLUSH or LZMA_FULL_FLUSH is used when
-    there's no unfinished Block open.
-
- src/liblzma/common/stream_encoder_multi.c | 6 +++++-
- 1 file changed, 5 insertions(+), 1 deletion(-)
+Date:   2011-04-18 19:35:49 +0300
 
-commit 0e80ded13dfceb98f9494cbb5381a95eb44d03db
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 20:05:01 +0200
+    Update THANKS.
 
-    Added bad-single-none-footer_filter_flags.lzma and
-    bad-single-none-too_long_vli.lzma.
+ THANKS | 2 ++
+ 1 file changed, 2 insertions(+)
 
- tests/files/README                                   |   5 +++++
- tests/files/bad-single-none-footer_filter_flags.lzma | Bin 0 -> 30 bytes
- tests/files/bad-single-none-too_long_vli.lzma        | Bin 0 -> 39 bytes
- 3 files changed, 5 insertions(+)
+commit bd5002f5821e3d1b04f2f56989e4a19318e73633
+Author: Martin Väth <vaeth@mathematik.uni-wuerzburg.de>
+Date:   2011-04-15 04:54:49 -0400
 
-commit 8c8eb14055d8dd536b1b1c58fb284d34bb8ed1dd
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 13:42:35 +0200
+    xzgrep: fix typo in $0 parsing
 
-    Fixed a typo.
+    Reported-by: Diego Elio Pettenò <flameeyes@gentoo.org>
+    Signed-off-by: Martin Väth <vaeth@mathematik.uni-wuerzburg.de>
+    Signed-off-by: Mike Frysinger <vapier@gentoo.org>
 
- src/liblzma/subblock/subblock_decoder_helper.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/scripts/xzgrep.in | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
 
-commit 980f65a9a10160c4d105767871e3002b9aaba3e0
+commit 6ef4eabc0acc49e1bb9dc68064706e19fa9fcf48
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 13:40:45 +0200
+Date:   2011-04-12 12:48:31 +0300
 
-    Fix a memory leak in the Subblock encoder.
+    Bump the version number to 5.1.1alpha and liblzma soname to 5.0.99.
 
- src/liblzma/subblock/subblock_encoder.c | 1 +
- 1 file changed, 1 insertion(+)
+ src/liblzma/Makefile.am        | 2 +-
+ src/liblzma/api/lzma/version.h | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
 
-commit 99e12af4e2b866c011fe0106cd1e0bfdcc8fe9c6
+commit 9a4377be0d21e597c66bad6c7452873aebfb3c1c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 13:36:07 +0200
-
-    Fix Size of Header Metadata Block handling. Now
-    lzma_metadata.header_metadata_size == LZMA_VLI_VALUE_UNKNOWN
-    is not allowed at all. To indicate missing Header Metadata
-    Block, header_metadata_size must be set to zero. This is
-    what Metadata decoder does after this patch too.
-    
-    Note that other missing fields in lzma_metadata are still
-    indicated with LZMA_VLI_VALUE_UNKNOWN. This isn't as
-    illogical as it sounds at first, because missing Size of
-    Header Metadata Block means that Header Metadata Block is
-    not present in the Stream. With other Metadata fields,
-    a missing field means only that the value is unknown.
-
- src/liblzma/common/info.c             | 13 ++++---------
- src/liblzma/common/metadata_decoder.c |  6 ++++++
- src/liblzma/common/metadata_encoder.c | 11 +++++------
- tests/test_info.c                     |  4 ++--
- 4 files changed, 17 insertions(+), 17 deletions(-)
+Date:   2011-04-12 12:42:37 +0300
 
-commit 58b78ab20c1bcced45cf71ae6684868fc90b4b81
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 13:15:55 +0200
+    Put the unstable APIs behind #ifdef LZMA_UNSTABLE.
 
-    Fix a memory leak in metadata_decoder.c.
+    This way people hopefully won't complain if these APIs
+    change and break code that used an older API.
 
- src/liblzma/common/metadata_decoder.c | 1 +
- 1 file changed, 1 insertion(+)
+ src/liblzma/api/lzma/container.h | 4 ++++
+ src/liblzma/common/common.h      | 2 ++
+ src/xz/private.h                 | 2 ++
+ 3 files changed, 8 insertions(+)
 
-commit 4d8cdbdab44400fd98f0f18a0f701e27cd1acdae
+commit 3e321a3acd50002cf6fdfd259e910f56d3389bc3
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 13:13:58 +0200
-
-    Fix the fix 863028cb7ad6d8d0455fa69348f56b376d7b908f which
-    just moved to problem. Now it's really fixed.
+Date:   2011-04-12 11:59:49 +0300
 
- src/liblzma/common/info.c | 5 ++++-
- 1 file changed, 4 insertions(+), 1 deletion(-)
+    Remove doubled words from documentation and comments.
 
-commit 67321de963ccf69410b3868b8e31534fe18a90de
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 00:21:04 +0200
+    Spot candidates by running these commands:
+      git ls-files |xargs perl -0777 -n \
+        -e 'while (/\b(then?|[iao]n|i[fst]|but|f?or|at|and|[dt]o)\s+\1\b/gims)' \
+        -e '{$n=($` =~ tr/\n/\n/ + 1); ($v=$&)=~s/\n/\\n/g; print "$ARGV:$n:$v\n"}'
 
-    Take advantage of return_if_error() macro in
-    lzma_info_metadata_set() in info.c.
+    Thanks to Jim Meyering for the original patch.
 
- src/liblzma/common/info.c | 24 ++++++++----------------
- 1 file changed, 8 insertions(+), 16 deletions(-)
+ doc/lzma-file-format.txt           | 4 ++--
+ src/liblzma/common/alone_encoder.c | 2 +-
+ src/liblzma/lzma/lzma2_encoder.c   | 2 +-
+ src/xz/file_io.c                   | 2 +-
+ src/xz/xz.1                        | 2 +-
+ windows/INSTALL-Windows.txt        | 2 +-
+ 6 files changed, 7 insertions(+), 7 deletions(-)
 
-commit 863028cb7ad6d8d0455fa69348f56b376d7b908f
+commit d91a84b534b012d19474f2fda1fbcaef873e1ba4
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-23 00:18:32 +0200
+Date:   2011-04-12 11:46:01 +0300
 
-    Fixed a dangling pointer that caused invalid free().
+    Update NEWS.
 
- src/liblzma/common/info.c | 1 +
- 1 file changed, 1 insertion(+)
+ NEWS | 47 +++++++++++++++++++++++++++++++++++++++++++++--
+ 1 file changed, 45 insertions(+), 2 deletions(-)
 
-commit cf49f42a6bd40143f54a6b10d6e605599e958c0b
+commit 14e6ad8cfe0165c1a8beeb5b2a1536558b29b0a1
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-22 22:49:24 +0200
-
-    Added lzma_easy_* functions. These should make using
-    liblzma as easy as using zlib, because the easy API
-    don't require developers to know any fancy LZMA options.
+Date:   2011-04-12 11:45:40 +0300
     
-    Note that Multi-Block Stream encoding is currently broken.
-    The easy API should be OK, the bug(s) are elsewhere.
+    Update TODO.
 
- src/liblzma/api/Makefile.am               |   1 +
- src/liblzma/api/lzma.h                    |   1 +
- src/liblzma/common/Makefile.am            |   5 ++
- src/liblzma/common/easy_common.c          |  54 ++++++++++++++++
- src/liblzma/common/easy_common.h          |  28 ++++++++
- src/liblzma/common/easy_multi.c           | 103 ++++++++++++++++++++++++++++++
- src/liblzma/common/easy_single.c          |  37 +++++++++++
- src/liblzma/common/stream_encoder_multi.c |   3 +-
- src/liblzma/common/stream_encoder_multi.h |  26 ++++++++
- 9 files changed, 256 insertions(+), 2 deletions(-)
+ TODO | 12 +++++++++++-
+ 1 file changed, 11 insertions(+), 1 deletion(-)
 
-commit 1747b85a43abc1c3f152dbd349be2ef4089ecf6a
+commit 70e750f59793f9b5cd306a5adce9b8e427739e04
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-22 21:16:22 +0200
+Date:   2011-04-12 11:08:55 +0300
 
-    Fix Multi-Block Stream encoder's EOPM usage.
+    xz: Update the man page about threading.
 
- src/liblzma/common/stream_encoder_multi.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/xz/xz.1 | 34 ++++++++++++++++++++--------------
+ 1 file changed, 20 insertions(+), 14 deletions(-)
 
-commit 0ed6f1adcea540fb9593ca115d36de537f7f0dc6
+commit 24e0406c0fb7494d2037dec033686faf1bf67068
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-22 00:15:11 +0200
+Date:   2011-04-11 22:06:03 +0300
 
-    Made lzma_extra pointers const in lzma_options_stream.
+    xz: Add support for threaded compression.
 
- src/liblzma/api/lzma/stream.h             | 4 ++--
- src/liblzma/common/stream_encoder_multi.c | 8 ++++++--
- 2 files changed, 8 insertions(+), 4 deletions(-)
+ src/xz/args.c  |   3 +-
+ src/xz/coder.c | 202 +++++++++++++++++++++++++++++++++++----------------------
+ 2 files changed, 125 insertions(+), 80 deletions(-)
 
-commit 305afa38f64c75af8e81c4167e2d8fa8d85b53a4
+commit de678e0c924aa79a19293a8a6ed82e8cb6572a42
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-20 20:15:21 +0200
-
-    Updated debug/sync_flush.c.
-
- debug/sync_flush.c | 26 ++++++++++++++++++++++++--
- 1 file changed, 24 insertions(+), 2 deletions(-)
+Date:   2011-04-11 22:03:30 +0300
 
-commit d53e9b77054cfade6a643e77d085273a348b189c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-20 20:14:26 +0200
+    liblzma: Add lzma_stream_encoder_mt() for threaded compression.
 
-    Added debug/repeat.c.
+    This is the simplest method to do threading, which splits
+    the uncompressed data into blocks and compresses them
+    independently from each other. There's room for improvement
+    especially to reduce the memory usage, but nevertheless,
+    this is a good start.
 
- debug/Makefile.am |  1 +
- debug/repeat.c    | 43 +++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 44 insertions(+)
+ configure.ac                           |    1 +
+ src/liblzma/api/lzma/container.h       |  163 +++++
+ src/liblzma/common/Makefile.inc        |    7 +
+ src/liblzma/common/common.c            |    9 +-
+ src/liblzma/common/common.h            |   14 +
+ src/liblzma/common/outqueue.c          |  180 ++++++
+ src/liblzma/common/outqueue.h          |  155 +++++
+ src/liblzma/common/stream_encoder_mt.c | 1011 ++++++++++++++++++++++++++++++++
+ 8 files changed, 1539 insertions(+), 1 deletion(-)
 
-commit 107259e306bcfc2336a0fb870fb58034c28faa52
+commit 25fe729532cdf4b8fed56a4519b73cf31efaec50
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-20 20:12:58 +0200
-
-    Fix alignment handling bugs in Subblock encoder.
+Date:   2011-04-11 21:15:07 +0300
     
-    This leaves one known alignment bug unfixed: If repeat count
-    doesn't fit into 28-bit integer, the encoder has to split
-    this to multiple Subblocks with Subblock Type `Repeating Data'.
-    The extra Subblocks may have wrong alignment. Correct alignment
-    is restored after the split Repeating Data has been completely
-    written out.
+    liblzma: Add the forgotten lzma_lzma2_block_size().
     
-    Since the encoder doesn't even try to fix the alignment unless
-    the size of Data is at least 4 bytes, to trigger this bug you
-    need at least 4 GiB of repeating data with sequence length of
-    4 or more bytes. Since the worst thing done by this bug is
-    misaligned data (no data corruption), this bug simply isn't
-    worth fixing, because a proper fix isn't simple.
+    This should have been in 5eefc0086d24a65e136352f8c1d19cefb0cbac7a.
 
- src/liblzma/subblock/subblock_encoder.c | 170 ++++++++++++++++++++++----------
- 1 file changed, 119 insertions(+), 51 deletions(-)
+ src/liblzma/lzma/lzma2_encoder.c | 10 ++++++++++
+ src/liblzma/lzma/lzma2_encoder.h |  2 ++
+ 2 files changed, 12 insertions(+)
 
-commit e141fe18950400faaa3503ff88ac20eacd73e88c
+commit 91afb785a1dee34862078d9bf844ef12b8cc3e35
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-19 21:16:33 +0200
-
-    Implemented LZMA_SYNC_FLUSH support to the Subblock encoder.
-    The API for handing Subfilters was changed to make it
-    consistent with LZMA_SYNC_FLUSH.
+Date:   2011-04-11 21:04:13 +0300
     
-    A few sanity checks were added for Subfilter handling. Some
-    small bugs were fixed. More comments were added.
+    liblzma: Document lzma_easy_(enc|dec)oder_memusage() better too.
 
- src/liblzma/api/lzma/subblock.h         |  29 ++--
- src/liblzma/subblock/subblock_encoder.c | 263 ++++++++++++++++++++++++--------
- 2 files changed, 214 insertions(+), 78 deletions(-)
+ src/liblzma/api/lzma/container.h | 9 +++++++++
+ 1 file changed, 9 insertions(+)
 
-commit 23c227a864a3b69f38c6a74306161d4e6918d1cc
+commit 4a9905302a9e4a1601ae09d650d3f08ce98ae9ee
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-19 15:19:21 +0200
-
-    Revised the Delta filter implementation. The initialization
-    function is still shared between encoder and decoder, but the
-    actual coding is in separate files for encoder and decoder.
-    
-    There are now separate functions for the actual delta
-    calculation depending on if Delta is the last filter in the
-    chain or not. If it is the last, the new code copies the
-    data from input to output buffer and does the delta
-    calculation at the same time. The old code first copied the
-    data, then did the delta in the target buffer, which required
-    reading through the data twice.
-    
-    Support for LZMA_SYNC_FLUSH was added to the Delta encoder.
-    This doesn't change anything in the file format.
-
- src/liblzma/common/Makefile.am     |  14 ++-
- src/liblzma/common/delta_coder.c   | 189 -------------------------------------
- src/liblzma/common/delta_coder.h   |  31 ------
- src/liblzma/common/delta_common.c  |  70 ++++++++++++++
- src/liblzma/common/delta_common.h  |  48 ++++++++++
- src/liblzma/common/delta_decoder.c | 102 ++++++++++++++++++++
- src/liblzma/common/delta_decoder.h |  28 ++++++
- src/liblzma/common/delta_encoder.c |  97 +++++++++++++++++++
- src/liblzma/common/delta_encoder.h |  28 ++++++
- src/liblzma/common/raw_decoder.c   |   2 +-
- src/liblzma/common/raw_encoder.c   |   2 +-
- 11 files changed, 387 insertions(+), 224 deletions(-)
+Date:   2011-04-11 20:59:07 +0300
 
-commit 61dc82f3e306b25ce3cd3d529df9ec7a0ec04b73
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-18 20:18:08 +0200
+    liblzma: Document lzma_raw_(enc|dec)oder_memusage() better.
 
-    Added the debug directory and the first debug tool
-    (sync_flush). These tools are not built unless the
-    user runs "make" in the debug directory.
+    It didn't mention the return value that is used if
+    an error occurs.
 
- Makefile.am        |   1 +
- configure.ac       |   1 +
- debug/Makefile.am  |  30 ++++++++++++++
- debug/README       |  17 ++++++++
- debug/sync_flush.c | 116 +++++++++++++++++++++++++++++++++++++++++++++++++++++
- 5 files changed, 165 insertions(+)
+ src/liblzma/api/lzma/filter.h | 8 ++++++--
+ 1 file changed, 6 insertions(+), 2 deletions(-)
 
-commit 0ae3208db94585eb8294b97ded387de0a3a07646
+commit 0badb0b1bd649163322783b0bd9e590b4bc7a93d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-18 20:13:00 +0200
-
-    Added test files to test usage of flush marker in LZMA.
-
- tests/files/README                               |  12 ++++++++++++
- tests/files/bad-single-lzma-flush_beginning.lzma | Bin 0 -> 53 bytes
- tests/files/bad-single-lzma-flush_twice.lzma     | Bin 0 -> 63 bytes
- tests/files/good-single-lzma-flush_1.lzma        | Bin 0 -> 48 bytes
- tests/files/good-single-lzma-flush_2.lzma        | Bin 0 -> 63 bytes
- 5 files changed, 12 insertions(+)
+Date:   2011-04-11 19:28:18 +0300
 
-commit ab5feaf1fcc146ef9fd39360c53c290bec39524e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-18 20:02:52 +0200
+    liblzma: Use memzero() to initialize supported_actions[].
 
-    Fix LZMA_SYNC_FLUSH handling in LZ and LZMA encoders.
-    That code is now almost completely in LZ coder, where
-    it can be shared with other LZ77-based algorithms in
-    future.
+    This is cleaner and makes it simpler to add new members
+    to lzma_action enumeration.
 
- src/liblzma/lz/lz_encoder.c     | 34 ++++++++++++++++++++++++++--------
- src/liblzma/lz/lz_encoder.h     |  1 +
- src/liblzma/lzma/lzma_encoder.c | 27 ++-------------------------
- 3 files changed, 29 insertions(+), 33 deletions(-)
+ src/liblzma/common/common.c | 6 ++----
+ 1 file changed, 2 insertions(+), 4 deletions(-)
 
-commit 079c4f7fc26b3d0b33d9ae7536697b45f3b73585
+commit a7934c446a58e20268689899d2a39f50e571f251
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-18 17:21:24 +0200
+Date:   2011-04-11 19:26:27 +0300
 
-    Don't add -g to CFLAGS when --enable-debug is specified.
-    It's the job of the user to put that in CFLAGS.
+    liblzma: API comment about lzma_allocator with threaded coding.
 
- configure.ac | 1 -
- 1 file changed, 1 deletion(-)
+ src/liblzma/api/lzma/base.h | 18 +++++++++++++-----
+ 1 file changed, 13 insertions(+), 5 deletions(-)
 
-commit 61d1784d8f1761d979a6da6e223e279ca33815e6
+commit 5eefc0086d24a65e136352f8c1d19cefb0cbac7a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-18 14:17:37 +0200
-
-    Set stdin and stdout to binary mode on Windows. This patch is
-    a forward port of b7b22fcb979a16d3a47c8001f058c9f7d4416068
-    from lzma-utils-legacy.git. I don't know if the new code base
-    builds on Windows, but this is a start.
-
- src/lzmadec/lzmadec.c | 9 +++++++++
- 1 file changed, 9 insertions(+)
+Date:   2011-04-11 19:16:30 +0300
 
-commit c9cba976913e55ff9aac8a8133cc94416c7c1c9c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-18 00:50:29 +0200
+    liblzma: Add an internal function lzma_mt_block_size().
 
-    Added test_compress.sh and bunch of files needed by it.
-    This new set of tests compress and decompress several
-    test files with many different compression options.
-    This set of tests will be extended later.
+    This is based lzma_chunk_size() that was included in some
+    development version of liblzma.
 
- tests/Makefile.am                 |  30 ++++---
- tests/bcj_test.c                  |  66 ++++++++++++++
- tests/compress_prepared_bcj_sparc | Bin 0 -> 6804 bytes
- tests/compress_prepared_bcj_x86   | Bin 0 -> 4649 bytes
- tests/create_compress_files.c     | 164 ++++++++++++++++++++++++++++++++++
- tests/test_compress.sh            | 183 ++++++++++++++++++++++++++++++++++++++
- 6 files changed, 433 insertions(+), 10 deletions(-)
+ src/liblzma/common/filter_encoder.c | 46 ++++++++++++++++++-------------------
+ src/liblzma/common/filter_encoder.h |  4 ++--
+ 2 files changed, 24 insertions(+), 26 deletions(-)
 
-commit 33be3c0e24d8f43376ccf71cc77d53671e792f07
+commit d1199274758049fc523d98c5b860ff814a799eec
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-17 18:56:53 +0200
+Date:   2011-04-11 13:59:50 +0300
 
-    Subblock decoder: Don't exit the main loop in decode_buffer()
-    too early if we hit End of Input while decoding a Subblock of
-    type Repeating Data. To keep the loop termination condition
-    elegant, the order of enumerations in coder->sequence were
-    changed.
+    liblzma: Don't create an empty Block in lzma_stream_buffer_encode().
     
-    To keep the case-labels in roughly the same order as the
-    enumerations in coder->sequence, large chunks of code was
-    moved around. This made the diff big and ugly compared to
-    the amount of the actual changes made.
+    Empty Block was created if the input buffer was empty.
+    Empty Block wastes a few bytes of space, but more importantly
+    it triggers a bug in XZ Utils 5.0.1 and older when trying
+    to decompress such a file. 5.0.1 and older consider such
+    files to be corrupt. I thought that no encoder creates empty
+    Blocks when releasing 5.0.2 but I was wrong.
 
- src/liblzma/subblock/subblock_decoder.c | 272 ++++++++++++++++----------------
- 1 file changed, 139 insertions(+), 133 deletions(-)
+ src/liblzma/common/stream_buffer_encoder.c | 20 +++++++++++++-------
+ 1 file changed, 13 insertions(+), 7 deletions(-)
 
-commit b254bd97b1cdb68d127523d91ca9e054ed89c4fd
+commit 3b22fc2c87ec85fcdd385c163b68fc49c97aa848
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-17 17:39:42 +0200
+Date:   2011-04-11 13:28:40 +0300
 
-    Fix wrong too small size of argument unfiltered_max
-    in ia64_coder_init(). It triggered assert() in
-    simple_coder.c, and could have caused a buffer overflow.
+    liblzma: Fix API docs to mention LZMA_UNSUPPORTED_CHECK.
     
-    This error was probably a copypaste mistake, since most
-    of the simple filters use unfiltered_max = 4.
+    This return value was missing from the API comments of
+    four functions.
 
- src/liblzma/simple/ia64.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/liblzma/api/lzma/block.h     | 1 +
+ src/liblzma/api/lzma/container.h | 3 +++
+ 2 files changed, 4 insertions(+)
 
-commit 8f5794c8f1a30e8e3b524b415bbe81af2e04c64a
+commit 71b9380145dccf001f22e66a06b9d508905c25ce
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-17 17:27:45 +0200
-
-    Added --delta to the output of "lzma --help".
-
- src/lzma/help.c | 4 ++++
- 1 file changed, 4 insertions(+)
+Date:   2011-04-11 13:21:28 +0300
 
-commit f88590e0014b38d40465937c19f25f05f16c79ae
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-17 13:14:20 +0200
+    liblzma: Validate encoder arguments better.
 
-    Fix Subblock docoder: If Subblock filter was used with known
-    Uncompressed Size, and the last output byte was from RLE,
-    the code didn't stop decoding as it should have done.
+    The biggest problem was that the integrity check type
+    wasn't validated, and e.g. lzma_easy_buffer_encode()
+    would create a corrupt .xz Stream if given an unsupported
+    Check ID. Luckily applications don't usually try to use
+    an unsupport Check ID, so this bug is unlikely to cause
+    many real-world problems.
 
- src/liblzma/subblock/subblock_decoder.c | 6 ++++++
- 1 file changed, 6 insertions(+)
+ src/liblzma/common/block_buffer_encoder.c  | 18 ++++++++++++------
+ src/liblzma/common/block_encoder.c         |  5 +++++
+ src/liblzma/common/stream_buffer_encoder.c |  3 +++
+ 3 files changed, 20 insertions(+), 6 deletions(-)
 
-commit bc0b945ca376e333077644d2f7fd54c2848aab8a
+commit ec7e3dbad704268825fc48f0bdd4577bc46b4f13
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-16 16:33:37 +0200
+Date:   2011-04-11 09:57:30 +0300
 
-    Tiny non-technical edits to file-format.txt.
+    xz: Move the description of --block-size in --long-help.
 
- doc/file-format.txt | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
+ src/xz/message.c | 8 ++++----
+ 1 file changed, 4 insertions(+), 4 deletions(-)
 
-commit 7599bb7064ccf007f054595dedda7927af868252
+commit cd3086ff443bb282bdf556919c28b3e3cbed8169
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-16 14:48:04 +0200
+Date:   2011-04-11 09:55:35 +0300
 
-    Plugged a memory leak in stream_decoder.c.
+    Docs: Document --single-stream and --block-size.
 
- src/liblzma/common/stream_decoder.c | 20 ++++++++++++++++++++
- 1 file changed, 20 insertions(+)
+ src/xz/xz.1 | 38 ++++++++++++++++++++++++++++++++++++--
+ 1 file changed, 36 insertions(+), 2 deletions(-)
 
-commit 0b581539311f3712946e81e747839f8fb5f441a7
+commit fb64a4924334e3c440865710990fe08090f2fed0
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-16 14:47:27 +0200
+Date:   2011-04-11 09:27:57 +0300
+
+    liblzma: Make lzma_stream_encoder_init() static (second try).
 
-    Added memory leak detection to lzmadec.c.
+    It's an internal function and it's not needed by
+    anything outside stream_encoder.c.
 
- src/lzmadec/lzmadec.c | 3 +++
- 1 file changed, 3 insertions(+)
+ src/liblzma/common/Makefile.inc     |  1 -
+ src/liblzma/common/easy_encoder.c   |  1 -
+ src/liblzma/common/stream_encoder.c | 13 ++++++-------
+ src/liblzma/common/stream_encoder.h | 23 -----------------------
+ 4 files changed, 6 insertions(+), 32 deletions(-)
 
-commit 5b5b13c7bb8fde6331064d21f3ebde41072480c4
+commit a34730cf6af4d33a4057914e57227b6dfde6567e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-16 14:46:50 +0200
+Date:   2011-04-11 08:31:42 +0300
+
+    Revert "liblzma: Make lzma_stream_encoder_init() static."
 
-    Added lzma_memlimit_count().
+    This reverts commit 352ac82db5d3f64585c07b39e4759388dec0e4d7.
+    I don't know what I was thinking.
 
- src/liblzma/api/lzma/memlimit.h      | 10 ++++++++++
- src/liblzma/common/memory_limitter.c | 19 +++++++++++++++++++
- 2 files changed, 29 insertions(+)
+ src/liblzma/common/Makefile.inc     |  1 +
+ src/liblzma/common/stream_encoder.c |  9 +++++----
+ src/liblzma/common/stream_encoder.h | 23 +++++++++++++++++++++++
+ 3 files changed, 29 insertions(+), 4 deletions(-)
 
-commit 19389f2b82ec54fd4c847a18f16482e7be4c9887
+commit 9f0a806aef7ea79718e3f1f2baf3564295229a27
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-16 14:31:44 +0200
+Date:   2011-04-10 21:23:21 +0300
 
-    Added ARRAY_SIZE(array) macro.
+    Revise mythread.h.
 
- src/common/sysdefs.h | 4 ++++
- 1 file changed, 4 insertions(+)
+    This adds:
 
-commit 9bc33a54cbf83952130adbcb1be32c6882485416
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-16 13:27:03 +0200
+      - mythread_sync() macro to create synchronized blocks
 
-    Make Uncompresed Size validation more strict
-    in alone_decoder.c.
+      - mythread_cond structure and related functions
+        and macros for condition variables with timed
+        waiting using a relative timeout
 
- src/liblzma/common/alone_decoder.c | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
+      - mythread_create() to create a thread with all
+        signals blocked
 
-commit 01d71d60b79027e1ce3eb9c79ae5191e1407c883
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 17:46:59 +0200
+    Some of these wouldn't need to be inline functions,
+    but I'll keep them this way for now for simplicity.
 
-    Free the allocated memory in lzmadec if debugging is
-    enabled. This should make it possible to detect possible
-    memory leaks with Valgrind.
+    For timed waiting on a condition variable, librt is
+    now required on some systems to use clock_gettime().
+    configure.ac was updated to handle this.
 
- src/lzmadec/lzmadec.c | 7 +++++++
- 1 file changed, 7 insertions(+)
+ configure.ac          |   1 +
+ src/common/mythread.h | 200 +++++++++++++++++++++++++++++++++++++++++++++-----
+ 2 files changed, 181 insertions(+), 20 deletions(-)
 
-commit 8235e6e5b2878f76633afcda9a334640db503ef5
+commit 352ac82db5d3f64585c07b39e4759388dec0e4d7
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 16:25:38 +0200
+Date:   2011-04-10 20:37:36 +0300
+
+    liblzma: Make lzma_stream_encoder_init() static.
 
-    Fix memory leaks from test_block_header.c.
+    It's an internal function and it's not needed by
+    anything outside stream_encoder.c.
 
- tests/test_block_header.c | 19 +++++++++++++++++--
- 1 file changed, 17 insertions(+), 2 deletions(-)
+ src/liblzma/common/Makefile.inc     |  1 -
+ src/liblzma/common/stream_encoder.c |  9 ++++-----
+ src/liblzma/common/stream_encoder.h | 23 -----------------------
+ 3 files changed, 4 insertions(+), 29 deletions(-)
 
-commit f10fc6a69d40b6d5c9cfbf8d3746f49869c2e2f6
+commit 9e807fe3fe79618ac48f58207cf7082ea20a6928
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 14:23:35 +0200
+Date:   2011-04-10 14:58:10 +0300
 
-    Use fastpos.h when encoding LZMA dictionary size in
-    Filter Flags encoder.
+    DOS: Update the docs and include notes about 8.3 filenames.
 
- src/liblzma/common/filter_flags_encoder.c | 40 +++++++++++++++----------------
- 1 file changed, 19 insertions(+), 21 deletions(-)
+ dos/{README => INSTALL.txt} |  13 +----
+ dos/README.txt              | 123 ++++++++++++++++++++++++++++++++++++++++++++
+ 2 files changed, 125 insertions(+), 11 deletions(-)
 
-commit e5728142a2048979f5c0c2149ce71ae952a092e1
+commit ebd54dbd6e481d31e80757f900ac8109ad1423c6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 14:02:22 +0200
+Date:   2011-04-10 13:09:42 +0300
 
-    Revised the fastpos code. It now uses the slightly faster
-    table-based version from LZMA SDK 4.57. This should be
-    fast on most systems.
+    xz/DOS: Add experimental 8.3 filename support.
     
-    A simpler and smaller alternative version is also provided.
-    On some CPUs this can be even a little faster than the
-    default table-based version (see comments in fastpos.h),
-    but on most systems the table-based code is faster.
+    This is incompatible with the 8.3 support patch made by
+    Juan Manuel Guerrero. I think this one is nicer, but
+    I need to get feedback from DOS users before saying
+    that this is the final version of 8.3 filename support.
 
- src/liblzma/common/init_encoder.c          |   3 -
- src/liblzma/lzma/Makefile.am               |   4 +
- src/liblzma/lzma/fastpos.h                 | 156 +++++++++
- src/liblzma/lzma/fastpos_table.c           | 519 +++++++++++++++++++++++++++++
- src/liblzma/lzma/fastpos_tablegen.c        |  63 ++++
- src/liblzma/lzma/lzma_common.h             |   3 +-
- src/liblzma/lzma/lzma_encoder.c            |   1 +
- src/liblzma/lzma/lzma_encoder_getoptimum.c |   1 +
- src/liblzma/lzma/lzma_encoder_init.c       |  22 --
- src/liblzma/lzma/lzma_encoder_private.h    |  21 --
- 10 files changed, 746 insertions(+), 47 deletions(-)
+ src/xz/suffix.c | 176 +++++++++++++++++++++++++++++++++++++++++++++++++++++---
+ 1 file changed, 167 insertions(+), 9 deletions(-)
 
-commit 10437b5b567f6a025ff16c45a572e417a0a9cc26
+commit cd4fe97852bcaeffe674ee51b4613709292a0972
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 13:32:13 +0200
-
-    Added bsr.h.
+Date:   2011-04-10 12:47:47 +0300
 
- src/liblzma/common/Makefile.am |  1 +
- src/liblzma/common/bsr.h       | 61 ++++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 62 insertions(+)
+    xz/DOS: Be more careful with the destination file.
 
-commit f3c88e8b8d8dd57f4bba5f0921eebf276437c244
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 13:29:14 +0200
+    Try to avoid overwriting the source file if --force is
+    used and the generated destination filename refers to
+    the source file. This can happen with 8.3 filenames where
+    extra characters are ignored.
 
-    Fixed assembler detection in configure.ac, and added
-    detection for x86_64.
+    If the generated output file refers to a special file
+    like "con" or "prn", refuse to write to it even if --force
+    is used.
 
- configure.ac | 32 ++++++++++++++++----------------
- 1 file changed, 16 insertions(+), 16 deletions(-)
+ src/xz/file_io.c | 35 +++++++++++++++++++++++++++++++++--
+ 1 file changed, 33 insertions(+), 2 deletions(-)
 
-commit 54ec204f58287f50d3976288295da4188a19192b
+commit 607f9f98ae5ef6d49f4c21c806d462bf6b3d6796
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 12:20:41 +0200
+Date:   2011-04-09 18:29:30 +0300
 
-    Omit invalid space from printf() format string
-    in price_table_gen.c.
+    Update THANKS.
 
- src/liblzma/rangecoder/price_table_gen.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 01b4b19f49f00e17a0f9cb8754c672ac0847b6e1
+commit fca396b37410d272b754843a5dc13847be443a3a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 09:54:34 +0200
-
-    Removed a few unused macros from lzma_common.h.
+Date:   2011-04-09 18:28:58 +0300
 
- src/liblzma/lzma/lzma_common.h | 8 ++------
- 1 file changed, 2 insertions(+), 6 deletions(-)
+    liblzma: Add missing #ifdefs to filter_common.c.
 
-commit 19bd7f3cf25e4ff8487ef7098ca4a7b58681961d
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 08:37:42 +0200
+    Passing --disable-decoders to configure broke a few
+    encoders due to missing #ifdefs in filter_common.c.
 
-    Fix a typo in lzma_encoder.c.
+    Thanks to Jason Gorski for the patch.
 
- src/liblzma/lzma/lzma_encoder.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/liblzma/common/filter_common.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
 
-commit 9f9b1983013048f2142e8bc7e240149d2687bedc
+commit b03f6cd3ebadd675f2cc9d518cb26fa860269447
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 08:36:25 +0200
+Date:   2011-04-09 15:24:59 +0300
 
-    Convert bittree_get_price() and bittree_reverse_get_price()
-    from macros to inline functions.
+    xz: Avoid unneeded fstat() on DOS-like systems.
 
- src/liblzma/lzma/lzma_encoder.c            | 19 +++-----
- src/liblzma/lzma/lzma_encoder_getoptimum.c | 16 +++----
- src/liblzma/rangecoder/range_encoder.h     | 76 +++++++++++++++++-------------
- 3 files changed, 56 insertions(+), 55 deletions(-)
+ src/xz/file_io.c | 14 ++++++++------
+ 1 file changed, 8 insertions(+), 6 deletions(-)
 
-commit 78e85cb1a7667c54853670d2eb09d754bcbda87d
+commit 335fe260a81f61ec99ff5940df733b4c50aedb7c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 07:44:59 +0200
+Date:   2011-04-09 15:11:13 +0300
+
+    xz: Minor internal changes to handling of --threads.
 
-    Fix CRC code in case --enable-small is used.
+    Now it always defaults to one thread. Maybe this
+    will change again if a threading method is added
+    that doesn't affect memory usage.
 
- src/liblzma/check/crc32_init.c    | 2 +-
- src/liblzma/check/crc64_init.c    | 2 +-
- src/liblzma/common/init_decoder.c | 2 --
- src/liblzma/common/init_encoder.c | 2 --
- tests/test_check.c                | 2 ++
- 5 files changed, 4 insertions(+), 6 deletions(-)
+ src/xz/args.c     |  4 ++--
+ src/xz/hardware.c | 24 ++++++++++++------------
+ src/xz/hardware.h |  9 ++++-----
+ 3 files changed, 18 insertions(+), 19 deletions(-)
 
-commit 949d4346e2d75bcd9dcb66c394d8d851d8db3aa0
+commit 9edd6ee895fbe71d245a173f48e511f154a99875
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 07:41:39 +0200
+Date:   2011-04-08 17:53:05 +0300
 
-    Fix typo in test_index.c.
+    xz: Change size_t to uint32_t in a few places.
 
- tests/test_index.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/xz/coder.c | 6 +++---
+ src/xz/coder.h | 2 +-
+ 2 files changed, 4 insertions(+), 4 deletions(-)
 
-commit d13d693155c176fc9e9ad5c50d48ccba27c2d9c6
+commit 411013ea4506a6df24d35a060fcbd73a57b73eb3
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-15 07:40:21 +0200
+Date:   2011-04-08 17:48:41 +0300
 
-    Added precomputed range coder probability price table.
+    xz: Fix a typo in a comment.
 
- src/liblzma/common/init_encoder.c         |  5 ++-
- src/liblzma/rangecoder/Makefile.am        |  9 +++-
- src/liblzma/rangecoder/price_table.c      | 70 +++++++++++++++++++++++++++++++
- src/liblzma/rangecoder/price_table_gen.c  | 55 ++++++++++++++++++++++++
- src/liblzma/rangecoder/price_table_init.c | 48 +++++++++++++++++++++
- src/liblzma/rangecoder/range_common.h     |  4 +-
- src/liblzma/rangecoder/range_encoder.c    | 46 --------------------
- src/liblzma/rangecoder/range_encoder.h    | 21 +++++-----
- 8 files changed, 197 insertions(+), 61 deletions(-)
+ src/xz/coder.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 362dc3843b373c1007a50a4719f378981f18ae03
+commit b34c5ce4b22e8d7b81f9895d15054af41d17f805
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-14 13:42:43 +0200
+Date:   2011-04-05 22:41:33 +0300
 
-    Remove RC_BUFFER_SIZE from lzma_encoder_private.h
-    and replace it with a sanity check.
+    liblzma: Use TUKLIB_GNUC_REQ to check GCC version in sha256.c.
 
- src/liblzma/lzma/lzma_encoder_private.h | 6 ++++--
- 1 file changed, 4 insertions(+), 2 deletions(-)
+ src/liblzma/check/sha256.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
 
-commit e22b37968d153683fec61ad37b6b160cb7ca4ddc
+commit db33117cc85c17e0b897b5312bd5eb43aac41c03
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-14 13:39:54 +0200
+Date:   2011-04-05 17:12:20 +0300
+
+    Build: Upgrade m4/acx_pthread.m4 to the latest version.
 
-    Major changes to LZ encoder, LZMA encoder, and range encoder.
-    These changes implement support for LZMA_SYNC_FLUSH in LZMA
-    encoder, and move the temporary buffer needed by range encoder
-    from lzma_range_encoder structure to lzma_lz_encoder.
+    It was renamed to ax_pthread.m4 in Autoconf Archive.
 
- src/liblzma/lz/lz_encoder.c            | 138 ++++++++++++++++++++++++++++-----
- src/liblzma/lz/lz_encoder.h            |  17 ++--
- src/liblzma/lzma/lzma_encoder.c        |  74 ++++++++++--------
- src/liblzma/rangecoder/range_encoder.h | 117 ++++++++--------------------
- 4 files changed, 206 insertions(+), 140 deletions(-)
+ configure.ac                         |   2 +-
+ m4/{acx_pthread.m4 => ax_pthread.m4} | 170 ++++++++++++++++++-----------------
+ 2 files changed, 88 insertions(+), 84 deletions(-)
 
-commit b59ef3973781f892c0a72b5e5934194567100be5
+commit 1039bfcfc098b69d56ecb39d198a092552eacf6d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-14 13:34:29 +0200
+Date:   2011-04-05 15:27:26 +0300
 
-    Added one assert() to process.c of the command line tool.
+    xz: Use posix_fadvise() if it is available.
 
- src/lzma/process.c | 1 +
- 1 file changed, 1 insertion(+)
+ configure.ac     |  3 +++
+ src/xz/file_io.c | 15 +++++++++++++++
+ 2 files changed, 18 insertions(+)
 
-commit 9547e734a00ddb64c851fa3f116e4f9e7d763ea7
+commit 1ef3cf44a8eb9512480af4482a5232ea08363b14
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-14 12:09:52 +0200
+Date:   2011-04-05 15:13:29 +0300
 
-    Don't use coder->lz.stream_end_was_reached in assertions
-    in match_c.h.
+    xz: Call lzma_end(&strm) before exiting if debugging is enabled.
 
- src/liblzma/lz/match_c.h | 2 --
- 1 file changed, 2 deletions(-)
+ src/xz/coder.c | 10 ++++++++++
+ src/xz/coder.h |  5 +++++
+ src/xz/main.c  |  4 ++++
+ 3 files changed, 19 insertions(+)
 
-commit 3e09e1c05871f3757f759b801890ccccc9286608
+commit bd432015d33dcade611d297bc01eb0700088ef6c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-14 12:08:02 +0200
+Date:   2011-04-02 14:49:56 +0300
 
-    In lzma_read_match_distances(), don't use
-    coder->lz.stream_end_was_reached. That variable
-    will be removed, and the check isn't required anyway.
-    Rearrange the check so that it doesn't make one to
-    think that there could be an integer overflow.
+    liblzma: Fix a memory leak in stream_encoder.c.
 
- src/liblzma/lzma/lzma_encoder_private.h | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
+    It leaks old filter options structures (hundred bytes or so)
+    every time the lzma_stream is reinitialized. With the xz tool,
+    this happens when compressing multiple files.
+
+ src/liblzma/common/stream_encoder.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit a670fec8021e5962429689c194148a04c3418872
+commit 16889013214e7620d204b6e6c1bf9f3103a13655
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-14 11:56:41 +0200
+Date:   2011-04-01 08:47:20 +0300
 
-    Small LZMA_SYNC_FLUSH fixes to Block and Single-Stream encoders.
+    Updated NEWS for 5.0.2.
 
- src/liblzma/common/block_encoder.c         | 4 ++--
- src/liblzma/common/stream_encoder_single.c | 1 +
- 2 files changed, 3 insertions(+), 2 deletions(-)
+ NEWS | 18 ++++++++++++++++++
+ 1 file changed, 18 insertions(+)
 
-commit 3599dba9570a6972a16b6398d6c838e9b420e985
+commit 85cdf7dd4e97b078e7b929e47f55a7f1da36010f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-14 11:54:56 +0200
+Date:   2011-03-31 15:06:58 +0300
 
-    More fixes to LZMA decoder's flush marker handling.
+    Update INSTALL with another note about IRIX.
 
- src/liblzma/lzma/lzma_decoder.c | 52 ++++++++++++++++++++++++-----------------
- 1 file changed, 30 insertions(+), 22 deletions(-)
+ INSTALL | 4 ++++
+ 1 file changed, 4 insertions(+)
 
-commit f73c2ab6079ed5675a42b39d584a567befbd4624
+commit c3f4995586873d6a4fb7e451010a128571a9a370
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-10 17:13:42 +0200
+Date:   2011-03-31 12:22:55 +0300
 
-    Eliminate lzma_lz_encoder.must_move_pos. It's needed
-    only in one place which isn't performance criticial.
+    Tests: Add a new file to test empty LZMA2 streams.
 
- src/liblzma/lz/lz_encoder.c | 6 ++----
- src/liblzma/lz/lz_encoder.h | 4 ----
- 2 files changed, 2 insertions(+), 8 deletions(-)
+ tests/files/README            |   4 ++++
+ tests/files/good-1-lzma2-5.xz | Bin 0 -> 52 bytes
+ 2 files changed, 4 insertions(+)
 
-commit 382808514a42b2f4b4a64515e2dfb3fc1bc48ecd
+commit 0d21f49a809dc2088da6cc0da7f948404df7ecfa
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-09 20:05:57 +0200
+Date:   2011-03-31 11:54:48 +0300
+
+    liblzma: Fix decoding of LZMA2 streams having no uncompressed data.
 
-    Define HAVE_ASM_X86 when x86 assembler optimizations are
-    used. This #define will be useful for inline assembly.
+    The decoder considered empty LZMA2 streams to be corrupt.
+    This shouldn't matter much with .xz files, because no encoder
+    creates empty LZMA2 streams in .xz. This bug is more likely
+    to cause problems in applications that use raw LZMA2 streams.
 
- configure.ac | 5 ++++-
- 1 file changed, 4 insertions(+), 1 deletion(-)
+ src/liblzma/lzma/lzma2_decoder.c | 8 ++++----
+ 1 file changed, 4 insertions(+), 4 deletions(-)
 
-commit 0e70fbe4032351aab13a1cd8e5deced105c0b276
+commit 40277998cb9bad564ce4827aff152e6e1c904dfa
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-09 12:06:46 +0200
-
-    Added good-single-none-empty_3.lzma and
-    bad-single-none-empty.lzma.
+Date:   2011-03-24 01:42:49 +0200
 
- tests/files/README                        |   6 ++++++
- tests/files/bad-single-none-empty.lzma    | Bin 0 -> 19 bytes
- tests/files/good-single-none-empty_3.lzma | Bin 0 -> 19 bytes
- 3 files changed, 6 insertions(+)
+    Scripts: Better fix for xzgrep.
 
-commit 379fbbe84d922c7cc00afa65c6f0c095da596b19
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-08 23:11:59 +0200
+    Now it uses "grep -q".
 
-    Take advantage of return_if_error() in block_decoder.c.
+    Thanks to Gregory Margo.
 
- src/liblzma/common/block_decoder.c | 23 +++++++----------------
- 1 file changed, 7 insertions(+), 16 deletions(-)
+ src/scripts/xzgrep.in | 8 ++++++--
+ 1 file changed, 6 insertions(+), 2 deletions(-)
 
-commit 97d5fa82077e57815dfad995dc393c2809a78539
+commit 2118733045ad0ca183a3f181a0399baf876983a6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-08 23:10:57 +0200
+Date:   2011-03-24 01:22:18 +0200
 
-    Updated tests/files/README.
+    Updated THANKS.
 
- tests/files/README | 15 +++++++++------
- 1 file changed, 9 insertions(+), 6 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 3bb9bb310936cba6a743b4f06739a397dec7c28f
+commit c7210d9a3fca6f31a57208bfddfc9ab20a2e097a
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-08 23:05:40 +0200
-
-    Added test files with empty Compressed Data.
+Date:   2011-03-24 01:21:32 +0200
 
- tests/files/README                        |   6 ++++++
- tests/files/good-single-lzma-empty.lzma   | Bin 0 -> 21 bytes
- tests/files/good-single-none-empty_1.lzma | Bin 0 -> 18 bytes
- tests/files/good-single-none-empty_2.lzma | Bin 0 -> 26 bytes
- 4 files changed, 6 insertions(+)
+    Scripts: Fix xzgrep -l.
 
-commit 7054c5f5888ac6a7178cd43dc9583ce6c7e78c9f
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-08 22:58:42 +0200
+    It didn't work at all. It tried to use the -q option
+    for grep, but it appended it after "--". This works
+    around it by redirecting to /dev/null. The downside
+    is that this can be slower with big files compared
+    to proper use of "grep -q".
 
-    Fix decoding of Blocks that have only Block Header.
+    Thanks to Gregory Margo.
 
- src/liblzma/common/block_decoder.c | 37 ++++++++++++++-----------------------
- 1 file changed, 14 insertions(+), 23 deletions(-)
+ src/scripts/xzgrep.in | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
 
-commit 753e4d95cd1cf29c632dfe1a670af7c67aeffbf4
+commit 4eb83e32046a6d670862bc91c3d82530963b455e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-08 22:27:46 +0200
+Date:   2011-03-19 13:08:22 +0200
 
-    Added good-single-subblock_implicit.lzma.
+    Scripts: Add lzop (.lzo) support to xzdiff and xzgrep.
 
- tests/files/README                             |   2 ++
- tests/files/good-single-subblock_implicit.lzma | Bin 0 -> 35 bytes
- 2 files changed, 2 insertions(+)
+ src/scripts/xzdiff.1  |  6 ++++--
+ src/scripts/xzdiff.in | 22 ++++++++++++++--------
+ src/scripts/xzgrep.1  | 11 +++++++----
+ src/scripts/xzgrep.in |  5 +++--
+ 4 files changed, 28 insertions(+), 16 deletions(-)
 
-commit faeac7b7aca75f86afed1e7cc06279d9d497c627
+commit 923b22483bd9356f3219b2b784d96f455f4dc499
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-08 18:50:30 +0200
-
-    Disable CRC32 from Block Headers when --check=none
-    has been specified.
+Date:   2011-03-18 19:10:30 +0200
 
- src/lzma/process.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    xz: Add --block-size=SIZE.
 
-commit a751126dbb656767ed4666cf0e5d3e17349d93d1
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-08 13:36:29 +0200
+    This uses LZMA_FULL_FLUSH every SIZE bytes of input.
 
-    Fixed encoding of empty files. Arguments to is_size_valid()
-    were in wrong order in block_encoder.c.
+    Man page wasn't updated yet.
 
- src/liblzma/common/block_encoder.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ src/xz/args.c    |  7 +++++++
+ src/xz/coder.c   | 50 ++++++++++++++++++++++++++++++++++++++++----------
+ src/xz/coder.h   |  3 +++
+ src/xz/message.c |  4 ++++
+ 4 files changed, 54 insertions(+), 10 deletions(-)
 
-commit 9080267603b1006c4867c823307dca9df8be0d20
+commit 57597d42ca1740ad506437be168d800a50f1a0ad
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-08 13:35:36 +0200
-
-    Added a few test files.
+Date:   2011-03-18 18:19:19 +0200
 
- tests/files/README                                 |  21 ++++++++++++++++++---
- tests/files/bad-cat-single-none-pad_garbage_1.lzma | Bin 0 -> 65 bytes
- tests/files/bad-cat-single-none-pad_garbage_2.lzma | Bin 0 -> 65 bytes
- tests/files/bad-cat-single-none-pad_garbage_3.lzma | Bin 0 -> 65 bytes
- tests/files/bad-single-data_after_eopm.lzma        | Bin 55 -> 0 bytes
- tests/files/bad-single-data_after_eopm_1.lzma      | Bin 0 -> 55 bytes
- tests/files/bad-single-none-truncated.lzma         | Bin 0 -> 29 bytes
- 7 files changed, 18 insertions(+), 3 deletions(-)
+    xz: Add --single-stream.
 
-commit b4943ccf73b64fc93a90a23474509c316f55eb2b
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-08 12:29:58 +0200
+    This can be useful when there is garbage after the
+    compressed stream (.xz, .lzma, or raw stream).
 
-    Avoid using ! in test_files.sh, because that doesn't work
-    with some ancient /bin/sh versions.
+    Man page wasn't updated yet.
 
- tests/test_files.sh | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
+ src/xz/args.c    |  6 ++++++
+ src/xz/coder.c   | 11 +++++++++--
+ src/xz/coder.h   |  3 +++
+ src/xz/message.c |  6 +++++-
+ 4 files changed, 23 insertions(+), 3 deletions(-)
 
-commit e2417b2b9134f3f65e14b61e23cd3644d8954353
+commit 96f94bc925d579a700147fa5d7793b64d69cfc18
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-08 00:48:30 +0200
+Date:   2011-02-04 22:49:31 +0200
+
+    xz: Clean up suffix.c.
 
-    More pre-C99 inttypes.h compatibility fixes. Now the code
-    should work even if the system has no inttypes.h.
+    struct suffix_pair isn't needed in compresed_name()
+    so get rid of it there.
 
- src/common/physmem.h               | 11 -----------
- src/liblzma/check/crc32_init.c     |  5 +----
- src/liblzma/check/crc32_tablegen.c |  7 ++-----
- src/liblzma/check/crc64_init.c     |  5 +----
- src/liblzma/check/crc64_tablegen.c |  7 ++-----
- 5 files changed, 6 insertions(+), 29 deletions(-)
+ src/xz/suffix.c | 44 ++++++++++++++++++++------------------------
+ 1 file changed, 20 insertions(+), 24 deletions(-)
 
-commit 5d227e51c23639423f4ade06aabb54e131f8505e
+commit 8930c7ae3f82bdae15aa129f01de08be23d7e8d7
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-07 23:25:32 +0200
+Date:   2011-02-04 11:29:47 +0200
 
-    Updated fi.po although it's currently pretty much crap.
+    xz: Check if the file already has custom suffix when compressing.
 
- po/fi.po | 12 ++++++------
- 1 file changed, 6 insertions(+), 6 deletions(-)
+    Now "xz -S .test foo.test" refuses to compress the
+    file because it already has the suffix .test. The man
+    page had it documented this way already.
+
+ src/xz/suffix.c | 9 +++++++++
+ 1 file changed, 9 insertions(+)
 
-commit c7189d981a1b27c63da0c1ee80d9b5cd8ce1733d
+commit 940d5852c6cf08abccc6befd9d1b5411c9076a58
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-07 23:14:25 +0200
+Date:   2011-02-02 23:01:51 +0200
 
-    Test for $GCC = yes instead of if it is non-empty. This
-    way it is possible to use ac_cv_c_compiler_gnu=no to
-    force configure to think it is using non-GNU C compiler.
+    Updated THANKS.
 
- configure.ac | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 3dbbea82b74bb841c995ad332a3aeca613015e10
+commit 4ebe65f839613f27f127bab7b8c347d982330ee3
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-07 21:49:41 +0200
+Date:   2011-02-02 23:00:33 +0200
+
+    Translations: Add Polish translation.
 
-    Added test_files.sh to tests/Makefile.am so it gets
-    included in the tarball with "make dist".
+    Thanks to Jakub Bogusz.
 
- tests/Makefile.am | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ po/LINGUAS |   1 +
+ po/pl.po   | 825 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ 2 files changed, 826 insertions(+)
 
-commit 2fd2d181543feab1b4003f3ac6e85625fbee04f0
+commit fc1d292dca1925dfd17174f443f91a696ecd5bf8
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-07 18:22:24 +0200
+Date:   2011-02-02 22:24:00 +0200
 
-    Cosmetic edit to test_files.sh.
+    Updated THANKS.
 
- tests/test_files.sh | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit 9a71d573100a990ceb30ce0bec6a9a15d795605f
+commit 6dd061adfd2775428b079eb03d6fd47d7c0f1ffe
+Merge: 9d542ce 5fbce0b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-07 18:09:44 +0200
-
-    Added tests/files/README.
+Date:   2011-02-06 20:13:01 +0200
 
- tests/files/README | 108 +++++++++++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 108 insertions(+)
+    Merge commit '5fbce0b8d96dc96775aa0215e3581addc830e23d'
 
-commit 47f48fe9936ed72617a60fbd015df7e0e47a1e43
+commit 5fbce0b8d96dc96775aa0215e3581addc830e23d
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-07 14:20:57 +0200
+Date:   2011-01-28 20:16:57 +0200
 
-    Tell in COPYING that everything in tests/files is
-    public domain.
+    Update NEWS for 5.0.1.
 
- COPYING | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
+ NEWS | 14 ++++++++++++++
+ 1 file changed, 14 insertions(+)
 
-commit 3502b3e1d00251d3c8dda96079440705c28d8225
+commit 03ebd1bbb314f9f204940219a835c883bf442475
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-07 14:19:05 +0200
-
-    Cleaned up the tests/files directory.
+Date:   2011-01-26 12:19:08 +0200
 
- tests/files/bad-single-subblock-padding_loop.lzma   | Bin 0 -> 43 bytes
- tests/files/bad-single-subblock1023-slow.lzma       | Bin 0 -> 7886 bytes
- tests/files/malicious-single-subblock-loop.lzma     | Bin 43 -> 0 bytes
- tests/files/malicious-single-subblock-lzma.lzma     | Bin 505 -> 0 bytes
- tests/files/malicious-single-subblock1023-slow.lzma | Bin 7886 -> 0 bytes
- 5 files changed, 0 insertions(+), 0 deletions(-)
+    xz: Fix --force on setuid/setgid/sticky and multi-hardlink files.
 
-commit 908b2ac604b9940369d7fe8a45e9eb6da5d2a24c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-07 13:49:19 +0200
+    xz didn't compress setuid/setgid/sticky files and files
+    with multiple hard links even with --force. This bug was
+    introduced in 23ac2c44c3ac76994825adb7f9a8f719f78b5ee4.
 
-    Added test_files.sh to test decoding of the files in
-    the tests/files directory. It doesn't test the malicious
-    files yet.
+    Thanks to Charles Wilson.
 
- tests/Makefile.am   |  4 +++-
- tests/test_files.sh | 40 ++++++++++++++++++++++++++++++++++++++++
- 2 files changed, 43 insertions(+), 1 deletion(-)
+ src/xz/file_io.c | 15 +++++++--------
+ 1 file changed, 7 insertions(+), 8 deletions(-)
 
-commit ecb2a6548f5978022a8fa931719dc575f5fd3bf6
+commit 9d542ceebcbe40b174169c132ccfcdc720ca7089
+Merge: 4f2c69a 7bd0a5e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-07 11:23:13 +0200
-
-    Updated README regarding the assembler optimizations.
+Date:   2011-01-19 11:45:35 +0200
 
- README | 10 +++++-----
- 1 file changed, 5 insertions(+), 5 deletions(-)
+    Merge branch 'v5.0'
 
-commit eacb8050438d3e6146c86eb9732d3fb1ef1825cb
+commit 7bd0a5e7ccc354f7c2e95c8bc27569c820f6a136
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-07 10:58:00 +0200
+Date:   2011-01-18 21:25:24 +0200
 
     Updated THANKS.
 
  THANKS | 1 +
  1 file changed, 1 insertion(+)
 
-commit 1239649f96132b18e3b7e2dd152ecf53a195caa8
+commit f71c4e16e913f660977526f0ef8d2acdf458d7c9
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-06 21:47:17 +0200
-
-    Cosmetic changes to configure.ac.
-
- configure.ac | 14 ++++++--------
- 1 file changed, 6 insertions(+), 8 deletions(-)
+Date:   2011-01-18 21:23:50 +0200
 
-commit 88ee301ec2e4506a30ec7ac9aaa2288e2dcadd0e
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-06 19:46:38 +0200
+    Add alloc_size and malloc attributes to a few functions.
 
-    Automatically disable assembler code on Darwin x86.
-    Darwin has different ABI than GNU+Linux and Solaris,
-    thus the assembler code doesn't assemble on Darwin.
+    Thanks to Cristian Rodríguez for the original patch.
 
- configure.ac | 17 +++++++++++++++--
- 1 file changed, 15 insertions(+), 2 deletions(-)
+ src/common/sysdefs.h        | 6 ++++++
+ src/liblzma/common/common.h | 2 +-
+ src/xz/util.h               | 5 +++--
+ 3 files changed, 10 insertions(+), 3 deletions(-)
 
-commit c15a7abf66e3a70792f7444115e484c7981c8284
+commit 316cbe24465143edde8f6ffb7532834b7b2ea93f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-06 19:45:27 +0200
+Date:   2010-12-13 16:36:33 +0200
 
-    With printf(), use PRIu64 with a cast to uint64_t instead
-    of %zu, because some pre-C99 libc versions don't support %zu.
+    Scripts: Fix gzip and bzip2 support in xzdiff.
 
- src/lzma/help.c       | 13 +++++++------
- src/lzmadec/lzmadec.c |  6 ++++--
- 2 files changed, 11 insertions(+), 8 deletions(-)
+ src/scripts/xzdiff.in | 12 ++++++------
+ 1 file changed, 6 insertions(+), 6 deletions(-)
 
-commit 4e7e54c4c522ab2f6a7abb92cefc4f707e9568fb
+commit 4f2c69a4e3e0aee2e37b0b1671d34086e20c8ac6
+Merge: adb89e6 9311774
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-06 16:27:41 +0200
-
-    Introduced compatibility with systems that have pre-C99
-    or no inttypes.h. This is useful when the compiler has
-    good enough support for C99, but libc headers don't.
-    
-    Changed liblzma API so that sys/types.h and inttypes.h
-    have to be #included before #including lzma.h. On systems
-    that don't have C99 inttypes.h, it's the problem of the
-    applications to provide the required types and macros
-    before #including lzma.h.
-    
-    If lzma.h defined the missing types and macros, it could
-    conflict with third-party applications whose configure
-    has detected that the types are missing and defined them
-    in config.h already. An alternative would have been
-    introducing lzma_uint32 and similar types, but that would
-    just be an extra pain on modern systems.
+Date:   2010-12-12 23:13:22 +0200
 
- configure.ac                       | 13 ++++++++-
- doc/liblzma-intro.txt              | 10 +++++--
- src/common/sysdefs.h               | 59 +++++++++++++++++++++++++++++++++++++-
- src/liblzma/api/lzma.h             | 40 +++++++++++++++++---------
- src/liblzma/check/crc32_table.c    |  4 +--
- src/liblzma/check/crc32_table_be.h |  2 --
- src/liblzma/check/crc32_table_le.h |  2 --
- src/liblzma/check/crc32_tablegen.c |  1 -
- src/liblzma/check/crc64_table.c    |  4 +--
- src/liblzma/check/crc64_table_be.h |  2 --
- src/liblzma/check/crc64_table_le.h |  2 --
- src/liblzma/check/crc64_tablegen.c |  1 -
- src/lzma/private.h                 |  1 -
- 13 files changed, 106 insertions(+), 35 deletions(-)
+    Merge branch 'v5.0'
 
-commit a71864f77dfb76b5d78a270641539947c312583a
+commit 9311774c493c19deab51ded919dcd2e9c4aa2829
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-05 19:57:00 +0200
+Date:   2010-12-12 21:23:55 +0200
 
-    Fix typo in comment (INT64_MAX -> UINT64_MAX).
+    Build: Enable ASM on DJGPP by default.
 
- src/liblzma/api/lzma/vli.h | 2 +-
+ configure.ac | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-commit 072927905a3b66281c6311b4b351caa501d8b73a
+commit 4a42aaee282fc73b482581684d65110506d5efdd
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-05 19:42:04 +0200
+Date:   2010-12-12 16:09:42 +0200
 
-    Rearranged testing of GCC-specific flags.
+    Updated THANKS.
 
- configure.ac | 33 +++++++++++++++++++++++----------
- 1 file changed, 23 insertions(+), 10 deletions(-)
+ THANKS | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit d160ee32598c6d1cd9054ef019e8c9331208b188
+commit ce56f63c41ee210e6308090eb6d49221fdf67d6c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-05 01:20:24 +0200
-
-    Another bug fix for flush marker detection.
+Date:   2010-12-12 16:07:11 +0200
 
- src/liblzma/lzma/lzma_decoder.c | 10 +++++++++-
- 1 file changed, 9 insertions(+), 1 deletion(-)
+    Add missing PRIx32 and PRIx64 compatibility definitions.
 
-commit fc67f79f607cbfa78c6f47a69dec098d8659b162
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-04 21:37:01 +0200
+    This fixes portability to systems that lack C99 inttypes.h.
 
-    Fix stupid bugs in flush marker detection.
+    Thanks to Juan Manuel Guerrero.
 
- src/liblzma/lzma/lzma_decoder.c | 7 ++++---
- 1 file changed, 4 insertions(+), 3 deletions(-)
+ src/common/sysdefs.h | 9 +++++++++
+ 1 file changed, 9 insertions(+)
 
-commit 0029cbbabe87d491fc046a55a629a6d556010baa
+commit e6baedddcf54e7da049ebc49183565b99facd4c7
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-04 21:30:33 +0200
+Date:   2010-12-12 14:50:04 +0200
 
-    Added support for flush marker, which will be in files
-    that use LZMA_SYNC_FLUSH with encoder (not implemented
-    yet). This is a new feature in the raw LZMA format,
-    which isn't supported by old decoders. This shouldn't
-    be a problem in practice, since lzma_alone_encoder()
-    will not allow LZMA_SYNC_FLUSH, and thus not allow
-    creating files on decodable with old decoders.
+    DOS-like: Treat \ and : as directory separators in addition to /.
     
-    Made lzma_decoder.c to require tab width of 4 characters
-    if one wants to fit the code in 80 columns. This makes
-    the code easier to read.
+    Juan Manuel Guerrero had fixed this in his XZ Utils port
+    to DOS/DJGPP. The bug affects also Windows and OS/2.
 
- src/liblzma/lzma/lzma_common.h  |   4 +
- src/liblzma/lzma/lzma_decoder.c | 217 ++++++++++++++++++----------------------
- 2 files changed, 104 insertions(+), 117 deletions(-)
+ src/xz/suffix.c | 33 +++++++++++++++++++++++++++++----
+ 1 file changed, 29 insertions(+), 4 deletions(-)
 
-commit bbfd1f6ab058a7e661545205befcb7f70c5685ab
+commit adb89e68d43a4cadb0c215b45ef7a75737c9c3ec
+Merge: 7c24e0d b7afd3e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2008-01-04 20:45:05 +0200
-
-    Moved range decoder initialization (reading the first
-    five input bytes) from LZMA decoder to range decoder
-    header. Did the same for decoding of direct bits.
+Date:   2010-12-07 18:53:04 +0200
 
- src/liblzma/lzma/lzma_decoder.c        | 42 +++-------------
- src/liblzma/rangecoder/range_decoder.h | 87 +++++++++++++++++++++++-----------
- 2 files changed, 66 insertions(+), 63 deletions(-)
+    Merge branch 'v5.0'
 
-commit 5db745cd2a74f6ed2e52f5c716c08ed0daf17ebc
+commit b7afd3e22a8fac115b75c738d40d3eb1de7e286f
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-14 11:15:21 +0200
-
-    Added a note to README that --disable-assembler
-    must be used on Darwin.
-
- README | 4 ++++
- 1 file changed, 4 insertions(+)
+Date:   2010-12-07 18:52:04 +0200
 
-commit 44b333d4615b5aabc557a0e1b6bb0096da3fae24
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-14 10:07:10 +0200
+    Translations: Fix Czech translation of "sparse file".
 
-    Use the filename suffix .S instead of .s for assembler files
-    so that the preprocessor removes the /* */ style comments,
-    which are not supported by some non-GNU assemblers (Solaris)
-    that otherwise work with this code.
+    Thanks to Petr Hubený and Marek Černocký.
 
- src/liblzma/check/Makefile.am |   4 +-
- src/liblzma/check/crc32_x86.S | 217 ++++++++++++++++++++++++++++++++++++++++++
- src/liblzma/check/crc32_x86.s | 217 ------------------------------------------
- src/liblzma/check/crc64_x86.S | 203 +++++++++++++++++++++++++++++++++++++++
- src/liblzma/check/crc64_x86.s | 203 ---------------------------------------
- 5 files changed, 422 insertions(+), 422 deletions(-)
+ po/cs.po | 88 ++++++++++++++++++++++++++++++++--------------------------------
+ 1 file changed, 44 insertions(+), 44 deletions(-)
 
-commit ec1c82b2e82f395f6e8e19ac212a639644330cd7
+commit 7c24e0d1b8a2e86e9263b0d56d39621e01aed7af
+Merge: b4d42f1 3e56470
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-14 09:59:05 +0200
-
-    Fixed wrong symbol name in crc64_x86.s.
+Date:   2010-11-15 14:33:01 +0200
 
- src/liblzma/check/crc64_x86.s | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    Merge branch 'v5.0'
 
-commit 2881570df6803eed2fe550af34574e8e61794804
+commit 3e564704bc6f463cb2db11e3f3f0dbd71d85992e
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-14 09:53:24 +0200
+Date:   2010-11-15 14:28:26 +0200
 
-    Use .globl instead of .global in x86 assembler code for
-    better portability. Still needs fixing the commenting.
+    liblzma: Document the return value of lzma_lzma_preset().
 
- src/liblzma/check/crc32_x86.s | 2 +-
- src/liblzma/check/crc64_x86.s | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+ src/liblzma/api/lzma/lzma.h | 3 +++
+ 1 file changed, 3 insertions(+)
 
-commit 698470b8f33fc0e5f27dafa93b39b6dd5dde5a66
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-13 20:14:37 +0200
+commit 2964d8d691ed92abdcf214888d79ad6d79774735
+Author: Jonathan Nieder <jrnieder@gmail.com>
+Date:   2010-11-12 15:22:13 -0600
 
-    Fixed a few short options that take an argument.
-    short_opts[] was missing colons to indicate
-    required argument. Thanks to Fabio Pedretti for
-    the bug report.
+    Simplify paths in generated API docs
 
- src/lzma/args.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    Currently the file list generated by Doxygen has src/ at the
+    beginning of each path.  Paths like common/sysdefs.h and
+    liblzma/api/lzma.h are easier to read without such a prefix.
 
-commit 918bcb0e0728d2d976621e9f35b56f224f11d989
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-11 17:08:04 +0200
+    Builds from a separate build directory with
 
-    Removed uncompressed size tracking from Delta encoder too.
+            mkdir build
+            cd build
+            ../configure
+            doxygen Doxyfile
 
- src/liblzma/common/delta_coder.c | 21 +++------------------
- 1 file changed, 3 insertions(+), 18 deletions(-)
+    include an even longer prefix /home/someone/src/xz/src; this
+    patch has the nice side-effect of eliminating that prefix, too.
 
-commit 3e16d51dd645667b05ff826665b1fc353aa41cd9
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-11 16:49:19 +0200
+    Fixes: http://bugs.debian.org/572273
 
-    Remove uncompressed size tracking from the filter encoders.
-    It's not strictly needed there, and just complicates the
-    code. LZ encoder never even had this feature.
+ Doxyfile.in | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
     
-    The primary reason to have uncompressed size tracking in
-    filter encoders was validating that the application
-    doesn't give different amount of input that it had
-    promised. A side effect was to validate internal workings
-    of liblzma.
+commit b4d42f1a7120e2cefeb2f14425efe2ca6db85416
+Author: Anders F Bjorklund <afb@users.sourceforge.net>
+Date:   2010-11-05 12:56:11 +0100
     
-    Uncompressed size tracking is still present in the Block
-    encoder. Maybe it should be added to LZMA_Alone and raw
-    encoders too. It's simpler to have one coder just to
-    validate the uncompressed size instead of having it
-    in every filter.
+    add build script for macosx universal
 
- src/liblzma/common/copy_coder.c         | 25 ++--------------------
- src/liblzma/simple/simple_coder.c       | 29 ++++---------------------
- src/liblzma/subblock/subblock_encoder.c | 38 ++++++---------------------------
- 3 files changed, 12 insertions(+), 80 deletions(-)
+ macosx/build.sh | 92 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 92 insertions(+)
 
-commit 5286723e0d1ac386d5b07f08d78e61becf895a5a
+commit 15ee6935abe4a2fc76639ee342ca2e69af3e0ad6
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-11 14:10:53 +0200
+Date:   2010-11-04 18:31:40 +0200
 
-    Get rid of no-NLS gnulib. I don't know how to get it
-    working with Automake. People who want smaller lzmadec
-    should use --disable-nls on non-GNU systems.
+    Update the copies of GPLv2 and LGPLv2.1 from gnu.org.
 
- lib/Makefile.am         | 10 +---------
- src/lzma/Makefile.am    |  2 +-
- src/lzmadec/Makefile.am |  4 +++-
- 3 files changed, 5 insertions(+), 11 deletions(-)
+    There are only a few white space changes.
 
-commit ce8b036a6c7a43b290356b673d953f6d76b2be64
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-11 14:09:35 +0200
+ COPYING.GPLv2    | 14 +++++++-------
+ COPYING.LGPLv2.1 | 16 +++++++---------
+ 2 files changed, 14 insertions(+), 16 deletions(-)
 
-    Fixed a typo in tests/Makefile.am which prevented
-    building the tests if gnulib was needed.
+commit 8e355f7fdbeee6fe394eb02a28f267ce99a882a2
+Merge: 974ebe6 37c2565
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2010-10-26 15:53:06 +0300
 
- tests/Makefile.am | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    Merge branch 'v5.0'
 
-commit 7c1ad41eb611ed89e5bb8792a3beb533b7aa59f4
+commit 37c25658efd25b034266daf87cd381d20d1df776
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-11 11:18:58 +0200
+Date:   2010-10-26 15:48:48 +0300
 
-    Fixed wrong type of flags_size in Subblock encoder.
+    Build: Copy the example programs to $docdir/examples.
 
- src/liblzma/subblock/subblock_encoder.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+    The example programs by Daniel Mealha Cabrita were included
+    in the git repository, but I had forgot to add them to
+    Makefile.am. Thus, they didn't get included in the source
+    package at all by "make dist".
 
-commit ce64df716243fdc40359090d1f6541f3a4f5f21a
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-10 20:44:16 +0200
+ Makefile.am        | 5 +++++
+ windows/build.bash | 3 ++-
+ 2 files changed, 7 insertions(+), 1 deletion(-)
 
-    Bumped version number to 4.42.3alpha.
+commit 974ebe63497bdf0d262e06474f0dd5a70b1dd000
+Author: Lasse Collin <lasse.collin@tukaani.org>
+Date:   2010-10-26 10:36:41 +0300
 
- configure.ac                   | 2 +-
- src/liblzma/api/lzma/version.h | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+    liblzma: Rename a few variables and constants.
 
-commit b499a0403ea5c41d6a25b40275eb6c57643052ce
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-10 15:02:50 +0200
+    This has no semantic changes. I find the new names slightly
+    more logical and they match the names that are already used
+    in XZ Embedded.
 
-    Disabled some unneeded warnings and made "make dist" work.
+    The name fastpos wasn't changed (not worth the hassle).
 
- Makefile.am  |  9 +++------
- configure.ac |  9 ++++++---
- po/fi.po     | 47 ++++++++++++++++++++++++-----------------------
- 3 files changed, 33 insertions(+), 32 deletions(-)
+ src/liblzma/lzma/fastpos.h                     |  55 +++++------
+ src/liblzma/lzma/lzma2_encoder.c               |   2 +-
+ src/liblzma/lzma/lzma_common.h                 |  45 ++++-----
+ src/liblzma/lzma/lzma_decoder.c                |  58 +++++------
+ src/liblzma/lzma/lzma_encoder.c                |  56 +++++------
+ src/liblzma/lzma/lzma_encoder_optimum_fast.c   |   9 +-
+ src/liblzma/lzma/lzma_encoder_optimum_normal.c | 128 ++++++++++++-------------
+ src/liblzma/lzma/lzma_encoder_private.h        |  16 ++--
+ 8 files changed, 183 insertions(+), 186 deletions(-)
 
-commit 2ab8adb5165a0b77114a7eb21f9ff1e6a266f172
+commit 7c427ec38d016c0070a42315d752857e33792fc4
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-09 21:43:15 +0200
+Date:   2010-10-25 12:59:25 +0300
 
-    Added LZMA_SYNC_FLUSH support to the Copy filter.
+    Bump version 5.1.0alpha.
 
- src/liblzma/common/copy_coder.c | 92 +++++++++++++++++++++++++----------------
- 1 file changed, 57 insertions(+), 35 deletions(-)
+ src/liblzma/api/lzma/version.h | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
 
-commit 329c272d501e88793dda5540358d55c12428d194
+commit e45929260cd902036efd40c5610a8d0a50d5712b
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-09 17:14:07 +0200
-
-    Added missing LZMA_API to the C versions of the CRC functions.
-    The x86 assembler versions were already OK.
+Date:   2010-10-23 17:25:52 +0300
 
- src/liblzma/check/crc32.c | 2 +-
- src/liblzma/check/crc64.c | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
+    Build: Fix mydist rule when .git doesn't exist.
 
-commit c90daf86ce683fa8cf80491d624ffb158dfbd9d7
-Author: Jim Meyering <meyering@redhat.com>
-Date:   2007-12-09 15:34:25 +0100
-
-    * tests/test_block_header.c (test3): Remove duplicate initializer.
-
- autogen.sh                | 2 +-
- tests/test_block_header.c | 1 -
- 2 files changed, 1 insertion(+), 2 deletions(-)
-
-commit 07ac881779a8477f2c1ab112b91a129e24aa743c
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-09 17:06:45 +0200
-
-    Take advantage of return_if_error() macro in more places.
-    Cleaned Subblock filter's initialization code too.
-
- src/liblzma/common/block_decoder.c         | 22 +++-------
- src/liblzma/common/delta_coder.c           |  8 +---
- src/liblzma/common/stream_decoder.c        | 17 +++-----
- src/liblzma/common/stream_encoder_multi.c  | 68 ++++++++++--------------------
- src/liblzma/common/stream_encoder_single.c |  8 ++--
- src/liblzma/subblock/subblock_decoder.c    | 33 +++++----------
- src/liblzma/subblock/subblock_encoder.c    | 45 ++++++--------------
- 7 files changed, 63 insertions(+), 138 deletions(-)
-
-commit 41338717964f510ee61d70b25bd4c502ec9f77cf
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-09 12:13:01 +0200
-
-    Added a bunch of .lzma test files.
-
- tests/files/bad-single-data_after_eopm.lzma         | Bin 0 -> 55 bytes
- tests/files/bad-single-data_after_eopm_2.lzma       | Bin 0 -> 56 bytes
- tests/files/bad-single-subblock_subblock.lzma       | Bin 0 -> 26 bytes
- tests/files/good-cat-single-none-pad.lzma           | Bin 0 -> 64 bytes
- tests/files/good-single-delta-lzma.tiff.lzma        | Bin 0 -> 51409 bytes
- tests/files/good-single-lzma.lzma                   | Bin 0 -> 44 bytes
- tests/files/good-single-none-pad.lzma               | Bin 0 -> 32 bytes
- tests/files/good-single-none.lzma                   | Bin 0 -> 30 bytes
- tests/files/good-single-subblock-lzma.lzma          | Bin 0 -> 50 bytes
- tests/files/good-single-subblock_rle.lzma           | Bin 0 -> 118 bytes
- tests/files/malicious-multi-metadata-64PiB.lzma     | Bin 0 -> 51 bytes
- tests/files/malicious-single-subblock-256MiB.lzma   | Bin 0 -> 30 bytes
- tests/files/malicious-single-subblock-64PiB.lzma    | Bin 0 -> 45 bytes
- tests/files/malicious-single-subblock-loop.lzma     | Bin 0 -> 43 bytes
- tests/files/malicious-single-subblock-lzma.lzma     | Bin 0 -> 505 bytes
- tests/files/malicious-single-subblock1023-slow.lzma | Bin 0 -> 7886 bytes
- tests/files/malicious-single-subblock31-slow.lzma   | Bin 0 -> 1233 bytes
- 17 files changed, 0 insertions(+), 0 deletions(-)
+ Makefile.am | 1 +
+ 1 file changed, 1 insertion(+)
 
-commit ff946ceb7975d4f11950afd33f6315b4d20d1a03
+commit 6e1326fcdf6b6209949be57cfe3ad4b781b65168
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-09 11:24:48 +0200
+Date:   2010-10-23 14:15:35 +0300
 
-    Re-enabled the security checks in Subblock decoder
-    that were disabled for debugging reasons.
+    Add NEWS for 5.0.0.
 
- src/liblzma/subblock/subblock_decoder.c | 6 +++---
- 1 file changed, 3 insertions(+), 3 deletions(-)
+ NEWS | 62 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 62 insertions(+)
 
-commit 2bf36d22d2c24ac3f488e63b35564fa2f6dab8d1
+commit b667a3ef6338a2c1db7b7706b1f6c99ea392221c
 Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-09 11:03:28 +0200
+Date:   2010-10-23 14:02:53 +0300
 
-    Fixed the tests to build with -Werror.
+    Bump version to 5.0.0 and liblzma version-info to 5:0:0.
 
- tests/test_block_header.c |  2 +-
- tests/test_check.c        |  2 +-
- tests/test_filter_flags.c |  2 +-
- tests/test_index.c        | 14 +++++++-------
- tests/test_info.c         |  2 +-
- tests/test_stream_flags.c |  2 +-
- 6 files changed, 12 insertions(+), 12 deletions(-)
-
-commit 5d018dc03549c1ee4958364712fb0c94e1bf2741
-Author: Lasse Collin <lasse.collin@tukaani.org>
-Date:   2007-12-09 00:42:33 +0200
-
-    Imported to git.
-
- AUTHORS                                        |   18 +
- COPYING                                        |   24 +
- COPYING.GPLv2                                  |  339 +++++
- COPYING.GPLv3                                  |  674 +++++++++
- COPYING.LGPLv2.1                               |  504 +++++++
- ChangeLog                                      |    2 +
- Doxyfile.in                                    | 1229 ++++++++++++++++
- Makefile.am                                    |   38 +
- NEWS                                           |    0
- README                                         |  151 ++
- THANKS                                         |   23 +
- TODO                                           |  109 ++
- autogen.sh                                     |   38 +
- configure.ac                                   |  611 ++++++++
- doc/bugs.txt                                   |   46 +
- doc/faq.txt                                    |  247 ++++
- doc/file-format.txt                            | 1861 ++++++++++++++++++++++++
- doc/history.txt                                |  140 ++
- doc/liblzma-advanced.txt                       |  324 +++++
- doc/liblzma-hacking.txt                        |  112 ++
- doc/liblzma-intro.txt                          |  188 +++
- doc/liblzma-security.txt                       |  219 +++
- doc/lzma-intro.txt                             |  107 ++
- extra/scanlzma/scanlzma.c                      |   85 ++
- lib/Makefile.am                                |   40 +
- lib/getopt.c                                   | 1191 +++++++++++++++
- lib/getopt1.c                                  |  171 +++
- lib/getopt_.h                                  |  226 +++
- lib/getopt_int.h                               |  131 ++
- lib/gettext.h                                  |  240 +++
- m4/acx_pthread.m4                              |  279 ++++
- m4/getopt.m4                                   |   83 ++
- po/LINGUAS                                     |    1 +
- po/Makevars                                    |   46 +
- po/POTFILES.in                                 |   13 +
- po/fi.po                                       |  445 ++++++
- src/Makefile.am                                |   16 +
- src/common/open_stdxxx.h                       |   50 +
- src/common/physmem.h                           |   77 +
- src/common/sysdefs.h                           |  100 ++
- src/liblzma/Makefile.am                        |   47 +
- src/liblzma/api/Makefile.am                    |   39 +
- src/liblzma/api/lzma.h                         |  122 ++
- src/liblzma/api/lzma/alignment.h               |   60 +
- src/liblzma/api/lzma/alone.h                   |   82 ++
- src/liblzma/api/lzma/auto.h                    |   41 +
- src/liblzma/api/lzma/base.h                    |  410 ++++++
- src/liblzma/api/lzma/block.h                   |  409 ++++++
- src/liblzma/api/lzma/check.h                   |  128 ++
- src/liblzma/api/lzma/copy.h                    |   29 +
- src/liblzma/api/lzma/delta.h                   |   49 +
- src/liblzma/api/lzma/extra.h                   |  114 ++
- src/liblzma/api/lzma/filter.h                  |  166 +++
- src/liblzma/api/lzma/index.h                   |   84 ++
- src/liblzma/api/lzma/info.h                    |  315 ++++
- src/liblzma/api/lzma/init.h                    |   85 ++
- src/liblzma/api/lzma/lzma.h                    |  312 ++++
- src/liblzma/api/lzma/memlimit.h                |  157 ++
- src/liblzma/api/lzma/metadata.h                |  100 ++
- src/liblzma/api/lzma/raw.h                     |   72 +
- src/liblzma/api/lzma/simple.h                  |   85 ++
- src/liblzma/api/lzma/stream.h                  |  178 +++
- src/liblzma/api/lzma/stream_flags.h            |  142 ++
- src/liblzma/api/lzma/subblock.h                |  197 +++
- src/liblzma/api/lzma/version.h                 |   59 +
- src/liblzma/api/lzma/vli.h                     |  244 ++++
- src/liblzma/check/Makefile.am                  |   64 +
- src/liblzma/check/check.c                      |  160 ++
- src/liblzma/check/check.h                      |  102 ++
- src/liblzma/check/check_byteswap.h             |   43 +
- src/liblzma/check/check_init.c                 |   37 +
- src/liblzma/check/crc32.c                      |   88 ++
- src/liblzma/check/crc32_init.c                 |   58 +
- src/liblzma/check/crc32_table.c                |   22 +
- src/liblzma/check/crc32_table_be.h             |  527 +++++++
- src/liblzma/check/crc32_table_le.h             |  527 +++++++
- src/liblzma/check/crc32_tablegen.c             |   55 +
- src/liblzma/check/crc32_x86.s                  |  217 +++
- src/liblzma/check/crc64.c                      |   75 +
- src/liblzma/check/crc64_init.c                 |   58 +
- src/liblzma/check/crc64_table.c                |   22 +
- src/liblzma/check/crc64_table_be.h             |  523 +++++++
- src/liblzma/check/crc64_table_le.h             |  523 +++++++
- src/liblzma/check/crc64_tablegen.c             |   56 +
- src/liblzma/check/crc64_x86.s                  |  203 +++
- src/liblzma/check/crc_macros.h                 |   33 +
- src/liblzma/check/sha256.c                     |  203 +++
- src/liblzma/common/Makefile.am                 |   94 ++
- src/liblzma/common/alignment.c                 |  118 ++
- src/liblzma/common/allocator.c                 |   57 +
- src/liblzma/common/alone_decoder.c             |  197 +++
- src/liblzma/common/alone_decoder.h             |   24 +
- src/liblzma/common/alone_encoder.c             |  167 +++
- src/liblzma/common/auto_decoder.c              |  113 ++
- src/liblzma/common/block_decoder.c             |  405 ++++++
- src/liblzma/common/block_decoder.h             |   29 +
- src/liblzma/common/block_encoder.c             |  375 +++++
- src/liblzma/common/block_encoder.h             |   29 +
- src/liblzma/common/block_header_decoder.c      |  373 +++++
- src/liblzma/common/block_header_encoder.c      |  211 +++
- src/liblzma/common/block_private.h             |   46 +
- src/liblzma/common/chunk_size.c                |   74 +
- src/liblzma/common/code.c                      |  203 +++
- src/liblzma/common/common.h                    |  271 ++++
- src/liblzma/common/copy_coder.c                |  143 ++
- src/liblzma/common/copy_coder.h                |   31 +
- src/liblzma/common/delta_coder.c               |  210 +++
- src/liblzma/common/delta_coder.h               |   31 +
- src/liblzma/common/extra.c                     |   33 +
- src/liblzma/common/features.c                  |   70 +
- src/liblzma/common/filter_flags_decoder.c      |  382 +++++
- src/liblzma/common/filter_flags_encoder.c      |  359 +++++
- src/liblzma/common/index.c                     |  140 ++
- src/liblzma/common/info.c                      |  823 +++++++++++
- src/liblzma/common/init.c                      |   39 +
- src/liblzma/common/init_decoder.c              |   33 +
- src/liblzma/common/init_encoder.c              |   44 +
- src/liblzma/common/memory_limitter.c           |  200 +++
- src/liblzma/common/memory_usage.c              |  113 ++
- src/liblzma/common/metadata_decoder.c          |  555 +++++++
- src/liblzma/common/metadata_decoder.h          |   31 +
- src/liblzma/common/metadata_encoder.c          |  436 ++++++
- src/liblzma/common/metadata_encoder.h          |   30 +
- src/liblzma/common/next_coder.c                |   65 +
- src/liblzma/common/raw_common.c                |  175 +++
- src/liblzma/common/raw_common.h                |   31 +
- src/liblzma/common/raw_decoder.c               |  127 ++
- src/liblzma/common/raw_decoder.h               |   30 +
- src/liblzma/common/raw_encoder.c               |  124 ++
- src/liblzma/common/raw_encoder.h               |   30 +
- src/liblzma/common/stream_common.c             |   23 +
- src/liblzma/common/stream_common.h             |   28 +
- src/liblzma/common/stream_decoder.c            |  454 ++++++
- src/liblzma/common/stream_encoder_multi.c      |  460 ++++++
- src/liblzma/common/stream_encoder_single.c     |  220 +++
- src/liblzma/common/stream_flags_decoder.c      |  258 ++++
- src/liblzma/common/stream_flags_decoder.h      |   31 +
- src/liblzma/common/stream_flags_encoder.c      |   75 +
- src/liblzma/common/sysdefs.h                   |    1 +
- src/liblzma/common/version.c                   |   25 +
- src/liblzma/common/vli_decoder.c               |   69 +
- src/liblzma/common/vli_encoder.c               |   81 ++
- src/liblzma/common/vli_reverse_decoder.c       |   55 +
- src/liblzma/lz/Makefile.am                     |   63 +
- src/liblzma/lz/bt2.c                           |   27 +
- src/liblzma/lz/bt2.h                           |   31 +
- src/liblzma/lz/bt3.c                           |   29 +
- src/liblzma/lz/bt3.h                           |   31 +
- src/liblzma/lz/bt4.c                           |   30 +
- src/liblzma/lz/bt4.h                           |   31 +
- src/liblzma/lz/hc3.c                           |   30 +
- src/liblzma/lz/hc3.h                           |   31 +
- src/liblzma/lz/hc4.c                           |   31 +
- src/liblzma/lz/hc4.h                           |   31 +
- src/liblzma/lz/lz_decoder.c                    |  462 ++++++
- src/liblzma/lz/lz_decoder.h                    |  214 +++
- src/liblzma/lz/lz_encoder.c                    |  481 ++++++
- src/liblzma/lz/lz_encoder.h                    |  161 ++
- src/liblzma/lz/lz_encoder_private.h            |   40 +
- src/liblzma/lz/match_c.h                       |  401 +++++
- src/liblzma/lz/match_h.h                       |   69 +
- src/liblzma/lzma.pc.in                         |   11 +
- src/liblzma/lzma/Makefile.am                   |   43 +
- src/liblzma/lzma/lzma_common.h                 |  128 ++
- src/liblzma/lzma/lzma_decoder.c                |  844 +++++++++++
- src/liblzma/lzma/lzma_decoder.h                |   41 +
- src/liblzma/lzma/lzma_encoder.c                |  413 ++++++
- src/liblzma/lzma/lzma_encoder.h                |   35 +
- src/liblzma/lzma/lzma_encoder_features.c       |   59 +
- src/liblzma/lzma/lzma_encoder_getoptimum.c     |  893 ++++++++++++
- src/liblzma/lzma/lzma_encoder_getoptimumfast.c |  201 +++
- src/liblzma/lzma/lzma_encoder_init.c           |  245 ++++
- src/liblzma/lzma/lzma_encoder_presets.c        |   34 +
- src/liblzma/lzma/lzma_encoder_private.h        |  225 +++
- src/liblzma/lzma/lzma_literal.c                |   74 +
- src/liblzma/lzma/lzma_literal.h                |   74 +
- src/liblzma/rangecoder/Makefile.am             |   28 +
- src/liblzma/rangecoder/range_common.h          |   68 +
- src/liblzma/rangecoder/range_decoder.h         |  189 +++
- src/liblzma/rangecoder/range_encoder.c         |   46 +
- src/liblzma/rangecoder/range_encoder.h         |  317 ++++
- src/liblzma/simple/Makefile.am                 |   46 +
- src/liblzma/simple/arm.c                       |   76 +
- src/liblzma/simple/armthumb.c                  |   81 ++
- src/liblzma/simple/ia64.c                      |  117 ++
- src/liblzma/simple/powerpc.c                   |   80 +
- src/liblzma/simple/simple_coder.c              |  306 ++++
- src/liblzma/simple/simple_coder.h              |   68 +
- src/liblzma/simple/simple_private.h            |   86 ++
- src/liblzma/simple/sparc.c                     |   88 ++
- src/liblzma/simple/x86.c                       |  161 ++
- src/liblzma/subblock/Makefile.am               |   33 +
- src/liblzma/subblock/subblock_decoder.c        |  681 +++++++++
- src/liblzma/subblock/subblock_decoder.h        |   29 +
- src/liblzma/subblock/subblock_decoder_helper.c |   80 +
- src/liblzma/subblock/subblock_decoder_helper.h |   36 +
- src/liblzma/subblock/subblock_encoder.c        |  841 +++++++++++
- src/liblzma/subblock/subblock_encoder.h        |   28 +
- src/lzma/Makefile.am                           |   63 +
- src/lzma/alloc.c                               |  106 ++
- src/lzma/alloc.h                               |   42 +
- src/lzma/args.c                                |  566 +++++++
- src/lzma/args.h                                |   64 +
- src/lzma/error.c                               |  156 ++
- src/lzma/error.h                               |   67 +
- src/lzma/hardware.c                            |   99 ++
- src/lzma/hardware.h                            |   31 +
- src/lzma/help.c                                |  178 +++
- src/lzma/help.h                                |   32 +
- src/lzma/io.c                                  |  664 +++++++++
- src/lzma/io.h                                  |   60 +
- src/lzma/list.c                                |  477 ++++++
- src/lzma/main.c                                |  254 ++++
- src/lzma/options.c                             |  346 +++++
- src/lzma/options.h                             |   46 +
- src/lzma/private.h                             |   55 +
- src/lzma/process.c                             |  458 ++++++
- src/lzma/process.h                             |   30 +
- src/lzma/suffix.c                              |  145 ++
- src/lzma/suffix.h                              |   25 +
- src/lzma/util.c                                |  182 +++
- src/lzma/util.h                                |   32 +
- src/lzmadec/Makefile.am                        |   27 +
- src/lzmadec/lzmadec.c                          |  515 +++++++
- src/scripts/Makefile.am                        |   24 +
- src/scripts/lzdiff                             |   67 +
- src/scripts/lzdiff.1                           |   51 +
- src/scripts/lzgrep                             |  123 ++
- src/scripts/lzgrep.1                           |   61 +
- src/scripts/lzmore                             |   74 +
- src/scripts/lzmore.1                           |   55 +
- tests/Makefile.am                              |   43 +
- tests/test_block.c                             |   59 +
- tests/test_block_header.c                      |  352 +++++
- tests/test_check.c                             |   90 ++
- tests/test_filter_flags.c                      |  326 +++++
- tests/test_index.c                             |   43 +
- tests/test_info.c                              |  717 +++++++++
- tests/test_stream_flags.c                      |  191 +++
- tests/tests.h                                  |  148 ++
- 240 files changed, 42513 insertions(+)
+ src/liblzma/Makefile.am        | 2 +-
+ src/liblzma/api/lzma/version.h | 8 ++++----
+ 2 files changed, 5 insertions(+), 5 deletions(-)
diff -uNrwB xz-5.2.2/config.h.in xz-5.2.4/config.h.in
--- xz-5.2.2/config.h.in	2015-09-29 17:03:40.000000000 +0600
+++ xz-5.2.4/config.h.in	2018-04-29 22:01:25.000000000 +0600
@@ -22,6 +22,9 @@
 /* Define to 1 if you have the <byteswap.h> header file. */
 #undef HAVE_BYTESWAP_H
 
+/* Define to 1 if Capsicum is available. */
+#undef HAVE_CAPSICUM
+
 /* Define to 1 if the system has the type `CC_SHA256_CTX'. */
 #undef HAVE_CC_SHA256_CTX
 
@@ -63,6 +66,9 @@
    to 0 if you don't. */
 #undef HAVE_DECL_PROGRAM_INVOCATION_NAME
 
+/* Define to 1 if any of HAVE_DECODER_foo have been defined. */
+#undef HAVE_DECODERS
+
 /* Define to 1 if arm decoder is enabled. */
 #undef HAVE_DECODER_ARM
 
@@ -93,6 +99,9 @@
 /* Define to 1 if you have the <dlfcn.h> header file. */
 #undef HAVE_DLFCN_H
 
+/* Define to 1 if any of HAVE_ENCODER_foo have been defined. */
+#undef HAVE_ENCODERS
+
 /* Define to 1 if arm encoder is enabled. */
 #undef HAVE_ENCODER_ARM
 
@@ -174,9 +183,6 @@
 /* Define to 1 to enable hc4 match finder. */
 #undef HAVE_MF_HC4
 
-/* Define to 1 if you have the <minix/sha2.h> header file. */
-#undef HAVE_MINIX_SHA2_H
-
 /* Define to 1 if getopt.h declares extern int optreset. */
 #undef HAVE_OPTRESET
 
@@ -243,6 +249,9 @@
 /* Define to 1 if you have the <sys/byteorder.h> header file. */
 #undef HAVE_SYS_BYTEORDER_H
 
+/* Define to 1 if you have the <sys/capsicum.h> header file. */
+#undef HAVE_SYS_CAPSICUM_H
+
 /* Define to 1 if you have the <sys/endian.h> header file. */
 #undef HAVE_SYS_ENDIAN_H
 
@@ -280,6 +289,9 @@
 /* Define to 1 if the system has the type `_Bool'. */
 #undef HAVE__BOOL
 
+/* Define to 1 if you have the `_futime' function. */
+#undef HAVE__FUTIME
+
 /* Define to 1 if _mm_movemask_epi8 is available. */
 #undef HAVE__MM_MOVEMASK_EPI8
 
@@ -340,6 +352,10 @@
 #undef TUKLIB_CPUCORES_PSTAT_GETDYNAMIC
 
 /* Define to 1 if the number of available CPU cores can be detected with
+   sched_getaffinity() */
+#undef TUKLIB_CPUCORES_SCHED_GETAFFINITY
+
+/* Define to 1 if the number of available CPU cores can be detected with
    sysconf(_SC_NPROCESSORS_ONLN) or sysconf(_SC_NPROC_ONLN). */
 #undef TUKLIB_CPUCORES_SYSCONF
 
diff -uNrwB xz-5.2.2/configure xz-5.2.4/configure
--- xz-5.2.2/configure	2015-09-29 17:03:39.000000000 +0600
+++ xz-5.2.4/configure	2018-04-29 22:01:24.000000000 +0600
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for XZ Utils 5.2.2.
+# Generated by GNU Autoconf 2.69 for XZ Utils 5.2.4.
 #
 # Report bugs to <lasse.collin@tukaani.org>.
 #
@@ -590,10 +590,10 @@
 # Identity of this package.
 PACKAGE_NAME='XZ Utils'
 PACKAGE_TARNAME='xz'
-PACKAGE_VERSION='5.2.2'
-PACKAGE_STRING='XZ Utils 5.2.2'
+PACKAGE_VERSION='5.2.4'
+PACKAGE_STRING='XZ Utils 5.2.4'
 PACKAGE_BUGREPORT='lasse.collin@tukaani.org'
-PACKAGE_URL='http://tukaani.org/xz/'
+PACKAGE_URL='https://tukaani.org/xz/'
 
 ac_unique_file="src/liblzma/common/common.h"
 # Factoring default headers for most tests.
@@ -642,6 +642,7 @@
 COND_GNULIB_TRUE
 HAVE_VISIBILITY
 CFLAG_VISIBILITY
+CAPSICUM_LIB
 COND_INTERNAL_SHA256_FALSE
 COND_INTERNAL_SHA256_TRUE
 GETOPT_H
@@ -902,6 +903,7 @@
 enable_decoders
 enable_match_finders
 enable_checks
+enable_external_sha256
 enable_assembler
 enable_small
 enable_threads
@@ -914,6 +916,7 @@
 enable_scripts
 enable_doc
 enable_symbol_versions
+enable_sandbox
 enable_silent_rules
 enable_dependency_tracking
 enable_shared
@@ -1484,7 +1487,7 @@
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures XZ Utils 5.2.2 to adapt to many kinds of systems.
+\`configure' configures XZ Utils 5.2.4 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1554,7 +1557,7 @@
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of XZ Utils 5.2.2:";;
+     short | recursive ) echo "Configuration of XZ Utils 5.2.4:";;
    esac
   cat <<\_ACEOF
 
@@ -1577,6 +1580,9 @@
   --enable-checks=LIST    Comma-separated list of integrity checks to build.
                           Default=all. Available integrity checks: crc32 crc64
                           sha256
+  --enable-external-sha256
+                          Use SHA-256 code from the operating system. See
+                          INSTALL for possible subtle problems.
   --disable-assembler     Do not use assembler optimizations even if such
                           exist for the architecture.
   --enable-small          Make liblzma smaller and a little slower. This is
@@ -1604,6 +1610,9 @@
                           Use symbol versioning for liblzma. Enabled by
                           default on GNU/Linux, other GNU-based systems, and
                           FreeBSD.
+  --enable-sandbox=METHOD This is an experimental feature. Sandboxing METHOD
+                          can be `auto', `no', or `capsicum'. The default is
+                          `no'.
   --enable-silent-rules   less verbose build output (undo: "make V=1")
   --disable-silent-rules  verbose build output (undo: "make V=0")
   --enable-dependency-tracking
@@ -1637,7 +1646,7 @@
   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
   --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                           compiler's sysroot if not specified).
-  --with-gnu-ld           assume the C compiler uses GNU ld default=no
+  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
   --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
   --without-libiconv-prefix     don't search for libiconv in includedir and libdir
   --with-libintl-prefix[=DIR]  search for libintl in DIR/include and DIR/lib
@@ -1661,7 +1670,7 @@
 it to find libraries and programs with nonstandard names/locations.
 
 Report bugs to <lasse.collin@tukaani.org>.
-XZ Utils home page: <http://tukaani.org/xz/>.
+XZ Utils home page: <https://tukaani.org/xz/>.
 _ACEOF
 ac_status=$?
 fi
@@ -1724,7 +1733,7 @@
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-XZ Utils configure 5.2.2
+XZ Utils configure 5.2.4
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2563,7 +2572,7 @@
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by XZ Utils $as_me 5.2.2, which was
+It was created by XZ Utils $as_me 5.2.4, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3130,6 +3139,7 @@
 
 enable_encoders=`echo "$enable_encoders" | sed 's/,/ /g'`
 if test "x$enable_encoders" = xno || test "x$enable_encoders" = x; then
+	enable_encoders=no
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: (none)" >&5
 $as_echo "(none)" >&6; }
 else
@@ -3206,6 +3216,9 @@
 				;;
 		esac
 	done
+
+$as_echo "#define HAVE_ENCODERS 1" >>confdefs.h
+
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_encoders" >&5
 $as_echo "$enable_encoders" >&6; }
 fi
@@ -3221,6 +3234,7 @@
 
 enable_decoders=`echo "$enable_decoders" | sed 's/,/ /g'`
 if test "x$enable_decoders" = xno || test "x$enable_decoders" = x; then
+	enable_decoders=no
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: (none)" >&5
 $as_echo "(none)" >&6; }
 else
@@ -3298,9 +3312,7 @@
 		esac
 	done
 
-	# LZMA2 requires that LZMA1 is enabled.
-	test "x$enable_encoder_lzma2" = xyes && enable_encoder_lzma1=yes
-	test "x$enable_decoder_lzma2" = xyes && enable_decoder_lzma1=yes
+$as_echo "#define HAVE_DECODERS 1" >>confdefs.h
 
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_decoders" >&5
 $as_echo "$enable_decoders" >&6; }
@@ -3311,7 +3323,7 @@
 	as_fn_error $? "LZMA2 requires that LZMA1 is also enabled." "$LINENO" 5
 fi
 
- if test "x$enable_encoders" != xno && test "x$enable_encoders" != x; then
+ if test "x$enable_encoders" != xno; then
   COND_MAIN_ENCODER_TRUE=
   COND_MAIN_ENCODER_FALSE='#'
 else
@@ -3319,7 +3331,7 @@
   COND_MAIN_ENCODER_FALSE=
 fi
 
- if test "x$enable_decoders" != xno && test "x$enable_decoders" != x; then
+ if test "x$enable_decoders" != xno; then
   COND_MAIN_DECODER_TRUE=
   COND_MAIN_DECODER_FALSE='#'
 else
@@ -3784,6 +3796,26 @@
 fi
 
 
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if external SHA-256 should be used" >&5
+$as_echo_n "checking if external SHA-256 should be used... " >&6; }
+# Check whether --enable-external-sha256 was given.
+if test "${enable_external_sha256+set}" = set; then :
+  enableval=$enable_external_sha256;
+else
+  enable_external_sha256=no
+fi
+
+if test "x$enable_check_sha256" != "xyes"; then
+	enable_external_sha256=no
+fi
+if test "x$enable_external_sha256" = xyes; then
+	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
 
 ###########################
 # Assembler optimizations #
@@ -3988,6 +4020,7 @@
   enable_xzdec=yes
 fi
 
+test "x$enable_decoders" = xno && enable_xzdec=no
  if test x$enable_xzdec != xno; then
   COND_XZDEC_TRUE=
   COND_XZDEC_FALSE='#'
@@ -4004,6 +4037,7 @@
   enable_lzmadec=yes
 fi
 
+test "x$enable_decoder_lzma1" = xno && enable_lzmadec=no
  if test x$enable_lzmadec != xno; then
   COND_LZMADEC_TRUE=
   COND_LZMADEC_FALSE='#'
@@ -4020,6 +4054,7 @@
   enable_lzmainfo=yes
 fi
 
+test "x$enable_decoder_lzma1" = xno && enable_lzmainfo=no
  if test x$enable_lzmainfo != xno; then
   COND_LZMAINFO_TRUE=
   COND_LZMAINFO_FALSE='#'
@@ -4117,6 +4152,36 @@
 
 
 
+##############
+# Sandboxing #
+##############
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if sandboxing should be used" >&5
+$as_echo_n "checking if sandboxing should be used... " >&6; }
+# Check whether --enable-sandbox was given.
+if test "${enable_sandbox+set}" = set; then :
+  enableval=$enable_sandbox;
+else
+  enable_sandbox=no
+fi
+
+case $enable_sandbox in
+	auto)
+		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: maybe (autodetect)" >&5
+$as_echo "maybe (autodetect)" >&6; }
+		;;
+	no | capsicum)
+		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_sandbox" >&5
+$as_echo "$enable_sandbox" >&6; }
+		;;
+	*)
+		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: " >&5
+$as_echo "" >&6; }
+		as_fn_error $? "--enable-sandbox only accepts \`auto', \`no', or \`capsicum'." "$LINENO" 5
+		;;
+esac
+
+
 ###############################################################################
 # Checks for programs.
 ###############################################################################
@@ -4675,7 +4740,7 @@
 
 # Define the identity of the package.
  PACKAGE='xz'
- VERSION='5.2.2'
+ VERSION='5.2.4'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -7167,8 +7232,8 @@
 
 
 
-macro_version='2.4.6'
-macro_revision='2.4.6'
+macro_version='2.4.6.40-6ca5-dirty'
+macro_revision='2.4.6.40'
 
 
 
@@ -8612,13 +8677,29 @@
 fi
 
 : ${AR=ar}
-: ${AR_FLAGS=cru}
 
 
 
 
 
 
+# Use ARFLAGS variable as AR's operation code to sync the variable naming with
+# Automake.  If both AR_FLAGS and ARFLAGS are specified, AR_FLAGS should have
+# higher priority because thats what people were doing historically (setting
+# ARFLAGS for automake and AR_FLAGS for libtool).  FIXME: Make the AR_FLAGS
+# variable obsoleted/removed.
+
+test ${AR_FLAGS+y} || AR_FLAGS=${ARFLAGS-cr}
+lt_ar_flags=$AR_FLAGS
+
+
+
+
+
+
+# Make AR_FLAGS overridable by 'make ARFLAGS='.  Don't try to run-time override
+# by AR_FLAGS because that was never working and AR_FLAGS is about to die.
+
 
 
 
@@ -10336,8 +10417,8 @@
 _LT_EOF
       echo "$LTCC $LTCFLAGS -c -o conftest.o conftest.c" >&5
       $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&5
-      echo "$AR cru libconftest.a conftest.o" >&5
-      $AR cru libconftest.a conftest.o 2>&5
+      echo "$AR $AR_FLAGS libconftest.a conftest.o" >&5
+      $AR $AR_FLAGS libconftest.a conftest.o 2>&5
       echo "$RANLIB libconftest.a" >&5
       $RANLIB libconftest.a 2>&5
       cat > conftest.c << _LT_EOF
@@ -12131,6 +12212,7 @@
 	emximp -o $lib $output_objdir/$libname.def'
       old_archive_From_new_cmds='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
       enable_shared_with_static_runtimes=yes
+      file_list_spec='@'
       ;;
 
     interix[3-9]*)
@@ -12348,7 +12430,7 @@
 	if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
 	  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W")) && (substr(\$ 3,1,1) != ".")) { if (\$ 2 == "W") { print \$ 3 " weak" } else { print \$ 3 } } }'\'' | sort -u > $export_symbols'
 	else
-	  export_symbols_cmds='`func_echo_all $NM | $SED -e '\''s/B\([^B]*\)$/P\1/'\''` -PCpgl $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) && (substr(\$ 1,1,1) != ".")) { if ((\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) { print \$ 1 " weak" } else { print \$ 1 } } }'\'' | sort -u > $export_symbols'
+	  export_symbols_cmds='`func_echo_all $NM | $SED -e '\''s/B\([^B]*\)$/P\1/'\''` -PCpgl $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "L") || (\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) && (substr(\$ 1,1,1) != ".")) { if ((\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) { print \$ 1 " weak" } else { print \$ 1 } } }'\'' | sort -u > $export_symbols'
 	fi
 	aix_use_runtimelinking=no
 
@@ -12985,6 +13067,7 @@
 	emximp -o $lib $output_objdir/$libname.def'
       old_archive_From_new_cmds='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
       enable_shared_with_static_runtimes=yes
+      file_list_spec='@'
       ;;
 
     osf3*)
@@ -14928,20 +15011,30 @@
 old_striplib=
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether stripping libraries is possible" >&5
 $as_echo_n "checking whether stripping libraries is possible... " >&6; }
-if test -n "$STRIP" && $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
-  test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
-  test -z "$striplib" && striplib="$STRIP --strip-unneeded"
+if test -z "$STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+else
+  if $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
+    old_striplib="$STRIP --strip-debug"
+    striplib="$STRIP --strip-unneeded"
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 else
-# FIXME - insert some real tests, host_os isn't really good enough
   case $host_os in
   darwin*)
-    if test -n "$STRIP"; then
+      # FIXME - insert some real tests, host_os isn't really good enough
       striplib="$STRIP -x"
       old_striplib="$STRIP -S"
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
+      ;;
+    freebsd*)
+      if $STRIP -V 2>&1 | $GREP "elftoolchain" >/dev/null; then
+        old_striplib="$STRIP --strip-debug"
+        striplib="$STRIP --strip-unneeded"
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
     else
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
@@ -14953,6 +15046,7 @@
     ;;
   esac
 fi
+fi
 
 
 
@@ -15233,13 +15327,6 @@
 echo "Initializing gettext:"
 
 
-mkdir_p="$MKDIR_P"
-case $mkdir_p in
-  [\\/$]* | ?:[\\/]*) ;;
-  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
-esac
-
-
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether NLS is requested" >&5
 $as_echo_n "checking whether NLS is requested... " >&6; }
     # Check whether --enable-nls was given.
@@ -15255,7 +15342,7 @@
 
 
 
-      GETTEXT_MACRO_VERSION=0.18
+      GETTEXT_MACRO_VERSION=0.19
 
 
 
@@ -15263,15 +15350,14 @@
 # Prepare PATH_SEPARATOR.
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
-  echo  "exit 0"   >>conf$$.sh
-  chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
-    PATH_SEPARATOR=';'
-  else
+  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
+  # contains only /bin. Note that ksh looks also at the FPATH variable,
+  # so we have to set that as well for the test.
     PATH_SEPARATOR=:
-  fi
-  rm -f conf$$.sh
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+           || PATH_SEPARATOR=';'
+       }
 fi
 
 # Find out how to test for executable files. Don't use a zero-byte file,
@@ -15386,15 +15472,14 @@
 # Prepare PATH_SEPARATOR.
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
-  echo  "exit 0"   >>conf$$.sh
-  chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
-    PATH_SEPARATOR=';'
-  else
+  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
+  # contains only /bin. Note that ksh looks also at the FPATH variable,
+  # so we have to set that as well for the test.
     PATH_SEPARATOR=:
-  fi
-  rm -f conf$$.sh
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+           || PATH_SEPARATOR=';'
+       }
 fi
 
 # Find out how to test for executable files. Don't use a zero-byte file,
@@ -15464,15 +15549,14 @@
 # Prepare PATH_SEPARATOR.
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
-  echo  "exit 0"   >>conf$$.sh
-  chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
-    PATH_SEPARATOR=';'
-  else
+  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
+  # contains only /bin. Note that ksh looks also at the FPATH variable,
+  # so we have to set that as well for the test.
     PATH_SEPARATOR=:
-  fi
-  rm -f conf$$.sh
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+           || PATH_SEPARATOR=';'
+       }
 fi
 
 # Find out how to test for executable files. Don't use a zero-byte file,
@@ -15566,21 +15651,21 @@
 # Prepare PATH_SEPARATOR.
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
-  echo  "exit 0"   >>conf$$.sh
-  chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
-    PATH_SEPARATOR=';'
-  else
+  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
+  # contains only /bin. Note that ksh looks also at the FPATH variable,
+  # so we have to set that as well for the test.
     PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+           || PATH_SEPARATOR=';'
+       }
   fi
-  rm -f conf$$.sh
-fi
+
 ac_prog=ld
 if test "$GCC" = yes; then
   # Check if gcc -print-prog-name=ld gives a path.
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by GCC" >&5
-$as_echo_n "checking for ld used by GCC... " >&6; }
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
+$as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
   *-*-mingw*)
     # gcc leaves a trailing carriage return which upsets mingw
@@ -15590,11 +15675,11 @@
   esac
   case $ac_prog in
     # Accept absolute paths.
-    [\\/]* | [A-Za-z]:[\\/]*)
+    [\\/]* | ?:[\\/]*)
       re_direlt='/[^/][^/]*/\.\./'
-      # Canonicalize the path of ld
-      ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
-      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+      # Canonicalize the pathname of ld
+      ac_prog=`echo "$ac_prog"| sed 's%\\\\%/%g'`
+      while echo "$ac_prog" | grep "$re_direlt" > /dev/null 2>&1; do
         ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
       done
       test -z "$LD" && LD="$ac_prog"
@@ -15619,23 +15704,26 @@
   $as_echo_n "(cached) " >&6
 else
   if test -z "$LD"; then
-  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS="${IFS}${PATH_SEPARATOR-:}"
+  acl_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
   for ac_dir in $PATH; do
+    IFS="$acl_save_ifs"
     test -z "$ac_dir" && ac_dir=.
     if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
       acl_cv_path_LD="$ac_dir/$ac_prog"
       # Check to see if the program is GNU ld.  I'd rather use --version,
-      # but apparently some GNU ld's only accept -v.
+      # but apparently some variants of GNU ld only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
       case `"$acl_cv_path_LD" -v 2>&1 < /dev/null` in
       *GNU* | *'with BFD'*)
-        test "$with_gnu_ld" != no && break ;;
+        test "$with_gnu_ld" != no && break
+        ;;
       *)
-        test "$with_gnu_ld" != yes && break ;;
+        test "$with_gnu_ld" != yes && break
+        ;;
       esac
     fi
   done
-  IFS="$ac_save_ifs"
+  IFS="$acl_save_ifs"
 else
   acl_cv_path_LD="$LD" # Let the user override the test with a path.
 fi
@@ -15655,12 +15743,14 @@
 if ${acl_cv_prog_gnu_ld+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  # I'd rather use --version here, but apparently some GNU ld's only accept -v.
+  # I'd rather use --version here, but apparently some GNU lds only accept -v.
 case `$LD -v 2>&1 </dev/null` in
 *GNU* | *'with BFD'*)
-  acl_cv_prog_gnu_ld=yes ;;
+  acl_cv_prog_gnu_ld=yes
+  ;;
 *)
-  acl_cv_prog_gnu_ld=no ;;
+  acl_cv_prog_gnu_ld=no
+  ;;
 esac
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $acl_cv_prog_gnu_ld" >&5
@@ -15843,7 +15933,7 @@
       done
       if test -z "$already_handled"; then
         names_already_handled="$names_already_handled $name"
-                        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./-|ABCDEFGHIJKLMNOPQRSTUVWXYZ___|'`
+                        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`
         eval value=\"\$HAVE_LIB$uppername\"
         if test -n "$value"; then
           if test "$value" = yes; then
@@ -16508,6 +16608,7 @@
 #include <string.h>
 int main ()
 {
+  int result = 0;
   /* Test against AIX 5.1 bug: Failures are not distinguishable from successful
      returns.  */
   {
@@ -16524,7 +16625,8 @@
                             (char **) &inptr, &inbytesleft,
                             &outptr, &outbytesleft);
         if (res == 0)
-          return 1;
+          result |= 1;
+        iconv_close (cd_utf8_to_88591);
       }
   }
   /* Test against Solaris 10 bug: Failures are not distinguishable from
@@ -16543,7 +16645,27 @@
                             (char **) &inptr, &inbytesleft,
                             &outptr, &outbytesleft);
         if (res == 0)
-          return 1;
+          result |= 2;
+        iconv_close (cd_ascii_to_88591);
+      }
+  }
+  /* Test against AIX 6.1..7.1 bug: Buffer overrun.  */
+  {
+    iconv_t cd_88591_to_utf8 = iconv_open ("UTF-8", "ISO-8859-1");
+    if (cd_88591_to_utf8 != (iconv_t)(-1))
+      {
+        static const char input[] = "\304";
+        static char buf[2] = { (char)0xDE, (char)0xAD };
+        const char *inptr = input;
+        size_t inbytesleft = 1;
+        char *outptr = buf;
+        size_t outbytesleft = 1;
+        size_t res = iconv (cd_88591_to_utf8,
+                            (char **) &inptr, &inbytesleft,
+                            &outptr, &outbytesleft);
+        if (res != (size_t)(-1) || outptr - buf > 1 || buf[1] != (char)0xAD)
+          result |= 4;
+        iconv_close (cd_88591_to_utf8);
       }
   }
 #if 0 /* This bug could be worked around by the caller.  */
@@ -16562,7 +16684,8 @@
                             (char **) &inptr, &inbytesleft,
                             &outptr, &outbytesleft);
         if ((int)res > 0)
-          return 1;
+          result |= 8;
+        iconv_close (cd_88591_to_utf8);
       }
   }
 #endif
@@ -16576,8 +16699,8 @@
       && iconv_open ("UTF-8", "IBM-eucJP") == (iconv_t)(-1)
       /* Try HP-UX names.  */
       && iconv_open ("utf8", "eucJP") == (iconv_t)(-1))
-    return 1;
-  return 0;
+    result |= 16;
+  return result;
 }
 _ACEOF
 if ac_fn_c_try_run "$LINENO"; then :
@@ -16694,7 +16817,7 @@
       done
       if test -z "$already_handled"; then
         names_already_handled="$names_already_handled $name"
-                        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./-|ABCDEFGHIJKLMNOPQRSTUVWXYZ___|'`
+                        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`
         eval value=\"\$HAVE_LIB$uppername\"
         if test -n "$value"; then
           if test "$value" = yes; then
@@ -18102,7 +18233,7 @@
 
 
 # Find the best function to set timestamps.
-for ac_func in futimens futimes futimesat utimes utime
+for ac_func in futimens futimes futimesat utimes _futime utime
 do :
   as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
 ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
@@ -18597,8 +18728,36 @@
 else
 
 
+# glibc-based systems (GNU/Linux and GNU/kFreeBSD) have sched_getaffinity().
+# The CPU_COUNT() macro was added in glibc 2.9 so we try to link the
+# test program instead of merely compiling it. glibc 2.9 is old enough that
+# if someone uses the code on older glibc, the fallback to sysconf() should
+# be good enough.
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#include <sched.h>
+int
+main(void)
+{
+	cpu_set_t cpu_mask;
+	sched_getaffinity(0, sizeof(cpu_mask), &cpu_mask);
+	return CPU_COUNT(&cpu_mask);
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  tuklib_cv_cpucores_method=sched_getaffinity
+else
+
+
 # FreeBSD has both cpuset and sysctl. Look for cpuset first because
 # it's a better approach.
+#
+# This test would match on GNU/kFreeBSD too but it would require
+# -lfreebsd-glue when linking and thus in the current form this would
+# fail on GNU/kFreeBSD. The above test for sched_getaffinity() matches
+# on GNU/kFreeBSD so the test below should never run on that OS.
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -18710,12 +18869,20 @@
 fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $tuklib_cv_cpucores_method" >&5
 $as_echo "$tuklib_cv_cpucores_method" >&6; }
 
 case $tuklib_cv_cpucores_method in
+	sched_getaffinity)
+
+$as_echo "#define TUKLIB_CPUCORES_SCHED_GETAFFINITY 1" >>confdefs.h
+
+		;;
 	cpuset)
 
 $as_echo "#define TUKLIB_CPUCORES_CPUSET 1" >>confdefs.h
@@ -18790,30 +18957,29 @@
 
 
 
-# Check for system-provided SHA-256. At least the following is supported:
+# If requsted, check for system-provided SHA-256. At least the following
+# implementations are supported:
 #
 # OS       Headers                     Library  Type           Function
 # FreeBSD  sys/types.h + sha256.h      libmd    SHA256_CTX     SHA256_Init
 # NetBSD   sys/types.h + sha2.h                 SHA256_CTX     SHA256_Init
 # OpenBSD  sys/types.h + sha2.h                 SHA2_CTX       SHA256Init
 # Solaris  sys/types.h + sha2.h        libmd    SHA256_CTX     SHA256Init
-# MINIX 3  sys/types.h + minix/sha2.h  libutil  SHA256_CTX     SHA256_Init
+# MINIX 3  sys/types.h + sha2.h                 SHA256_CTX     SHA256_Init
 # Darwin   CommonCrypto/CommonDigest.h          CC_SHA256_CTX  CC_SHA256_Init
 #
 # Note that Darwin's CC_SHA256_Update takes buffer size as uint32_t instead
 # of size_t.
 #
-# We don't check for e.g. OpenSSL or libgcrypt because we don't want
-# to introduce dependencies to other packages by default. Maybe such
-# libraries could be supported via additional configure options though.
-#
-if test "x$enable_check_sha256" = "xyes"; then
+sha256_header_found=no
+sha256_type_found=no
+sha256_func_found=no
+if test "x$enable_external_sha256" = "xyes"; then
 	# Test for Common Crypto before others, because Darwin has sha256.h
 	# too and we don't want to use that, because on older versions it
 	# uses OpenSSL functions, whose SHA256_Init is not guaranteed to
 	# succeed.
-	sha256_header_found=no
-	for ac_header in CommonCrypto/CommonDigest.h sha256.h sha2.h minix/sha2.h
+	for ac_header in CommonCrypto/CommonDigest.h sha256.h sha2.h
 do :
   as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
 ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
@@ -18839,9 +19005,6 @@
 			  #ifdef HAVE_SHA2_H
 			  # include <sha2.h>
 			  #endif
-			  #ifdef HAVE_MINIX_SHA2_H
-			  # include <minix/sha2.h>
-			  #endif
 "
 if test "x$ac_cv_type_CC_SHA256_CTX" = xyes; then :
 
@@ -18849,7 +19012,7 @@
 #define HAVE_CC_SHA256_CTX 1
 _ACEOF
 
-
+sha256_type_found=yes
 fi
 ac_fn_c_check_type "$LINENO" "SHA256_CTX" "ac_cv_type_SHA256_CTX" "#ifdef HAVE_SYS_TYPES_H
 			  # include <sys/types.h>
@@ -18863,9 +19026,6 @@
 			  #ifdef HAVE_SHA2_H
 			  # include <sha2.h>
 			  #endif
-			  #ifdef HAVE_MINIX_SHA2_H
-			  # include <minix/sha2.h>
-			  #endif
 "
 if test "x$ac_cv_type_SHA256_CTX" = xyes; then :
 
@@ -18873,7 +19033,7 @@
 #define HAVE_SHA256_CTX 1
 _ACEOF
 
-
+sha256_type_found=yes
 fi
 ac_fn_c_check_type "$LINENO" "SHA2_CTX" "ac_cv_type_SHA2_CTX" "#ifdef HAVE_SYS_TYPES_H
 			  # include <sys/types.h>
@@ -18887,9 +19047,6 @@
 			  #ifdef HAVE_SHA2_H
 			  # include <sha2.h>
 			  #endif
-			  #ifdef HAVE_MINIX_SHA2_H
-			  # include <minix/sha2.h>
-			  #endif
 "
 if test "x$ac_cv_type_SHA2_CTX" = xyes; then :
 
@@ -18897,12 +19054,13 @@
 #define HAVE_SHA2_CTX 1
 _ACEOF
 
-
+sha256_type_found=yes
 fi
 
-		{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing SHA256_Init" >&5
-$as_echo_n "checking for library containing SHA256_Init... " >&6; }
-if ${ac_cv_search_SHA256_Init+:} false; then :
+		if test "x$sha256_type_found" = xyes ; then
+			{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing SHA256Init" >&5
+$as_echo_n "checking for library containing SHA256Init... " >&6; }
+if ${ac_cv_search_SHA256Init+:} false; then :
   $as_echo_n "(cached) " >&6
 else
   ac_func_search_save_LIBS=$LIBS
@@ -18915,16 +19073,16 @@
 #ifdef __cplusplus
 extern "C"
 #endif
-char SHA256_Init ();
+char SHA256Init ();
 int
 main ()
 {
-return SHA256_Init ();
+return SHA256Init ();
   ;
   return 0;
 }
 _ACEOF
-for ac_lib in '' md util; do
+for ac_lib in '' md; do
   if test -z "$ac_lib"; then
     ac_res="none required"
   else
@@ -18932,33 +19090,33 @@
     LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
   fi
   if ac_fn_c_try_link "$LINENO"; then :
-  ac_cv_search_SHA256_Init=$ac_res
+  ac_cv_search_SHA256Init=$ac_res
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext
-  if ${ac_cv_search_SHA256_Init+:} false; then :
+  if ${ac_cv_search_SHA256Init+:} false; then :
   break
 fi
 done
-if ${ac_cv_search_SHA256_Init+:} false; then :
+if ${ac_cv_search_SHA256Init+:} false; then :
 
 else
-  ac_cv_search_SHA256_Init=no
+  ac_cv_search_SHA256Init=no
 fi
 rm conftest.$ac_ext
 LIBS=$ac_func_search_save_LIBS
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_SHA256_Init" >&5
-$as_echo "$ac_cv_search_SHA256_Init" >&6; }
-ac_res=$ac_cv_search_SHA256_Init
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_SHA256Init" >&5
+$as_echo "$ac_cv_search_SHA256Init" >&6; }
+ac_res=$ac_cv_search_SHA256Init
 if test "$ac_res" != no; then :
   test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
 
 fi
 
-		{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing SHA256Init" >&5
-$as_echo_n "checking for library containing SHA256Init... " >&6; }
-if ${ac_cv_search_SHA256Init+:} false; then :
+			{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing SHA256_Init" >&5
+$as_echo_n "checking for library containing SHA256_Init... " >&6; }
+if ${ac_cv_search_SHA256_Init+:} false; then :
   $as_echo_n "(cached) " >&6
 else
   ac_func_search_save_LIBS=$LIBS
@@ -18971,11 +19129,11 @@
 #ifdef __cplusplus
 extern "C"
 #endif
-char SHA256Init ();
+char SHA256_Init ();
 int
 main ()
 {
-return SHA256Init ();
+return SHA256_Init ();
   ;
   return 0;
 }
@@ -18988,31 +19146,31 @@
     LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
   fi
   if ac_fn_c_try_link "$LINENO"; then :
-  ac_cv_search_SHA256Init=$ac_res
+  ac_cv_search_SHA256_Init=$ac_res
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext
-  if ${ac_cv_search_SHA256Init+:} false; then :
+  if ${ac_cv_search_SHA256_Init+:} false; then :
   break
 fi
 done
-if ${ac_cv_search_SHA256Init+:} false; then :
+if ${ac_cv_search_SHA256_Init+:} false; then :
 
 else
-  ac_cv_search_SHA256Init=no
+  ac_cv_search_SHA256_Init=no
 fi
 rm conftest.$ac_ext
 LIBS=$ac_func_search_save_LIBS
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_SHA256Init" >&5
-$as_echo "$ac_cv_search_SHA256Init" >&6; }
-ac_res=$ac_cv_search_SHA256Init
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_SHA256_Init" >&5
+$as_echo "$ac_cv_search_SHA256_Init" >&6; }
+ac_res=$ac_cv_search_SHA256_Init
 if test "$ac_res" != no; then :
   test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
 
 fi
 
-		for ac_func in CC_SHA256_Init SHA256_Init SHA256Init
+			for ac_func in CC_SHA256_Init SHA256Init SHA256_Init
 do :
   as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
 ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
@@ -19020,15 +19178,14 @@
   cat >>confdefs.h <<_ACEOF
 #define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
 _ACEOF
- break
+ sha256_func_found=yes ; break
 fi
 done
 
 	fi
 fi
- if test "x$ac_cv_func_SHA256_Init" != xyes \
-		&& test "x$ac_cv_func_SHA256Init" != xyes \
-		&& test "x$ac_cv_func_CC_SHA256_Init" != xyes; then
+fi
+ if test "x$sha256_func_found" = xno; then
   COND_INTERNAL_SHA256_TRUE=
   COND_INTERNAL_SHA256_FALSE='#'
 else
@@ -19036,6 +19193,9 @@
   COND_INTERNAL_SHA256_FALSE=
 fi
 
+if test "x$enable_external_sha256$sha256_func_found" = xyesno; then
+	as_fn_error $? "--enable-external-sha256 was specified but no supported external SHA-256 implementation was found" "$LINENO" 5
+fi
 
 # Check for SSE2 intrinsics.
 ac_fn_c_check_decl "$LINENO" "_mm_movemask_epi8" "ac_cv_have_decl__mm_movemask_epi8" "#ifdef HAVE_IMMINTRIN_H
@@ -19049,6 +19209,143 @@
 fi
 
 
+# Check for sandbox support. If one is found, set enable_sandbox=found.
+case $enable_sandbox in
+	auto | capsicum)
+
+# On FreeBSD >= 11.x and Linux, Capsicum is uses <sys/capsicum.h>.
+# If this header is found, it is assumed to be the right one.
+capsicum_header_found=no
+for ac_header in sys/capsicum.h
+do :
+  ac_fn_c_check_header_mongrel "$LINENO" "sys/capsicum.h" "ac_cv_header_sys_capsicum_h" "$ac_includes_default"
+if test "x$ac_cv_header_sys_capsicum_h" = xyes; then :
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_SYS_CAPSICUM_H 1
+_ACEOF
+ capsicum_header_found=yes
+fi
+
+done
+
+if test "$capsicum_header_found" = no ; then
+    # On FreeBSD 10.x Capsicum uses <sys/capability.h>. Such a header exists
+    # on Linux too but it describes POSIX.1e capabilities. Look for the
+    # declaration of cap_rights_limit to check if <sys/capability.h> is
+    # a Capsicum header.
+    ac_fn_c_check_decl "$LINENO" "cap_rights_limit" "ac_cv_have_decl_cap_rights_limit" "#include <sys/capability.h>
+"
+if test "x$ac_cv_have_decl_cap_rights_limit" = xyes; then :
+  capsicum_header_found=yes
+fi
+
+fi
+
+capsicum_lib_found=no
+CAPSICUM_LIB=
+if test "$capsicum_header_found" = yes ; then
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+    # FreeBSD >= 10.x has Capsicum functions in libc.
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char cap_rights_limit ();
+int
+main ()
+{
+return cap_rights_limit ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  capsicum_lib_found=yes
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+    # Linux has Capsicum functions in libcaprights.
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for cap_rights_limit in -lcaprights" >&5
+$as_echo_n "checking for cap_rights_limit in -lcaprights... " >&6; }
+if ${ac_cv_lib_caprights_cap_rights_limit+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lcaprights  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char cap_rights_limit ();
+int
+main ()
+{
+return cap_rights_limit ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_caprights_cap_rights_limit=yes
+else
+  ac_cv_lib_caprights_cap_rights_limit=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_caprights_cap_rights_limit" >&5
+$as_echo "$ac_cv_lib_caprights_cap_rights_limit" >&6; }
+if test "x$ac_cv_lib_caprights_cap_rights_limit" = xyes; then :
+  CAPSICUM_LIB=-lcaprights
+                  capsicum_lib_found=yes
+fi
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+
+
+if test "$capsicum_lib_found" = yes ; then
+
+$as_echo "#define HAVE_CAPSICUM 1" >>confdefs.h
+
+    enable_sandbox=found
+else
+    :
+fi
+		;;
+esac
+
+# If a specific sandboxing method was explicitly requested and it wasn't
+# found, give an error.
+case $enable_sandbox in
+	auto | no | found)
+		;;
+	*)
+		as_fn_error $? "$enable_sandbox support not found" "$LINENO" 5
+		;;
+esac
+
 
 ###############################################################################
 # If using GCC, set some additional AM_CFLAGS:
@@ -20009,7 +20307,7 @@
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by XZ Utils $as_me 5.2.2, which was
+This file was extended by XZ Utils $as_me 5.2.4, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -20070,13 +20368,13 @@
 $config_commands
 
 Report bugs to <lasse.collin@tukaani.org>.
-XZ Utils home page: <http://tukaani.org/xz/>."
+XZ Utils home page: <https://tukaani.org/xz/>."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-XZ Utils config.status 5.2.2
+XZ Utils config.status 5.2.4
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
@@ -20248,6 +20546,7 @@
 want_nocaseglob='`$ECHO "$want_nocaseglob" | $SED "$delay_single_quote_subst"`'
 sharedlib_from_linklib_cmd='`$ECHO "$sharedlib_from_linklib_cmd" | $SED "$delay_single_quote_subst"`'
 AR='`$ECHO "$AR" | $SED "$delay_single_quote_subst"`'
+lt_ar_flags='`$ECHO "$lt_ar_flags" | $SED "$delay_single_quote_subst"`'
 AR_FLAGS='`$ECHO "$AR_FLAGS" | $SED "$delay_single_quote_subst"`'
 archiver_list_spec='`$ECHO "$archiver_list_spec" | $SED "$delay_single_quote_subst"`'
 STRIP='`$ECHO "$STRIP" | $SED "$delay_single_quote_subst"`'
@@ -20419,7 +20718,6 @@
 want_nocaseglob \
 sharedlib_from_linklib_cmd \
 AR \
-AR_FLAGS \
 archiver_list_spec \
 STRIP \
 RANLIB \
@@ -21442,8 +21740,11 @@
 # The archiver.
 AR=$lt_AR
 
+# Flags to create an archive (by configure).
+lt_ar_flags=$lt_ar_flags
+
 # Flags to create an archive.
-AR_FLAGS=$lt_AR_FLAGS
+AR_FLAGS=\${ARFLAGS-"\$lt_ar_flags"}
 
 # How to feed a file listing to the archiver.
 archiver_list_spec=$lt_archiver_list_spec
@@ -21975,7 +22276,7 @@
       case "$ac_file" in */Makefile.in)
         # Adjust a relative srcdir.
         ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
-        ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
+        ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
         ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
         # In autoconf-2.13 it is called $ac_given_srcdir.
         # In autoconf-2.50 it is called $srcdir.
@@ -21991,7 +22292,8 @@
         if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
           rm -f "$ac_dir/POTFILES"
           test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
-          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ 	]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
+          gt_tab=`printf '\t'`
+          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ ${gt_tab}]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
           POMAKEFILEDEPS="POTFILES.in"
           # ALL_LINGUAS, POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES depend
           # on $ac_dir but don't depend on user-specified configuration
@@ -22002,12 +22304,12 @@
               test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
             fi
             ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
-            # Hide the ALL_LINGUAS assigment from automake < 1.5.
+            # Hide the ALL_LINGUAS assignment from automake < 1.5.
             eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
             POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
           else
             # The set of available languages was given in configure.in.
-            # Hide the ALL_LINGUAS assigment from automake < 1.5.
+            # Hide the ALL_LINGUAS assignment from automake < 1.5.
             eval 'ALL_LINGUAS''=$OBSOLETE_ALL_LINGUAS'
           fi
           # Compute POFILES
diff -uNrwB xz-5.2.2/configure.ac xz-5.2.4/configure.ac
--- xz-5.2.2/configure.ac	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/configure.ac	2018-04-29 21:10:38.000000000 +0600
@@ -18,7 +18,7 @@
 AC_PREREQ([2.64])
 
 AC_INIT([XZ Utils], m4_esyscmd([/bin/sh build-aux/version.sh]),
-	[lasse.collin@tukaani.org], [xz], [http://tukaani.org/xz/])
+	[lasse.collin@tukaani.org], [xz], [https://tukaani.org/xz/])
 AC_CONFIG_SRCDIR([src/liblzma/common/common.h])
 AC_CONFIG_AUX_DIR([build-aux])
 AC_CONFIG_MACRO_DIR([m4])
@@ -97,6 +97,7 @@
 	[], [enable_encoders=SUPPORTED_FILTERS])
 enable_encoders=`echo "$enable_encoders" | sed 's/,/ /g'`
 if test "x$enable_encoders" = xno || test "x$enable_encoders" = x; then
+	enable_encoders=no
 	AC_MSG_RESULT([(none)])
 else
 	for arg in $enable_encoders
@@ -114,6 +115,8 @@
 				;;
 		esac
 	done
+	AC_DEFINE([HAVE_ENCODERS], [1],
+		[Define to 1 if any of HAVE_ENCODER_foo have been defined.])
 	AC_MSG_RESULT([$enable_encoders])
 fi
 
@@ -124,6 +127,7 @@
 	[], [enable_decoders=SUPPORTED_FILTERS])
 enable_decoders=`echo "$enable_decoders" | sed 's/,/ /g'`
 if test "x$enable_decoders" = xno || test "x$enable_decoders" = x; then
+	enable_decoders=no
 	AC_MSG_RESULT([(none)])
 else
 	for arg in $enable_decoders
@@ -141,11 +145,8 @@
 				;;
 		esac
 	done
-
-	# LZMA2 requires that LZMA1 is enabled.
-	test "x$enable_encoder_lzma2" = xyes && enable_encoder_lzma1=yes
-	test "x$enable_decoder_lzma2" = xyes && enable_decoder_lzma1=yes
-
+	AC_DEFINE([HAVE_DECODERS], [1],
+		[Define to 1 if any of HAVE_DECODER_foo have been defined.])
 	AC_MSG_RESULT([$enable_decoders])
 fi
 
@@ -154,8 +155,8 @@
 	AC_MSG_ERROR([LZMA2 requires that LZMA1 is also enabled.])
 fi
 
-AM_CONDITIONAL(COND_MAIN_ENCODER, test "x$enable_encoders" != xno && test "x$enable_encoders" != x)
-AM_CONDITIONAL(COND_MAIN_DECODER, test "x$enable_decoders" != xno && test "x$enable_decoders" != x)
+AM_CONDITIONAL(COND_MAIN_ENCODER, test "x$enable_encoders" != xno)
+AM_CONDITIONAL(COND_MAIN_DECODER, test "x$enable_decoders" != xno)
 
 m4_foreach([NAME], [SUPPORTED_FILTERS],
 [AM_CONDITIONAL(COND_FILTER_[]m4_toupper(NAME), test "x$enable_filter_[]NAME" = xyes)
@@ -274,6 +275,20 @@
 [AM_CONDITIONAL(COND_CHECK_[]m4_toupper(NAME), test "x$enable_check_[]NAME" = xyes)
 ])dnl
 
+AC_MSG_CHECKING([if external SHA-256 should be used])
+AC_ARG_ENABLE([external-sha256], AS_HELP_STRING([--enable-external-sha256],
+		[Use SHA-256 code from the operating system.
+		See INSTALL for possible subtle problems.]),
+		[], [enable_external_sha256=no])
+if test "x$enable_check_sha256" != "xyes"; then
+	enable_external_sha256=no
+fi
+if test "x$enable_external_sha256" = xyes; then
+	AC_MSG_RESULT([yes])
+else
+	AC_MSG_RESULT([no])
+fi
+
 
 ###########################
 # Assembler optimizations #
@@ -415,18 +430,21 @@
 AC_ARG_ENABLE([xzdec], [AS_HELP_STRING([--disable-xzdec],
 		[do not build xzdec])],
 	[], [enable_xzdec=yes])
+test "x$enable_decoders" = xno && enable_xzdec=no
 AM_CONDITIONAL([COND_XZDEC], [test x$enable_xzdec != xno])
 
 AC_ARG_ENABLE([lzmadec], [AS_HELP_STRING([--disable-lzmadec],
 		[do not build lzmadec
 		(it exists primarily for LZMA Utils compatibility)])],
 	[], [enable_lzmadec=yes])
+test "x$enable_decoder_lzma1" = xno && enable_lzmadec=no
 AM_CONDITIONAL([COND_LZMADEC], [test x$enable_lzmadec != xno])
 
 AC_ARG_ENABLE([lzmainfo], [AS_HELP_STRING([--disable-lzmainfo],
 		[do not build lzmainfo
 		(it exists primarily for LZMA Utils compatibility)])],
 	[], [enable_lzmainfo=yes])
+test "x$enable_decoder_lzma1" = xno && enable_lzmainfo=no
 AM_CONDITIONAL([COND_LZMAINFO], [test x$enable_lzmainfo != xno])
 
 AC_ARG_ENABLE([lzma-links], [AS_HELP_STRING([--disable-lzma-links],
@@ -474,6 +492,30 @@
 AM_CONDITIONAL([COND_SYMVERS], [test "x$enable_symbol_versions" = xyes])
 
 
+##############
+# Sandboxing #
+##############
+
+AC_MSG_CHECKING([if sandboxing should be used])
+AC_ARG_ENABLE([sandbox], [AS_HELP_STRING([--enable-sandbox=METHOD],
+		[This is an experimental feature.
+		Sandboxing METHOD can be `auto', `no', or `capsicum'.
+		The default is `no'.])],
+	[], [enable_sandbox=no])
+case $enable_sandbox in
+	auto)
+		AC_MSG_RESULT([maybe (autodetect)])
+		;;
+	no | capsicum)
+		AC_MSG_RESULT([$enable_sandbox])
+		;;
+	*)
+		AC_MSG_RESULT([])
+		AC_MSG_ERROR([--enable-sandbox only accepts `auto', `no', or `capsicum'.])
+		;;
+esac
+
+
 ###############################################################################
 # Checks for programs.
 ###############################################################################
@@ -567,7 +609,7 @@
 
 echo
 echo "Initializing gettext:"
-AM_GNU_GETTEXT_VERSION([0.18])
+AM_GNU_GETTEXT_VERSION([0.19])
 AM_GNU_GETTEXT([external])
 
 
@@ -630,7 +672,7 @@
 gl_GETOPT
 
 # Find the best function to set timestamps.
-AC_CHECK_FUNCS([futimens futimes futimesat utimes utime], [break])
+AC_CHECK_FUNCS([futimens futimes futimesat utimes _futime utime], [break])
 
 # This is nice to have but not mandatory.
 AC_CHECK_FUNCS([posix_fadvise])
@@ -641,34 +683,34 @@
 TUKLIB_CPUCORES
 TUKLIB_MBSTR
 
-# Check for system-provided SHA-256. At least the following is supported:
+# If requsted, check for system-provided SHA-256. At least the following
+# implementations are supported:
 #
 # OS       Headers                     Library  Type           Function
 # FreeBSD  sys/types.h + sha256.h      libmd    SHA256_CTX     SHA256_Init
 # NetBSD   sys/types.h + sha2.h                 SHA256_CTX     SHA256_Init
 # OpenBSD  sys/types.h + sha2.h                 SHA2_CTX       SHA256Init
 # Solaris  sys/types.h + sha2.h        libmd    SHA256_CTX     SHA256Init
-# MINIX 3  sys/types.h + minix/sha2.h  libutil  SHA256_CTX     SHA256_Init
+# MINIX 3  sys/types.h + sha2.h                 SHA256_CTX     SHA256_Init
 # Darwin   CommonCrypto/CommonDigest.h          CC_SHA256_CTX  CC_SHA256_Init
 #
 # Note that Darwin's CC_SHA256_Update takes buffer size as uint32_t instead
 # of size_t.
 #
-# We don't check for e.g. OpenSSL or libgcrypt because we don't want
-# to introduce dependencies to other packages by default. Maybe such
-# libraries could be supported via additional configure options though.
-#
-if test "x$enable_check_sha256" = "xyes"; then
+sha256_header_found=no
+sha256_type_found=no
+sha256_func_found=no
+if test "x$enable_external_sha256" = "xyes"; then
 	# Test for Common Crypto before others, because Darwin has sha256.h
 	# too and we don't want to use that, because on older versions it
 	# uses OpenSSL functions, whose SHA256_Init is not guaranteed to
 	# succeed.
-	sha256_header_found=no
 	AC_CHECK_HEADERS(
-		[CommonCrypto/CommonDigest.h sha256.h sha2.h minix/sha2.h],
+		[CommonCrypto/CommonDigest.h sha256.h sha2.h],
 		[sha256_header_found=yes ; break])
 	if test "x$sha256_header_found" = xyes; then
-		AC_CHECK_TYPES([CC_SHA256_CTX, SHA256_CTX, SHA2_CTX], [], [],
+		AC_CHECK_TYPES([CC_SHA256_CTX, SHA256_CTX, SHA2_CTX],
+			[sha256_type_found=yes], [],
 			[[#ifdef HAVE_SYS_TYPES_H
 			  # include <sys/types.h>
 			  #endif
@@ -680,20 +722,19 @@
 			  #endif
 			  #ifdef HAVE_SHA2_H
 			  # include <sha2.h>
-			  #endif
-			  #ifdef HAVE_MINIX_SHA2_H
-			  # include <minix/sha2.h>
 			  #endif]])
-		AC_SEARCH_LIBS([SHA256_Init], [md util])
+		if test "x$sha256_type_found" = xyes ; then
 		AC_SEARCH_LIBS([SHA256Init], [md])
-		AC_CHECK_FUNCS([CC_SHA256_Init SHA256_Init SHA256Init],
-			[break])
+			AC_SEARCH_LIBS([SHA256_Init], [md])
+			AC_CHECK_FUNCS([CC_SHA256_Init SHA256Init SHA256_Init],
+				[sha256_func_found=yes ; break])
+		fi
 	fi
 fi
-AM_CONDITIONAL([COND_INTERNAL_SHA256],
-	[test "x$ac_cv_func_SHA256_Init" != xyes \
-		&& test "x$ac_cv_func_SHA256Init" != xyes \
-		&& test "x$ac_cv_func_CC_SHA256_Init" != xyes])
+AM_CONDITIONAL([COND_INTERNAL_SHA256], [test "x$sha256_func_found" = xno])
+if test "x$enable_external_sha256$sha256_func_found" = xyesno; then
+	AC_MSG_ERROR([--enable-external-sha256 was specified but no supported external SHA-256 implementation was found])
+fi
 
 # Check for SSE2 intrinsics.
 AC_CHECK_DECL([_mm_movemask_epi8],
@@ -704,6 +745,23 @@
 #include <immintrin.h>
 #endif])
 
+# Check for sandbox support. If one is found, set enable_sandbox=found.
+case $enable_sandbox in
+	auto | capsicum)
+		AX_CHECK_CAPSICUM([enable_sandbox=found], [:])
+		;;
+esac
+
+# If a specific sandboxing method was explicitly requested and it wasn't
+# found, give an error.
+case $enable_sandbox in
+	auto | no | found)
+		;;
+	*)
+		AC_MSG_ERROR([$enable_sandbox support not found])
+		;;
+esac
+
 
 ###############################################################################
 # If using GCC, set some additional AM_CFLAGS:
diff -uNrwB xz-5.2.2/COPYING xz-5.2.4/COPYING
--- xz-5.2.2/COPYING	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/COPYING	2018-04-29 21:10:38.000000000 +0600
@@ -47,7 +47,7 @@
     naturally it is not legally required. Here is an example of a good
     notice to put into "about box" or into documentation:
 
-        This software includes code from XZ Utils <http://tukaani.org/xz/>.
+        This software includes code from XZ Utils <https://tukaani.org/xz/>.
 
     The following license texts are included in the following files:
       - COPYING.LGPLv2.1: GNU Lesser General Public License version 2.1
diff -uNrwB xz-5.2.2/debug/Makefile.in xz-5.2.4/debug/Makefile.in
--- xz-5.2.2/debug/Makefile.in	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/debug/Makefile.in	2018-04-29 22:01:26.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -94,16 +94,16 @@
 @COND_GNULIB_TRUE@am__append_1 = $(top_builddir)/lib/libgnu.a
 subdir = debug
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -233,6 +233,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
diff -uNrwB xz-5.2.2/doc/examples/02_decompress.c xz-5.2.4/doc/examples/02_decompress.c
--- xz-5.2.2/doc/examples/02_decompress.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/doc/examples/02_decompress.c	2018-04-29 21:10:38.000000000 +0600
@@ -138,7 +138,7 @@
 			// Once the end of the input file has been reached,
 			// we need to tell lzma_code() that no more input
 			// will be coming. As said before, this isn't required
-			// if the LZMA_CONATENATED flag isn't used when
+			// if the LZMA_CONCATENATED flag isn't used when
 			// initializing the decoder.
 			if (feof(infile))
 				action = LZMA_FINISH;
diff -uNrwB xz-5.2.2/doc/faq.txt xz-5.2.4/doc/faq.txt
--- xz-5.2.2/doc/faq.txt	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/doc/faq.txt	2018-04-29 21:10:38.000000000 +0600
@@ -206,7 +206,7 @@
 A:  liblzmadec is part of LZMA Utils. XZ Utils has liblzma, but no
     liblzmadec. The code using liblzmadec should be ported to use
     liblzma instead. If you cannot or don't want to do that, download
-    LZMA Utils from <http://tukaani.org/lzma/>.
+    LZMA Utils from <https://tukaani.org/lzma/>.
 
 
 Q:  The default build of liblzma is too big. How can I make it smaller?
@@ -220,5 +220,5 @@
     If the result is still too big, take a look at XZ Embedded. It is
     a separate project, which provides a limited but significantly
     smaller XZ decoder implementation than XZ Utils. You can find it
-    at <http://tukaani.org/xz/embedded.html>.
+    at <https://tukaani.org/xz/embedded.html>.
 
Binary files xz-5.2.2/doc/man/pdf-a4/lzmainfo-a4.pdf and xz-5.2.4/doc/man/pdf-a4/lzmainfo-a4.pdf differ
Binary files xz-5.2.2/doc/man/pdf-a4/xz-a4.pdf and xz-5.2.4/doc/man/pdf-a4/xz-a4.pdf differ
Binary files xz-5.2.2/doc/man/pdf-a4/xzdec-a4.pdf and xz-5.2.4/doc/man/pdf-a4/xzdec-a4.pdf differ
Binary files xz-5.2.2/doc/man/pdf-a4/xzdiff-a4.pdf and xz-5.2.4/doc/man/pdf-a4/xzdiff-a4.pdf differ
Binary files xz-5.2.2/doc/man/pdf-a4/xzgrep-a4.pdf and xz-5.2.4/doc/man/pdf-a4/xzgrep-a4.pdf differ
Binary files xz-5.2.2/doc/man/pdf-a4/xzless-a4.pdf and xz-5.2.4/doc/man/pdf-a4/xzless-a4.pdf differ
Binary files xz-5.2.2/doc/man/pdf-a4/xzmore-a4.pdf and xz-5.2.4/doc/man/pdf-a4/xzmore-a4.pdf differ
Binary files xz-5.2.2/doc/man/pdf-letter/lzmainfo-letter.pdf and xz-5.2.4/doc/man/pdf-letter/lzmainfo-letter.pdf differ
Binary files xz-5.2.2/doc/man/pdf-letter/xzdec-letter.pdf and xz-5.2.4/doc/man/pdf-letter/xzdec-letter.pdf differ
Binary files xz-5.2.2/doc/man/pdf-letter/xzdiff-letter.pdf and xz-5.2.4/doc/man/pdf-letter/xzdiff-letter.pdf differ
Binary files xz-5.2.2/doc/man/pdf-letter/xzgrep-letter.pdf and xz-5.2.4/doc/man/pdf-letter/xzgrep-letter.pdf differ
Binary files xz-5.2.2/doc/man/pdf-letter/xzless-letter.pdf and xz-5.2.4/doc/man/pdf-letter/xzless-letter.pdf differ
Binary files xz-5.2.2/doc/man/pdf-letter/xz-letter.pdf and xz-5.2.4/doc/man/pdf-letter/xz-letter.pdf differ
Binary files xz-5.2.2/doc/man/pdf-letter/xzmore-letter.pdf and xz-5.2.4/doc/man/pdf-letter/xzmore-letter.pdf differ
diff -uNrwB xz-5.2.2/doc/man/txt/xzdec.txt xz-5.2.4/doc/man/txt/xzdec.txt
--- xz-5.2.2/doc/man/txt/xzdec.txt	2015-09-29 17:05:19.000000000 +0600
+++ xz-5.2.4/doc/man/txt/xzdec.txt	2018-04-29 22:04:58.000000000 +0600
@@ -73,8 +73,8 @@
 SEE ALSO
        xz(1)
 
-       XZ Embedded: <http://tukaani.org/xz/embedded.html>
+       XZ Embedded: <https://tukaani.org/xz/embedded.html>
 
 
 
-Tukaani                           2013-06-30                          XZDEC(1)
+Tukaani                           2017-04-19                          XZDEC(1)
diff -uNrwB xz-5.2.2/doc/man/txt/xz.txt xz-5.2.4/doc/man/txt/xz.txt
--- xz-5.2.2/doc/man/txt/xz.txt	2015-09-29 17:05:18.000000000 +0600
+++ xz-5.2.4/doc/man/txt/xz.txt	2018-04-29 22:04:57.000000000 +0600
@@ -1474,10 +1474,10 @@
        xzdec(1),  xzdiff(1),   xzgrep(1),   xzless(1),   xzmore(1),   gzip(1),
        bzip2(1), 7z(1)
 
-       XZ Utils: <http://tukaani.org/xz/>
-       XZ Embedded: <http://tukaani.org/xz/embedded.html>
+       XZ Utils: <https://tukaani.org/xz/>
+       XZ Embedded: <https://tukaani.org/xz/embedded.html>
        LZMA SDK: <http://7-zip.org/sdk.html>
 
 
 
-Tukaani                           2015-05-11                             XZ(1)
+Tukaani                           2017-04-19                             XZ(1)
diff -uNrwB xz-5.2.2/dos/config.h xz-5.2.4/dos/config.h
--- xz-5.2.2/dos/config.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/dos/config.h	2018-04-29 21:10:38.000000000 +0600
@@ -10,6 +10,9 @@
 /* Define to 1 if sha256 integrity check is enabled. */
 #define HAVE_CHECK_SHA256 1
 
+/* Define to 1 if any of HAVE_DECODER_foo have been defined. */
+#define HAVE_DECODERS 1
+
 /* Define to 1 if arm decoder is enabled. */
 #define HAVE_DECODER_ARM 1
 
@@ -37,6 +40,9 @@
 /* Define to 1 if x86 decoder is enabled. */
 #define HAVE_DECODER_X86 1
 
+/* Define to 1 if any of HAVE_ENCODER_foo have been defined. */
+#define HAVE_ENCODERS 1
+
 /* Define to 1 if arm encoder is enabled. */
 #define HAVE_ENCODER_ARM 1
 
@@ -120,7 +126,7 @@
 #define PACKAGE_NAME "XZ Utils"
 
 /* Define to the home page for this package. */
-#define PACKAGE_URL "http://tukaani.org/xz/"
+#define PACKAGE_URL "https://tukaani.org/xz/"
 
 /* The size of `size_t', as computed by sizeof. */
 #define SIZEOF_SIZE_T 4
diff -uNrwB xz-5.2.2/extra/scanlzma/scanlzma.c xz-5.2.4/extra/scanlzma/scanlzma.c
--- xz-5.2.2/extra/scanlzma/scanlzma.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/extra/scanlzma/scanlzma.c	2018-04-29 21:59:42.000000000 +0600
@@ -37,6 +37,10 @@
 /*   5     8   Uncompressed size (little endian). -1 means unknown size */
 /*  13         Compressed data */
 
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+
 #define BUFSIZE 4096
 
 int find_lzma_header(unsigned char *buf) {
@@ -48,7 +52,7 @@
 }
 
 int main(int argc, char *argv[]) {
-	char buf[BUFSIZE];
+	unsigned char buf[BUFSIZE];
 	int ret, i, numlzma, blocks=0;
 
 	if (argc != 2) {
diff -uNrwB xz-5.2.2/INSTALL xz-5.2.4/INSTALL
--- xz-5.2.2/INSTALL	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/INSTALL	2018-04-29 21:10:38.000000000 +0600
@@ -246,6 +246,42 @@
                 the liblzma ABI, so this option should be used only when
                 it is known to not cause problems.
 
+    --enable-external-sha256
+                Try to use SHA-256 code from the operating system libc
+                or similar base system libraries. This doesn't try to
+                use OpenSSL or libgcrypt or such libraries.
+
+                The reasons to use this option:
+
+                  - It makes liblzma slightly smaller.
+
+                  - It might improve SHA-256 speed if the implementation
+                    in the operating is very good (but see below).
+
+                External SHA-256 is disabled by default for two reasons:
+
+                  - On some operating systems the symbol names of the
+                    SHA-256 functions conflict with OpenSSL's libcrypto.
+                    This causes weird problems such as decompression
+                    errors if an application is linked against both
+                    liblzma and libcrypto. This problem affects at least
+                    FreeBSD 10 and older and MINIX 3.3.0 and older, but
+                    other OSes that provide a function "SHA256_Init" might
+                    also be affected. FreeBSD 11 has the problem fixed.
+                    NetBSD had the problem but it was fixed it in 2009
+                    already. OpenBSD uses "SHA256Init" and thus never had
+                    a conflict with libcrypto.
+
+                  - The SHA-256 code in liblzma is faster than the SHA-256
+                    code provided by some operating systems. If you are
+                    curious, build two copies of xz (internal and external
+                    SHA-256) and compare the decompression (xz --test)
+                    times:
+
+                        dd if=/dev/zero bs=1024k count=1024 \
+                            | xz -v -0 -Csha256 > foo.xz
+                        time xz --test foo.xz
+
     --disable-xz
     --disable-xzdec
     --disable-lzmadec
@@ -363,6 +399,34 @@
                                 calls any liblzma functions from more than
                                 one thread, something bad may happen.
 
+    --enable-sandbox=METHOD
+                This feature is EXPERIMENTAL in the XZ Utils 5.2.x and
+                disabled by default. If you test this, look especially
+                if message translations and locale-specific decimal and
+                thousand separators (e.g. xz --list foo.xz) work the
+                same way as they do without sandboxing.
+
+                There is limited sandboxing support in the xz tool. If
+                built with sandbox support, it's used automatically when
+                (de)compressing exactly one file to standard output and
+                the options --files or --files0 weren't used. This is a
+                common use case, for example, (de)compressing .tar.xz
+                files via GNU tar. The sandbox is also used for
+                single-file `xz --test' or `xz --list'.
+
+                Supported METHODs:
+
+                        auto    Look for a supported sandboxing method
+                                and use it if found. If no method is
+                                found, then sandboxing isn't used.
+
+                        no      Disable sandboxing support.
+
+                        capsicum
+                                Use Capsicum (FreeBSD >= 10) for
+                                sandboxing. If no Capsicum support
+                                is found, configure will give an error.
+
     --enable-symbol-versions
                 Use symbol versioning for liblzma. This is enabled by
                 default on GNU/Linux, other GNU-based systems, and
diff -uNrwB xz-5.2.2/lib/Makefile.in xz-5.2.4/lib/Makefile.in
--- xz-5.2.2/lib/Makefile.in	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/lib/Makefile.in	2018-04-29 22:01:26.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -90,16 +90,16 @@
 host_triplet = @host@
 subdir = lib
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -181,6 +181,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
diff -uNrwB xz-5.2.2/m4/ax_check_capsicum.m4 xz-5.2.4/m4/ax_check_capsicum.m4
--- xz-5.2.2/m4/ax_check_capsicum.m4	1970-01-01 06:00:00.000000000 +0600
+++ xz-5.2.4/m4/ax_check_capsicum.m4	2018-04-29 21:10:38.000000000 +0600
@@ -0,0 +1,85 @@
+# -*- Autoconf -*-
+
+# SYNOPSIS
+#
+#   AX_CHECK_CAPSICUM([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+#
+# DESCRIPTION
+#
+#   This macro searches for an installed Capsicum header and library,
+#   and if found:
+#     - AC_DEFINE([HAVE_CAPSICUM]) is called.
+#     - AC_DEFINE([HAVE_SYS_CAPSICUM_H]) is called if <sys/capsicum.h>
+#       is present (otherwise <sys/capability.h> must be used).
+#     - CAPSICUM_LIB is set to the -l option needed to link Capsicum support,
+#       and AC_SUBST([CAPSICUM_LIB]) is called.
+#     - The shell commands in ACTION-IF-FOUND are run. The default
+#       ACTION-IF-FOUND prepends ${CAPSICUM_LIB} into LIBS. If you don't
+#       want to modify LIBS and don't need to run any other commands either,
+#       use a colon as ACTION-IF-FOUND.
+#
+#   If Capsicum support isn't found:
+#     - The shell commands in ACTION-IF-NOT-FOUND are run. The default
+#       ACTION-IF-NOT-FOUND calls AC_MSG_WARN to print a warning that
+#       Capsicum support wasn't found.
+#
+#   You should use autoheader to include a definition for the symbols above
+#   in a config.h file.
+#
+#   Sample usage in a C/C++ source is as follows:
+#
+#     #ifdef HAVE_CAPSICUM
+#     # ifdef HAVE_SYS_CAPSICUM_H
+#     #  include <sys/capsicum.h>
+#     # else
+#     #  include <sys/capability.h>
+#     # endif
+#     #endif /* HAVE_CAPSICUM */
+#
+# LICENSE
+#
+#   Copyright (c) 2014 Google Inc.
+#   Copyright (c) 2015 Lasse Collin <lasse.collin@tukaani.org>
+#
+#   Copying and distribution of this file, with or without modification,
+#   are permitted in any medium without royalty provided the copyright
+#   notice and this notice are preserved.  This file is offered as-is,
+#   without any warranty.
+
+#serial 2
+
+AC_DEFUN([AX_CHECK_CAPSICUM], [
+# On FreeBSD >= 11.x and Linux, Capsicum is uses <sys/capsicum.h>.
+# If this header is found, it is assumed to be the right one.
+capsicum_header_found=no
+AC_CHECK_HEADERS([sys/capsicum.h], [capsicum_header_found=yes])
+if test "$capsicum_header_found" = no ; then
+    # On FreeBSD 10.x Capsicum uses <sys/capability.h>. Such a header exists
+    # on Linux too but it describes POSIX.1e capabilities. Look for the
+    # declaration of cap_rights_limit to check if <sys/capability.h> is
+    # a Capsicum header.
+    AC_CHECK_DECL([cap_rights_limit], [capsicum_header_found=yes], [],
+                  [#include <sys/capability.h>])
+fi
+
+capsicum_lib_found=no
+CAPSICUM_LIB=
+if test "$capsicum_header_found" = yes ; then
+    AC_LANG_PUSH([C])
+    # FreeBSD >= 10.x has Capsicum functions in libc.
+    AC_LINK_IFELSE([AC_LANG_CALL([], [cap_rights_limit])],
+                   [capsicum_lib_found=yes], [])
+    # Linux has Capsicum functions in libcaprights.
+    AC_CHECK_LIB([caprights], [cap_rights_limit],
+                 [CAPSICUM_LIB=-lcaprights
+                  capsicum_lib_found=yes], [])
+    AC_LANG_POP([C])
+fi
+AC_SUBST([CAPSICUM_LIB])
+
+if test "$capsicum_lib_found" = yes ; then
+    AC_DEFINE([HAVE_CAPSICUM], [1], [Define to 1 if Capsicum is available.])
+    m4_default([$1], [LIBS="${CAPSICUM_LIB} $LIBS"])
+else
+    m4_default([$2], [AC_MSG_WARN([Capsicum support not found])])
+fi])
diff -uNrwB xz-5.2.2/m4/gettext.m4 xz-5.2.4/m4/gettext.m4
--- xz-5.2.2/m4/gettext.m4	2015-09-29 17:03:26.000000000 +0600
+++ xz-5.2.4/m4/gettext.m4	2018-04-29 21:18:41.000000000 +0600
@@ -1,5 +1,5 @@
-# gettext.m4 serial 63 (gettext-0.18)
-dnl Copyright (C) 1995-2010 Free Software Foundation, Inc.
+# gettext.m4 serial 66 (gettext-0.18.2)
+dnl Copyright (C) 1995-2014 Free Software Foundation, Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
 dnl with or without modifications, as long as this notice is preserved.
@@ -35,7 +35,7 @@
 dnl    'need-formatstring-macros', then GNU gettext implementations that don't
 dnl    support the ISO C 99 <inttypes.h> formatstring macros will be ignored.
 dnl INTLDIR is used to find the intl libraries.  If empty,
-dnl    the value `$(top_builddir)/intl/' is used.
+dnl    the value '$(top_builddir)/intl/' is used.
 dnl
 dnl The result of the configuration is one of three cases:
 dnl 1) GNU gettext, as included in the intl subdirectory, will be compiled
@@ -157,12 +157,18 @@
         fi
 
         AC_CACHE_CHECK([for GNU gettext in libc], [$gt_func_gnugettext_libc],
-         [AC_TRY_LINK([#include <libintl.h>
+         [AC_LINK_IFELSE(
+            [AC_LANG_PROGRAM(
+               [[
+#include <libintl.h>
 $gt_revision_test_code
 extern int _nl_msg_cat_cntr;
-extern int *_nl_domain_bindings;],
-            [bindtextdomain ("", "");
-return * gettext ("")$gt_expression_test_code + _nl_msg_cat_cntr + *_nl_domain_bindings],
+extern int *_nl_domain_bindings;
+               ]],
+               [[
+bindtextdomain ("", "");
+return * gettext ("")$gt_expression_test_code + _nl_msg_cat_cntr + *_nl_domain_bindings
+               ]])],
             [eval "$gt_func_gnugettext_libc=yes"],
             [eval "$gt_func_gnugettext_libc=no"])])
 
@@ -183,31 +189,43 @@
             gt_save_LIBS="$LIBS"
             LIBS="$LIBS $LIBINTL"
             dnl Now see whether libintl exists and does not depend on libiconv.
-            AC_TRY_LINK([#include <libintl.h>
+            AC_LINK_IFELSE(
+              [AC_LANG_PROGRAM(
+                 [[
+#include <libintl.h>
 $gt_revision_test_code
 extern int _nl_msg_cat_cntr;
 extern
 #ifdef __cplusplus
 "C"
 #endif
-const char *_nl_expand_alias (const char *);],
-              [bindtextdomain ("", "");
-return * gettext ("")$gt_expression_test_code + _nl_msg_cat_cntr + *_nl_expand_alias ("")],
+const char *_nl_expand_alias (const char *);
+                 ]],
+                 [[
+bindtextdomain ("", "");
+return * gettext ("")$gt_expression_test_code + _nl_msg_cat_cntr + *_nl_expand_alias ("")
+                 ]])],
               [eval "$gt_func_gnugettext_libintl=yes"],
               [eval "$gt_func_gnugettext_libintl=no"])
             dnl Now see whether libintl exists and depends on libiconv.
             if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" != yes; } && test -n "$LIBICONV"; then
               LIBS="$LIBS $LIBICONV"
-              AC_TRY_LINK([#include <libintl.h>
+              AC_LINK_IFELSE(
+                [AC_LANG_PROGRAM(
+                   [[
+#include <libintl.h>
 $gt_revision_test_code
 extern int _nl_msg_cat_cntr;
 extern
 #ifdef __cplusplus
 "C"
 #endif
-const char *_nl_expand_alias (const char *);],
-                [bindtextdomain ("", "");
-return * gettext ("")$gt_expression_test_code + _nl_msg_cat_cntr + *_nl_expand_alias ("")],
+const char *_nl_expand_alias (const char *);
+                   ]],
+                   [[
+bindtextdomain ("", "");
+return * gettext ("")$gt_expression_test_code + _nl_msg_cat_cntr + *_nl_expand_alias ("")
+                   ]])],
                [LIBINTL="$LIBINTL $LIBICONV"
                 LTLIBINTL="$LTLIBINTL $LTLIBICONV"
                 eval "$gt_func_gnugettext_libintl=yes"
diff -uNrwB xz-5.2.2/m4/iconv.m4 xz-5.2.4/m4/iconv.m4
--- xz-5.2.2/m4/iconv.m4	2015-09-29 17:03:26.000000000 +0600
+++ xz-5.2.4/m4/iconv.m4	2018-04-29 21:18:41.000000000 +0600
@@ -1,5 +1,5 @@
-# iconv.m4 serial 9 (gettext-0.18)
-dnl Copyright (C) 2000-2002, 2007-2010 Free Software Foundation, Inc.
+# iconv.m4 serial 18 (gettext-0.18.2)
+dnl Copyright (C) 2000-2002, 2007-2014 Free Software Foundation, Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
 dnl with or without modifications, as long as this notice is preserved.
@@ -30,27 +30,35 @@
   dnl Add $INCICONV to CPPFLAGS before performing the following checks,
   dnl because if the user has installed libiconv and not disabled its use
   dnl via --without-libiconv-prefix, he wants to use it. The first
-  dnl AC_TRY_LINK will then fail, the second AC_TRY_LINK will succeed.
+  dnl AC_LINK_IFELSE will then fail, the second AC_LINK_IFELSE will succeed.
   am_save_CPPFLAGS="$CPPFLAGS"
   AC_LIB_APPENDTOVAR([CPPFLAGS], [$INCICONV])
 
   AC_CACHE_CHECK([for iconv], [am_cv_func_iconv], [
     am_cv_func_iconv="no, consider installing GNU libiconv"
     am_cv_lib_iconv=no
-    AC_TRY_LINK([#include <stdlib.h>
-#include <iconv.h>],
-      [iconv_t cd = iconv_open("","");
+    AC_LINK_IFELSE(
+      [AC_LANG_PROGRAM(
+         [[
+#include <stdlib.h>
+#include <iconv.h>
+         ]],
+         [[iconv_t cd = iconv_open("","");
        iconv(cd,NULL,NULL,NULL,NULL);
-       iconv_close(cd);],
+           iconv_close(cd);]])],
       [am_cv_func_iconv=yes])
     if test "$am_cv_func_iconv" != yes; then
       am_save_LIBS="$LIBS"
       LIBS="$LIBS $LIBICONV"
-      AC_TRY_LINK([#include <stdlib.h>
-#include <iconv.h>],
-        [iconv_t cd = iconv_open("","");
+      AC_LINK_IFELSE(
+        [AC_LANG_PROGRAM(
+           [[
+#include <stdlib.h>
+#include <iconv.h>
+           ]],
+           [[iconv_t cd = iconv_open("","");
          iconv(cd,NULL,NULL,NULL,NULL);
-         iconv_close(cd);],
+             iconv_close(cd);]])],
         [am_cv_lib_iconv=yes]
         [am_cv_func_iconv=yes])
       LIBS="$am_save_LIBS"
@@ -58,16 +66,19 @@
   ])
   if test "$am_cv_func_iconv" = yes; then
     AC_CACHE_CHECK([for working iconv], [am_cv_func_iconv_works], [
-      dnl This tests against bugs in AIX 5.1, HP-UX 11.11, Solaris 10.
+      dnl This tests against bugs in AIX 5.1, AIX 6.1..7.1, HP-UX 11.11,
+      dnl Solaris 10.
       am_save_LIBS="$LIBS"
       if test $am_cv_lib_iconv = yes; then
         LIBS="$LIBS $LIBICONV"
       fi
-      AC_TRY_RUN([
+      AC_RUN_IFELSE(
+        [AC_LANG_SOURCE([[
 #include <iconv.h>
 #include <string.h>
 int main ()
 {
+  int result = 0;
   /* Test against AIX 5.1 bug: Failures are not distinguishable from successful
      returns.  */
   {
@@ -84,7 +95,8 @@
                             (char **) &inptr, &inbytesleft,
                             &outptr, &outbytesleft);
         if (res == 0)
-          return 1;
+          result |= 1;
+        iconv_close (cd_utf8_to_88591);
       }
   }
   /* Test against Solaris 10 bug: Failures are not distinguishable from
@@ -103,7 +115,27 @@
                             (char **) &inptr, &inbytesleft,
                             &outptr, &outbytesleft);
         if (res == 0)
-          return 1;
+          result |= 2;
+        iconv_close (cd_ascii_to_88591);
+      }
+  }
+  /* Test against AIX 6.1..7.1 bug: Buffer overrun.  */
+  {
+    iconv_t cd_88591_to_utf8 = iconv_open ("UTF-8", "ISO-8859-1");
+    if (cd_88591_to_utf8 != (iconv_t)(-1))
+      {
+        static const char input[] = "\304";
+        static char buf[2] = { (char)0xDE, (char)0xAD };
+        const char *inptr = input;
+        size_t inbytesleft = 1;
+        char *outptr = buf;
+        size_t outbytesleft = 1;
+        size_t res = iconv (cd_88591_to_utf8,
+                            (char **) &inptr, &inbytesleft,
+                            &outptr, &outbytesleft);
+        if (res != (size_t)(-1) || outptr - buf > 1 || buf[1] != (char)0xAD)
+          result |= 4;
+        iconv_close (cd_88591_to_utf8);
       }
   }
 #if 0 /* This bug could be worked around by the caller.  */
@@ -122,7 +154,8 @@
                             (char **) &inptr, &inbytesleft,
                             &outptr, &outbytesleft);
         if ((int)res > 0)
-          return 1;
+          result |= 8;
+        iconv_close (cd_88591_to_utf8);
       }
   }
 #endif
@@ -136,13 +169,19 @@
       && iconv_open ("UTF-8", "IBM-eucJP") == (iconv_t)(-1)
       /* Try HP-UX names.  */
       && iconv_open ("utf8", "eucJP") == (iconv_t)(-1))
-    return 1;
-  return 0;
-}], [am_cv_func_iconv_works=yes], [am_cv_func_iconv_works=no],
-        [case "$host_os" in
+    result |= 16;
+  return result;
+}]])],
+        [am_cv_func_iconv_works=yes],
+        [am_cv_func_iconv_works=no],
+        [
+changequote(,)dnl
+         case "$host_os" in
            aix* | hpux*) am_cv_func_iconv_works="guessing no" ;;
            *)            am_cv_func_iconv_works="guessing yes" ;;
-         esac])
+         esac
+changequote([,])dnl
+        ])
       LIBS="$am_save_LIBS"
     ])
     case "$am_cv_func_iconv_works" in
@@ -170,30 +209,60 @@
   AC_SUBST([LTLIBICONV])
 ])
 
-AC_DEFUN([AM_ICONV],
+dnl Define AM_ICONV using AC_DEFUN_ONCE for Autoconf >= 2.64, in order to
+dnl avoid warnings like
+dnl "warning: AC_REQUIRE: `AM_ICONV' was expanded before it was required".
+dnl This is tricky because of the way 'aclocal' is implemented:
+dnl - It requires defining an auxiliary macro whose name ends in AC_DEFUN.
+dnl   Otherwise aclocal's initial scan pass would miss the macro definition.
+dnl - It requires a line break inside the AC_DEFUN_ONCE and AC_DEFUN expansions.
+dnl   Otherwise aclocal would emit many "Use of uninitialized value $1"
+dnl   warnings.
+m4_define([gl_iconv_AC_DEFUN],
+  m4_version_prereq([2.64],
+    [[AC_DEFUN_ONCE(
+        [$1], [$2])]],
+    [m4_ifdef([gl_00GNULIB],
+       [[AC_DEFUN_ONCE(
+           [$1], [$2])]],
+       [[AC_DEFUN(
+           [$1], [$2])]])]))
+gl_iconv_AC_DEFUN([AM_ICONV],
 [
   AM_ICONV_LINK
   if test "$am_cv_func_iconv" = yes; then
     AC_MSG_CHECKING([for iconv declaration])
     AC_CACHE_VAL([am_cv_proto_iconv], [
-      AC_TRY_COMPILE([
+      AC_COMPILE_IFELSE(
+        [AC_LANG_PROGRAM(
+           [[
 #include <stdlib.h>
 #include <iconv.h>
 extern
 #ifdef __cplusplus
 "C"
 #endif
-#if defined(__STDC__) || defined(__cplusplus)
+#if defined(__STDC__) || defined(_MSC_VER) || defined(__cplusplus)
 size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
 #else
 size_t iconv();
 #endif
-], [], [am_cv_proto_iconv_arg1=""], [am_cv_proto_iconv_arg1="const"])
+           ]],
+           [[]])],
+        [am_cv_proto_iconv_arg1=""],
+        [am_cv_proto_iconv_arg1="const"])
       am_cv_proto_iconv="extern size_t iconv (iconv_t cd, $am_cv_proto_iconv_arg1 char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);"])
     am_cv_proto_iconv=`echo "[$]am_cv_proto_iconv" | tr -s ' ' | sed -e 's/( /(/'`
     AC_MSG_RESULT([
          $am_cv_proto_iconv])
     AC_DEFINE_UNQUOTED([ICONV_CONST], [$am_cv_proto_iconv_arg1],
       [Define as const if the declaration of iconv() needs const.])
+    dnl Also substitute ICONV_CONST in the gnulib generated <iconv.h>.
+    m4_ifdef([gl_ICONV_H_DEFAULTS],
+      [AC_REQUIRE([gl_ICONV_H_DEFAULTS])
+       if test -n "$am_cv_proto_iconv_arg1"; then
+         ICONV_CONST="const"
+       fi
+      ])
   fi
 ])
diff -uNrwB xz-5.2.2/m4/intlmacosx.m4 xz-5.2.4/m4/intlmacosx.m4
--- xz-5.2.2/m4/intlmacosx.m4	2015-09-29 17:03:26.000000000 +0600
+++ xz-5.2.4/m4/intlmacosx.m4	2018-04-29 21:18:41.000000000 +0600
@@ -1,5 +1,5 @@
-# intlmacosx.m4 serial 3 (gettext-0.18)
-dnl Copyright (C) 2004-2010 Free Software Foundation, Inc.
+# intlmacosx.m4 serial 5 (gettext-0.18.2)
+dnl Copyright (C) 2004-2014 Free Software Foundation, Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
 dnl with or without modifications, as long as this notice is preserved.
@@ -22,8 +22,10 @@
     [gt_cv_func_CFPreferencesCopyAppValue],
     [gt_save_LIBS="$LIBS"
      LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
-     AC_TRY_LINK([#include <CoreFoundation/CFPreferences.h>],
-       [CFPreferencesCopyAppValue(NULL, NULL)],
+     AC_LINK_IFELSE(
+       [AC_LANG_PROGRAM(
+          [[#include <CoreFoundation/CFPreferences.h>]],
+          [[CFPreferencesCopyAppValue(NULL, NULL)]])],
        [gt_cv_func_CFPreferencesCopyAppValue=yes],
        [gt_cv_func_CFPreferencesCopyAppValue=no])
      LIBS="$gt_save_LIBS"])
@@ -35,7 +37,10 @@
   AC_CACHE_CHECK([for CFLocaleCopyCurrent], [gt_cv_func_CFLocaleCopyCurrent],
     [gt_save_LIBS="$LIBS"
      LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
-     AC_TRY_LINK([#include <CoreFoundation/CFLocale.h>], [CFLocaleCopyCurrent();],
+     AC_LINK_IFELSE(
+       [AC_LANG_PROGRAM(
+          [[#include <CoreFoundation/CFLocale.h>]],
+          [[CFLocaleCopyCurrent();]])],
        [gt_cv_func_CFLocaleCopyCurrent=yes],
        [gt_cv_func_CFLocaleCopyCurrent=no])
      LIBS="$gt_save_LIBS"])
diff -uNrwB xz-5.2.2/m4/lib-ld.m4 xz-5.2.4/m4/lib-ld.m4
--- xz-5.2.2/m4/lib-ld.m4	2015-09-29 17:03:26.000000000 +0600
+++ xz-5.2.4/m4/lib-ld.m4	2018-04-29 21:18:42.000000000 +0600
@@ -1,50 +1,56 @@
-# lib-ld.m4 serial 4 (gettext-0.18)
-dnl Copyright (C) 1996-2003, 2009-2010 Free Software Foundation, Inc.
+# lib-ld.m4 serial 6
+dnl Copyright (C) 1996-2003, 2009-2014 Free Software Foundation, Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
 dnl with or without modifications, as long as this notice is preserved.
 
 dnl Subroutines of libtool.m4,
-dnl with replacements s/AC_/AC_LIB/ and s/lt_cv/acl_cv/ to avoid collision
-dnl with libtool.m4.
+dnl with replacements s/_*LT_PATH/AC_LIB_PROG/ and s/lt_/acl_/ to avoid
+dnl collision with libtool.m4.
 
-dnl From libtool-1.4. Sets the variable with_gnu_ld to yes or no.
+dnl From libtool-2.4. Sets the variable with_gnu_ld to yes or no.
 AC_DEFUN([AC_LIB_PROG_LD_GNU],
 [AC_CACHE_CHECK([if the linker ($LD) is GNU ld], [acl_cv_prog_gnu_ld],
-[# I'd rather use --version here, but apparently some GNU ld's only accept -v.
+[# I'd rather use --version here, but apparently some GNU lds only accept -v.
 case `$LD -v 2>&1 </dev/null` in
 *GNU* | *'with BFD'*)
-  acl_cv_prog_gnu_ld=yes ;;
+  acl_cv_prog_gnu_ld=yes
+  ;;
 *)
-  acl_cv_prog_gnu_ld=no ;;
+  acl_cv_prog_gnu_ld=no
+  ;;
 esac])
 with_gnu_ld=$acl_cv_prog_gnu_ld
 ])
 
-dnl From libtool-1.4. Sets the variable LD.
+dnl From libtool-2.4. Sets the variable LD.
 AC_DEFUN([AC_LIB_PROG_LD],
-[AC_ARG_WITH([gnu-ld],
-[  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]],
-test "$withval" = no || with_gnu_ld=yes, with_gnu_ld=no)
-AC_REQUIRE([AC_PROG_CC])dnl
+[AC_REQUIRE([AC_PROG_CC])dnl
 AC_REQUIRE([AC_CANONICAL_HOST])dnl
+
+AC_ARG_WITH([gnu-ld],
+    [AS_HELP_STRING([--with-gnu-ld],
+        [assume the C compiler uses GNU ld [default=no]])],
+    [test "$withval" = no || with_gnu_ld=yes],
+    [with_gnu_ld=no])dnl
+
 # Prepare PATH_SEPARATOR.
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
-  echo  "exit 0"   >>conf$$.sh
-  chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
-    PATH_SEPARATOR=';'
-  else
+  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
+  # contains only /bin. Note that ksh looks also at the FPATH variable,
+  # so we have to set that as well for the test.
     PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+           || PATH_SEPARATOR=';'
+       }
   fi
-  rm -f conf$$.sh
-fi
+
 ac_prog=ld
 if test "$GCC" = yes; then
   # Check if gcc -print-prog-name=ld gives a path.
-  AC_MSG_CHECKING([for ld used by GCC])
+  AC_MSG_CHECKING([for ld used by $CC])
   case $host in
   *-*-mingw*)
     # gcc leaves a trailing carriage return which upsets mingw
@@ -54,11 +60,11 @@
   esac
   case $ac_prog in
     # Accept absolute paths.
-    [[\\/]* | [A-Za-z]:[\\/]*)]
-      [re_direlt='/[^/][^/]*/\.\./']
-      # Canonicalize the path of ld
-      ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
-      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+    [[\\/]]* | ?:[[\\/]]*)
+      re_direlt='/[[^/]][[^/]]*/\.\./'
+      # Canonicalize the pathname of ld
+      ac_prog=`echo "$ac_prog"| sed 's%\\\\%/%g'`
+      while echo "$ac_prog" | grep "$re_direlt" > /dev/null 2>&1; do
         ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
       done
       test -z "$LD" && LD="$ac_prog"
@@ -79,23 +85,26 @@
 fi
 AC_CACHE_VAL([acl_cv_path_LD],
 [if test -z "$LD"; then
-  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS="${IFS}${PATH_SEPARATOR-:}"
+  acl_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
   for ac_dir in $PATH; do
+    IFS="$acl_save_ifs"
     test -z "$ac_dir" && ac_dir=.
     if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
       acl_cv_path_LD="$ac_dir/$ac_prog"
       # Check to see if the program is GNU ld.  I'd rather use --version,
-      # but apparently some GNU ld's only accept -v.
+      # but apparently some variants of GNU ld only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
       case `"$acl_cv_path_LD" -v 2>&1 < /dev/null` in
       *GNU* | *'with BFD'*)
-        test "$with_gnu_ld" != no && break ;;
+        test "$with_gnu_ld" != no && break
+        ;;
       *)
-        test "$with_gnu_ld" != yes && break ;;
+        test "$with_gnu_ld" != yes && break
+        ;;
       esac
     fi
   done
-  IFS="$ac_save_ifs"
+  IFS="$acl_save_ifs"
 else
   acl_cv_path_LD="$LD" # Let the user override the test with a path.
 fi])
diff -uNrwB xz-5.2.2/m4/lib-link.m4 xz-5.2.4/m4/lib-link.m4
--- xz-5.2.2/m4/lib-link.m4	2015-09-29 17:03:26.000000000 +0600
+++ xz-5.2.4/m4/lib-link.m4	2018-04-29 21:18:42.000000000 +0600
@@ -1,5 +1,5 @@
-# lib-link.m4 serial 21 (gettext-0.18)
-dnl Copyright (C) 2001-2010 Free Software Foundation, Inc.
+# lib-link.m4 serial 26 (gettext-0.18.2)
+dnl Copyright (C) 2001-2014 Free Software Foundation, Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
 dnl with or without modifications, as long as this notice is preserved.
@@ -18,9 +18,9 @@
 [
   AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
   AC_REQUIRE([AC_LIB_RPATH])
-  pushdef([Name],[translit([$1],[./-], [___])])
-  pushdef([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],
-                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])
+  pushdef([Name],[m4_translit([$1],[./+-], [____])])
+  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
+                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
   AC_CACHE_CHECK([how to link with lib[]$1], [ac_cv_lib[]Name[]_libs], [
     AC_LIB_LINKFLAGS_BODY([$1], [$2])
     ac_cv_lib[]Name[]_libs="$LIB[]NAME"
@@ -58,9 +58,9 @@
 [
   AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
   AC_REQUIRE([AC_LIB_RPATH])
-  pushdef([Name],[translit([$1],[./-], [___])])
-  pushdef([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],
-                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])
+  pushdef([Name],[m4_translit([$1],[./+-], [____])])
+  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
+                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
 
   dnl Search for lib[]Name and define LIB[]NAME, LTLIB[]NAME and INC[]NAME
   dnl accordingly.
@@ -85,7 +85,8 @@
       *" -l"*) LIBS="$LIBS $LIB[]NAME" ;;
       *)       LIBS="$LIB[]NAME $LIBS" ;;
     esac
-    AC_TRY_LINK([$3], [$4],
+    AC_LINK_IFELSE(
+      [AC_LANG_PROGRAM([[$3]], [[$4]])],
       [ac_cv_lib[]Name=yes],
       [ac_cv_lib[]Name='m4_if([$5], [], [no], [[$5]])'])
     LIBS="$ac_save_LIBS"
@@ -115,6 +116,8 @@
 dnl Determine the platform dependent parameters needed to use rpath:
 dnl   acl_libext,
 dnl   acl_shlibext,
+dnl   acl_libname_spec,
+dnl   acl_library_names_spec,
 dnl   acl_hardcode_libdir_flag_spec,
 dnl   acl_hardcode_libdir_separator,
 dnl   acl_hardcode_direct,
@@ -157,15 +160,15 @@
 dnl macro call that searches for libname.
 AC_DEFUN([AC_LIB_FROMPACKAGE],
 [
-  pushdef([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],
-                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])
+  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
+                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
   define([acl_frompackage_]NAME, [$2])
   popdef([NAME])
   pushdef([PACK],[$2])
-  pushdef([PACKUP],[translit(PACK,[abcdefghijklmnopqrstuvwxyz./-],
-                                  [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])
+  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],
+                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
   define([acl_libsinpackage_]PACKUP,
-    m4_ifdef([acl_libsinpackage_]PACKUP, [acl_libsinpackage_]PACKUP[[, ]],)[lib$1])
+    m4_ifdef([acl_libsinpackage_]PACKUP, [m4_defn([acl_libsinpackage_]PACKUP)[, ]],)[lib$1])
   popdef([PACKUP])
   popdef([PACK])
 ])
@@ -178,14 +181,14 @@
 AC_DEFUN([AC_LIB_LINKFLAGS_BODY],
 [
   AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])
-  pushdef([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],
-                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])
+  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
+                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
   pushdef([PACK],[m4_ifdef([acl_frompackage_]NAME, [acl_frompackage_]NAME, lib[$1])])
-  pushdef([PACKUP],[translit(PACK,[abcdefghijklmnopqrstuvwxyz./-],
-                                  [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])
+  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],
+                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
   pushdef([PACKLIBS],[m4_ifdef([acl_frompackage_]NAME, [acl_libsinpackage_]PACKUP, lib[$1])])
   dnl Autoconf >= 2.61 supports dots in --with options.
-  pushdef([P_A_C_K],[m4_if(m4_version_compare(m4_defn([m4_PACKAGE_VERSION]),[2.61]),[-1],[translit(PACK,[.],[_])],PACK)])
+  pushdef([P_A_C_K],[m4_if(m4_version_compare(m4_defn([m4_PACKAGE_VERSION]),[2.61]),[-1],[m4_translit(PACK,[.],[_])],PACK)])
   dnl By default, look in $includedir and $libdir.
   use_additional=yes
   AC_LIB_WITH_FINAL_PREFIX([
@@ -242,7 +245,7 @@
         names_already_handled="$names_already_handled $name"
         dnl See if it was already located by an earlier AC_LIB_LINKFLAGS
         dnl or AC_LIB_HAVE_LINKFLAGS call.
-        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./-|ABCDEFGHIJKLMNOPQRSTUVWXYZ___|'`
+        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`
         eval value=\"\$HAVE_LIB$uppername\"
         if test -n "$value"; then
           if test "$value" = yes; then
diff -uNrwB xz-5.2.2/m4/lib-prefix.m4 xz-5.2.4/m4/lib-prefix.m4
--- xz-5.2.2/m4/lib-prefix.m4	2015-09-29 17:03:26.000000000 +0600
+++ xz-5.2.4/m4/lib-prefix.m4	2018-04-29 21:18:42.000000000 +0600
@@ -1,5 +1,5 @@
 # lib-prefix.m4 serial 7 (gettext-0.18)
-dnl Copyright (C) 2001-2005, 2008-2010 Free Software Foundation, Inc.
+dnl Copyright (C) 2001-2005, 2008-2014 Free Software Foundation, Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
 dnl with or without modifications, as long as this notice is preserved.
diff -uNrwB xz-5.2.2/m4/libtool.m4 xz-5.2.4/m4/libtool.m4
--- xz-5.2.2/m4/libtool.m4	2015-09-29 17:03:33.000000000 +0600
+++ xz-5.2.4/m4/libtool.m4	2018-04-29 22:01:19.000000000 +0600
@@ -1,6 +1,6 @@
 # libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-
 #
-#   Copyright (C) 1996-2001, 2003-2015 Free Software Foundation, Inc.
+#   Copyright (C) 1996-2001, 2003-2017 Free Software Foundation, Inc.
 #   Written by Gordon Matzigkeit, 1996
 #
 # This file is free software; the Free Software Foundation gives
@@ -1042,8 +1042,8 @@
 _LT_EOF
       echo "$LTCC $LTCFLAGS -c -o conftest.o conftest.c" >&AS_MESSAGE_LOG_FD
       $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD
-      echo "$AR cru libconftest.a conftest.o" >&AS_MESSAGE_LOG_FD
-      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD
+      echo "$AR $AR_FLAGS libconftest.a conftest.o" >&AS_MESSAGE_LOG_FD
+      $AR $AR_FLAGS libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD
       echo "$RANLIB libconftest.a" >&AS_MESSAGE_LOG_FD
       $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD
       cat > conftest.c << _LT_EOF
@@ -1493,9 +1493,22 @@
 m4_defun([_LT_PROG_AR],
 [AC_CHECK_TOOLS(AR, [ar], false)
 : ${AR=ar}
-: ${AR_FLAGS=cru}
 _LT_DECL([], [AR], [1], [The archiver])
-_LT_DECL([], [AR_FLAGS], [1], [Flags to create an archive])
+
+# Use ARFLAGS variable as AR's operation code to sync the variable naming with
+# Automake.  If both AR_FLAGS and ARFLAGS are specified, AR_FLAGS should have
+# higher priority because thats what people were doing historically (setting
+# ARFLAGS for automake and AR_FLAGS for libtool).  FIXME: Make the AR_FLAGS
+# variable obsoleted/removed.
+
+test ${AR_FLAGS+y} || AR_FLAGS=${ARFLAGS-cr}
+lt_ar_flags=$AR_FLAGS
+_LT_DECL([], [lt_ar_flags], [0], [Flags to create an archive (by configure)])
+
+# Make AR_FLAGS overridable by 'make ARFLAGS='.  Don't try to run-time override
+# by AR_FLAGS because that was never working and AR_FLAGS is about to die.
+_LT_DECL([], [AR_FLAGS], [\@S|@{ARFLAGS-"\@S|@lt_ar_flags"}],
+         [Flags to create an archive])
 
 AC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],
   [lt_cv_ar_at_file=no
@@ -2207,18 +2220,26 @@
 striplib=
 old_striplib=
 AC_MSG_CHECKING([whether stripping libraries is possible])
-if test -n "$STRIP" && $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
-  test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
-  test -z "$striplib" && striplib="$STRIP --strip-unneeded"
+if test -z "$STRIP"; then
+  AC_MSG_RESULT([no])
+else
+  if $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
+    old_striplib="$STRIP --strip-debug"
+    striplib="$STRIP --strip-unneeded"
   AC_MSG_RESULT([yes])
 else
-# FIXME - insert some real tests, host_os isn't really good enough
   case $host_os in
   darwin*)
-    if test -n "$STRIP"; then
+      # FIXME - insert some real tests, host_os isn't really good enough
       striplib="$STRIP -x"
       old_striplib="$STRIP -S"
       AC_MSG_RESULT([yes])
+      ;;
+    freebsd*)
+      if $STRIP -V 2>&1 | $GREP "elftoolchain" >/dev/null; then
+        old_striplib="$STRIP --strip-debug"
+        striplib="$STRIP --strip-unneeded"
+        AC_MSG_RESULT([yes])
     else
       AC_MSG_RESULT([no])
     fi
@@ -2228,6 +2249,7 @@
     ;;
   esac
 fi
+fi
 _LT_DECL([], [old_striplib], [1], [Commands to strip libraries])
 _LT_DECL([], [striplib], [1])
 ])# _LT_CMD_STRIPLIB
@@ -4919,7 +4941,7 @@
     if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
       _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W")) && ([substr](\$ 3,1,1) != ".")) { if (\$ 2 == "W") { print \$ 3 " weak" } else { print \$ 3 } } }'\'' | sort -u > $export_symbols'
     else
-      _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\''s/B\([[^B]]*\)$/P\1/'\''` -PCpgl $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) && ([substr](\$ 1,1,1) != ".")) { if ((\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) { print \$ 1 " weak" } else { print \$ 1 } } }'\'' | sort -u > $export_symbols'
+      _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\''s/B\([[^B]]*\)$/P\1/'\''` -PCpgl $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "L") || (\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) && ([substr](\$ 1,1,1) != ".")) { if ((\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) { print \$ 1 " weak" } else { print \$ 1 } } }'\'' | sort -u > $export_symbols'
     fi
     ;;
   pw32*)
@@ -5156,6 +5178,7 @@
 	emximp -o $lib $output_objdir/$libname.def'
       _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
       _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+      _LT_TAGVAR(file_list_spec, $1)='@'
       ;;
 
     interix[[3-9]]*)
@@ -5373,7 +5396,7 @@
 	if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
 	  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W")) && ([substr](\$ 3,1,1) != ".")) { if (\$ 2 == "W") { print \$ 3 " weak" } else { print \$ 3 } } }'\'' | sort -u > $export_symbols'
 	else
-	  _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\''s/B\([[^B]]*\)$/P\1/'\''` -PCpgl $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) && ([substr](\$ 1,1,1) != ".")) { if ((\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) { print \$ 1 " weak" } else { print \$ 1 } } }'\'' | sort -u > $export_symbols'
+	  _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\''s/B\([[^B]]*\)$/P\1/'\''` -PCpgl $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "L") || (\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) && ([substr](\$ 1,1,1) != ".")) { if ((\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) { print \$ 1 " weak" } else { print \$ 1 } } }'\'' | sort -u > $export_symbols'
 	fi
 	aix_use_runtimelinking=no
 
@@ -5861,6 +5884,7 @@
 	emximp -o $lib $output_objdir/$libname.def'
       _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
       _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+      _LT_TAGVAR(file_list_spec, $1)='@'
       ;;
 
     osf3*)
@@ -6730,6 +6754,7 @@
 	  emximp -o $lib $output_objdir/$libname.def'
 	_LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
 	_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+	_LT_TAGVAR(file_list_spec, $1)='@'
 	;;
 
       dgux*)
diff -uNrwB xz-5.2.2/m4/lt~obsolete.m4 xz-5.2.4/m4/lt~obsolete.m4
--- xz-5.2.2/m4/lt~obsolete.m4	2015-09-29 17:03:34.000000000 +0600
+++ xz-5.2.4/m4/lt~obsolete.m4	2018-04-29 22:01:19.000000000 +0600
@@ -1,6 +1,6 @@
 # lt~obsolete.m4 -- aclocal satisfying obsolete definitions.    -*-Autoconf-*-
 #
-#   Copyright (C) 2004-2005, 2007, 2009, 2011-2015 Free Software
+#   Copyright (C) 2004-2005, 2007, 2009, 2011-2017 Free Software
 #   Foundation, Inc.
 #   Written by Scott James Remnant, 2004.
 #
diff -uNrwB xz-5.2.2/m4/ltoptions.m4 xz-5.2.4/m4/ltoptions.m4
--- xz-5.2.2/m4/ltoptions.m4	2015-09-29 17:03:33.000000000 +0600
+++ xz-5.2.4/m4/ltoptions.m4	2018-04-29 22:01:19.000000000 +0600
@@ -1,6 +1,6 @@
 # Helper functions for option handling.                    -*- Autoconf -*-
 #
-#   Copyright (C) 2004-2005, 2007-2009, 2011-2015 Free Software
+#   Copyright (C) 2004-2005, 2007-2009, 2011-2017 Free Software
 #   Foundation, Inc.
 #   Written by Gary V. Vaughan, 2004
 #
diff -uNrwB xz-5.2.2/m4/ltsugar.m4 xz-5.2.4/m4/ltsugar.m4
--- xz-5.2.2/m4/ltsugar.m4	2015-09-29 17:03:33.000000000 +0600
+++ xz-5.2.4/m4/ltsugar.m4	2018-04-29 22:01:19.000000000 +0600
@@ -1,6 +1,6 @@
 # ltsugar.m4 -- libtool m4 base layer.                         -*-Autoconf-*-
 #
-# Copyright (C) 2004-2005, 2007-2008, 2011-2015 Free Software
+# Copyright (C) 2004-2005, 2007-2008, 2011-2017 Free Software
 # Foundation, Inc.
 # Written by Gary V. Vaughan, 2004
 #
diff -uNrwB xz-5.2.2/m4/ltversion.m4 xz-5.2.4/m4/ltversion.m4
--- xz-5.2.2/m4/ltversion.m4	2015-09-29 17:03:33.000000000 +0600
+++ xz-5.2.4/m4/ltversion.m4	2018-04-29 22:01:19.000000000 +0600
@@ -1,6 +1,6 @@
 # ltversion.m4 -- version numbers			-*- Autoconf -*-
 #
-#   Copyright (C) 2004, 2011-2015 Free Software Foundation, Inc.
+#   Copyright (C) 2004, 2011-2017 Free Software Foundation, Inc.
 #   Written by Scott James Remnant, 2004
 #
 # This file is free software; the Free Software Foundation gives
@@ -9,15 +9,15 @@
 
 # @configure_input@
 
-# serial 4179 ltversion.m4
+# serial 4219 ltversion.m4
 # This file is part of GNU Libtool
 
-m4_define([LT_PACKAGE_VERSION], [2.4.6])
-m4_define([LT_PACKAGE_REVISION], [2.4.6])
+m4_define([LT_PACKAGE_VERSION], [2.4.6.40-6ca5-dirty])
+m4_define([LT_PACKAGE_REVISION], [2.4.6.40])
 
 AC_DEFUN([LTVERSION_VERSION],
-[macro_version='2.4.6'
-macro_revision='2.4.6'
+[macro_version='2.4.6.40-6ca5-dirty'
+macro_revision='2.4.6.40'
 _LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
 _LT_DECL(, macro_revision, 0)
 ])
diff -uNrwB xz-5.2.2/m4/nls.m4 xz-5.2.4/m4/nls.m4
--- xz-5.2.2/m4/nls.m4	2015-09-29 17:03:26.000000000 +0600
+++ xz-5.2.4/m4/nls.m4	2018-04-29 21:18:42.000000000 +0600
@@ -1,5 +1,5 @@
 # nls.m4 serial 5 (gettext-0.18)
-dnl Copyright (C) 1995-2003, 2005-2006, 2008-2010 Free Software Foundation,
+dnl Copyright (C) 1995-2003, 2005-2006, 2008-2014 Free Software Foundation,
 dnl Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
diff -uNrwB xz-5.2.2/m4/po.m4 xz-5.2.4/m4/po.m4
--- xz-5.2.2/m4/po.m4	2015-09-29 17:03:26.000000000 +0600
+++ xz-5.2.4/m4/po.m4	2018-04-29 21:18:42.000000000 +0600
@@ -1,5 +1,5 @@
-# po.m4 serial 17 (gettext-0.18)
-dnl Copyright (C) 1995-2010 Free Software Foundation, Inc.
+# po.m4 serial 22 (gettext-0.19)
+dnl Copyright (C) 1995-2014 Free Software Foundation, Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
 dnl with or without modifications, as long as this notice is preserved.
@@ -17,19 +17,20 @@
 dnl   Ulrich Drepper <drepper@cygnus.com>, 1995-2000.
 dnl   Bruno Haible <haible@clisp.cons.org>, 2000-2003.
 
-AC_PREREQ([2.50])
+AC_PREREQ([2.60])
 
 dnl Checks for all prerequisites of the po subdirectory.
 AC_DEFUN([AM_PO_SUBDIRS],
 [
   AC_REQUIRE([AC_PROG_MAKE_SET])dnl
   AC_REQUIRE([AC_PROG_INSTALL])dnl
-  AC_REQUIRE([AM_PROG_MKDIR_P])dnl defined by automake
+  AC_REQUIRE([AC_PROG_MKDIR_P])dnl
+  AC_REQUIRE([AC_PROG_SED])dnl
   AC_REQUIRE([AM_NLS])dnl
 
   dnl Release version of the gettext macros. This is used to ensure that
   dnl the gettext macros and po/Makefile.in.in are in sync.
-  AC_SUBST([GETTEXT_MACRO_VERSION], [0.18])
+  AC_SUBST([GETTEXT_MACRO_VERSION], [0.19])
 
   dnl Perform the following tests also if --disable-nls has been given,
   dnl because they are needed for "make dist" to work.
@@ -102,7 +103,7 @@
       case "$ac_file" in */Makefile.in)
         # Adjust a relative srcdir.
         ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
-        ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
+        ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
         ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
         # In autoconf-2.13 it is called $ac_given_srcdir.
         # In autoconf-2.50 it is called $srcdir.
@@ -118,7 +119,8 @@
         if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
           rm -f "$ac_dir/POTFILES"
           test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
-          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ 	]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
+          gt_tab=`printf '\t'`
+          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ ${gt_tab}]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
           POMAKEFILEDEPS="POTFILES.in"
           # ALL_LINGUAS, POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES depend
           # on $ac_dir but don't depend on user-specified configuration
@@ -129,12 +131,12 @@
               test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
             fi
             ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
-            # Hide the ALL_LINGUAS assigment from automake < 1.5.
+            # Hide the ALL_LINGUAS assignment from automake < 1.5.
             eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
             POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
           else
             # The set of available languages was given in configure.in.
-            # Hide the ALL_LINGUAS assigment from automake < 1.5.
+            # Hide the ALL_LINGUAS assignment from automake < 1.5.
             eval 'ALL_LINGUAS''=$OBSOLETE_ALL_LINGUAS'
           fi
           # Compute POFILES
@@ -226,7 +228,7 @@
 changequote(,)dnl
   # Adjust a relative srcdir.
   ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
-  ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
+  ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
   ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
   # In autoconf-2.13 it is called $ac_given_srcdir.
   # In autoconf-2.50 it is called $srcdir.
@@ -254,6 +256,7 @@
   fi
 
   # A sed script that extracts the value of VARIABLE from a Makefile.
+  tab=`printf '\t'`
   sed_x_variable='
 # Test if the hold space is empty.
 x
@@ -261,9 +264,9 @@
 x
 ta
 # Yes it was empty. Look if we have the expected variable definition.
-/^[	 ]*VARIABLE[	 ]*=/{
+/^['"${tab}"' ]*VARIABLE['"${tab}"' ]*=/{
   # Seen the first line of the variable definition.
-  s/^[	 ]*VARIABLE[	 ]*=//
+  s/^['"${tab}"' ]*VARIABLE['"${tab}"' ]*=//
   ba
 }
 bd
@@ -315,7 +318,7 @@
     sed_x_LINGUAS=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/LINGUAS/g'`
     ALL_LINGUAS_=`sed -n -e "$sed_x_LINGUAS" < "$ac_file"`
   fi
-  # Hide the ALL_LINGUAS assigment from automake < 1.5.
+  # Hide the ALL_LINGUAS assignment from automake < 1.5.
   eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
   # Compute POFILES
   # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
@@ -405,14 +408,15 @@
   fi
 
   sed -e "s|@POTFILES_DEPS@|$POTFILES_DEPS|g" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@PROPERTIESFILES@|$PROPERTIESFILES|g" -e "s|@CLASSFILES@|$CLASSFILES|g" -e "s|@QMFILES@|$QMFILES|g" -e "s|@MSGFILES@|$MSGFILES|g" -e "s|@RESOURCESDLLFILES@|$RESOURCESDLLFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@JAVACATALOGS@|$JAVACATALOGS|g" -e "s|@QTCATALOGS@|$QTCATALOGS|g" -e "s|@TCLCATALOGS@|$TCLCATALOGS|g" -e "s|@CSHARPCATALOGS@|$CSHARPCATALOGS|g" -e 's,^#distdir:,distdir:,' < "$ac_file" > "$ac_file.tmp"
+  tab=`printf '\t'`
   if grep -l '@TCLCATALOGS@' "$ac_file" > /dev/null; then
     # Add dependencies that cannot be formulated as a simple suffix rule.
     for lang in $ALL_LINGUAS; do
       frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
       cat >> "$ac_file.tmp" <<EOF
 $frobbedlang.msg: $lang.po
-	@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
-	\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
+${tab}@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
+${tab}\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
 EOF
     done
   fi
@@ -422,8 +426,8 @@
       frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
       cat >> "$ac_file.tmp" <<EOF
 $frobbedlang/\$(DOMAIN).resources.dll: $lang.po
-	@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
-	\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
+${tab}@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
+${tab}\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
 EOF
     done
   fi
diff -uNrwB xz-5.2.2/m4/progtest.m4 xz-5.2.4/m4/progtest.m4
--- xz-5.2.2/m4/progtest.m4	2015-09-29 17:03:26.000000000 +0600
+++ xz-5.2.4/m4/progtest.m4	2018-04-29 21:18:42.000000000 +0600
@@ -1,5 +1,5 @@
-# progtest.m4 serial 6 (gettext-0.18)
-dnl Copyright (C) 1996-2003, 2005, 2008-2010 Free Software Foundation, Inc.
+# progtest.m4 serial 7 (gettext-0.18.2)
+dnl Copyright (C) 1996-2003, 2005, 2008-2014 Free Software Foundation, Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
 dnl with or without modifications, as long as this notice is preserved.
@@ -27,15 +27,14 @@
 # Prepare PATH_SEPARATOR.
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
-  echo  "exit 0"   >>conf$$.sh
-  chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
-    PATH_SEPARATOR=';'
-  else
+  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
+  # contains only /bin. Note that ksh looks also at the FPATH variable,
+  # so we have to set that as well for the test.
     PATH_SEPARATOR=:
-  fi
-  rm -f conf$$.sh
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
+           || PATH_SEPARATOR=';'
+       }
 fi
 
 # Find out how to test for executable files. Don't use a zero-byte file,
diff -uNrwB xz-5.2.2/m4/tuklib_cpucores.m4 xz-5.2.4/m4/tuklib_cpucores.m4
--- xz-5.2.2/m4/tuklib_cpucores.m4	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/m4/tuklib_cpucores.m4	2018-04-29 21:10:38.000000000 +0600
@@ -10,6 +10,8 @@
 #
 #   Supported methods:
 #     - GetSystemInfo(): Windows (including Cygwin)
+#     - sched_getaffinity(): glibc (GNU/Linux, GNU/kFreeBSD)
+#     - cpuset_getaffinity(): FreeBSD
 #     - sysctl(): BSDs, OS/2
 #     - sysconf(): GNU/Linux, Solaris, Tru64, IRIX, AIX, QNX, Cygwin (but
 #       GetSystemInfo() is used on Cygwin)
@@ -45,8 +47,29 @@
 #endif
 ]])], [tuklib_cv_cpucores_method=special], [
 
+# glibc-based systems (GNU/Linux and GNU/kFreeBSD) have sched_getaffinity().
+# The CPU_COUNT() macro was added in glibc 2.9 so we try to link the
+# test program instead of merely compiling it. glibc 2.9 is old enough that
+# if someone uses the code on older glibc, the fallback to sysconf() should
+# be good enough.
+AC_LINK_IFELSE([AC_LANG_SOURCE([[
+#include <sched.h>
+int
+main(void)
+{
+	cpu_set_t cpu_mask;
+	sched_getaffinity(0, sizeof(cpu_mask), &cpu_mask);
+	return CPU_COUNT(&cpu_mask);
+}
+]])], [tuklib_cv_cpucores_method=sched_getaffinity], [
+
 # FreeBSD has both cpuset and sysctl. Look for cpuset first because
 # it's a better approach.
+#
+# This test would match on GNU/kFreeBSD too but it would require
+# -lfreebsd-glue when linking and thus in the current form this would
+# fail on GNU/kFreeBSD. The above test for sched_getaffinity() matches
+# on GNU/kFreeBSD so the test below should never run on that OS.
 AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
 #include <sys/param.h>
 #include <sys/cpuset.h>
@@ -120,9 +143,14 @@
 ]])], [tuklib_cv_cpucores_method=pstat_getdynamic], [
 
 	tuklib_cv_cpucores_method=unknown
-])])])])])])
+])])])])])])])
 
 case $tuklib_cv_cpucores_method in
+	sched_getaffinity)
+		AC_DEFINE([TUKLIB_CPUCORES_SCHED_GETAFFINITY], [1],
+			[Define to 1 if the number of available CPU cores
+			can be detected with sched_getaffinity()])
+		;;
 	cpuset)
 		AC_DEFINE([TUKLIB_CPUCORES_CPUSET], [1],
 			[Define to 1 if the number of available CPU cores
diff -uNrwB xz-5.2.2/m4/visibility.m4 xz-5.2.4/m4/visibility.m4
--- xz-5.2.2/m4/visibility.m4	2015-09-29 17:03:26.000000000 +0600
+++ xz-5.2.4/m4/visibility.m4	2018-04-29 21:18:42.000000000 +0600
@@ -1,5 +1,5 @@
-# visibility.m4 serial 3 (gettext-0.18)
-dnl Copyright (C) 2005, 2008-2010 Free Software Foundation, Inc.
+# visibility.m4 serial 5 (gettext-0.18.2)
+dnl Copyright (C) 2005, 2008, 2010-2014 Free Software Foundation, Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
 dnl with or without modifications, as long as this notice is preserved.
@@ -33,7 +33,8 @@
     AC_CACHE_VAL([gl_cv_cc_vis_werror], [
       gl_save_CFLAGS="$CFLAGS"
       CFLAGS="$CFLAGS -Werror"
-      AC_TRY_COMPILE([], [],
+      AC_COMPILE_IFELSE(
+        [AC_LANG_PROGRAM([[]], [[]])],
         [gl_cv_cc_vis_werror=yes],
         [gl_cv_cc_vis_werror=no])
       CFLAGS="$gl_save_CFLAGS"])
@@ -51,13 +52,15 @@
       if test $gl_cv_cc_vis_werror = yes; then
         CFLAGS="$CFLAGS -Werror"
       fi
-      AC_TRY_COMPILE(
-        [extern __attribute__((__visibility__("hidden"))) int hiddenvar;
+      AC_COMPILE_IFELSE(
+        [AC_LANG_PROGRAM(
+           [[extern __attribute__((__visibility__("hidden"))) int hiddenvar;
          extern __attribute__((__visibility__("default"))) int exportedvar;
          extern __attribute__((__visibility__("hidden"))) int hiddenfunc (void);
          extern __attribute__((__visibility__("default"))) int exportedfunc (void);
-         void dummyfunc (void) {}],
-        [],
+             void dummyfunc (void) {}
+           ]],
+           [[]])],
         [gl_cv_cc_visibility=yes],
         [gl_cv_cc_visibility=no])
       CFLAGS="$gl_save_CFLAGS"])
diff -uNrwB xz-5.2.2/Makefile.am xz-5.2.4/Makefile.am
--- xz-5.2.2/Makefile.am	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/Makefile.am	2018-04-29 21:10:38.000000000 +0600
@@ -77,7 +77,8 @@
 # Convert the man pages to PDF and plain text (ASCII only) formats.
 dist-hook:
 	if test -d "$(srcdir)/.git" && type git > /dev/null 2>&1; then \
-		( cd "$(srcdir)" && git log --date=iso --stat ) \
+		( cd "$(srcdir)" && git log --date=iso --stat \
+			b667a3ef6338a2c1db7b7706b1f6c99ea392221c^..HEAD ) \
 			> "$(distdir)/ChangeLog"; \
 	fi
 	if type groff > /dev/null 2>&1 && type ps2pdf > /dev/null 2>&1; then \
diff -uNrwB xz-5.2.2/Makefile.in xz-5.2.4/Makefile.in
--- xz-5.2.2/Makefile.in	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/Makefile.in	2018-04-29 22:01:26.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -91,16 +91,16 @@
 @COND_GNULIB_TRUE@am__append_1 = lib
 subdir = .
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -277,6 +277,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
@@ -781,7 +782,7 @@
 	  exit 1; \
 	else :; fi
 dist-gzip: distdir
-	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
 	$(am__post_remove_distdir)
 
 dist-bzip2: distdir
@@ -807,7 +808,7 @@
 	@echo WARNING: "Support for shar distribution archives is" \
 	               "deprecated." >&2
 	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
-	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
+	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
 	$(am__post_remove_distdir)
 
 dist-zip: distdir
@@ -825,7 +826,7 @@
 distcheck: dist
 	case '$(DIST_ARCHIVES)' in \
 	*.tar.gz*) \
-	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
+	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
 	*.tar.bz2*) \
 	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
 	*.tar.lz*) \
@@ -835,7 +836,7 @@
 	*.tar.Z*) \
 	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
 	*.shar.gz*) \
-	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
+	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
 	*.zip*) \
 	  unzip $(distdir).zip ;;\
 	esac
@@ -1043,7 +1044,8 @@
 # Convert the man pages to PDF and plain text (ASCII only) formats.
 dist-hook:
 	if test -d "$(srcdir)/.git" && type git > /dev/null 2>&1; then \
-		( cd "$(srcdir)" && git log --date=iso --stat ) \
+		( cd "$(srcdir)" && git log --date=iso --stat \
+			b667a3ef6338a2c1db7b7706b1f6c99ea392221c^..HEAD ) \
 			> "$(distdir)/ChangeLog"; \
 	fi
 	if type groff > /dev/null 2>&1 && type ps2pdf > /dev/null 2>&1; then \
diff -uNrwB xz-5.2.2/NEWS xz-5.2.4/NEWS
--- xz-5.2.2/NEWS	2015-09-29 16:57:46.000000000 +0600
+++ xz-5.2.4/NEWS	2018-04-29 21:14:58.000000000 +0600
@@ -2,6 +2,72 @@
 XZ Utils Release Notes
 ======================
 
+5.2.4 (2018-04-29)
+
+    * liblzma:
+
+        - Allow 0 as memory usage limit instead of returning
+          LZMA_PROG_ERROR. Now 0 is treated as if 1 byte was specified,
+          which effectively is the same as 0.
+
+        - Use "noexcept" keyword instead of "throw()" in the public
+          headers when a C++11 (or newer standard) compiler is used.
+
+        - Added a portability fix for recent Intel C Compilers.
+
+        - Microsoft Visual Studio build files have been moved under
+          windows/vs2013 and windows/vs2017.
+
+    * xz:
+
+        - Fix "xz --list --robot missing_or_bad_file.xz" which would
+          try to print an unitialized string and thus produce garbage
+          output. Since the exit status is non-zero, most uses of such
+          a command won't try to interpret the garbage output.
+
+        - "xz --list foo.xz" could print "Internal error (bug)" in a
+          corner case where a specific memory usage limit had been set.
+
+
+5.2.3 (2016-12-30)
+
+    * xz:
+
+        - Always close a file before trying to delete it to avoid
+          problems on some operating system and file system combinations.
+
+        - Fixed copying of file timestamps on Windows.
+
+        - Added experimental (disabled by default) sandbox support using
+          Capsicum (FreeBSD >= 10). See --enable-sandbox in INSTALL.
+
+    * C99/C11 conformance fixes to liblzma. The issues affected at least
+      some builds using link-time optimizations.
+
+    * Fixed bugs in the rarely-used function lzma_index_dup().
+
+    * Use of external SHA-256 code is now disabled by default.
+      It can still be enabled by passing --enable-external-sha256
+      to configure. The reasons to disable it by default (see INSTALL
+      for more details):
+
+        - Some OS-specific SHA-256 implementations conflict with
+          OpenSSL and cause problems in programs that link against both
+          liblzma and libcrypto. At least FreeBSD 10 and MINIX 3.3.0
+          are affected.
+
+        - The internal SHA-256 is faster than the SHA-256 code in
+          some operating systems.
+
+    * Changed CPU core count detection to use sched_getaffinity() on
+      GNU/Linux and GNU/kFreeBSD.
+
+    * Fixes to the build-system and xz to make xz buildable even when
+      encoders, decoders, or threading have been disabled from libilzma
+      using configure options. These fixes added two new #defines to
+      config.h: HAVE_ENCODERS and HAVE_DECODERS.
+
+
 5.2.2 (2015-09-29)
 
     * Fixed bugs in QNX-specific code.
Binary files xz-5.2.2/po/cs.gmo and xz-5.2.4/po/cs.gmo differ
diff -uNrwB xz-5.2.2/po/cs.po xz-5.2.4/po/cs.po
--- xz-5.2.2/po/cs.po	2015-09-29 17:03:54.000000000 +0600
+++ xz-5.2.4/po/cs.po	2018-04-29 21:19:55.000000000 +0600
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: xz-utils\n"
 "Report-Msgid-Bugs-To: lasse.collin@tukaani.org\n"
-"POT-Creation-Date: 2015-09-29 14:03+0300\n"
+"POT-Creation-Date: 2018-04-29 18:19+0300\n"
 "PO-Revision-Date: 2010-12-03 11:32+0100\n"
 "Last-Translator: Marek Černocký <marek@manet.cz>\n"
 "Language-Team: Czech <diskuze@lists.l10n.cz>\n"
@@ -51,6 +51,14 @@
 msgid "The environment variable %s contains too many arguments"
 msgstr "Proměnná prostředí %s obsahuje příliš mnoho argumentů"
 
+#: src/xz/args.c:643
+msgid "Compression support was disabled at build time"
+msgstr ""
+
+#: src/xz/args.c:650
+msgid "Decompression support was disabled at build time"
+msgstr ""
+
 #: src/xz/coder.c:110
 msgid "Maximum number of filters is four"
 msgstr "Maximální počet filtrů je čtyři"
@@ -83,36 +91,48 @@
 msgid "Switching to single-threaded mode due to --flush-timeout"
 msgstr ""
 
-#: src/xz/coder.c:234
+#: src/xz/coder.c:235
 #, c-format
 msgid "Using up to %<PRIu32> threads."
 msgstr ""
 
-#: src/xz/coder.c:247
+#: src/xz/coder.c:251
 msgid "Unsupported filter chain or filter options"
 msgstr "Nepodporovaný omezující filtr nebo volby filtru"
 
-#: src/xz/coder.c:255
+#: src/xz/coder.c:263
 #, c-format
 msgid "Decompression will need %s MiB of memory."
 msgstr "Dekomprimace bude vyžadovat %s MiB paměti."
 
-#: src/xz/coder.c:290
+#: src/xz/coder.c:300
 #, fuzzy, c-format
 msgid "Adjusted the number of threads from %s to %s to not exceed the memory usage limit of %s MiB"
 msgstr "Přizpůsobit velikost slovníku LZMA%c z %s MiB na %s MiB, tak aby nebylo překročeno omezení použitelné paměti %s MiB"
 
-#: src/xz/coder.c:344
+#: src/xz/coder.c:354
 #, c-format
 msgid "Adjusted LZMA%c dictionary size from %s MiB to %s MiB to not exceed the memory usage limit of %s MiB"
 msgstr "Přizpůsobit velikost slovníku LZMA%c z %s MiB na %s MiB, tak aby nebylo překročeno omezení použitelné paměti %s MiB"
 
-#: src/xz/file_io.c:87 src/xz/file_io.c:95
+#: src/xz/file_io.c:110 src/xz/file_io.c:118
 #, fuzzy, c-format
 msgid "Error creating a pipe: %s"
 msgstr "%s: Chyba při čtení názvů souborů: %s"
 
-#: src/xz/file_io.c:172
+#: src/xz/file_io.c:173
+msgid "Sandbox is disabled due to incompatible command line arguments"
+msgstr ""
+
+#: src/xz/file_io.c:216
+msgid "Sandbox was successfully enabled"
+msgstr ""
+
+#: src/xz/file_io.c:220
+msgid "Failed to enable the sandbox"
+msgstr ""
+
+#: src/xz/file_io.c:262
 #, fuzzy, c-format
 msgid "%s: poll() failed: %s"
 msgstr "%s: Selhalo zavření souboru: %s"
@@ -127,107 +147,107 @@
 #. it is possible that the user has put a new file in place
 #. of the original file, and in that case it obviously
 #. shouldn't be removed.
-#: src/xz/file_io.c:242
+#: src/xz/file_io.c:332
 #, c-format
 msgid "%s: File seems to have been moved, not removing"
 msgstr "%s: Vypadá to, že soubor byl přesunut, proto nebude odstraněn"
 
-#: src/xz/file_io.c:249 src/xz/file_io.c:762
+#: src/xz/file_io.c:339 src/xz/file_io.c:878
 #, c-format
 msgid "%s: Cannot remove: %s"
 msgstr "%s: Nelze odstranit: %s"
 
-#: src/xz/file_io.c:274
+#: src/xz/file_io.c:364
 #, c-format
 msgid "%s: Cannot set the file owner: %s"
 msgstr "%s: Nelze nastavit vlastníka souboru: %s"
 
-#: src/xz/file_io.c:280
+#: src/xz/file_io.c:370
 #, c-format
 msgid "%s: Cannot set the file group: %s"
 msgstr "%s: Nelze nastavit skupinu souboru: %s"
 
-#: src/xz/file_io.c:299
+#: src/xz/file_io.c:389
 #, c-format
 msgid "%s: Cannot set the file permissions: %s"
 msgstr "%s: Nelze nastavit oprávnění souboru: %s"
 
-#: src/xz/file_io.c:409
+#: src/xz/file_io.c:515
 #, fuzzy, c-format
 msgid "Error getting the file status flags from standard input: %s"
 msgstr "Chyba při obnovení příznaku O_APPEND na standardní výstup: %s"
 
-#: src/xz/file_io.c:463 src/xz/file_io.c:525
+#: src/xz/file_io.c:572 src/xz/file_io.c:634
 #, c-format
 msgid "%s: Is a symbolic link, skipping"
 msgstr "%s: Jedná se o symbolický odkaz, vynechává se"
 
-#: src/xz/file_io.c:554
+#: src/xz/file_io.c:663
 #, c-format
 msgid "%s: Is a directory, skipping"
 msgstr "%s: Jedná se o složku, vynechává se"
 
-#: src/xz/file_io.c:560
+#: src/xz/file_io.c:669
 #, c-format
 msgid "%s: Not a regular file, skipping"
 msgstr "%s: Nejedná se o běžný soubor, vynechává se"
 
-#: src/xz/file_io.c:577
+#: src/xz/file_io.c:686
 #, c-format
 msgid "%s: File has setuid or setgid bit set, skipping"
 msgstr "%s: Soubor má nastavený bit setuid nebo setgid, vynechává se"
 
-#: src/xz/file_io.c:584
+#: src/xz/file_io.c:693
 #, c-format
 msgid "%s: File has sticky bit set, skipping"
 msgstr "%s: Soubor má nastavený bit sticky, vynechává se"
 
-#: src/xz/file_io.c:591
+#: src/xz/file_io.c:700
 #, c-format
 msgid "%s: Input file has more than one hard link, skipping"
 msgstr "%s: Vstupní soubor má více než jeden pevný odkaz, vynechává se"
 
-#: src/xz/file_io.c:671
+#: src/xz/file_io.c:788
 #, fuzzy, c-format
 msgid "Error restoring the status flags to standard input: %s"
 msgstr "Chyba při obnovení příznaku O_APPEND na standardní výstup: %s"
 
-#: src/xz/file_io.c:720
+#: src/xz/file_io.c:836
 #, fuzzy, c-format
 msgid "Error getting the file status flags from standard output: %s"
 msgstr "Chyba při obnovení příznaku O_APPEND na standardní výstup: %s"
 
-#: src/xz/file_io.c:898
+#: src/xz/file_io.c:1014
 #, c-format
 msgid "Error restoring the O_APPEND flag to standard output: %s"
 msgstr "Chyba při obnovení příznaku O_APPEND na standardní výstup: %s"
 
-#: src/xz/file_io.c:910
+#: src/xz/file_io.c:1026
 #, c-format
 msgid "%s: Closing the file failed: %s"
 msgstr "%s: Selhalo zavření souboru: %s"
 
-#: src/xz/file_io.c:946 src/xz/file_io.c:1172
+#: src/xz/file_io.c:1062 src/xz/file_io.c:1288
 #, c-format
 msgid "%s: Seeking failed when trying to create a sparse file: %s"
 msgstr "%s: Selhalo nastavení pozice při pokusu o vytvoření souboru řídké matice: %s"
 
-#: src/xz/file_io.c:1041
+#: src/xz/file_io.c:1157
 #, c-format
 msgid "%s: Read error: %s"
 msgstr "%s: Chyba čtení: %s"
 
-#: src/xz/file_io.c:1061
+#: src/xz/file_io.c:1177
 #, c-format
 msgid "%s: Error seeking the file: %s"
 msgstr "%s: Chyba při posunu v rámci souboru: %s"
 
-#: src/xz/file_io.c:1071
+#: src/xz/file_io.c:1187
 #, c-format
 msgid "%s: Unexpected end of file"
 msgstr "%s: Neočekávaný konec souboru"
 
-#: src/xz/file_io.c:1130
+#: src/xz/file_io.c:1246
 #, c-format
 msgid "%s: Write error: %s"
 msgstr "%s: Chyba zápisu: %s"
@@ -324,41 +344,41 @@
 #. to Ratio, the columns are right aligned. Check and Filename
 #. are left aligned. If you need longer words, it's OK to
 #. use two lines here. Test with "xz -l foo.xz".
-#: src/xz/list.c:671
+#: src/xz/list.c:677
 msgid "Strms  Blocks   Compressed Uncompressed  Ratio  Check   Filename"
 msgstr "Proud   Bloky      Komprim    Nekomprim  Poměr  Kontrl  Název souboru"
 
-#: src/xz/list.c:711
+#: src/xz/list.c:717
 #, c-format
 msgid "  Streams:            %s\n"
 msgstr "  Proudů:                  %s\n"
 
-#: src/xz/list.c:713
+#: src/xz/list.c:719
 #, c-format
 msgid "  Blocks:             %s\n"
 msgstr "  Bloků:                   %s\n"
 
-#: src/xz/list.c:715
+#: src/xz/list.c:721
 #, c-format
 msgid "  Compressed size:    %s\n"
 msgstr "  Komprimovaná velikost:   %s\n"
 
-#: src/xz/list.c:718
+#: src/xz/list.c:724
 #, c-format
 msgid "  Uncompressed size:  %s\n"
 msgstr "  Nekomprimovaná velikost: %s\n"
 
-#: src/xz/list.c:721
+#: src/xz/list.c:727
 #, c-format
 msgid "  Ratio:              %s\n"
 msgstr "  Poměr komprimace:        %s\n"
 
-#: src/xz/list.c:723
+#: src/xz/list.c:729
 #, c-format
 msgid "  Check:              %s\n"
 msgstr "  Typ kontroly:            %s\n"
 
-#: src/xz/list.c:724
+#: src/xz/list.c:730
 #, c-format
 msgid "  Stream padding:     %s\n"
 msgstr "  Zarovnání proudu:        %s\n"
@@ -366,7 +386,7 @@
 #. TRANSLATORS: The second line is column headings. All except
 #. Check are right aligned; Check is left aligned. Test with
 #. "xz -lv foo.xz".
-#: src/xz/list.c:752
+#: src/xz/list.c:758
 msgid ""
 "  Streams:\n"
 "    Stream    Blocks      CompOffset    UncompOffset        CompSize      UncompSize  Ratio  Check      Padding"
@@ -376,7 +396,7 @@
 
 #. TRANSLATORS: The second line is column headings. All
 #. except Check are right aligned; Check is left aligned.
-#: src/xz/list.c:807
+#: src/xz/list.c:813
 #, c-format
 msgid ""
 "  Blocks:\n"
@@ -392,37 +412,37 @@
 #. are right aligned. %*s is replaced with 0-120
 #. spaces to make the CheckVal column wide enough.
 #. Test with "xz -lvv foo.xz".
-#: src/xz/list.c:819
+#: src/xz/list.c:825
 #, c-format
 msgid "      CheckVal %*s Header  Flags        CompSize    MemUsage  Filters"
 msgstr "   KontrHod %*s Hlavič  Příznaky     KomprVel    PoužiPam  Filtry"
 
-#: src/xz/list.c:897 src/xz/list.c:1072
+#: src/xz/list.c:903 src/xz/list.c:1078
 #, c-format
 msgid "  Memory needed:      %s MiB\n"
 msgstr "  Potřebná paměť:          %s MiB\n"
 
-#: src/xz/list.c:899 src/xz/list.c:1074
+#: src/xz/list.c:905 src/xz/list.c:1080
 #, c-format
 msgid "  Sizes in headers:   %s\n"
 msgstr "  Velikosti v hlavičkách:  %s\n"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "Yes"
 msgstr "Ano"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "No"
 msgstr "Ne"
 
-#: src/xz/list.c:901 src/xz/list.c:1076
+#: src/xz/list.c:907 src/xz/list.c:1082
 #, c-format
 msgid "  Minimum XZ Utils version: %s\n"
 msgstr ""
 
 #. TRANSLATORS: %s is an integer. Only the plural form of this
 #. message is used (e.g. "2 files"). Test with "xz -l foo.xz bar.xz".
-#: src/xz/list.c:1051
+#: src/xz/list.c:1057
 #, c-format
 msgid "%s file\n"
 msgid_plural "%s files\n"
@@ -430,20 +450,20 @@
 msgstr[1] "%s soubory\n"
 msgstr[2] "%s souborů\n"
 
-#: src/xz/list.c:1064
+#: src/xz/list.c:1070
 msgid "Totals:"
 msgstr "Celkem:"
 
-#: src/xz/list.c:1065
+#: src/xz/list.c:1071
 #, c-format
 msgid "  Number of files:    %s\n"
 msgstr "  Počet souborů:           %s\n"
 
-#: src/xz/list.c:1140
+#: src/xz/list.c:1146
 msgid "--list works only on .xz files (--format=xz or --format=auto)"
 msgstr "--list pracuje pouze se soubory .xz (--format=xz nebo --format=auto)"
 
-#: src/xz/list.c:1146
+#: src/xz/list.c:1152
 msgid "--list does not support reading from standard input"
 msgstr "--list nepodporuje čtení ze standardního vstupu"
 
@@ -466,7 +486,7 @@
 msgid "Compression and decompression with --robot are not supported yet."
 msgstr "Komprimace a dekomprimace s přepínačem --robot není zatím podporovaná."
 
-#: src/xz/main.c:231
+#: src/xz/main.c:252
 msgid "Cannot read data from standard input when reading filenames from standard input"
 msgstr "Ze standardního vstupu nelze číst data, když se ze standardního vstupu načítají názvy souborů"
 
Binary files xz-5.2.2/po/de.gmo and xz-5.2.4/po/de.gmo differ
diff -uNrwB xz-5.2.2/po/de.po xz-5.2.4/po/de.po
--- xz-5.2.2/po/de.po	2015-09-29 17:03:54.000000000 +0600
+++ xz-5.2.4/po/de.po	2018-04-29 21:19:55.000000000 +0600
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: XZ Utils 4.999.9beta\n"
 "Report-Msgid-Bugs-To: lasse.collin@tukaani.org\n"
-"POT-Creation-Date: 2015-09-29 14:03+0300\n"
+"POT-Creation-Date: 2018-04-29 18:19+0300\n"
 "PO-Revision-Date: 2015-08-07 14:00+0200\n"
 "Last-Translator:  <sqrt@entless.org>\n"
 "Language-Team: German\n"
@@ -49,6 +49,14 @@
 msgid "The environment variable %s contains too many arguments"
 msgstr "Die Umgebungsvariable %s enthält zu viele Argumente"
 
+#: src/xz/args.c:643
+msgid "Compression support was disabled at build time"
+msgstr ""
+
+#: src/xz/args.c:650
+msgid "Decompression support was disabled at build time"
+msgstr ""
+
 #: src/xz/coder.c:110
 msgid "Maximum number of filters is four"
 msgstr "Maximal vier Filter möglich"
@@ -81,36 +89,48 @@
 msgid "Switching to single-threaded mode due to --flush-timeout"
 msgstr "Schalte um auf Single-Thread-Modus wegen --flush-timeout"
 
-#: src/xz/coder.c:234
+#: src/xz/coder.c:235
 #, c-format
 msgid "Using up to %<PRIu32> threads."
 msgstr "Benutze bis zu %<PRIu32> Threads."
 
-#: src/xz/coder.c:247
+#: src/xz/coder.c:251
 msgid "Unsupported filter chain or filter options"
 msgstr "Optionen nicht unterstützt"
 
-#: src/xz/coder.c:255
+#: src/xz/coder.c:263
 #, c-format
 msgid "Decompression will need %s MiB of memory."
 msgstr "Dekomprimierung wird %s MiB Speicher brauchen."
 
-#: src/xz/coder.c:290
+#: src/xz/coder.c:300
 #, c-format
 msgid "Adjusted the number of threads from %s to %s to not exceed the memory usage limit of %s MiB"
 msgstr "Passte die Anzahl Threads von %s auf %s an um nicht das Speichernutzungslimit von %s MiB zu übersteigen"
 
-#: src/xz/coder.c:344
+#: src/xz/coder.c:354
 #, c-format
 msgid "Adjusted LZMA%c dictionary size from %s MiB to %s MiB to not exceed the memory usage limit of %s MiB"
 msgstr "Passte LZMA%c-Wörterbuchgröße von %s MiB to %s MiB an, um nicht das Speichernutzungslimit von %s MiB zu übersteigen"
 
-#: src/xz/file_io.c:87 src/xz/file_io.c:95
+#: src/xz/file_io.c:110 src/xz/file_io.c:118
 #, c-format
 msgid "Error creating a pipe: %s"
 msgstr "Fehler beim Erzeugen der Pipeline: %s"
 
-#: src/xz/file_io.c:172
+#: src/xz/file_io.c:173
+msgid "Sandbox is disabled due to incompatible command line arguments"
+msgstr "Sandbox ist wegen inkompatibler Kommandozeilenargumente deaktiviert"
+
+#: src/xz/file_io.c:216
+msgid "Sandbox was successfully enabled"
+msgstr "Sandbox wurde erfolgreich aktiviert"
+
+#: src/xz/file_io.c:220
+msgid "Failed to enable the sandbox"
+msgstr "Konnte Sandbox nicht aktivieren"
+
+#: src/xz/file_io.c:262
 #, c-format
 msgid "%s: poll() failed: %s"
 msgstr "%s: poll() Fehler: %s"
@@ -125,107 +145,107 @@
 #. it is possible that the user has put a new file in place
 #. of the original file, and in that case it obviously
 #. shouldn't be removed.
-#: src/xz/file_io.c:242
+#: src/xz/file_io.c:332
 #, c-format
 msgid "%s: File seems to have been moved, not removing"
 msgstr "%s: Datei scheint umbenannt worden zu sein, daher wird sie nicht gelöscht"
 
-#: src/xz/file_io.c:249 src/xz/file_io.c:762
+#: src/xz/file_io.c:339 src/xz/file_io.c:878
 #, c-format
 msgid "%s: Cannot remove: %s"
 msgstr "%s: Kann nicht löschen: %s"
 
-#: src/xz/file_io.c:274
+#: src/xz/file_io.c:364
 #, c-format
 msgid "%s: Cannot set the file owner: %s"
 msgstr "%s: Kann Dateieigentümer nicht setzen: %s"
 
-#: src/xz/file_io.c:280
+#: src/xz/file_io.c:370
 #, c-format
 msgid "%s: Cannot set the file group: %s"
 msgstr "%s: Kann Dateigruppe nicht setzen: %s"
 
-#: src/xz/file_io.c:299
+#: src/xz/file_io.c:389
 #, c-format
 msgid "%s: Cannot set the file permissions: %s"
 msgstr "%s: Kann Zugriffsrechte nicht setzen: %s"
 
-#: src/xz/file_io.c:409
+#: src/xz/file_io.c:515
 #, c-format
 msgid "Error getting the file status flags from standard input: %s"
 msgstr "Kann Status-Flags der Standardeingabe nicht ermitteln: %s"
 
-#: src/xz/file_io.c:463 src/xz/file_io.c:525
+#: src/xz/file_io.c:572 src/xz/file_io.c:634
 #, c-format
 msgid "%s: Is a symbolic link, skipping"
 msgstr "%s: Überspringe symbolischen Link"
 
-#: src/xz/file_io.c:554
+#: src/xz/file_io.c:663
 #, c-format
 msgid "%s: Is a directory, skipping"
 msgstr "%s: Überspringe Verzeichnis"
 
-#: src/xz/file_io.c:560
+#: src/xz/file_io.c:669
 #, c-format
 msgid "%s: Not a regular file, skipping"
 msgstr "%s: Keine reguläre Datei, überspringe"
 
-#: src/xz/file_io.c:577
+#: src/xz/file_io.c:686
 #, c-format
 msgid "%s: File has setuid or setgid bit set, skipping"
 msgstr "%s: Datei hat das setuid- oder setgid-Bit gesetzt, überspringe"
 
-#: src/xz/file_io.c:584
+#: src/xz/file_io.c:693
 #, c-format
 msgid "%s: File has sticky bit set, skipping"
 msgstr "%s: Datei hat sticky-Bit gesetzt, überspringe"
 
-#: src/xz/file_io.c:591
+#: src/xz/file_io.c:700
 #, c-format
 msgid "%s: Input file has more than one hard link, skipping"
 msgstr "%s: Eingabedatei hat mehr als einen Hard Link, überspringe"
 
-#: src/xz/file_io.c:671
+#: src/xz/file_io.c:788
 #, c-format
 msgid "Error restoring the status flags to standard input: %s"
 msgstr "Fehler beim Wiederherstellen der Status-Flags für die Standardausgabe: %s"
 
-#: src/xz/file_io.c:720
+#: src/xz/file_io.c:836
 #, c-format
 msgid "Error getting the file status flags from standard output: %s"
 msgstr "Kann Status-Flags der Standardausgabe nicht ermitteln: %s"
 
-#: src/xz/file_io.c:898
+#: src/xz/file_io.c:1014
 #, c-format
 msgid "Error restoring the O_APPEND flag to standard output: %s"
 msgstr "Fehler beim Wiederherstellen des O_APPEND-Flags bei Standardausgabe: %s"
 
-#: src/xz/file_io.c:910
+#: src/xz/file_io.c:1026
 #, c-format
 msgid "%s: Closing the file failed: %s"
 msgstr "%s: Fehler beim Schließen der Datei: %s"
 
-#: src/xz/file_io.c:946 src/xz/file_io.c:1172
+#: src/xz/file_io.c:1062 src/xz/file_io.c:1288
 #, c-format
 msgid "%s: Seeking failed when trying to create a sparse file: %s"
 msgstr "%s: Positionierungsfehler beim Versuch eine sparse (dünnbesetzte) Datei zu erzeugen: %s"
 
-#: src/xz/file_io.c:1041
+#: src/xz/file_io.c:1157
 #, c-format
 msgid "%s: Read error: %s"
 msgstr "%s: Lesefehler: %s"
 
-#: src/xz/file_io.c:1061
+#: src/xz/file_io.c:1177
 #, c-format
 msgid "%s: Error seeking the file: %s"
 msgstr "%s: Fehler beim Lesen der Dateinamen: %s"
 
-#: src/xz/file_io.c:1071
+#: src/xz/file_io.c:1187
 #, c-format
 msgid "%s: Unexpected end of file"
 msgstr "%s: Unerwartetes Ende der Datei"
 
-#: src/xz/file_io.c:1130
+#: src/xz/file_io.c:1246
 #, c-format
 msgid "%s: Write error: %s"
 msgstr "%s: Schreibfehler: %s"
@@ -322,41 +342,41 @@
 #. to Ratio, the columns are right aligned. Check and Filename
 #. are left aligned. If you need longer words, it's OK to
 #. use two lines here. Test with "xz -l foo.xz".
-#: src/xz/list.c:671
+#: src/xz/list.c:677
 msgid "Strms  Blocks   Compressed Uncompressed  Ratio  Check   Filename"
 msgstr " Str.  Blöcke       Kompr.     Unkompr.  Verh.  Check   Dateiname"
 
-#: src/xz/list.c:711
+#: src/xz/list.c:717
 #, c-format
 msgid "  Streams:            %s\n"
 msgstr "  Ströme:              %s\n"
 
-#: src/xz/list.c:713
+#: src/xz/list.c:719
 #, c-format
 msgid "  Blocks:             %s\n"
 msgstr "  Blöcke:              %s\n"
 
-#: src/xz/list.c:715
+#: src/xz/list.c:721
 #, c-format
 msgid "  Compressed size:    %s\n"
 msgstr "  Größe komprimiert:   %s\n"
 
-#: src/xz/list.c:718
+#: src/xz/list.c:724
 #, c-format
 msgid "  Uncompressed size:  %s\n"
 msgstr "  Größe unkomprimiert: %s\n"
 
-#: src/xz/list.c:721
+#: src/xz/list.c:727
 #, c-format
 msgid "  Ratio:              %s\n"
 msgstr "  Verhältnis:          %s\n"
 
-#: src/xz/list.c:723
+#: src/xz/list.c:729
 #, c-format
 msgid "  Check:              %s\n"
 msgstr "  Check:               %s\n"
 
-#: src/xz/list.c:724
+#: src/xz/list.c:730
 #, c-format
 msgid "  Stream padding:     %s\n"
 msgstr "  Strom-Auffüllung:    %s\n"
@@ -364,7 +384,7 @@
 #. TRANSLATORS: The second line is column headings. All except
 #. Check are right aligned; Check is left aligned. Test with
 #. "xz -lv foo.xz".
-#: src/xz/list.c:752
+#: src/xz/list.c:758
 msgid ""
 "  Streams:\n"
 "    Stream    Blocks      CompOffset    UncompOffset        CompSize      UncompSize  Ratio  Check      Padding"
@@ -374,7 +394,7 @@
 
 #. TRANSLATORS: The second line is column headings. All
 #. except Check are right aligned; Check is left aligned.
-#: src/xz/list.c:807
+#: src/xz/list.c:813
 #, c-format
 msgid ""
 "  Blocks:\n"
@@ -390,57 +410,57 @@
 #. are right aligned. %*s is replaced with 0-120
 #. spaces to make the CheckVal column wide enough.
 #. Test with "xz -lvv foo.xz".
-#: src/xz/list.c:819
+#: src/xz/list.c:825
 #, c-format
 msgid "      CheckVal %*s Header  Flags        CompSize    MemUsage  Filters"
 msgstr "      CheckWert %*s  Kopf  Schalter    KompGröße    Speicher  Filter"
 
-#: src/xz/list.c:897 src/xz/list.c:1072
+#: src/xz/list.c:903 src/xz/list.c:1078
 #, c-format
 msgid "  Memory needed:      %s MiB\n"
 msgstr "  Benötigter Speicher: %s MiB\n"
 
-#: src/xz/list.c:899 src/xz/list.c:1074
+#: src/xz/list.c:905 src/xz/list.c:1080
 #, c-format
 msgid "  Sizes in headers:   %s\n"
 msgstr "  Größe in Köpfen:     %s\n"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "Yes"
 msgstr "Ja"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "No"
 msgstr "Nein"
 
-#: src/xz/list.c:901 src/xz/list.c:1076
+#: src/xz/list.c:907 src/xz/list.c:1082
 #, c-format
 msgid "  Minimum XZ Utils version: %s\n"
 msgstr "  Kleinste XZ Utils-Version: %s\n"
 
 #. TRANSLATORS: %s is an integer. Only the plural form of this
 #. message is used (e.g. "2 files"). Test with "xz -l foo.xz bar.xz".
-#: src/xz/list.c:1051
+#: src/xz/list.c:1057
 #, c-format
 msgid "%s file\n"
 msgid_plural "%s files\n"
 msgstr[0] "%s Datei\n"
 msgstr[1] "%s Dateien\n"
 
-#: src/xz/list.c:1064
+#: src/xz/list.c:1070
 msgid "Totals:"
 msgstr "Gesamt:"
 
-#: src/xz/list.c:1065
+#: src/xz/list.c:1071
 #, c-format
 msgid "  Number of files:    %s\n"
 msgstr "   Anzahl Dateien:     %s\n"
 
-#: src/xz/list.c:1140
+#: src/xz/list.c:1146
 msgid "--list works only on .xz files (--format=xz or --format=auto)"
 msgstr "--list funktioniert nur mit .xz-Dateien (--format=xz oder --format=auto)"
 
-#: src/xz/list.c:1146
+#: src/xz/list.c:1152
 msgid "--list does not support reading from standard input"
 msgstr "--list unterstützt kein Lesen der Standardeingabe"
 
@@ -463,7 +483,7 @@
 msgid "Compression and decompression with --robot are not supported yet."
 msgstr "Komprimierung und Dekomprimierung mit --robot ist noch nicht unterstützt."
 
-#: src/xz/main.c:231
+#: src/xz/main.c:252
 msgid "Cannot read data from standard input when reading filenames from standard input"
 msgstr "Lesen der Standardeingabe ist nicht möglich, wenn die Dateinamen auch von der Standardeingabe gelesen werden"
 
@@ -974,15 +994,6 @@
 msgid "Unknown error"
 msgstr "Unbekannter Fehler"
 
-#~ msgid "Sandbox is disabled due to incompatible command line arguments"
-#~ msgstr "Sandbox ist wegen inkompatibler Kommandozeilenargumente deaktiviert"
-
-#~ msgid "Sandbox was successfully enabled"
-#~ msgstr "Sandbox wurde erfolgreich aktiviert"
-
-#~ msgid "Failed to enable the sandbox"
-#~ msgstr "Konnte Sandbox nicht aktivieren"
-
 #~ msgid "Error setting O_NONBLOCK on standard input: %s"
 #~ msgstr "Fehler beim Setzen des O_NONBLOCK-Flags für Standardausgabe: %s"
 
Binary files xz-5.2.2/po/fr.gmo and xz-5.2.4/po/fr.gmo differ
diff -uNrwB xz-5.2.2/po/fr.po xz-5.2.4/po/fr.po
--- xz-5.2.2/po/fr.po	2015-09-29 17:03:54.000000000 +0600
+++ xz-5.2.4/po/fr.po	2018-04-29 21:19:55.000000000 +0600
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: xz-utils\n"
 "Report-Msgid-Bugs-To: lasse.collin@tukaani.org\n"
-"POT-Creation-Date: 2015-09-29 14:03+0300\n"
+"POT-Creation-Date: 2018-04-29 18:19+0300\n"
 "PO-Revision-Date: 2010-09-24 21;12+0200\n"
 "Last-Translator: Adrien Nader <adrien@notk.org>\n"
 "Language-Team: None\n"
@@ -49,6 +49,14 @@
 msgid "The environment variable %s contains too many arguments"
 msgstr "La variable d'environnement %s contient trop d'arguments"
 
+#: src/xz/args.c:643
+msgid "Compression support was disabled at build time"
+msgstr ""
+
+#: src/xz/args.c:650
+msgid "Decompression support was disabled at build time"
+msgstr ""
+
 #: src/xz/coder.c:110
 msgid "Maximum number of filters is four"
 msgstr "Le nombre maximal de filtres est quatre"
@@ -81,36 +89,48 @@
 msgid "Switching to single-threaded mode due to --flush-timeout"
 msgstr ""
 
-#: src/xz/coder.c:234
+#: src/xz/coder.c:235
 #, c-format
 msgid "Using up to %<PRIu32> threads."
 msgstr "Jusqu'à %<PRIu32> threads seront utilisés."
 
-#: src/xz/coder.c:247
+#: src/xz/coder.c:251
 msgid "Unsupported filter chain or filter options"
 msgstr "Enchaînement ou options de filtres non pris en charge"
 
-#: src/xz/coder.c:255
+#: src/xz/coder.c:263
 #, c-format
 msgid "Decompression will need %s MiB of memory."
 msgstr "La décompression nécessitera %s MiB de mémoire."
 
-#: src/xz/coder.c:290
+#: src/xz/coder.c:300
 #, c-format
 msgid "Adjusted the number of threads from %s to %s to not exceed the memory usage limit of %s MiB"
 msgstr "Nombre de threads réduit de %s à %s pour ne pas dépasser la limite d'utilisation mémoire de %s MiB"
 
-#: src/xz/coder.c:344
+#: src/xz/coder.c:354
 #, c-format
 msgid "Adjusted LZMA%c dictionary size from %s MiB to %s MiB to not exceed the memory usage limit of %s MiB"
 msgstr "Taille du dictionnaire LZMA%c réduite de %s MiB à %s MiB pour ne pas dépasser la limite d'utilisation mémoire de %s MiB"
 
-#: src/xz/file_io.c:87 src/xz/file_io.c:95
+#: src/xz/file_io.c:110 src/xz/file_io.c:118
 #, c-format
 msgid "Error creating a pipe: %s"
 msgstr "Impossible de créer un tube anonyme (pipe) : %s"
 
-#: src/xz/file_io.c:172
+#: src/xz/file_io.c:173
+msgid "Sandbox is disabled due to incompatible command line arguments"
+msgstr ""
+
+#: src/xz/file_io.c:216
+msgid "Sandbox was successfully enabled"
+msgstr ""
+
+#: src/xz/file_io.c:220
+msgid "Failed to enable the sandbox"
+msgstr ""
+
+#: src/xz/file_io.c:262
 #, c-format
 msgid "%s: poll() failed: %s"
 msgstr "%s : L'appel à la fonction poll() a échoué : %s"
@@ -125,27 +145,27 @@
 #. it is possible that the user has put a new file in place
 #. of the original file, and in that case it obviously
 #. shouldn't be removed.
-#: src/xz/file_io.c:242
+#: src/xz/file_io.c:332
 #, c-format
 msgid "%s: File seems to have been moved, not removing"
 msgstr "%s : Le fichier a apparemment été déplacé, suppression annulée"
 
-#: src/xz/file_io.c:249 src/xz/file_io.c:762
+#: src/xz/file_io.c:339 src/xz/file_io.c:878
 #, c-format
 msgid "%s: Cannot remove: %s"
 msgstr "%s : Impossible de supprimer : %s"
 
-#: src/xz/file_io.c:274
+#: src/xz/file_io.c:364
 #, c-format
 msgid "%s: Cannot set the file owner: %s"
 msgstr "%s : Impossible de modifier le propriétaire du fichier : %s"
 
-#: src/xz/file_io.c:280
+#: src/xz/file_io.c:370
 #, c-format
 msgid "%s: Cannot set the file group: %s"
 msgstr "%s : Impossible de modifier le groupe propriétaire du fichier : %s"
 
-#: src/xz/file_io.c:299
+#: src/xz/file_io.c:389
 #, c-format
 msgid "%s: Cannot set the file permissions: %s"
 msgstr "%s : Impossible de modifier les permissions du fichier : %s"
@@ -158,84 +178,84 @@
 # - make it more difficult to look up in search engines; it might happen one in
 # a million times, if we dilute the error message in 20 languages, it will be
 # almost impossible to find an explanation and support for the error.
-#: src/xz/file_io.c:409
+#: src/xz/file_io.c:515
 #, c-format
 msgid "Error getting the file status flags from standard input: %s"
 msgstr ""
 
-#: src/xz/file_io.c:463 src/xz/file_io.c:525
+#: src/xz/file_io.c:572 src/xz/file_io.c:634
 #, c-format
 msgid "%s: Is a symbolic link, skipping"
 msgstr "%s est un lien symbolique : ignoré"
 
-#: src/xz/file_io.c:554
+#: src/xz/file_io.c:663
 #, c-format
 msgid "%s: Is a directory, skipping"
 msgstr "%s est un répertoire : ignoré"
 
-#: src/xz/file_io.c:560
+#: src/xz/file_io.c:669
 #, c-format
 msgid "%s: Not a regular file, skipping"
 msgstr "%s n'est pas un fichier régulier : ignoré"
 
-#: src/xz/file_io.c:577
+#: src/xz/file_io.c:686
 #, c-format
 msgid "%s: File has setuid or setgid bit set, skipping"
 msgstr "%s : Le fichier possède les bits `setuid' ou `setgid' : ignoré"
 
-#: src/xz/file_io.c:584
+#: src/xz/file_io.c:693
 #, c-format
 msgid "%s: File has sticky bit set, skipping"
 msgstr "%s : Le fichier possède le bit `sticky' : ignoré"
 
-#: src/xz/file_io.c:591
+#: src/xz/file_io.c:700
 #, c-format
 msgid "%s: Input file has more than one hard link, skipping"
 msgstr "%s : Le fichier d'entrée a plus d'un lien matériel : ignoré"
 
 # See note from translator above titled "file status flags".
-#: src/xz/file_io.c:671
+#: src/xz/file_io.c:788
 #, c-format
 msgid "Error restoring the status flags to standard input: %s"
 msgstr ""
 
 # See note from translator above titled "file status flags".
-#: src/xz/file_io.c:720
+#: src/xz/file_io.c:836
 #, c-format
 msgid "Error getting the file status flags from standard output: %s"
 msgstr ""
 
-#: src/xz/file_io.c:898
+#: src/xz/file_io.c:1014
 #, c-format
 msgid "Error restoring the O_APPEND flag to standard output: %s"
 msgstr "Impossible de rétablir le drapeau O_APPEND sur la sortie standard : %s"
 
-#: src/xz/file_io.c:910
+#: src/xz/file_io.c:1026
 #, c-format
 msgid "%s: Closing the file failed: %s"
 msgstr "%s : Impossible de fermer le fichier : %s"
 
-#: src/xz/file_io.c:946 src/xz/file_io.c:1172
+#: src/xz/file_io.c:1062 src/xz/file_io.c:1288
 #, c-format
 msgid "%s: Seeking failed when trying to create a sparse file: %s"
 msgstr "%s : Impossible de se déplacer dans le fichier pour créer un 'sparse file' : %s"
 
-#: src/xz/file_io.c:1041
+#: src/xz/file_io.c:1157
 #, c-format
 msgid "%s: Read error: %s"
 msgstr "%s : Erreur d'écriture : %s"
 
-#: src/xz/file_io.c:1061
+#: src/xz/file_io.c:1177
 #, c-format
 msgid "%s: Error seeking the file: %s"
 msgstr "%s : Impossible de se déplacer dans le fichier : %s"
 
-#: src/xz/file_io.c:1071
+#: src/xz/file_io.c:1187
 #, c-format
 msgid "%s: Unexpected end of file"
 msgstr "%s : Fin de fichier inattendue"
 
-#: src/xz/file_io.c:1130
+#: src/xz/file_io.c:1246
 #, c-format
 msgid "%s: Write error: %s"
 msgstr "%s : Erreur d'écriture : %s"
@@ -332,41 +352,41 @@
 #. to Ratio, the columns are right aligned. Check and Filename
 #. are left aligned. If you need longer words, it's OK to
 #. use two lines here. Test with "xz -l foo.xz".
-#: src/xz/list.c:671
+#: src/xz/list.c:677
 msgid "Strms  Blocks   Compressed Uncompressed  Ratio  Check   Filename"
 msgstr "Flux    Blocs    Compressé  Décompressé  Ratio  Vérif.  Nom de fichier"
 
-#: src/xz/list.c:711
+#: src/xz/list.c:717
 #, c-format
 msgid "  Streams:            %s\n"
 msgstr "  Flux :                            %s\n"
 
-#: src/xz/list.c:713
+#: src/xz/list.c:719
 #, c-format
 msgid "  Blocks:             %s\n"
 msgstr "  Blocs :                           %s\n"
 
-#: src/xz/list.c:715
+#: src/xz/list.c:721
 #, c-format
 msgid "  Compressed size:    %s\n"
 msgstr "  Taille données avec compression : %s\n"
 
-#: src/xz/list.c:718
+#: src/xz/list.c:724
 #, c-format
 msgid "  Uncompressed size:  %s\n"
 msgstr "  Taille données sans compression : %s\n"
 
-#: src/xz/list.c:721
+#: src/xz/list.c:727
 #, c-format
 msgid "  Ratio:              %s\n"
 msgstr "  Ratio :                           %s\n"
 
-#: src/xz/list.c:723
+#: src/xz/list.c:729
 #, c-format
 msgid "  Check:              %s\n"
 msgstr "  Vérification :                    %s\n"
 
-#: src/xz/list.c:724
+#: src/xz/list.c:730
 #, c-format
 msgid "  Stream padding:     %s\n"
 msgstr "  Octets de rembourrage du flux :   %s\n"
@@ -374,7 +394,7 @@
 #. TRANSLATORS: The second line is column headings. All except
 #. Check are right aligned; Check is left aligned. Test with
 #. "xz -lv foo.xz".
-#: src/xz/list.c:752
+#: src/xz/list.c:758
 msgid ""
 "  Streams:\n"
 "    Stream    Blocks      CompOffset    UncompOffset        CompSize      UncompSize  Ratio  Check      Padding"
@@ -384,7 +404,7 @@
 
 #. TRANSLATORS: The second line is column headings. All
 #. except Check are right aligned; Check is left aligned.
-#: src/xz/list.c:807
+#: src/xz/list.c:813
 #, c-format
 msgid ""
 "  Blocks:\n"
@@ -400,57 +420,57 @@
 #. are right aligned. %*s is replaced with 0-120
 #. spaces to make the CheckVal column wide enough.
 #. Test with "xz -lvv foo.xz".
-#: src/xz/list.c:819
+#: src/xz/list.c:825
 #, c-format
 msgid "      CheckVal %*s Header  Flags        CompSize    MemUsage  Filters"
 msgstr "     ValVérif %*sEn-tête  Drapeaux   TailleComp     UtilMém  Filtres"
 
-#: src/xz/list.c:897 src/xz/list.c:1072
+#: src/xz/list.c:903 src/xz/list.c:1078
 #, c-format
 msgid "  Memory needed:      %s MiB\n"
 msgstr "  Mémoire nécessaire :              %s MiB\n"
 
-#: src/xz/list.c:899 src/xz/list.c:1074
+#: src/xz/list.c:905 src/xz/list.c:1080
 #, c-format
 msgid "  Sizes in headers:   %s\n"
 msgstr "  Tailles stockées dans l'en-tête : %s\n"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "Yes"
 msgstr "Oui"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "No"
 msgstr "Non"
 
-#: src/xz/list.c:901 src/xz/list.c:1076
+#: src/xz/list.c:907 src/xz/list.c:1082
 #, c-format
 msgid "  Minimum XZ Utils version: %s\n"
 msgstr "  Version minimale de XZ Utils : %s\n"
 
 #. TRANSLATORS: %s is an integer. Only the plural form of this
 #. message is used (e.g. "2 files"). Test with "xz -l foo.xz bar.xz".
-#: src/xz/list.c:1051
+#: src/xz/list.c:1057
 #, c-format
 msgid "%s file\n"
 msgid_plural "%s files\n"
 msgstr[0] "%s fichier\n"
 msgstr[1] "%s fichiers\n"
 
-#: src/xz/list.c:1064
+#: src/xz/list.c:1070
 msgid "Totals:"
 msgstr "Totaux :"
 
-#: src/xz/list.c:1065
+#: src/xz/list.c:1071
 #, c-format
 msgid "  Number of files:    %s\n"
 msgstr "  Nombre de fichiers : %s\n"
 
-#: src/xz/list.c:1140
+#: src/xz/list.c:1146
 msgid "--list works only on .xz files (--format=xz or --format=auto)"
 msgstr "--list ne marche que sur les fichiers .xz (--format=xz ou --format=auto)"
 
-#: src/xz/list.c:1146
+#: src/xz/list.c:1152
 msgid "--list does not support reading from standard input"
 msgstr "--list est incompatible avec la lecture sur l'entrée standard"
 
@@ -473,7 +493,7 @@
 msgid "Compression and decompression with --robot are not supported yet."
 msgstr "La compression et la décompression ne marchent pas encore avec --robot."
 
-#: src/xz/main.c:231
+#: src/xz/main.c:252
 msgid "Cannot read data from standard input when reading filenames from standard input"
 msgstr "Impossible de lire à la fois les données et les noms de fichiers depuis l'entrée standard"
 
Binary files xz-5.2.2/po/it.gmo and xz-5.2.4/po/it.gmo differ
diff -uNrwB xz-5.2.2/po/it.po xz-5.2.4/po/it.po
--- xz-5.2.2/po/it.po	2015-09-29 17:03:54.000000000 +0600
+++ xz-5.2.4/po/it.po	2018-04-29 21:19:55.000000000 +0600
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: xz-utils\n"
 "Report-Msgid-Bugs-To: lasse.collin@tukaani.org\n"
-"POT-Creation-Date: 2015-09-29 14:03+0300\n"
+"POT-Creation-Date: 2018-04-29 18:19+0300\n"
 "PO-Revision-Date: 2014-10-20 13:16+0100\n"
 "Last-Translator: Milo Casagrande <milo@milo.name>\n"
 "Language-Team: Italian <tp@lists.linux.it>\n"
@@ -53,6 +53,14 @@
 msgid "The environment variable %s contains too many arguments"
 msgstr "La variabile d'ambiente %s contiene troppi argomenti"
 
+#: src/xz/args.c:643
+msgid "Compression support was disabled at build time"
+msgstr ""
+
+#: src/xz/args.c:650
+msgid "Decompression support was disabled at build time"
+msgstr ""
+
 #: src/xz/coder.c:110
 msgid "Maximum number of filters is four"
 msgstr "Il numero massimo di filtri è quattro"
@@ -85,36 +93,48 @@
 msgid "Switching to single-threaded mode due to --flush-timeout"
 msgstr "Passaggio a modalità singolo thread poiché viene usato --flush-timeout"
 
-#: src/xz/coder.c:234
+#: src/xz/coder.c:235
 #, c-format
 msgid "Using up to %<PRIu32> threads."
 msgstr "Vengono usati circa %<PRIu32> thread."
 
-#: src/xz/coder.c:247
+#: src/xz/coder.c:251
 msgid "Unsupported filter chain or filter options"
 msgstr "Catena di filtri od opzioni del filtro non supportata"
 
-#: src/xz/coder.c:255
+#: src/xz/coder.c:263
 #, c-format
 msgid "Decompression will need %s MiB of memory."
 msgstr "L'estrazione necessita di %s MiB di memoria."
 
-#: src/xz/coder.c:290
+#: src/xz/coder.c:300
 #, c-format
 msgid "Adjusted the number of threads from %s to %s to not exceed the memory usage limit of %s MiB"
 msgstr "Regolato il numero di thread da %s a %s per non eccedere il limite di utilizzo della memoria di %s MiB"
 
-#: src/xz/coder.c:344
+#: src/xz/coder.c:354
 #, c-format
 msgid "Adjusted LZMA%c dictionary size from %s MiB to %s MiB to not exceed the memory usage limit of %s MiB"
 msgstr "Regolata la dimensione del dizionario LZMA%c da %s MiB a %s MiB per non superare il limite dell'uso della memoria di %s MiB"
 
-#: src/xz/file_io.c:87 src/xz/file_io.c:95
+#: src/xz/file_io.c:110 src/xz/file_io.c:118
 #, c-format
 msgid "Error creating a pipe: %s"
 msgstr "Errore nel creare una pipe: %s"
 
-#: src/xz/file_io.c:172
+#: src/xz/file_io.c:173
+msgid "Sandbox is disabled due to incompatible command line arguments"
+msgstr ""
+
+#: src/xz/file_io.c:216
+msgid "Sandbox was successfully enabled"
+msgstr ""
+
+#: src/xz/file_io.c:220
+msgid "Failed to enable the sandbox"
+msgstr ""
+
+#: src/xz/file_io.c:262
 #, c-format
 msgid "%s: poll() failed: %s"
 msgstr "%s: poll() non riuscita: %s"
@@ -129,107 +149,107 @@
 #. it is possible that the user has put a new file in place
 #. of the original file, and in that case it obviously
 #. shouldn't be removed.
-#: src/xz/file_io.c:242
+#: src/xz/file_io.c:332
 #, c-format
 msgid "%s: File seems to have been moved, not removing"
 msgstr "%s: sembra che il file sia stato spostato, non viene rimosso"
 
-#: src/xz/file_io.c:249 src/xz/file_io.c:762
+#: src/xz/file_io.c:339 src/xz/file_io.c:878
 #, c-format
 msgid "%s: Cannot remove: %s"
 msgstr "%s: impossibile rimuovere: %s"
 
-#: src/xz/file_io.c:274
+#: src/xz/file_io.c:364
 #, c-format
 msgid "%s: Cannot set the file owner: %s"
 msgstr "%s: impossibile impostare il proprietario del file: %s"
 
-#: src/xz/file_io.c:280
+#: src/xz/file_io.c:370
 #, c-format
 msgid "%s: Cannot set the file group: %s"
 msgstr "%s: impossibile impostare il gruppo del file: %s"
 
-#: src/xz/file_io.c:299
+#: src/xz/file_io.c:389
 #, c-format
 msgid "%s: Cannot set the file permissions: %s"
 msgstr "%s: impossibile impostare i permessi del file: %s"
 
-#: src/xz/file_io.c:409
+#: src/xz/file_io.c:515
 #, c-format
 msgid "Error getting the file status flags from standard input: %s"
 msgstr "Errore nel recuperare le flag di stato del file dallo standard input: %s"
 
-#: src/xz/file_io.c:463 src/xz/file_io.c:525
+#: src/xz/file_io.c:572 src/xz/file_io.c:634
 #, c-format
 msgid "%s: Is a symbolic link, skipping"
 msgstr "%s: è un collegamento simbolico, viene saltato"
 
-#: src/xz/file_io.c:554
+#: src/xz/file_io.c:663
 #, c-format
 msgid "%s: Is a directory, skipping"
 msgstr "%s: è una directory, viene saltata"
 
-#: src/xz/file_io.c:560
+#: src/xz/file_io.c:669
 #, c-format
 msgid "%s: Not a regular file, skipping"
 msgstr "%s: non è un file regolare, viene saltato"
 
-#: src/xz/file_io.c:577
+#: src/xz/file_io.c:686
 #, c-format
 msgid "%s: File has setuid or setgid bit set, skipping"
 msgstr "%s: il file ha il bit setuid o setgid impostato, viene saltato"
 
-#: src/xz/file_io.c:584
+#: src/xz/file_io.c:693
 #, c-format
 msgid "%s: File has sticky bit set, skipping"
 msgstr "%s: il file ha lo sticky bit impostato, viene saltato"
 
-#: src/xz/file_io.c:591
+#: src/xz/file_io.c:700
 #, c-format
 msgid "%s: Input file has more than one hard link, skipping"
 msgstr "%s: il file di input ha più di un collegamento fisico, viene saltato"
 
-#: src/xz/file_io.c:671
+#: src/xz/file_io.c:788
 #, c-format
 msgid "Error restoring the status flags to standard input: %s"
 msgstr "Errore nel ripristinare le flag di stato sullo standard input: %s"
 
-#: src/xz/file_io.c:720
+#: src/xz/file_io.c:836
 #, c-format
 msgid "Error getting the file status flags from standard output: %s"
 msgstr "Errore nel recuperare le flag di stato del file dallo standard output: %s"
 
-#: src/xz/file_io.c:898
+#: src/xz/file_io.c:1014
 #, c-format
 msgid "Error restoring the O_APPEND flag to standard output: %s"
 msgstr "Errore nel ripristinare la flag O_APPEND sullo standard output: %s"
 
-#: src/xz/file_io.c:910
+#: src/xz/file_io.c:1026
 #, c-format
 msgid "%s: Closing the file failed: %s"
 msgstr "%s: chiusura del file non riuscita: %s"
 
-#: src/xz/file_io.c:946 src/xz/file_io.c:1172
+#: src/xz/file_io.c:1062 src/xz/file_io.c:1288
 #, c-format
 msgid "%s: Seeking failed when trying to create a sparse file: %s"
 msgstr "%s: posizionamento non riuscito nel tentativo di creare un file sparso: %s"
 
-#: src/xz/file_io.c:1041
+#: src/xz/file_io.c:1157
 #, c-format
 msgid "%s: Read error: %s"
 msgstr "%s: errore di lettura: %s"
 
-#: src/xz/file_io.c:1061
+#: src/xz/file_io.c:1177
 #, c-format
 msgid "%s: Error seeking the file: %s"
 msgstr "%s: errore nel cercare il file: %s"
 
-#: src/xz/file_io.c:1071
+#: src/xz/file_io.c:1187
 #, c-format
 msgid "%s: Unexpected end of file"
 msgstr "%s: fine del file inaspettata"
 
-#: src/xz/file_io.c:1130
+#: src/xz/file_io.c:1246
 #, c-format
 msgid "%s: Write error: %s"
 msgstr "%s: errore di scrittura: %s"
@@ -326,41 +346,41 @@
 #. to Ratio, the columns are right aligned. Check and Filename
 #. are left aligned. If you need longer words, it's OK to
 #. use two lines here. Test with "xz -l foo.xz".
-#: src/xz/list.c:671
+#: src/xz/list.c:677
 msgid "Strms  Blocks   Compressed Uncompressed  Ratio  Check   Filename"
 msgstr " Strm  Blocc.    Compresso     Estratto  Rapp.  Contr   Nome file"
 
-#: src/xz/list.c:711
+#: src/xz/list.c:717
 #, c-format
 msgid "  Streams:            %s\n"
 msgstr "  Stream:               %s\n"
 
-#: src/xz/list.c:713
+#: src/xz/list.c:719
 #, c-format
 msgid "  Blocks:             %s\n"
 msgstr "  Blocchi:              %s\n"
 
-#: src/xz/list.c:715
+#: src/xz/list.c:721
 #, c-format
 msgid "  Compressed size:    %s\n"
 msgstr "  Dim. compresso:       %s\n"
 
-#: src/xz/list.c:718
+#: src/xz/list.c:724
 #, c-format
 msgid "  Uncompressed size:  %s\n"
 msgstr "  Dim. estratto:        %s\n"
 
-#: src/xz/list.c:721
+#: src/xz/list.c:727
 #, c-format
 msgid "  Ratio:              %s\n"
 msgstr "  Rapporto:             %s\n"
 
-#: src/xz/list.c:723
+#: src/xz/list.c:729
 #, c-format
 msgid "  Check:              %s\n"
 msgstr "  Controllo:            %s\n"
 
-#: src/xz/list.c:724
+#: src/xz/list.c:730
 #, c-format
 msgid "  Stream padding:     %s\n"
 msgstr "  Padding dello stream: %s\n"
@@ -368,7 +388,7 @@
 #. TRANSLATORS: The second line is column headings. All except
 #. Check are right aligned; Check is left aligned. Test with
 #. "xz -lv foo.xz".
-#: src/xz/list.c:752
+#: src/xz/list.c:758
 msgid ""
 "  Streams:\n"
 "    Stream    Blocks      CompOffset    UncompOffset        CompSize      UncompSize  Ratio  Check      Padding"
@@ -378,7 +398,7 @@
 
 #. TRANSLATORS: The second line is column headings. All
 #. except Check are right aligned; Check is left aligned.
-#: src/xz/list.c:807
+#: src/xz/list.c:813
 #, c-format
 msgid ""
 "  Blocks:\n"
@@ -394,57 +414,57 @@
 #. are right aligned. %*s is replaced with 0-120
 #. spaces to make the CheckVal column wide enough.
 #. Test with "xz -lvv foo.xz".
-#: src/xz/list.c:819
+#: src/xz/list.c:825
 #, c-format
 msgid "      CheckVal %*s Header  Flags        CompSize    MemUsage  Filters"
 msgstr "      Val.cont %*s Header  Flag       Dim.compr.    Uso mem.  Filtri"
 
-#: src/xz/list.c:897 src/xz/list.c:1072
+#: src/xz/list.c:903 src/xz/list.c:1078
 #, c-format
 msgid "  Memory needed:      %s MiB\n"
 msgstr "  Memoria necessaria:   %s MiB\n"
 
-#: src/xz/list.c:899 src/xz/list.c:1074
+#: src/xz/list.c:905 src/xz/list.c:1080
 #, c-format
 msgid "  Sizes in headers:   %s\n"
 msgstr "  Dim. negli header:    %s\n"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "Yes"
 msgstr "Sì"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "No"
 msgstr "No"
 
-#: src/xz/list.c:901 src/xz/list.c:1076
+#: src/xz/list.c:907 src/xz/list.c:1082
 #, c-format
 msgid "  Minimum XZ Utils version: %s\n"
 msgstr "  Versione \"XZ Utils\" minima: %s\n"
 
 #. TRANSLATORS: %s is an integer. Only the plural form of this
 #. message is used (e.g. "2 files"). Test with "xz -l foo.xz bar.xz".
-#: src/xz/list.c:1051
+#: src/xz/list.c:1057
 #, c-format
 msgid "%s file\n"
 msgid_plural "%s files\n"
 msgstr[0] "%s file\n"
 msgstr[1] "%s file\n"
 
-#: src/xz/list.c:1064
+#: src/xz/list.c:1070
 msgid "Totals:"
 msgstr "Totali:"
 
-#: src/xz/list.c:1065
+#: src/xz/list.c:1071
 #, c-format
 msgid "  Number of files:    %s\n"
 msgstr "  Numero di file:       %s\n"
 
-#: src/xz/list.c:1140
+#: src/xz/list.c:1146
 msgid "--list works only on .xz files (--format=xz or --format=auto)"
 msgstr "--list funziona solamente con file .xz (--format=xz o --format=auto)"
 
-#: src/xz/list.c:1146
+#: src/xz/list.c:1152
 msgid "--list does not support reading from standard input"
 msgstr "--list non è in grado di leggere dallo standard input"
 
@@ -467,7 +487,7 @@
 msgid "Compression and decompression with --robot are not supported yet."
 msgstr "La compressione e l'estrazione con --robot non sono ancora supportate."
 
-#: src/xz/main.c:231
+#: src/xz/main.c:252
 msgid "Cannot read data from standard input when reading filenames from standard input"
 msgstr "Impossibile leggere i dati dallo standard input durante la lettura dei nomi dei file dallo standard input"
 
diff -uNrwB xz-5.2.2/po/Makefile.in.in xz-5.2.4/po/Makefile.in.in
--- xz-5.2.2/po/Makefile.in.in	2015-09-29 17:03:27.000000000 +0600
+++ xz-5.2.4/po/Makefile.in.in	2018-04-29 21:18:42.000000000 +0600
@@ -8,13 +8,14 @@
 # Please note that the actual code of GNU gettext is covered by the GNU
 # General Public License and is *not* in the public domain.
 #
-# Origin: gettext-0.18
-GETTEXT_MACRO_VERSION = 0.18
+# Origin: gettext-0.19
+GETTEXT_MACRO_VERSION = 0.19
 
 PACKAGE = @PACKAGE@
 VERSION = @VERSION@
 PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 
+SED = @SED@
 SHELL = /bin/sh
 @SET_MAKE@
 
@@ -76,6 +77,16 @@
 
 CATALOGS = @CATALOGS@
 
+POFILESDEPS_ = $(srcdir)/$(DOMAIN).pot
+POFILESDEPS_yes = $(POFILESDEPS_)
+POFILESDEPS_no =
+POFILESDEPS = $(POFILESDEPS_$(PO_DEPENDS_ON_POT))
+
+DISTFILESDEPS_ = update-po
+DISTFILESDEPS_yes = $(DISTFILESDEPS_)
+DISTFILESDEPS_no =
+DISTFILESDEPS = $(DISTFILESDEPS_$(DIST_DEPENDS_ON_UPDATE_PO))
+
 # Makevars gets inserted here. (Don't remove this line!)
 
 .SUFFIXES:
@@ -96,14 +107,14 @@
 	mv t-$@ $@
 
 
-all: check-macro-version all-@USE_NLS@
+all: all-@USE_NLS@
 
 all-yes: stamp-po
 all-no:
 
 # Ensure that the gettext macros and this Makefile.in.in are in sync.
-check-macro-version:
-	@test "$(GETTEXT_MACRO_VERSION)" = "@GETTEXT_MACRO_VERSION@" \
+CHECK_MACRO_VERSION = \
+	test "$(GETTEXT_MACRO_VERSION)" = "@GETTEXT_MACRO_VERSION@" \
 	  || { echo "*** error: gettext infrastructure mismatch: using a Makefile.in.in from gettext version $(GETTEXT_MACRO_VERSION) but the autoconf macros are from gettext version @GETTEXT_MACRO_VERSION@" 1>&2; \
 	       exit 1; \
 	     }
@@ -123,6 +134,7 @@
 # $(POFILES) has been designed to not touch files that don't need to be
 # changed.
 stamp-po: $(srcdir)/$(DOMAIN).pot
+	@$(CHECK_MACRO_VERSION)
 	test ! -f $(srcdir)/$(DOMAIN).pot || \
 	  test -z "$(GMOFILES)" || $(MAKE) $(GMOFILES)
 	@test ! -f $(srcdir)/$(DOMAIN).pot || { \
@@ -137,11 +149,29 @@
 
 # This target rebuilds $(DOMAIN).pot; it is an expensive operation.
 # Note that $(DOMAIN).pot is not touched if it doesn't need to be changed.
+# The determination of whether the package xyz is a GNU one is based on the
+# heuristic whether some file in the top level directory mentions "GNU xyz".
+# If GNU 'find' is available, we avoid grepping through monster files.
 $(DOMAIN).pot-update: $(POTFILES) $(srcdir)/POTFILES.in remove-potcdate.sed
-	if LC_ALL=C grep 'GNU @PACKAGE@' $(top_srcdir)/* 2>/dev/null | grep -v 'libtool:' >/dev/null; then \
-	  package_gnu='GNU '; \
+	package_gnu="$(PACKAGE_GNU)"; \
+	test -n "$$package_gnu" || { \
+	  if { if (LC_ALL=C find --version) 2>/dev/null | grep GNU >/dev/null; then \
+		 LC_ALL=C find -L $(top_srcdir) -maxdepth 1 -type f \
+			       -size -10000000c -exec grep 'GNU @PACKAGE@' \
+			       /dev/null '{}' ';' 2>/dev/null; \
+	       else \
+		 LC_ALL=C grep 'GNU @PACKAGE@' $(top_srcdir)/* 2>/dev/null; \
+	       fi; \
+	     } | grep -v 'libtool:' >/dev/null; then \
+	     package_gnu=yes; \
+	   else \
+	     package_gnu=no; \
+	   fi; \
+	}; \
+	if test "$$package_gnu" = "yes"; then \
+	  package_prefix='GNU '; \
 	else \
-	  package_gnu=''; \
+	  package_prefix=''; \
 	fi; \
 	if test -n '$(MSGID_BUGS_ADDRESS)' || test '$(PACKAGE_BUGREPORT)' = '@'PACKAGE_BUGREPORT'@'; then \
 	  msgid_bugs_address='$(MSGID_BUGS_ADDRESS)'; \
@@ -161,7 +191,7 @@
 	      --add-comments=TRANSLATORS: $(XGETTEXT_OPTIONS) @XGETTEXT_EXTRA_OPTIONS@ \
 	      --files-from=$(srcdir)/POTFILES.in \
 	      --copyright-holder='$(COPYRIGHT_HOLDER)' \
-	      --package-name="$${package_gnu}@PACKAGE@" \
+	      --package-name="$${package_prefix}@PACKAGE@" \
 	      --package-version='@VERSION@' \
 	      --msgid-bugs-address="$$msgid_bugs_address" \
 	    ;; \
@@ -189,9 +219,10 @@
 
 # This target rebuilds a PO file if $(DOMAIN).pot has changed.
 # Note that a PO file is not touched if it doesn't need to be changed.
-$(POFILES): $(srcdir)/$(DOMAIN).pot
+$(POFILES): $(POFILESDEPS)
 	@lang=`echo $@ | sed -e 's,.*/,,' -e 's/\.po$$//'`; \
 	if test -f "$(srcdir)/$${lang}.po"; then \
+	  test -f $(srcdir)/$(DOMAIN).pot || $(MAKE) $(srcdir)/$(DOMAIN).pot; \
 	  test "$(srcdir)" = . && cdcmd="" || cdcmd="cd $(srcdir) && "; \
 	  echo "$${cdcmd}$(MSGMERGE_UPDATE) $(MSGMERGE_OPTIONS) --lang=$${lang} $${lang}.po $(DOMAIN).pot"; \
 	  cd $(srcdir) \
@@ -352,7 +383,7 @@
 
 distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
 dist distdir:
-	$(MAKE) update-po
+	test -z "$(DISTFILESDEPS)" || $(MAKE) $(DISTFILESDEPS)
 	@$(MAKE) dist2
 # This is a separate target because 'update-po' must be executed before.
 dist2: stamp-po $(DISTFILES)
Binary files xz-5.2.2/po/pl.gmo and xz-5.2.4/po/pl.gmo differ
diff -uNrwB xz-5.2.2/po/pl.po xz-5.2.4/po/pl.po
--- xz-5.2.2/po/pl.po	2015-09-29 17:03:54.000000000 +0600
+++ xz-5.2.4/po/pl.po	2018-04-29 21:19:55.000000000 +0600
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: xz 5.1.4\n"
 "Report-Msgid-Bugs-To: lasse.collin@tukaani.org\n"
-"POT-Creation-Date: 2015-09-29 14:03+0300\n"
+"POT-Creation-Date: 2018-04-29 18:19+0300\n"
 "PO-Revision-Date: 2014-10-15 20:53+0200\n"
 "Last-Translator: Jakub Bogusz <qboosh@pld-linux.org>\n"
 "Language-Team: Polish <translation-team-pl@lists.sourceforge.net>\n"
@@ -49,6 +49,14 @@
 msgid "The environment variable %s contains too many arguments"
 msgstr "Zmienna środowiskowa %s zawiera zbyt dużo argumentów"
 
+#: src/xz/args.c:643
+msgid "Compression support was disabled at build time"
+msgstr ""
+
+#: src/xz/args.c:650
+msgid "Decompression support was disabled at build time"
+msgstr ""
+
 #: src/xz/coder.c:110
 msgid "Maximum number of filters is four"
 msgstr "Maksymalna liczba filtrów to cztery"
@@ -81,36 +89,48 @@
 msgid "Switching to single-threaded mode due to --flush-timeout"
 msgstr "Przełączanie w tryb jednowątkowy z powodu --flush-timeout"
 
-#: src/xz/coder.c:234
+#: src/xz/coder.c:235
 #, c-format
 msgid "Using up to %<PRIu32> threads."
 msgstr "Maksymalna liczba używanych wątków: %<PRIu32>."
 
-#: src/xz/coder.c:247
+#: src/xz/coder.c:251
 msgid "Unsupported filter chain or filter options"
 msgstr "Nieobsługiwany łańcuch filtrów lub opcje filtra"
 
-#: src/xz/coder.c:255
+#: src/xz/coder.c:263
 #, c-format
 msgid "Decompression will need %s MiB of memory."
 msgstr "Dekompresja będzie wymagała %s MiB pamięci."
 
-#: src/xz/coder.c:290
+#: src/xz/coder.c:300
 #, c-format
 msgid "Adjusted the number of threads from %s to %s to not exceed the memory usage limit of %s MiB"
 msgstr "Skorygowano liczbę wątków z %s do %s, aby nie przekroczyć limitu użycia pamięci %s MiB"
 
-#: src/xz/coder.c:344
+#: src/xz/coder.c:354
 #, c-format
 msgid "Adjusted LZMA%c dictionary size from %s MiB to %s MiB to not exceed the memory usage limit of %s MiB"
 msgstr "Skorygowano rozmiar słownika LZMA%c z %s MiB do %s MiB aby nie przekroczyć limitu użycia pamięci %s MiB"
 
-#: src/xz/file_io.c:87 src/xz/file_io.c:95
+#: src/xz/file_io.c:110 src/xz/file_io.c:118
 #, c-format
 msgid "Error creating a pipe: %s"
 msgstr "Błąd tworzenia potoku: %s"
 
-#: src/xz/file_io.c:172
+#: src/xz/file_io.c:173
+msgid "Sandbox is disabled due to incompatible command line arguments"
+msgstr ""
+
+#: src/xz/file_io.c:216
+msgid "Sandbox was successfully enabled"
+msgstr ""
+
+#: src/xz/file_io.c:220
+msgid "Failed to enable the sandbox"
+msgstr ""
+
+#: src/xz/file_io.c:262
 #, c-format
 msgid "%s: poll() failed: %s"
 msgstr "%s: poll() nie powiodło się: %s"
@@ -125,107 +145,107 @@
 #. it is possible that the user has put a new file in place
 #. of the original file, and in that case it obviously
 #. shouldn't be removed.
-#: src/xz/file_io.c:242
+#: src/xz/file_io.c:332
 #, c-format
 msgid "%s: File seems to have been moved, not removing"
 msgstr "%s: Plik wygląda na przeniesiony, nie zostanie usunięty"
 
-#: src/xz/file_io.c:249 src/xz/file_io.c:762
+#: src/xz/file_io.c:339 src/xz/file_io.c:878
 #, c-format
 msgid "%s: Cannot remove: %s"
 msgstr "%s: Nie można usunąć: %s"
 
-#: src/xz/file_io.c:274
+#: src/xz/file_io.c:364
 #, c-format
 msgid "%s: Cannot set the file owner: %s"
 msgstr "%s: Nie można ustawić właściciela pliku: %s"
 
-#: src/xz/file_io.c:280
+#: src/xz/file_io.c:370
 #, c-format
 msgid "%s: Cannot set the file group: %s"
 msgstr "%s: Nie można ustawić grupy pliku: %s"
 
-#: src/xz/file_io.c:299
+#: src/xz/file_io.c:389
 #, c-format
 msgid "%s: Cannot set the file permissions: %s"
 msgstr "%s: Nie można ustawić uprawnień pliku: %s"
 
-#: src/xz/file_io.c:409
+#: src/xz/file_io.c:515
 #, c-format
 msgid "Error getting the file status flags from standard input: %s"
 msgstr "Błąd podczas pobierania flag stanu pliku ze standardowego wejścia: %s"
 
-#: src/xz/file_io.c:463 src/xz/file_io.c:525
+#: src/xz/file_io.c:572 src/xz/file_io.c:634
 #, c-format
 msgid "%s: Is a symbolic link, skipping"
 msgstr "%s: Jest dowiązaniem symbolicznym, pominięto"
 
-#: src/xz/file_io.c:554
+#: src/xz/file_io.c:663
 #, c-format
 msgid "%s: Is a directory, skipping"
 msgstr "%s: Jest katalogiem, pominięto"
 
-#: src/xz/file_io.c:560
+#: src/xz/file_io.c:669
 #, c-format
 msgid "%s: Not a regular file, skipping"
 msgstr "%s: Nie jest zwykłym plikiem, pominięto"
 
-#: src/xz/file_io.c:577
+#: src/xz/file_io.c:686
 #, c-format
 msgid "%s: File has setuid or setgid bit set, skipping"
 msgstr "%s: Plik ma ustawiony bit setuid lub setgid, pominięto"
 
-#: src/xz/file_io.c:584
+#: src/xz/file_io.c:693
 #, c-format
 msgid "%s: File has sticky bit set, skipping"
 msgstr "%s: Plik ma ustawiony bit sticky, pominięto"
 
-#: src/xz/file_io.c:591
+#: src/xz/file_io.c:700
 #, c-format
 msgid "%s: Input file has more than one hard link, skipping"
 msgstr "%s: Plik wejściowy ma więcej niż jedno dowiązanie zwykłe, pominięto"
 
-#: src/xz/file_io.c:671
+#: src/xz/file_io.c:788
 #, c-format
 msgid "Error restoring the status flags to standard input: %s"
 msgstr "Błąd podczas odtwarzania flag stanu dla standardowego wejścia: %s"
 
-#: src/xz/file_io.c:720
+#: src/xz/file_io.c:836
 #, c-format
 msgid "Error getting the file status flags from standard output: %s"
 msgstr "Błąd podczas pobierania flag stanu pliku ze standardowego wyjścia: %s"
 
-#: src/xz/file_io.c:898
+#: src/xz/file_io.c:1014
 #, c-format
 msgid "Error restoring the O_APPEND flag to standard output: %s"
 msgstr "Błąd podczas odtwarzania flagi O_APPEND dla standardowego wyjścia: %s"
 
-#: src/xz/file_io.c:910
+#: src/xz/file_io.c:1026
 #, c-format
 msgid "%s: Closing the file failed: %s"
 msgstr "%s: Zamknięcie pliku nie powiodło się: %s"
 
-#: src/xz/file_io.c:946 src/xz/file_io.c:1172
+#: src/xz/file_io.c:1062 src/xz/file_io.c:1288
 #, c-format
 msgid "%s: Seeking failed when trying to create a sparse file: %s"
 msgstr "%s: Zmiana pozycji nie powiodła się podczas próby utworzenia pliku rzadkiego: %s"
 
-#: src/xz/file_io.c:1041
+#: src/xz/file_io.c:1157
 #, c-format
 msgid "%s: Read error: %s"
 msgstr "%s: Błąd odczytu: %s"
 
-#: src/xz/file_io.c:1061
+#: src/xz/file_io.c:1177
 #, c-format
 msgid "%s: Error seeking the file: %s"
 msgstr "%s: Błąd podczas zmiany pozycji w pliku: %s"
 
-#: src/xz/file_io.c:1071
+#: src/xz/file_io.c:1187
 #, c-format
 msgid "%s: Unexpected end of file"
 msgstr "%s: Nieoczekiwany koniec pliku"
 
-#: src/xz/file_io.c:1130
+#: src/xz/file_io.c:1246
 #, c-format
 msgid "%s: Write error: %s"
 msgstr "%s: Błąd zapisu: %s"
@@ -322,41 +342,41 @@
 #. to Ratio, the columns are right aligned. Check and Filename
 #. are left aligned. If you need longer words, it's OK to
 #. use two lines here. Test with "xz -l foo.xz".
-#: src/xz/list.c:671
+#: src/xz/list.c:677
 msgid "Strms  Blocks   Compressed Uncompressed  Ratio  Check   Filename"
 msgstr "Strum.  Bloki    Spakowany  Rozpakowany  Wsp.  Kontrola Nazwa pliku"
 
-#: src/xz/list.c:711
+#: src/xz/list.c:717
 #, c-format
 msgid "  Streams:            %s\n"
 msgstr "  Strumienie:            %s\n"
 
-#: src/xz/list.c:713
+#: src/xz/list.c:719
 #, c-format
 msgid "  Blocks:             %s\n"
 msgstr "  Bloki:                 %s\n"
 
-#: src/xz/list.c:715
+#: src/xz/list.c:721
 #, c-format
 msgid "  Compressed size:    %s\n"
 msgstr "  Rozmiar spakowany:     %s\n"
 
-#: src/xz/list.c:718
+#: src/xz/list.c:724
 #, c-format
 msgid "  Uncompressed size:  %s\n"
 msgstr "  Rozmiar rozpakowany:   %s\n"
 
-#: src/xz/list.c:721
+#: src/xz/list.c:727
 #, c-format
 msgid "  Ratio:              %s\n"
 msgstr "  Współczynnik:          %s\n"
 
-#: src/xz/list.c:723
+#: src/xz/list.c:729
 #, c-format
 msgid "  Check:              %s\n"
 msgstr "  Kontrola spójności:    %s\n"
 
-#: src/xz/list.c:724
+#: src/xz/list.c:730
 #, c-format
 msgid "  Stream padding:     %s\n"
 msgstr "  Wyrównanie strumienia: %s\n"
@@ -364,7 +384,7 @@
 #. TRANSLATORS: The second line is column headings. All except
 #. Check are right aligned; Check is left aligned. Test with
 #. "xz -lv foo.xz".
-#: src/xz/list.c:752
+#: src/xz/list.c:758
 msgid ""
 "  Streams:\n"
 "    Stream    Blocks      CompOffset    UncompOffset        CompSize      UncompSize  Ratio  Check      Padding"
@@ -374,7 +394,7 @@
 
 #. TRANSLATORS: The second line is column headings. All
 #. except Check are right aligned; Check is left aligned.
-#: src/xz/list.c:807
+#: src/xz/list.c:813
 #, c-format
 msgid ""
 "  Blocks:\n"
@@ -390,37 +410,37 @@
 #. are right aligned. %*s is replaced with 0-120
 #. spaces to make the CheckVal column wide enough.
 #. Test with "xz -lvv foo.xz".
-#: src/xz/list.c:819
+#: src/xz/list.c:825
 #, c-format
 msgid "      CheckVal %*s Header  Flags        CompSize    MemUsage  Filters"
 msgstr "   S.kontr. %*sNagłówek Flagi     Rozm. spak.  Uż.pamięci  Filtry"
 
-#: src/xz/list.c:897 src/xz/list.c:1072
+#: src/xz/list.c:903 src/xz/list.c:1078
 #, c-format
 msgid "  Memory needed:      %s MiB\n"
 msgstr "  Wymagana pamięć:       %s MiB\n"
 
-#: src/xz/list.c:899 src/xz/list.c:1074
+#: src/xz/list.c:905 src/xz/list.c:1080
 #, c-format
 msgid "  Sizes in headers:   %s\n"
 msgstr "  Rozmiar w nagłówkach:  %s\n"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "Yes"
 msgstr "Tak"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "No"
 msgstr "Nie"
 
-#: src/xz/list.c:901 src/xz/list.c:1076
+#: src/xz/list.c:907 src/xz/list.c:1082
 #, c-format
 msgid "  Minimum XZ Utils version: %s\n"
 msgstr "  Minimalna wersja XZ Utils: %s\n"
 
 #. TRANSLATORS: %s is an integer. Only the plural form of this
 #. message is used (e.g. "2 files"). Test with "xz -l foo.xz bar.xz".
-#: src/xz/list.c:1051
+#: src/xz/list.c:1057
 #, c-format
 msgid "%s file\n"
 msgid_plural "%s files\n"
@@ -428,20 +448,20 @@
 msgstr[1] "%s pliki\n"
 msgstr[2] "%s plików\n"
 
-#: src/xz/list.c:1064
+#: src/xz/list.c:1070
 msgid "Totals:"
 msgstr "Sumarycznie:"
 
-#: src/xz/list.c:1065
+#: src/xz/list.c:1071
 #, c-format
 msgid "  Number of files:    %s\n"
 msgstr "  Liczba plików:         %s\n"
 
-#: src/xz/list.c:1140
+#: src/xz/list.c:1146
 msgid "--list works only on .xz files (--format=xz or --format=auto)"
 msgstr "--list działa tylko z plikami .xz (--format=xz lub --format=auto)"
 
-#: src/xz/list.c:1146
+#: src/xz/list.c:1152
 msgid "--list does not support reading from standard input"
 msgstr "--list nie obsługuje odczytu ze standardowego wejścia"
 
@@ -464,7 +484,7 @@
 msgid "Compression and decompression with --robot are not supported yet."
 msgstr "Kompresja i dekompresja z opcją --robot nie jest jeszcze obsługiwana."
 
-#: src/xz/main.c:231
+#: src/xz/main.c:252
 msgid "Cannot read data from standard input when reading filenames from standard input"
 msgstr "Nie można odczytać danych ze standardowego wejścia przy czytaniu nazw plików ze standardowego wejścia"
 
diff -uNrwB xz-5.2.2/po/Rules-quot xz-5.2.4/po/Rules-quot
--- xz-5.2.2/po/Rules-quot	2015-09-29 17:03:27.000000000 +0600
+++ xz-5.2.4/po/Rules-quot	2018-04-29 21:18:42.000000000 +0600
@@ -1,3 +1,4 @@
+# This file, Rules-quot, can be copied and used freely without restrictions.
 # Special Makefile rules for English message catalogs with quotation marks.
 
 DISTFILES.common.extra1 = quot.sed boldquot.sed en@quot.header en@boldquot.header insert-header.sin Rules-quot
@@ -14,13 +15,23 @@
 
 .insert-header.po-update-en:
 	@lang=`echo $@ | sed -e 's/\.po-update-en$$//'`; \
-	if test "$(PACKAGE)" = "gettext"; then PATH=`pwd`/../src:$$PATH; GETTEXTLIBDIR=`cd $(top_srcdir)/src && pwd`; export GETTEXTLIBDIR; fi; \
+	if test "$(PACKAGE)" = "gettext-tools"; then PATH=`pwd`/../src:$$PATH; GETTEXTLIBDIR=`cd $(top_srcdir)/src && pwd`; export GETTEXTLIBDIR; fi; \
 	tmpdir=`pwd`; \
 	echo "$$lang:"; \
 	ll=`echo $$lang | sed -e 's/@.*//'`; \
 	LC_ALL=C; export LC_ALL; \
 	cd $(srcdir); \
-	if $(MSGINIT) -i $(DOMAIN).pot --no-translator -l $$lang -o - 2>/dev/null | sed -f $$tmpdir/$$lang.insert-header | $(MSGCONV) -t UTF-8 | $(MSGFILTER) sed -f `echo $$lang | sed -e 's/.*@//'`.sed 2>/dev/null > $$tmpdir/$$lang.new.po; then \
+	if $(MSGINIT) -i $(DOMAIN).pot --no-translator -l $$lang -o - 2>/dev/null \
+	   | $(SED) -f $$tmpdir/$$lang.insert-header | $(MSGCONV) -t UTF-8 | \
+	   { case `$(MSGFILTER) --version | sed 1q | sed -e 's,^[^0-9]*,,'` in \
+	     '' | 0.[0-9] | 0.[0-9].* | 0.1[0-8] | 0.1[0-8].*) \
+	       $(MSGFILTER) $(SED) -f `echo $$lang | sed -e 's/.*@//'`.sed \
+	       ;; \
+	     *) \
+	       $(MSGFILTER) `echo $$lang | sed -e 's/.*@//'` \
+	       ;; \
+	     esac } 2>/dev/null > $$tmpdir/$$lang.new.po \
+	     ; then \
 	  if cmp $$lang.po $$tmpdir/$$lang.new.po >/dev/null 2>&1; then \
 	    rm -f $$tmpdir/$$lang.new.po; \
 	  else \
Binary files xz-5.2.2/po/vi.gmo and xz-5.2.4/po/vi.gmo differ
diff -uNrwB xz-5.2.2/po/vi.po xz-5.2.4/po/vi.po
--- xz-5.2.2/po/vi.po	2015-09-29 17:03:54.000000000 +0600
+++ xz-5.2.4/po/vi.po	2018-04-29 21:19:55.000000000 +0600
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: xz 5.1.4beta\n"
 "Report-Msgid-Bugs-To: lasse.collin@tukaani.org\n"
-"POT-Creation-Date: 2015-09-29 14:03+0300\n"
+"POT-Creation-Date: 2018-04-29 18:19+0300\n"
 "PO-Revision-Date: 2014-09-25 09:06+0700\n"
 "Last-Translator: Trần Ngọc Quân <vnwildman@gmail.com>\n"
 "Language-Team: Vietnamese <translation-team-vi@lists.sourceforge.net>\n"
@@ -51,6 +51,14 @@
 msgid "The environment variable %s contains too many arguments"
 msgstr "Biến môi trường %s chứa quá nhiều đối số"
 
+#: src/xz/args.c:643
+msgid "Compression support was disabled at build time"
+msgstr ""
+
+#: src/xz/args.c:650
+msgid "Decompression support was disabled at build time"
+msgstr ""
+
 #: src/xz/coder.c:110
 msgid "Maximum number of filters is four"
 msgstr "Số lượng bộ lọc tối đa là bốn"
@@ -83,36 +91,48 @@
 msgid "Switching to single-threaded mode due to --flush-timeout"
 msgstr "Chuyển sang chế độ đơn tuyến trình bởi vì --flush-timeout"
 
-#: src/xz/coder.c:234
+#: src/xz/coder.c:235
 #, c-format
 msgid "Using up to %<PRIu32> threads."
 msgstr "Dùng đến %<PRIu32> tuyến trình."
 
-#: src/xz/coder.c:247
+#: src/xz/coder.c:251
 msgid "Unsupported filter chain or filter options"
 msgstr "Không hỗ trợ lọc móc xích hay tùy chọn lọc"
 
-#: src/xz/coder.c:255
+#: src/xz/coder.c:263
 #, c-format
 msgid "Decompression will need %s MiB of memory."
 msgstr "Giải nén sẽ cần %s MiB bộ nhớ."
 
-#: src/xz/coder.c:290
+#: src/xz/coder.c:300
 #, c-format
 msgid "Adjusted the number of threads from %s to %s to not exceed the memory usage limit of %s MiB"
 msgstr "Chỉnh số lượng tuyến trình từ %s thành %s để không vượt quá giới hạn tiêu dùng bộ nhớ là %s MiB"
 
-#: src/xz/coder.c:344
+#: src/xz/coder.c:354
 #, c-format
 msgid "Adjusted LZMA%c dictionary size from %s MiB to %s MiB to not exceed the memory usage limit of %s MiB"
 msgstr "Chỉnh cỡ từ điển LZMA%c từ %s MiB thành %s MiB để không vượt quá giới hạn tiêu dùng bộ nhớ là %s MiB"
 
-#: src/xz/file_io.c:87 src/xz/file_io.c:95
+#: src/xz/file_io.c:110 src/xz/file_io.c:118
 #, c-format
 msgid "Error creating a pipe: %s"
 msgstr "Gặp lỗi khi tạo một ống dẫn: %s"
 
-#: src/xz/file_io.c:172
+#: src/xz/file_io.c:173
+msgid "Sandbox is disabled due to incompatible command line arguments"
+msgstr ""
+
+#: src/xz/file_io.c:216
+msgid "Sandbox was successfully enabled"
+msgstr ""
+
+#: src/xz/file_io.c:220
+msgid "Failed to enable the sandbox"
+msgstr ""
+
+#: src/xz/file_io.c:262
 #, c-format
 msgid "%s: poll() failed: %s"
 msgstr "%s: hàm poll() bị lỗi: %s"
@@ -127,107 +147,107 @@
 #. it is possible that the user has put a new file in place
 #. of the original file, and in that case it obviously
 #. shouldn't be removed.
-#: src/xz/file_io.c:242
+#: src/xz/file_io.c:332
 #, c-format
 msgid "%s: File seems to have been moved, not removing"
 msgstr "%s: Tập tin có lẽ đã bị di chuyển, không phải gỡ bỏ"
 
-#: src/xz/file_io.c:249 src/xz/file_io.c:762
+#: src/xz/file_io.c:339 src/xz/file_io.c:878
 #, c-format
 msgid "%s: Cannot remove: %s"
 msgstr "%s: Không thể gỡ bỏ: %s"
 
-#: src/xz/file_io.c:274
+#: src/xz/file_io.c:364
 #, c-format
 msgid "%s: Cannot set the file owner: %s"
 msgstr "%s: Không thể đặt chủ sở hữu tập tin: %s"
 
-#: src/xz/file_io.c:280
+#: src/xz/file_io.c:370
 #, c-format
 msgid "%s: Cannot set the file group: %s"
 msgstr "%s: Không thể đặt nhóm tập tin: %s"
 
-#: src/xz/file_io.c:299
+#: src/xz/file_io.c:389
 #, c-format
 msgid "%s: Cannot set the file permissions: %s"
 msgstr "%s: Không thể đặt chế độ đọc ghi cho tập tin: %s"
 
-#: src/xz/file_io.c:409
+#: src/xz/file_io.c:515
 #, c-format
 msgid "Error getting the file status flags from standard input: %s"
 msgstr "Gặp lỗi khi lấy các cờ trạng thái tập tin từ đầu vào tiêu chuẩn: %s"
 
-#: src/xz/file_io.c:463 src/xz/file_io.c:525
+#: src/xz/file_io.c:572 src/xz/file_io.c:634
 #, c-format
 msgid "%s: Is a symbolic link, skipping"
 msgstr "%s: Là một liên kết mềm nên bỏ qua"
 
-#: src/xz/file_io.c:554
+#: src/xz/file_io.c:663
 #, c-format
 msgid "%s: Is a directory, skipping"
 msgstr "%s: Không phải là một thư mục nên bỏ qua"
 
-#: src/xz/file_io.c:560
+#: src/xz/file_io.c:669
 #, c-format
 msgid "%s: Not a regular file, skipping"
 msgstr "%s: Không phải là tập tin thường nên bỏ qua"
 
-#: src/xz/file_io.c:577
+#: src/xz/file_io.c:686
 #, c-format
 msgid "%s: File has setuid or setgid bit set, skipping"
 msgstr "%s: Tập tin có đặt bít setuid hoặc setgid nên bỏ qua"
 
-#: src/xz/file_io.c:584
+#: src/xz/file_io.c:693
 #, c-format
 msgid "%s: File has sticky bit set, skipping"
 msgstr "%s: Tập tin có bít sticky nên bỏ qua"
 
-#: src/xz/file_io.c:591
+#: src/xz/file_io.c:700
 #, c-format
 msgid "%s: Input file has more than one hard link, skipping"
 msgstr "%s: Tập tin đầu vào có nhiều hơn một liên kết cứng nên bỏ qua"
 
-#: src/xz/file_io.c:671
+#: src/xz/file_io.c:788
 #, c-format
 msgid "Error restoring the status flags to standard input: %s"
 msgstr "Gặp lỗi khi phục hồi các cờ trạng thái tới đầu vào tiêu chuẩn: %s"
 
-#: src/xz/file_io.c:720
+#: src/xz/file_io.c:836
 #, c-format
 msgid "Error getting the file status flags from standard output: %s"
 msgstr "Gặp lỗi khi lấy các cờ trạng thái tập tin từ đầu vào tiêu chuẩn: %s"
 
-#: src/xz/file_io.c:898
+#: src/xz/file_io.c:1014
 #, c-format
 msgid "Error restoring the O_APPEND flag to standard output: %s"
 msgstr "Gặp lỗi khi phục hồi cờ O_APPEND trên đầu ra tiêu chuẩn: %s"
 
-#: src/xz/file_io.c:910
+#: src/xz/file_io.c:1026
 #, c-format
 msgid "%s: Closing the file failed: %s"
 msgstr "%s: Gặp lỗi khi đóng tập tin: %s"
 
-#: src/xz/file_io.c:946 src/xz/file_io.c:1172
+#: src/xz/file_io.c:1062 src/xz/file_io.c:1288
 #, c-format
 msgid "%s: Seeking failed when trying to create a sparse file: %s"
 msgstr "%s: Gặp lỗi khi di chuyển vị trí đọc khi cố tạo một tập tin rải rác: %s"
 
-#: src/xz/file_io.c:1041
+#: src/xz/file_io.c:1157
 #, c-format
 msgid "%s: Read error: %s"
 msgstr "%s: Lỗi đọc: %s"
 
-#: src/xz/file_io.c:1061
+#: src/xz/file_io.c:1177
 #, c-format
 msgid "%s: Error seeking the file: %s"
 msgstr "%s: Gặp lỗi khi di chuyển vị trí đọc tập tin: %s"
 
-#: src/xz/file_io.c:1071
+#: src/xz/file_io.c:1187
 #, c-format
 msgid "%s: Unexpected end of file"
 msgstr "%s: Kết thúc tập tin bất ngờ"
 
-#: src/xz/file_io.c:1130
+#: src/xz/file_io.c:1246
 #, c-format
 msgid "%s: Write error: %s"
 msgstr "%s: Lỗi ghi: %s"
@@ -324,41 +344,41 @@
 #. to Ratio, the columns are right aligned. Check and Filename
 #. are left aligned. If you need longer words, it's OK to
 #. use two lines here. Test with "xz -l foo.xz".
-#: src/xz/list.c:671
+#: src/xz/list.c:677
 msgid "Strms  Blocks   Compressed Uncompressed  Ratio  Check   Filename"
 msgstr "Luồng    Khối          Nén     Giải nén  Tỷ lệ  Ktra    Tập tin"
 
-#: src/xz/list.c:711
+#: src/xz/list.c:717
 #, c-format
 msgid "  Streams:            %s\n"
 msgstr "  Luồng dữ liệu:      %s\n"
 
-#: src/xz/list.c:713
+#: src/xz/list.c:719
 #, c-format
 msgid "  Blocks:             %s\n"
 msgstr "  Khối:               %s\n"
 
-#: src/xz/list.c:715
+#: src/xz/list.c:721
 #, c-format
 msgid "  Compressed size:    %s\n"
 msgstr "  Cỡ khi bị nén:      %s\n"
 
-#: src/xz/list.c:718
+#: src/xz/list.c:724
 #, c-format
 msgid "  Uncompressed size:  %s\n"
 msgstr "  Cỡ sau giải nén:    %s\n"
 
-#: src/xz/list.c:721
+#: src/xz/list.c:727
 #, c-format
 msgid "  Ratio:              %s\n"
 msgstr "  Tỷ lệ nén:          %s\n"
 
-#: src/xz/list.c:723
+#: src/xz/list.c:729
 #, c-format
 msgid "  Check:              %s\n"
 msgstr "  Kiểm tra:           %s\n"
 
-#: src/xz/list.c:724
+#: src/xz/list.c:730
 #, c-format
 msgid "  Stream padding:     %s\n"
 msgstr "  Đệm luồng dữ liệu:  %s\n"
@@ -366,7 +386,7 @@
 #. TRANSLATORS: The second line is column headings. All except
 #. Check are right aligned; Check is left aligned. Test with
 #. "xz -lv foo.xz".
-#: src/xz/list.c:752
+#: src/xz/list.c:758
 msgid ""
 "  Streams:\n"
 "    Stream    Blocks      CompOffset    UncompOffset        CompSize      UncompSize  Ratio  Check      Padding"
@@ -376,7 +396,7 @@
 
 #. TRANSLATORS: The second line is column headings. All
 #. except Check are right aligned; Check is left aligned.
-#: src/xz/list.c:807
+#: src/xz/list.c:813
 #, c-format
 msgid ""
 "  Blocks:\n"
@@ -392,56 +412,56 @@
 #. are right aligned. %*s is replaced with 0-120
 #. spaces to make the CheckVal column wide enough.
 #. Test with "xz -lvv foo.xz".
-#: src/xz/list.c:819
+#: src/xz/list.c:825
 #, c-format
 msgid "      CheckVal %*s Header  Flags        CompSize    MemUsage  Filters"
 msgstr "       GTrịKiểm %*s    Đầu  Cờ              CỡNén     DùngRAM  BộLọc"
 
-#: src/xz/list.c:897 src/xz/list.c:1072
+#: src/xz/list.c:903 src/xz/list.c:1078
 #, c-format
 msgid "  Memory needed:      %s MiB\n"
 msgstr "  Bộ nhớ cần:         %s MiB\n"
 
-#: src/xz/list.c:899 src/xz/list.c:1074
+#: src/xz/list.c:905 src/xz/list.c:1080
 #, c-format
 msgid "  Sizes in headers:   %s\n"
 msgstr "  Kích cỡ phần đầu:   %s\n"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "Yes"
 msgstr "Có"
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "No"
 msgstr "Không"
 
-#: src/xz/list.c:901 src/xz/list.c:1076
+#: src/xz/list.c:907 src/xz/list.c:1082
 #, c-format
 msgid "  Minimum XZ Utils version: %s\n"
 msgstr "  Phiên bản “XZ Utils” tối thiểu: %s\n"
 
 #. TRANSLATORS: %s is an integer. Only the plural form of this
 #. message is used (e.g. "2 files"). Test with "xz -l foo.xz bar.xz".
-#: src/xz/list.c:1051
+#: src/xz/list.c:1057
 #, c-format
 msgid "%s file\n"
 msgid_plural "%s files\n"
 msgstr[0] "%s tập tin\n"
 
-#: src/xz/list.c:1064
+#: src/xz/list.c:1070
 msgid "Totals:"
 msgstr "Tổng cộng:"
 
-#: src/xz/list.c:1065
+#: src/xz/list.c:1071
 #, c-format
 msgid "  Number of files:    %s\n"
 msgstr "  Số tập tin:         %s\n"
 
-#: src/xz/list.c:1140
+#: src/xz/list.c:1146
 msgid "--list works only on .xz files (--format=xz or --format=auto)"
 msgstr "--list chỉ hoạt động trên các tập tin .xz (--format=xz hay --format=auto)"
 
-#: src/xz/list.c:1146
+#: src/xz/list.c:1152
 msgid "--list does not support reading from standard input"
 msgstr "--list không hỗ trợ đọc từ đầu vào tiêu chuẩn"
 
@@ -464,7 +484,7 @@
 msgid "Compression and decompression with --robot are not supported yet."
 msgstr "Nén và giải nén với --robot vẫn chưa được hỗ trợ."
 
-#: src/xz/main.c:231
+#: src/xz/main.c:252
 msgid "Cannot read data from standard input when reading filenames from standard input"
 msgstr "Không thể đọc dữ liệu từ đầu vào tiêu chuẩn khi đọc tập tin từ đầu vào tiêu chuẩn"
 
diff -uNrwB xz-5.2.2/po/xz.pot xz-5.2.4/po/xz.pot
--- xz-5.2.2/po/xz.pot	2015-09-29 17:03:54.000000000 +0600
+++ xz-5.2.4/po/xz.pot	2018-04-29 21:19:39.000000000 +0600
@@ -5,9 +5,9 @@
 #, fuzzy
 msgid ""
 msgstr ""
-"Project-Id-Version: xz 5.2.2\n"
+"Project-Id-Version: xz 5.2.4\n"
 "Report-Msgid-Bugs-To: lasse.collin@tukaani.org\n"
-"POT-Creation-Date: 2015-09-29 14:03+0300\n"
+"POT-Creation-Date: 2018-04-29 18:19+0300\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
@@ -50,6 +50,14 @@
 msgid "The environment variable %s contains too many arguments"
 msgstr ""
 
+#: src/xz/args.c:643
+msgid "Compression support was disabled at build time"
+msgstr ""
+
+#: src/xz/args.c:650
+msgid "Decompression support was disabled at build time"
+msgstr ""
+
 #: src/xz/coder.c:110
 msgid "Maximum number of filters is four"
 msgstr ""
@@ -82,36 +90,48 @@
 msgid "Switching to single-threaded mode due to --flush-timeout"
 msgstr ""
 
-#: src/xz/coder.c:234
+#: src/xz/coder.c:235
 #, c-format
 msgid "Using up to %<PRIu32> threads."
 msgstr ""
 
-#: src/xz/coder.c:247
+#: src/xz/coder.c:251
 msgid "Unsupported filter chain or filter options"
 msgstr ""
 
-#: src/xz/coder.c:255
+#: src/xz/coder.c:263
 #, c-format
 msgid "Decompression will need %s MiB of memory."
 msgstr ""
 
-#: src/xz/coder.c:290
+#: src/xz/coder.c:300
 #, c-format
 msgid "Adjusted the number of threads from %s to %s to not exceed the memory usage limit of %s MiB"
 msgstr ""
 
-#: src/xz/coder.c:344
+#: src/xz/coder.c:354
 #, c-format
 msgid "Adjusted LZMA%c dictionary size from %s MiB to %s MiB to not exceed the memory usage limit of %s MiB"
 msgstr ""
 
-#: src/xz/file_io.c:87 src/xz/file_io.c:95
+#: src/xz/file_io.c:110 src/xz/file_io.c:118
 #, c-format
 msgid "Error creating a pipe: %s"
 msgstr ""
 
-#: src/xz/file_io.c:172
+#: src/xz/file_io.c:173
+msgid "Sandbox is disabled due to incompatible command line arguments"
+msgstr ""
+
+#: src/xz/file_io.c:216
+msgid "Sandbox was successfully enabled"
+msgstr ""
+
+#: src/xz/file_io.c:220
+msgid "Failed to enable the sandbox"
+msgstr ""
+
+#: src/xz/file_io.c:262
 #, c-format
 msgid "%s: poll() failed: %s"
 msgstr ""
@@ -126,107 +146,107 @@
 #. it is possible that the user has put a new file in place
 #. of the original file, and in that case it obviously
 #. shouldn't be removed.
-#: src/xz/file_io.c:242
+#: src/xz/file_io.c:332
 #, c-format
 msgid "%s: File seems to have been moved, not removing"
 msgstr ""
 
-#: src/xz/file_io.c:249 src/xz/file_io.c:762
+#: src/xz/file_io.c:339 src/xz/file_io.c:878
 #, c-format
 msgid "%s: Cannot remove: %s"
 msgstr ""
 
-#: src/xz/file_io.c:274
+#: src/xz/file_io.c:364
 #, c-format
 msgid "%s: Cannot set the file owner: %s"
 msgstr ""
 
-#: src/xz/file_io.c:280
+#: src/xz/file_io.c:370
 #, c-format
 msgid "%s: Cannot set the file group: %s"
 msgstr ""
 
-#: src/xz/file_io.c:299
+#: src/xz/file_io.c:389
 #, c-format
 msgid "%s: Cannot set the file permissions: %s"
 msgstr ""
 
-#: src/xz/file_io.c:409
+#: src/xz/file_io.c:515
 #, c-format
 msgid "Error getting the file status flags from standard input: %s"
 msgstr ""
 
-#: src/xz/file_io.c:463 src/xz/file_io.c:525
+#: src/xz/file_io.c:572 src/xz/file_io.c:634
 #, c-format
 msgid "%s: Is a symbolic link, skipping"
 msgstr ""
 
-#: src/xz/file_io.c:554
+#: src/xz/file_io.c:663
 #, c-format
 msgid "%s: Is a directory, skipping"
 msgstr ""
 
-#: src/xz/file_io.c:560
+#: src/xz/file_io.c:669
 #, c-format
 msgid "%s: Not a regular file, skipping"
 msgstr ""
 
-#: src/xz/file_io.c:577
+#: src/xz/file_io.c:686
 #, c-format
 msgid "%s: File has setuid or setgid bit set, skipping"
 msgstr ""
 
-#: src/xz/file_io.c:584
+#: src/xz/file_io.c:693
 #, c-format
 msgid "%s: File has sticky bit set, skipping"
 msgstr ""
 
-#: src/xz/file_io.c:591
+#: src/xz/file_io.c:700
 #, c-format
 msgid "%s: Input file has more than one hard link, skipping"
 msgstr ""
 
-#: src/xz/file_io.c:671
+#: src/xz/file_io.c:788
 #, c-format
 msgid "Error restoring the status flags to standard input: %s"
 msgstr ""
 
-#: src/xz/file_io.c:720
+#: src/xz/file_io.c:836
 #, c-format
 msgid "Error getting the file status flags from standard output: %s"
 msgstr ""
 
-#: src/xz/file_io.c:898
+#: src/xz/file_io.c:1014
 #, c-format
 msgid "Error restoring the O_APPEND flag to standard output: %s"
 msgstr ""
 
-#: src/xz/file_io.c:910
+#: src/xz/file_io.c:1026
 #, c-format
 msgid "%s: Closing the file failed: %s"
 msgstr ""
 
-#: src/xz/file_io.c:946 src/xz/file_io.c:1172
+#: src/xz/file_io.c:1062 src/xz/file_io.c:1288
 #, c-format
 msgid "%s: Seeking failed when trying to create a sparse file: %s"
 msgstr ""
 
-#: src/xz/file_io.c:1041
+#: src/xz/file_io.c:1157
 #, c-format
 msgid "%s: Read error: %s"
 msgstr ""
 
-#: src/xz/file_io.c:1061
+#: src/xz/file_io.c:1177
 #, c-format
 msgid "%s: Error seeking the file: %s"
 msgstr ""
 
-#: src/xz/file_io.c:1071
+#: src/xz/file_io.c:1187
 #, c-format
 msgid "%s: Unexpected end of file"
 msgstr ""
 
-#: src/xz/file_io.c:1130
+#: src/xz/file_io.c:1246
 #, c-format
 msgid "%s: Write error: %s"
 msgstr ""
@@ -323,41 +343,41 @@
 #. to Ratio, the columns are right aligned. Check and Filename
 #. are left aligned. If you need longer words, it's OK to
 #. use two lines here. Test with "xz -l foo.xz".
-#: src/xz/list.c:671
+#: src/xz/list.c:677
 msgid "Strms  Blocks   Compressed Uncompressed  Ratio  Check   Filename"
 msgstr ""
 
-#: src/xz/list.c:711
+#: src/xz/list.c:717
 #, c-format
 msgid "  Streams:            %s\n"
 msgstr ""
 
-#: src/xz/list.c:713
+#: src/xz/list.c:719
 #, c-format
 msgid "  Blocks:             %s\n"
 msgstr ""
 
-#: src/xz/list.c:715
+#: src/xz/list.c:721
 #, c-format
 msgid "  Compressed size:    %s\n"
 msgstr ""
 
-#: src/xz/list.c:718
+#: src/xz/list.c:724
 #, c-format
 msgid "  Uncompressed size:  %s\n"
 msgstr ""
 
-#: src/xz/list.c:721
+#: src/xz/list.c:727
 #, c-format
 msgid "  Ratio:              %s\n"
 msgstr ""
 
-#: src/xz/list.c:723
+#: src/xz/list.c:729
 #, c-format
 msgid "  Check:              %s\n"
 msgstr ""
 
-#: src/xz/list.c:724
+#: src/xz/list.c:730
 #, c-format
 msgid "  Stream padding:     %s\n"
 msgstr ""
@@ -365,7 +385,7 @@
 #. TRANSLATORS: The second line is column headings. All except
 #. Check are right aligned; Check is left aligned. Test with
 #. "xz -lv foo.xz".
-#: src/xz/list.c:752
+#: src/xz/list.c:758
 msgid ""
 "  Streams:\n"
 "    Stream    Blocks      CompOffset    UncompOffset        CompSize      UncompSize  Ratio  Check      Padding"
@@ -373,7 +393,7 @@
 
 #. TRANSLATORS: The second line is column headings. All
 #. except Check are right aligned; Check is left aligned.
-#: src/xz/list.c:807
+#: src/xz/list.c:813
 #, c-format
 msgid ""
 "  Blocks:\n"
@@ -387,57 +407,57 @@
 #. are right aligned. %*s is replaced with 0-120
 #. spaces to make the CheckVal column wide enough.
 #. Test with "xz -lvv foo.xz".
-#: src/xz/list.c:819
+#: src/xz/list.c:825
 #, c-format
 msgid "      CheckVal %*s Header  Flags        CompSize    MemUsage  Filters"
 msgstr ""
 
-#: src/xz/list.c:897 src/xz/list.c:1072
+#: src/xz/list.c:903 src/xz/list.c:1078
 #, c-format
 msgid "  Memory needed:      %s MiB\n"
 msgstr ""
 
-#: src/xz/list.c:899 src/xz/list.c:1074
+#: src/xz/list.c:905 src/xz/list.c:1080
 #, c-format
 msgid "  Sizes in headers:   %s\n"
 msgstr ""
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "Yes"
 msgstr ""
 
-#: src/xz/list.c:900 src/xz/list.c:1075
+#: src/xz/list.c:906 src/xz/list.c:1081
 msgid "No"
 msgstr ""
 
-#: src/xz/list.c:901 src/xz/list.c:1076
+#: src/xz/list.c:907 src/xz/list.c:1082
 #, c-format
 msgid "  Minimum XZ Utils version: %s\n"
 msgstr ""
 
 #. TRANSLATORS: %s is an integer. Only the plural form of this
 #. message is used (e.g. "2 files"). Test with "xz -l foo.xz bar.xz".
-#: src/xz/list.c:1051
+#: src/xz/list.c:1057
 #, c-format
 msgid "%s file\n"
 msgid_plural "%s files\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: src/xz/list.c:1064
+#: src/xz/list.c:1070
 msgid "Totals:"
 msgstr ""
 
-#: src/xz/list.c:1065
+#: src/xz/list.c:1071
 #, c-format
 msgid "  Number of files:    %s\n"
 msgstr ""
 
-#: src/xz/list.c:1140
+#: src/xz/list.c:1146
 msgid "--list works only on .xz files (--format=xz or --format=auto)"
 msgstr ""
 
-#: src/xz/list.c:1146
+#: src/xz/list.c:1152
 msgid "--list does not support reading from standard input"
 msgstr ""
 
@@ -460,7 +480,7 @@
 msgid "Compression and decompression with --robot are not supported yet."
 msgstr ""
 
-#: src/xz/main.c:231
+#: src/xz/main.c:252
 msgid "Cannot read data from standard input when reading filenames from standard input"
 msgstr ""
 
diff -uNrwB xz-5.2.2/README xz-5.2.4/README
--- xz-5.2.2/README	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/README	2018-04-29 21:10:38.000000000 +0600
@@ -291,7 +291,7 @@
     XZ Embedded is a limited implementation written for use in the Linux
     kernel, but it is also suitable for other embedded use.
 
-        http://tukaani.org/xz/embedded.html
+        https://tukaani.org/xz/embedded.html
 
 
 6. Contact information
diff -uNrwB xz-5.2.2/src/common/common_w32res.rc xz-5.2.4/src/common/common_w32res.rc
--- xz-5.2.2/src/common/common_w32res.rc	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/common/common_w32res.rc	2018-04-29 21:10:38.000000000 +0600
@@ -17,7 +17,7 @@
 #define MY_VERSION LZMA_VERSION_MAJOR,LZMA_VERSION_MINOR,LZMA_VERSION_PATCH,MY_BUILD
 
 #define MY_FILENAME    MY_NAME MY_SUFFIX
-#define MY_COMPANY     "The Tukaani Project <http://tukaani.org/>"
+#define MY_COMPANY     "The Tukaani Project <https://tukaani.org/>"
 #define MY_PRODUCT     PACKAGE_NAME " <" PACKAGE_URL ">"
 
 LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
diff -uNrwB xz-5.2.2/src/common/tuklib_cpucores.c xz-5.2.4/src/common/tuklib_cpucores.c
--- xz-5.2.2/src/common/tuklib_cpucores.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/common/tuklib_cpucores.c	2018-04-29 21:10:38.000000000 +0600
@@ -18,6 +18,10 @@
 #	endif
 #	include <windows.h>
 
+// glibc >= 2.9
+#elif defined(TUKLIB_CPUCORES_SCHED_GETAFFINITY)
+#	include <sched.h>
+
 // FreeBSD
 #elif defined(TUKLIB_CPUCORES_CPUSET)
 #	include <sys/param.h>
@@ -49,6 +53,11 @@
 	GetSystemInfo(&sysinfo);
 	ret = sysinfo.dwNumberOfProcessors;
 
+#elif defined(TUKLIB_CPUCORES_SCHED_GETAFFINITY)
+	cpu_set_t cpu_mask;
+	if (sched_getaffinity(0, sizeof(cpu_mask), &cpu_mask) == 0)
+		ret = CPU_COUNT(&cpu_mask);
+
 #elif defined(TUKLIB_CPUCORES_CPUSET)
 	cpuset_t set;
 	if (cpuset_getaffinity(CPU_LEVEL_WHICH, CPU_WHICH_PID, -1,
diff -uNrwB xz-5.2.2/src/common/tuklib_integer.h xz-5.2.4/src/common/tuklib_integer.h
--- xz-5.2.2/src/common/tuklib_integer.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/common/tuklib_integer.h	2018-04-29 21:10:38.000000000 +0600
@@ -98,6 +98,17 @@
 #endif
 
 
+////////////////////////////////
+// Compiler-specific features //
+////////////////////////////////
+
+// Newer Intel C compilers require immintrin.h for _bit_scan_reverse()
+// and such functions.
+#if defined(__INTEL_COMPILER) && (__INTEL_COMPILER >= 1500)
+#	include <immintrin.h>
+#endif
+
+
 ///////////////////
 // Byte swapping //
 ///////////////////
diff -uNrwB xz-5.2.2/src/common/tuklib_physmem.c xz-5.2.4/src/common/tuklib_physmem.c
--- xz-5.2.2/src/common/tuklib_physmem.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/common/tuklib_physmem.c	2018-04-29 21:10:38.000000000 +0600
@@ -86,7 +86,8 @@
 		// GlobalMemoryStatusEx() conditionally.
 		HMODULE kernel32 = GetModuleHandle("kernel32.dll");
 		if (kernel32 != NULL) {
-			BOOL (WINAPI *gmse)(LPMEMORYSTATUSEX) = GetProcAddress(
+			typedef BOOL (WINAPI *gmse_type)(LPMEMORYSTATUSEX);
+			gmse_type gmse = (gmse_type)GetProcAddress(
 					kernel32, "GlobalMemoryStatusEx");
 			if (gmse != NULL) {
 				MEMORYSTATUSEX meminfo;
diff -uNrwB xz-5.2.2/src/liblzma/api/lzma/base.h xz-5.2.4/src/liblzma/api/lzma/base.h
--- xz-5.2.2/src/liblzma/api/lzma/base.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/api/lzma/base.h	2018-04-29 21:10:38.000000000 +0600
@@ -644,11 +644,16 @@
  * This function is supported only when *strm has been initialized with
  * a function that takes a memlimit argument.
  *
+ * liblzma 5.2.3 and earlier has a bug where memlimit value of 0 causes
+ * this function to do nothing (leaving the limit unchanged) and still
+ * return LZMA_OK. Later versions treat 0 as if 1 had been specified (so
+ * lzma_memlimit_get() will return 1 even if you specify 0 here).
+ *
  * \return      - LZMA_OK: New memory usage limit successfully set.
  *              - LZMA_MEMLIMIT_ERROR: The new limit is too small.
  *                The limit was not changed.
  *              - LZMA_PROG_ERROR: Invalid arguments, e.g. *strm doesn't
- *                support memory usage limit or memlimit was zero.
+ *                support memory usage limit.
  */
 extern LZMA_API(lzma_ret) lzma_memlimit_set(
 		lzma_stream *strm, uint64_t memlimit) lzma_nothrow;
diff -uNrwB xz-5.2.2/src/liblzma/api/lzma/container.h xz-5.2.4/src/liblzma/api/lzma/container.h
--- xz-5.2.2/src/liblzma/api/lzma/container.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/api/lzma/container.h	2018-04-29 21:10:38.000000000 +0600
@@ -520,7 +520,10 @@
  *
  * \param       strm        Pointer to properly prepared lzma_stream
  * \param       memlimit    Memory usage limit as bytes. Use UINT64_MAX
- *                          to effectively disable the limiter.
+ *                          to effectively disable the limiter. liblzma
+ *                          5.2.3 and earlier don't allow 0 here and return
+ *                          LZMA_PROG_ERROR; later versions treat 0 as if 1
+ *                          had been specified.
  * \param       flags       Bitwise-or of zero or more of the decoder flags:
  *                          LZMA_TELL_NO_CHECK, LZMA_TELL_UNSUPPORTED_CHECK,
  *                          LZMA_TELL_ANY_CHECK, LZMA_CONCATENATED
@@ -544,7 +547,10 @@
  *
  * \param       strm        Pointer to properly prepared lzma_stream
  * \param       memlimit    Memory usage limit as bytes. Use UINT64_MAX
- *                          to effectively disable the limiter.
+ *                          to effectively disable the limiter. liblzma
+ *                          5.2.3 and earlier don't allow 0 here and return
+ *                          LZMA_PROG_ERROR; later versions treat 0 as if 1
+ *                          had been specified.
  * \param       flags       Bitwise-or of flags, or zero for no flags.
  *
  * \return      - LZMA_OK: Initialization was successful.
@@ -560,9 +566,16 @@
 /**
  * \brief       Initialize .lzma decoder (legacy file format)
  *
+ * \param       strm        Pointer to properly prepared lzma_stream
+ * \param       memlimit    Memory usage limit as bytes. Use UINT64_MAX
+ *                          to effectively disable the limiter. liblzma
+ *                          5.2.3 and earlier don't allow 0 here and return
+ *                          LZMA_PROG_ERROR; later versions treat 0 as if 1
+ *                          had been specified.
+ *
  * Valid `action' arguments to lzma_code() are LZMA_RUN and LZMA_FINISH.
- * There is no need to use LZMA_FINISH, but allowing it may simplify
- * certain types of applications.
+ * There is no need to use LZMA_FINISH, but it's allowed because it may
+ * simplify certain types of applications.
  *
  * \return      - LZMA_OK
  *              - LZMA_MEM_ERROR
diff -uNrwB xz-5.2.2/src/liblzma/api/lzma/index.h xz-5.2.4/src/liblzma/api/lzma/index.h
--- xz-5.2.2/src/liblzma/api/lzma/index.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/api/lzma/index.h	2018-04-29 21:10:38.000000000 +0600
@@ -586,8 +586,7 @@
  * \param       i           Pointer to lzma_index which should be encoded.
  *
  * The valid `action' values for lzma_code() are LZMA_RUN and LZMA_FINISH.
- * It is enough to use only one of them (you can choose freely; use LZMA_RUN
- * to support liblzma versions older than 5.0.0).
+ * It is enough to use only one of them (you can choose freely).
  *
  * \return      - LZMA_OK: Initialization succeeded, continue with lzma_code().
  *              - LZMA_MEM_ERROR
@@ -610,16 +609,21 @@
  *                          to a new lzma_index, which the application
  *                          has to later free with lzma_index_end().
  * \param       memlimit    How much memory the resulting lzma_index is
- *                          allowed to require.
+ *                          allowed to require. liblzma 5.2.3 and earlier
+ *                          don't allow 0 here and return LZMA_PROG_ERROR;
+ *                          later versions treat 0 as if 1 had been specified.
  *
- * The valid `action' values for lzma_code() are LZMA_RUN and LZMA_FINISH.
- * It is enough to use only one of them (you can choose freely; use LZMA_RUN
- * to support liblzma versions older than 5.0.0).
+ * Valid `action' arguments to lzma_code() are LZMA_RUN and LZMA_FINISH.
+ * There is no need to use LZMA_FINISH, but it's allowed because it may
+ * simplify certain types of applications.
  *
  * \return      - LZMA_OK: Initialization succeeded, continue with lzma_code().
  *              - LZMA_MEM_ERROR
- *              - LZMA_MEMLIMIT_ERROR
  *              - LZMA_PROG_ERROR
+ *
+ *              liblzma 5.2.3 and older list also LZMA_MEMLIMIT_ERROR here
+ *              but that error code has never been possible from this
+ *              initialization function.
  */
 extern LZMA_API(lzma_ret) lzma_index_decoder(
 		lzma_stream *strm, lzma_index **i, uint64_t memlimit)
diff -uNrwB xz-5.2.2/src/liblzma/api/lzma/version.h xz-5.2.4/src/liblzma/api/lzma/version.h
--- xz-5.2.2/src/liblzma/api/lzma/version.h	2015-09-29 16:58:12.000000000 +0600
+++ xz-5.2.4/src/liblzma/api/lzma/version.h	2018-04-29 21:16:13.000000000 +0600
@@ -22,7 +22,7 @@
  */
 #define LZMA_VERSION_MAJOR 5
 #define LZMA_VERSION_MINOR 2
-#define LZMA_VERSION_PATCH 2
+#define LZMA_VERSION_PATCH 4
 #define LZMA_VERSION_STABILITY LZMA_VERSION_STABILITY_STABLE
 
 #ifndef LZMA_VERSION_COMMIT
diff -uNrwB xz-5.2.2/src/liblzma/api/lzma.h xz-5.2.4/src/liblzma/api/lzma.h
--- xz-5.2.2/src/liblzma/api/lzma.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/api/lzma.h	2018-04-29 21:10:38.000000000 +0600
@@ -219,7 +219,11 @@
  */
 #ifndef lzma_nothrow
 #	if defined(__cplusplus)
+#		if __cplusplus >= 201103L
+#			define lzma_nothrow noexcept
+#		else
 #		define lzma_nothrow throw()
+#		endif
 #	elif __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 3)
 #		define lzma_nothrow __attribute__((__nothrow__))
 #	else
diff -uNrwB xz-5.2.2/src/liblzma/api/Makefile.in xz-5.2.4/src/liblzma/api/Makefile.in
--- xz-5.2.2/src/liblzma/api/Makefile.in	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/src/liblzma/api/Makefile.in	2018-04-29 22:01:26.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -90,16 +90,16 @@
 host_triplet = @host@
 subdir = src/liblzma/api
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -193,6 +193,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
diff -uNrwB xz-5.2.2/src/liblzma/check/check.h xz-5.2.4/src/liblzma/check/check.h
--- xz-5.2.2/src/liblzma/check/check.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/check/check.h	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,18 @@
 
 #include "common.h"
 
-#if defined(HAVE_COMMONCRYPTO_COMMONDIGEST_H)
+// If the function for external SHA-256 is missing, use the internal SHA-256
+// code. Due to how configure works, these defines can only get defined when
+// both a usable header and a type have already been found.
+#if !(defined(HAVE_CC_SHA256_INIT) \
+		|| defined(HAVE_SHA256_INIT) \
+		|| defined(HAVE_SHA256INIT))
+#	define HAVE_INTERNAL_SHA256 1
+#endif
+
+#if defined(HAVE_INTERNAL_SHA256)
+// Nothing
+#elif defined(HAVE_COMMONCRYPTO_COMMONDIGEST_H)
 #	include <CommonCrypto/CommonDigest.h>
 #elif defined(HAVE_SHA256_H)
 #	include <sys/types.h>
@@ -23,18 +34,9 @@
 #elif defined(HAVE_SHA2_H)
 #	include <sys/types.h>
 #	include <sha2.h>
-#elif defined(HAVE_MINIX_SHA2_H)
-#	include <sys/types.h>
-#	include <minix/sha2.h>
 #endif
 
-#if defined(HAVE_CC_SHA256_CTX)
-typedef CC_SHA256_CTX lzma_sha256_state;
-#elif defined(HAVE_SHA256_CTX)
-typedef SHA256_CTX lzma_sha256_state;
-#elif defined(HAVE_SHA2_CTX)
-typedef SHA2_CTX lzma_sha256_state;
-#else
+#if defined(HAVE_INTERNAL_SHA256)
 /// State for the internal SHA-256 implementation
 typedef struct {
 	/// Internal state
@@ -43,9 +45,17 @@
 	/// Size of the message excluding padding
 	uint64_t size;
 } lzma_sha256_state;
+#elif defined(HAVE_CC_SHA256_CTX)
+typedef CC_SHA256_CTX lzma_sha256_state;
+#elif defined(HAVE_SHA256_CTX)
+typedef SHA256_CTX lzma_sha256_state;
+#elif defined(HAVE_SHA2_CTX)
+typedef SHA2_CTX lzma_sha256_state;
 #endif
 
-#if defined(HAVE_CC_SHA256_INIT)
+#if defined(HAVE_INTERNAL_SHA256)
+// Nothing
+#elif defined(HAVE_CC_SHA256_INIT)
 #	define LZMA_SHA256FUNC(x) CC_SHA256_ ## x
 #elif defined(HAVE_SHA256_INIT)
 #	define LZMA_SHA256FUNC(x) SHA256_ ## x
diff -uNrwB xz-5.2.2/src/liblzma/common/alone_decoder.c xz-5.2.4/src/liblzma/common/alone_decoder.c
--- xz-5.2.2/src/liblzma/common/alone_decoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/alone_decoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 #include "lz_decoder.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	lzma_next_coder next;
 
 	enum {
@@ -46,17 +46,19 @@
 	/// Options decoded from the header needed to initialize
 	/// the LZMA decoder
 	lzma_options_lzma options;
-};
+} lzma_alone_coder;
 
 
 static lzma_ret
-alone_decode(lzma_coder *coder,
+alone_decode(void *coder_ptr,
 		const lzma_allocator *allocator lzma_attribute((__unused__)),
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size,
 		lzma_action action)
 {
+	lzma_alone_coder *coder = coder_ptr;
+
 	while (*out_pos < out_size
 			&& (coder->sequence == SEQ_CODE || *in_pos < in_size))
 	switch (coder->sequence) {
@@ -166,8 +168,9 @@
 
 
 static void
-alone_decoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+alone_decoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_alone_coder *coder = coder_ptr;
 	lzma_next_end(&coder->next, allocator);
 	lzma_free(coder, allocator);
 	return;
@@ -175,9 +178,11 @@
 
 
 static lzma_ret
-alone_decoder_memconfig(lzma_coder *coder, uint64_t *memusage,
+alone_decoder_memconfig(void *coder_ptr, uint64_t *memusage,
 		uint64_t *old_memlimit, uint64_t new_memlimit)
 {
+	lzma_alone_coder *coder = coder_ptr;
+
 	*memusage = coder->memusage;
 	*old_memlimit = coder->memlimit;
 
@@ -198,29 +203,29 @@
 {
 	lzma_next_coder_init(&lzma_alone_decoder_init, next, allocator);
 
-	if (memlimit == 0)
-		return LZMA_PROG_ERROR;
+	lzma_alone_coder *coder = next->coder;
 
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_alone_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &alone_decode;
 		next->end = &alone_decoder_end;
 		next->memconfig = &alone_decoder_memconfig;
-		next->coder->next = LZMA_NEXT_CODER_INIT;
+		coder->next = LZMA_NEXT_CODER_INIT;
 	}
 
-	next->coder->sequence = SEQ_PROPERTIES;
-	next->coder->picky = picky;
-	next->coder->pos = 0;
-	next->coder->options.dict_size = 0;
-	next->coder->options.preset_dict = NULL;
-	next->coder->options.preset_dict_size = 0;
-	next->coder->uncompressed_size = 0;
-	next->coder->memlimit = memlimit;
-	next->coder->memusage = LZMA_MEMUSAGE_BASE;
+	coder->sequence = SEQ_PROPERTIES;
+	coder->picky = picky;
+	coder->pos = 0;
+	coder->options.dict_size = 0;
+	coder->options.preset_dict = NULL;
+	coder->options.preset_dict_size = 0;
+	coder->uncompressed_size = 0;
+	coder->memlimit = my_max(1, memlimit);
+	coder->memusage = LZMA_MEMUSAGE_BASE;
 
 	return LZMA_OK;
 }
diff -uNrwB xz-5.2.2/src/liblzma/common/alone_encoder.c xz-5.2.4/src/liblzma/common/alone_encoder.c
--- xz-5.2.2/src/liblzma/common/alone_encoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/alone_encoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -17,7 +17,7 @@
 #define ALONE_HEADER_SIZE (1 + 4 + 8)
 
 
-struct lzma_coder_s {
+typedef struct {
 	lzma_next_coder next;
 
 	enum {
@@ -27,17 +27,19 @@
 
 	size_t header_pos;
 	uint8_t header[ALONE_HEADER_SIZE];
-};
+} lzma_alone_coder;
 
 
 static lzma_ret
-alone_encode(lzma_coder *coder,
+alone_encode(void *coder_ptr,
 		const lzma_allocator *allocator lzma_attribute((__unused__)),
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size,
 		lzma_action action)
 {
+	lzma_alone_coder *coder = coder_ptr;
+
 	while (*out_pos < out_size)
 	switch (coder->sequence) {
 	case SEQ_HEADER:
@@ -65,8 +67,9 @@
 
 
 static void
-alone_encoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+alone_encoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_alone_coder *coder = coder_ptr;
 	lzma_next_end(&coder->next, allocator);
 	lzma_free(coder, allocator);
 	return;
@@ -80,23 +83,26 @@
 {
 	lzma_next_coder_init(&alone_encoder_init, next, allocator);
 
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	lzma_alone_coder *coder = next->coder;
+
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_alone_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &alone_encode;
 		next->end = &alone_encoder_end;
-		next->coder->next = LZMA_NEXT_CODER_INIT;
+		coder->next = LZMA_NEXT_CODER_INIT;
 	}
 
 	// Basic initializations
-	next->coder->sequence = SEQ_HEADER;
-	next->coder->header_pos = 0;
+	coder->sequence = SEQ_HEADER;
+	coder->header_pos = 0;
 
 	// Encode the header:
 	// - Properties (1 byte)
-	if (lzma_lzma_lclppb_encode(options, next->coder->header))
+	if (lzma_lzma_lclppb_encode(options, coder->header))
 		return LZMA_OPTIONS_ERROR;
 
 	// - Dictionary size (4 bytes)
@@ -116,10 +122,10 @@
 	if (d != UINT32_MAX)
 		++d;
 
-	unaligned_write32le(next->coder->header + 1, d);
+	unaligned_write32le(coder->header + 1, d);
 
 	// - Uncompressed size (always unknown and using EOPM)
-	memset(next->coder->header + 1 + 4, 0xFF, 8);
+	memset(coder->header + 1 + 4, 0xFF, 8);
 
 	// Initialize the LZMA encoder.
 	const lzma_filter_info filters[2] = {
@@ -131,7 +137,7 @@
 		}
 	};
 
-	return lzma_next_filter_init(&next->coder->next, allocator, filters);
+	return lzma_next_filter_init(&coder->next, allocator, filters);
 }
 
 
diff -uNrwB xz-5.2.2/src/liblzma/common/auto_decoder.c xz-5.2.4/src/liblzma/common/auto_decoder.c
--- xz-5.2.2/src/liblzma/common/auto_decoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/auto_decoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -14,7 +14,7 @@
 #include "alone_decoder.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	/// Stream decoder or LZMA_Alone decoder
 	lzma_next_coder next;
 
@@ -26,15 +26,17 @@
 		SEQ_CODE,
 		SEQ_FINISH,
 	} sequence;
-};
+} lzma_auto_coder;
 
 
 static lzma_ret
-auto_decode(lzma_coder *coder, const lzma_allocator *allocator,
+auto_decode(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size, lzma_action action)
 {
+	lzma_auto_coder *coder = coder_ptr;
+
 	switch (coder->sequence) {
 	case SEQ_INIT:
 		if (*in_pos >= in_size)
@@ -100,8 +102,9 @@
 
 
 static void
-auto_decoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+auto_decoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_auto_coder *coder = coder_ptr;
 	lzma_next_end(&coder->next, allocator);
 	lzma_free(coder, allocator);
 	return;
@@ -109,8 +112,10 @@
 
 
 static lzma_check
-auto_decoder_get_check(const lzma_coder *coder)
+auto_decoder_get_check(const void *coder_ptr)
 {
+	const lzma_auto_coder *coder = coder_ptr;
+
 	// It is LZMA_Alone if get_check is NULL.
 	return coder->next.get_check == NULL ? LZMA_CHECK_NONE
 			: coder->next.get_check(coder->next.coder);
@@ -118,9 +123,11 @@
 
 
 static lzma_ret
-auto_decoder_memconfig(lzma_coder *coder, uint64_t *memusage,
+auto_decoder_memconfig(void *coder_ptr, uint64_t *memusage,
 		uint64_t *old_memlimit, uint64_t new_memlimit)
 {
+	lzma_auto_coder *coder = coder_ptr;
+
 	lzma_ret ret;
 
 	if (coder->next.memconfig != NULL) {
@@ -132,7 +139,10 @@
 		// the current memory usage.
 		*memusage = LZMA_MEMUSAGE_BASE;
 		*old_memlimit = coder->memlimit;
+
 		ret = LZMA_OK;
+		if (new_memlimit != 0 && new_memlimit < *memusage)
+			ret = LZMA_MEMLIMIT_ERROR;
 	}
 
 	if (ret == LZMA_OK && new_memlimit != 0)
@@ -148,27 +158,26 @@
 {
 	lzma_next_coder_init(&auto_decoder_init, next, allocator);
 
-	if (memlimit == 0)
-		return LZMA_PROG_ERROR;
-
 	if (flags & ~LZMA_SUPPORTED_FLAGS)
 		return LZMA_OPTIONS_ERROR;
 
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	lzma_auto_coder *coder = next->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_auto_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &auto_decode;
 		next->end = &auto_decoder_end;
 		next->get_check = &auto_decoder_get_check;
 		next->memconfig = &auto_decoder_memconfig;
-		next->coder->next = LZMA_NEXT_CODER_INIT;
+		coder->next = LZMA_NEXT_CODER_INIT;
 	}
 
-	next->coder->memlimit = memlimit;
-	next->coder->flags = flags;
-	next->coder->sequence = SEQ_INIT;
+	coder->memlimit = my_max(1, memlimit);
+	coder->flags = flags;
+	coder->sequence = SEQ_INIT;
 
 	return LZMA_OK;
 }
diff -uNrwB xz-5.2.2/src/liblzma/common/block_decoder.c xz-5.2.4/src/liblzma/common/block_decoder.c
--- xz-5.2.2/src/liblzma/common/block_decoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/block_decoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 #include "check.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	enum {
 		SEQ_CODE,
 		SEQ_PADDING,
@@ -48,7 +48,7 @@
 
 	/// True if the integrity check won't be calculated and verified.
 	bool ignore_check;
-};
+} lzma_block_coder;
 
 
 static inline bool
@@ -74,11 +74,13 @@
 
 
 static lzma_ret
-block_decode(lzma_coder *coder, const lzma_allocator *allocator,
+block_decode(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size, lzma_action action)
 {
+	lzma_block_coder *coder = coder_ptr;
+
 	switch (coder->sequence) {
 	case SEQ_CODE: {
 		const size_t in_start = *in_pos;
@@ -177,8 +179,9 @@
 
 
 static void
-block_decoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+block_decoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_block_coder *coder = coder_ptr;
 	lzma_next_end(&coder->next, allocator);
 	lzma_free(coder, allocator);
 	return;
@@ -198,27 +201,29 @@
 			|| !lzma_vli_is_valid(block->uncompressed_size))
 		return LZMA_PROG_ERROR;
 
-	// Allocate and initialize *next->coder if needed.
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	// Allocate *next->coder if needed.
+	lzma_block_coder *coder = next->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_block_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &block_decode;
 		next->end = &block_decoder_end;
-		next->coder->next = LZMA_NEXT_CODER_INIT;
+		coder->next = LZMA_NEXT_CODER_INIT;
 	}
 
 	// Basic initializations
-	next->coder->sequence = SEQ_CODE;
-	next->coder->block = block;
-	next->coder->compressed_size = 0;
-	next->coder->uncompressed_size = 0;
+	coder->sequence = SEQ_CODE;
+	coder->block = block;
+	coder->compressed_size = 0;
+	coder->uncompressed_size = 0;
 
 	// If Compressed Size is not known, we calculate the maximum allowed
 	// value so that encoded size of the Block (including Block Padding)
 	// is still a valid VLI and a multiple of four.
-	next->coder->compressed_limit
+	coder->compressed_limit
 			= block->compressed_size == LZMA_VLI_UNKNOWN
 				? (LZMA_VLI_MAX & ~LZMA_VLI_C(3))
 					- block->header_size
@@ -228,14 +233,14 @@
 	// Initialize the check. It's caller's problem if the Check ID is not
 	// supported, and the Block decoder cannot verify the Check field.
 	// Caller can test lzma_check_is_supported(block->check).
-	next->coder->check_pos = 0;
-	lzma_check_init(&next->coder->check, block->check);
+	coder->check_pos = 0;
+	lzma_check_init(&coder->check, block->check);
 
-	next->coder->ignore_check = block->version >= 1
+	coder->ignore_check = block->version >= 1
 			? block->ignore_check : false;
 
 	// Initialize the filter chain.
-	return lzma_raw_decoder_init(&next->coder->next, allocator,
+	return lzma_raw_decoder_init(&coder->next, allocator,
 			block->filters);
 }
 
diff -uNrwB xz-5.2.2/src/liblzma/common/block_encoder.c xz-5.2.4/src/liblzma/common/block_encoder.c
--- xz-5.2.2/src/liblzma/common/block_encoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/block_encoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 #include "check.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	/// The filters in the chain; initialized with lzma_raw_decoder_init().
 	lzma_next_coder next;
 
@@ -41,15 +41,17 @@
 
 	/// Check of the uncompressed data
 	lzma_check_state check;
-};
+} lzma_block_coder;
 
 
 static lzma_ret
-block_encode(lzma_coder *coder, const lzma_allocator *allocator,
+block_encode(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size, lzma_action action)
 {
+	lzma_block_coder *coder = coder_ptr;
+
 	// Check that our amount of input stays in proper limits.
 	if (LZMA_VLI_MAX - coder->uncompressed_size < in_size - *in_pos)
 		return LZMA_DATA_ERROR;
@@ -134,8 +136,9 @@
 
 
 static void
-block_encoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+block_encoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_block_coder *coder = coder_ptr;
 	lzma_next_end(&coder->next, allocator);
 	lzma_free(coder, allocator);
 	return;
@@ -143,10 +146,12 @@
 
 
 static lzma_ret
-block_encoder_update(lzma_coder *coder, const lzma_allocator *allocator,
+block_encoder_update(void *coder_ptr, const lzma_allocator *allocator,
 		const lzma_filter *filters lzma_attribute((__unused__)),
 		const lzma_filter *reversed_filters)
 {
+	lzma_block_coder *coder = coder_ptr;
+
 	if (coder->sequence != SEQ_CODE)
 		return LZMA_PROG_ERROR;
 
@@ -178,30 +183,31 @@
 		return LZMA_UNSUPPORTED_CHECK;
 
 	// Allocate and initialize *next->coder if needed.
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	lzma_block_coder *coder = next->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_block_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &block_encode;
 		next->end = &block_encoder_end;
 		next->update = &block_encoder_update;
-		next->coder->next = LZMA_NEXT_CODER_INIT;
+		coder->next = LZMA_NEXT_CODER_INIT;
 	}
 
 	// Basic initializations
-	next->coder->sequence = SEQ_CODE;
-	next->coder->block = block;
-	next->coder->compressed_size = 0;
-	next->coder->uncompressed_size = 0;
-	next->coder->pos = 0;
+	coder->sequence = SEQ_CODE;
+	coder->block = block;
+	coder->compressed_size = 0;
+	coder->uncompressed_size = 0;
+	coder->pos = 0;
 
 	// Initialize the check
-	lzma_check_init(&next->coder->check, block->check);
+	lzma_check_init(&coder->check, block->check);
 
 	// Initialize the requested filters.
-	return lzma_raw_encoder_init(&next->coder->next, allocator,
-			block->filters);
+	return lzma_raw_encoder_init(&coder->next, allocator, block->filters);
 }
 
 
diff -uNrwB xz-5.2.2/src/liblzma/common/common.c xz-5.2.4/src/liblzma/common/common.c
--- xz-5.2.2/src/liblzma/common/common.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/common.c	2018-04-29 21:10:38.000000000 +0600
@@ -435,8 +435,10 @@
 			|| strm->internal->next.memconfig == NULL)
 		return LZMA_PROG_ERROR;
 
-	if (new_memlimit != 0 && new_memlimit < LZMA_MEMUSAGE_BASE)
-		return LZMA_MEMLIMIT_ERROR;
+	// Zero is a special value that cannot be used as an actual limit.
+	// If 0 was specified, use 1 instead.
+	if (new_memlimit == 0)
+		new_memlimit = 1;
 
 	return strm->internal->next.memconfig(strm->internal->next.coder,
 			&memusage, &old_memlimit, new_memlimit);
diff -uNrwB xz-5.2.2/src/liblzma/common/common.h xz-5.2.4/src/liblzma/common/common.h
--- xz-5.2.2/src/liblzma/common/common.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/common.h	2018-04-29 21:10:38.000000000 +0600
@@ -88,10 +88,6 @@
 #define LZMA_TIMED_OUT 32
 
 
-/// Type of encoder/decoder specific data; the actual structure is defined
-/// differently in different coders.
-typedef struct lzma_coder_s lzma_coder;
-
 typedef struct lzma_next_coder_s lzma_next_coder;
 
 typedef struct lzma_filter_info_s lzma_filter_info;
@@ -107,7 +103,7 @@
 /// input and output buffers, but for simplicity they still use this same
 /// function prototype.
 typedef lzma_ret (*lzma_code_function)(
-		lzma_coder *coder, const lzma_allocator *allocator,
+		void *coder, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size,
@@ -115,7 +111,7 @@
 
 /// Type of a function to free the memory allocated for the coder
 typedef void (*lzma_end_function)(
-		lzma_coder *coder, const lzma_allocator *allocator);
+		void *coder, const lzma_allocator *allocator);
 
 
 /// Raw coder validates and converts an array of lzma_filter structures to
@@ -138,7 +134,7 @@
 /// Hold data and function pointers of the next filter in the chain.
 struct lzma_next_coder_s {
 	/// Pointer to coder-specific data
-	lzma_coder *coder;
+	void *coder;
 
 	/// Filter ID. This is LZMA_VLI_UNKNOWN when this structure doesn't
 	/// point to a filter coder.
@@ -160,21 +156,21 @@
 
 	/// Pointer to a function to get progress information. If this is NULL,
 	/// lzma_stream.total_in and .total_out are used instead.
-	void (*get_progress)(lzma_coder *coder,
+	void (*get_progress)(void *coder,
 			uint64_t *progress_in, uint64_t *progress_out);
 
 	/// Pointer to function to return the type of the integrity check.
 	/// Most coders won't support this.
-	lzma_check (*get_check)(const lzma_coder *coder);
+	lzma_check (*get_check)(const void *coder);
 
 	/// Pointer to function to get and/or change the memory usage limit.
 	/// If new_memlimit == 0, the limit is not changed.
-	lzma_ret (*memconfig)(lzma_coder *coder, uint64_t *memusage,
+	lzma_ret (*memconfig)(void *coder, uint64_t *memusage,
 			uint64_t *old_memlimit, uint64_t new_memlimit);
 
 	/// Update the filter-specific options or the whole filter chain
 	/// in the encoder.
-	lzma_ret (*update)(lzma_coder *coder, const lzma_allocator *allocator,
+	lzma_ret (*update)(void *coder, const lzma_allocator *allocator,
 			const lzma_filter *filters,
 			const lzma_filter *reversed_filters);
 };
diff -uNrwB xz-5.2.2/src/liblzma/common/index.c xz-5.2.4/src/liblzma/common/index.c
--- xz-5.2.2/src/liblzma/common/index.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/index.c	2018-04-29 21:10:38.000000000 +0600
@@ -202,22 +202,21 @@
 	if (node->right != NULL)
 		index_tree_node_end(node->right, allocator, free_func);
 
-	if (free_func != NULL)
 		free_func(node, allocator);
-
-	lzma_free(node, allocator);
 	return;
 }
 
 
-/// Free the meory allocated for a tree. If free_func is not NULL,
-/// it is called on each node before freeing the node. This is used
-/// to free the Record groups from each index_stream before freeing
-/// the index_stream itself.
+/// Free the memory allocated for a tree. Each node is freed using the
+/// given free_func which is either &lzma_free or &index_stream_end.
+/// The latter is used to free the Record groups from each index_stream
+/// before freeing the index_stream itself.
 static void
 index_tree_end(index_tree *tree, const lzma_allocator *allocator,
 		void (*free_func)(void *node, const lzma_allocator *allocator))
 {
+	assert(free_func != NULL);
+
 	if (tree->root != NULL)
 		index_tree_node_end(tree->root, allocator, free_func);
 
@@ -371,7 +370,8 @@
 index_stream_end(void *node, const lzma_allocator *allocator)
 {
 	index_stream *s = node;
-	index_tree_end(&s->groups, allocator, NULL);
+	index_tree_end(&s->groups, allocator, &lzma_free);
+	lzma_free(s, allocator);
 	return;
 }
 
@@ -829,6 +829,9 @@
 				s->groups.rightmost = &newg->node;
 
 			lzma_free(g, allocator);
+
+			// NOTE: newg isn't leaked here because
+			// newg == (void *)&newg->node.
 		}
 	}
 
@@ -869,11 +872,8 @@
 	index_stream *dest = index_stream_init(src->node.compressed_base,
 			src->node.uncompressed_base, src->number,
 			src->block_number_base, allocator);
-
-	// Return immediately if allocation failed or if there are
-	// no groups to duplicate.
-	if (dest == NULL || src->groups.leftmost == NULL)
-		return dest;
+	if (dest == NULL)
+		return NULL;
 
 	// Copy the overall information.
 	dest->record_count = src->record_count;
@@ -881,6 +881,10 @@
 	dest->stream_flags = src->stream_flags;
 	dest->stream_padding = src->stream_padding;
 
+	// Return if there are no groups to duplicate.
+	if (src->groups.leftmost == NULL)
+		return dest;
+
 	// Allocate memory for the Records. We put all the Records into
 	// a single group. It's simplest and also tends to make
 	// lzma_index_locate() a little bit faster with very big Indexes.
diff -uNrwB xz-5.2.2/src/liblzma/common/index_decoder.c xz-5.2.4/src/liblzma/common/index_decoder.c
--- xz-5.2.2/src/liblzma/common/index_decoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/index_decoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -14,7 +14,7 @@
 #include "check.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	enum {
 		SEQ_INDICATOR,
 		SEQ_COUNT,
@@ -50,11 +50,11 @@
 
 	/// CRC32 of the List of Records field
 	uint32_t crc32;
-};
+} lzma_index_coder;
 
 
 static lzma_ret
-index_decode(lzma_coder *coder, const lzma_allocator *allocator,
+index_decode(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size,
 		uint8_t *restrict out lzma_attribute((__unused__)),
@@ -62,6 +62,8 @@
 		size_t out_size lzma_attribute((__unused__)),
 		lzma_action action lzma_attribute((__unused__)))
 {
+	lzma_index_coder *coder = coder_ptr;
+
 	// Similar optimization as in index_encoder.c
 	const size_t in_start = *in_pos;
 	lzma_ret ret = LZMA_OK;
@@ -207,8 +209,9 @@
 
 
 static void
-index_decoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+index_decoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_index_coder *coder = coder_ptr;
 	lzma_index_end(coder->index, allocator);
 	lzma_free(coder, allocator);
 	return;
@@ -216,9 +219,11 @@
 
 
 static lzma_ret
-index_decoder_memconfig(lzma_coder *coder, uint64_t *memusage,
+index_decoder_memconfig(void *coder_ptr, uint64_t *memusage,
 		uint64_t *old_memlimit, uint64_t new_memlimit)
 {
+	lzma_index_coder *coder = coder_ptr;
+
 	*memusage = lzma_index_memusage(1, coder->count);
 	*old_memlimit = coder->memlimit;
 
@@ -234,7 +239,7 @@
 
 
 static lzma_ret
-index_decoder_reset(lzma_coder *coder, const lzma_allocator *allocator,
+index_decoder_reset(lzma_index_coder *coder, const lzma_allocator *allocator,
 		lzma_index **i, uint64_t memlimit)
 {
 	// Remember the pointer given by the application. We will set it
@@ -251,7 +256,7 @@
 
 	// Initialize the rest.
 	coder->sequence = SEQ_INDICATOR;
-	coder->memlimit = memlimit;
+	coder->memlimit = my_max(1, memlimit);
 	coder->count = 0; // Needs to be initialized due to _memconfig().
 	coder->pos = 0;
 	coder->crc32 = 0;
@@ -266,23 +271,25 @@
 {
 	lzma_next_coder_init(&index_decoder_init, next, allocator);
 
-	if (i == NULL || memlimit == 0)
+	if (i == NULL)
 		return LZMA_PROG_ERROR;
 
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	lzma_index_coder *coder = next->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_index_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &index_decode;
 		next->end = &index_decoder_end;
 		next->memconfig = &index_decoder_memconfig;
-		next->coder->index = NULL;
+		coder->index = NULL;
 	} else {
-		lzma_index_end(next->coder->index, allocator);
+		lzma_index_end(coder->index, allocator);
 	}
 
-	return index_decoder_reset(next->coder, allocator, i, memlimit);
+	return index_decoder_reset(coder, allocator, i, memlimit);
 }
 
 
@@ -309,7 +316,7 @@
 		return LZMA_PROG_ERROR;
 
 	// Initialize the decoder.
-	lzma_coder coder;
+	lzma_index_coder coder;
 	return_if_error(index_decoder_reset(&coder, allocator, i, *memlimit));
 
 	// Store the input start position so that we can restore it in case
diff -uNrwB xz-5.2.2/src/liblzma/common/index_encoder.c xz-5.2.4/src/liblzma/common/index_encoder.c
--- xz-5.2.2/src/liblzma/common/index_encoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/index_encoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 #include "check.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	enum {
 		SEQ_INDICATOR,
 		SEQ_COUNT,
@@ -37,11 +37,11 @@
 
 	/// CRC32 of the List of Records field
 	uint32_t crc32;
-};
+} lzma_index_coder;
 
 
 static lzma_ret
-index_encode(lzma_coder *coder,
+index_encode(void *coder_ptr,
 		const lzma_allocator *allocator lzma_attribute((__unused__)),
 		const uint8_t *restrict in lzma_attribute((__unused__)),
 		size_t *restrict in_pos lzma_attribute((__unused__)),
@@ -50,6 +50,8 @@
 		size_t out_size,
 		lzma_action action lzma_attribute((__unused__)))
 {
+	lzma_index_coder *coder = coder_ptr;
+
 	// Position where to start calculating CRC32. The idea is that we
 	// need to call lzma_crc32() only once per call to index_encode().
 	const size_t out_start = *out_pos;
@@ -159,7 +161,7 @@
 
 
 static void
-index_encoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+index_encoder_end(void *coder, const lzma_allocator *allocator)
 {
 	lzma_free(coder, allocator);
 	return;
@@ -167,7 +169,7 @@
 
 
 static void
-index_encoder_reset(lzma_coder *coder, const lzma_index *i)
+index_encoder_reset(lzma_index_coder *coder, const lzma_index *i)
 {
 	lzma_index_iter_init(&coder->iter, i);
 
@@ -190,7 +192,7 @@
 		return LZMA_PROG_ERROR;
 
 	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
+		next->coder = lzma_alloc(sizeof(lzma_index_coder), allocator);
 		if (next->coder == NULL)
 			return LZMA_MEM_ERROR;
 
@@ -230,7 +232,7 @@
 
 	// The Index encoder needs just one small data structure so we can
 	// allocate it on stack.
-	lzma_coder coder;
+	lzma_index_coder coder;
 	index_encoder_reset(&coder, i);
 
 	// Do the actual encoding. This should never fail, but store
diff -uNrwB xz-5.2.2/src/liblzma/common/Makefile.inc xz-5.2.4/src/liblzma/common/Makefile.inc
--- xz-5.2.2/src/liblzma/common/Makefile.inc	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/Makefile.inc	2018-04-29 21:10:38.000000000 +0600
@@ -21,6 +21,10 @@
 	common/stream_flags_common.h \
 	common/vli_size.c
 
+if COND_THREADS
+liblzma_la_SOURCES += common/hardware_cputhreads.c
+endif
+
 if COND_MAIN_ENCODER
 liblzma_la_SOURCES += \
 	common/alone_encoder.c \
@@ -45,7 +49,6 @@
 
 if COND_THREADS
 liblzma_la_SOURCES += \
-	common/hardware_cputhreads.c \
 	common/outqueue.c \
 	common/outqueue.h \
 	common/stream_encoder_mt.c
diff -uNrwB xz-5.2.2/src/liblzma/common/stream_decoder.c xz-5.2.4/src/liblzma/common/stream_decoder.c
--- xz-5.2.2/src/liblzma/common/stream_decoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/stream_decoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -14,7 +14,7 @@
 #include "block_decoder.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	enum {
 		SEQ_STREAM_HEADER,
 		SEQ_BLOCK_HEADER,
@@ -80,11 +80,11 @@
 	/// Buffer to hold Stream Header, Block Header, and Stream Footer.
 	/// Block Header has biggest maximum size.
 	uint8_t buffer[LZMA_BLOCK_HEADER_SIZE_MAX];
-};
+} lzma_stream_coder;
 
 
 static lzma_ret
-stream_decoder_reset(lzma_coder *coder, const lzma_allocator *allocator)
+stream_decoder_reset(lzma_stream_coder *coder, const lzma_allocator *allocator)
 {
 	// Initialize the Index hash used to verify the Index.
 	coder->index_hash = lzma_index_hash_init(coder->index_hash, allocator);
@@ -100,11 +100,13 @@
 
 
 static lzma_ret
-stream_decode(lzma_coder *coder, const lzma_allocator *allocator,
+stream_decode(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size, lzma_action action)
 {
+	lzma_stream_coder *coder = coder_ptr;
+
 	// When decoding the actual Block, it may be able to produce more
 	// output even if we don't give it any new input.
 	while (true)
@@ -375,8 +377,9 @@
 
 
 static void
-stream_decoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+stream_decoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_stream_coder *coder = coder_ptr;
 	lzma_next_end(&coder->block_decoder, allocator);
 	lzma_index_hash_end(coder->index_hash, allocator);
 	lzma_free(coder, allocator);
@@ -385,16 +388,19 @@
 
 
 static lzma_check
-stream_decoder_get_check(const lzma_coder *coder)
+stream_decoder_get_check(const void *coder_ptr)
 {
+	const lzma_stream_coder *coder = coder_ptr;
 	return coder->stream_flags.check;
 }
 
 
 static lzma_ret
-stream_decoder_memconfig(lzma_coder *coder, uint64_t *memusage,
+stream_decoder_memconfig(void *coder_ptr, uint64_t *memusage,
 		uint64_t *old_memlimit, uint64_t new_memlimit)
 {
+	lzma_stream_coder *coder = coder_ptr;
+
 	*memusage = coder->memusage;
 	*old_memlimit = coder->memlimit;
 
@@ -416,37 +422,36 @@
 {
 	lzma_next_coder_init(&lzma_stream_decoder_init, next, allocator);
 
-	if (memlimit == 0)
-		return LZMA_PROG_ERROR;
-
 	if (flags & ~LZMA_SUPPORTED_FLAGS)
 		return LZMA_OPTIONS_ERROR;
 
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	lzma_stream_coder *coder = next->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_stream_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &stream_decode;
 		next->end = &stream_decoder_end;
 		next->get_check = &stream_decoder_get_check;
 		next->memconfig = &stream_decoder_memconfig;
 
-		next->coder->block_decoder = LZMA_NEXT_CODER_INIT;
-		next->coder->index_hash = NULL;
+		coder->block_decoder = LZMA_NEXT_CODER_INIT;
+		coder->index_hash = NULL;
 	}
 
-	next->coder->memlimit = memlimit;
-	next->coder->memusage = LZMA_MEMUSAGE_BASE;
-	next->coder->tell_no_check = (flags & LZMA_TELL_NO_CHECK) != 0;
-	next->coder->tell_unsupported_check
+	coder->memlimit = my_max(1, memlimit);
+	coder->memusage = LZMA_MEMUSAGE_BASE;
+	coder->tell_no_check = (flags & LZMA_TELL_NO_CHECK) != 0;
+	coder->tell_unsupported_check
 			= (flags & LZMA_TELL_UNSUPPORTED_CHECK) != 0;
-	next->coder->tell_any_check = (flags & LZMA_TELL_ANY_CHECK) != 0;
-	next->coder->ignore_check = (flags & LZMA_IGNORE_CHECK) != 0;
-	next->coder->concatenated = (flags & LZMA_CONCATENATED) != 0;
-	next->coder->first_stream = true;
+	coder->tell_any_check = (flags & LZMA_TELL_ANY_CHECK) != 0;
+	coder->ignore_check = (flags & LZMA_IGNORE_CHECK) != 0;
+	coder->concatenated = (flags & LZMA_CONCATENATED) != 0;
+	coder->first_stream = true;
 
-	return stream_decoder_reset(next->coder, allocator);
+	return stream_decoder_reset(coder, allocator);
 }
 
 
diff -uNrwB xz-5.2.2/src/liblzma/common/stream_encoder.c xz-5.2.4/src/liblzma/common/stream_encoder.c
--- xz-5.2.2/src/liblzma/common/stream_encoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/stream_encoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -14,7 +14,7 @@
 #include "index_encoder.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	enum {
 		SEQ_STREAM_HEADER,
 		SEQ_BLOCK_INIT,
@@ -55,11 +55,11 @@
 	/// Buffer to hold Stream Header, Block Header, and Stream Footer.
 	/// Block Header has biggest maximum size.
 	uint8_t buffer[LZMA_BLOCK_HEADER_SIZE_MAX];
-};
+} lzma_stream_coder;
 
 
 static lzma_ret
-block_encoder_init(lzma_coder *coder, const lzma_allocator *allocator)
+block_encoder_init(lzma_stream_coder *coder, const lzma_allocator *allocator)
 {
 	// Prepare the Block options. Even though Block encoder doesn't need
 	// compressed_size, uncompressed_size, and header_size to be
@@ -78,11 +78,13 @@
 
 
 static lzma_ret
-stream_encode(lzma_coder *coder, const lzma_allocator *allocator,
+stream_encode(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size, lzma_action action)
 {
+	lzma_stream_coder *coder = coder_ptr;
+
 	// Main loop
 	while (*out_pos < out_size)
 	switch (coder->sequence) {
@@ -209,8 +211,10 @@
 
 
 static void
-stream_encoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+stream_encoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_stream_coder *coder = coder_ptr;
+
 	lzma_next_end(&coder->block_encoder, allocator);
 	lzma_next_end(&coder->index_encoder, allocator);
 	lzma_index_end(coder->index, allocator);
@@ -224,10 +228,12 @@
 
 
 static lzma_ret
-stream_encoder_update(lzma_coder *coder, const lzma_allocator *allocator,
+stream_encoder_update(void *coder_ptr, const lzma_allocator *allocator,
 		const lzma_filter *filters,
 		const lzma_filter *reversed_filters)
 {
+	lzma_stream_coder *coder = coder_ptr;
+
 	if (coder->sequence <= SEQ_BLOCK_INIT) {
 		// There is no incomplete Block waiting to be finished,
 		// thus we can change the whole filter chain. Start by
@@ -271,30 +277,33 @@
 	if (filters == NULL)
 		return LZMA_PROG_ERROR;
 
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	lzma_stream_coder *coder = next->coder;
+
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_stream_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &stream_encode;
 		next->end = &stream_encoder_end;
 		next->update = &stream_encoder_update;
 
-		next->coder->filters[0].id = LZMA_VLI_UNKNOWN;
-		next->coder->block_encoder = LZMA_NEXT_CODER_INIT;
-		next->coder->index_encoder = LZMA_NEXT_CODER_INIT;
-		next->coder->index = NULL;
+		coder->filters[0].id = LZMA_VLI_UNKNOWN;
+		coder->block_encoder = LZMA_NEXT_CODER_INIT;
+		coder->index_encoder = LZMA_NEXT_CODER_INIT;
+		coder->index = NULL;
 	}
 
 	// Basic initializations
-	next->coder->sequence = SEQ_STREAM_HEADER;
-	next->coder->block_options.version = 0;
-	next->coder->block_options.check = check;
+	coder->sequence = SEQ_STREAM_HEADER;
+	coder->block_options.version = 0;
+	coder->block_options.check = check;
 
 	// Initialize the Index
-	lzma_index_end(next->coder->index, allocator);
-	next->coder->index = lzma_index_init(allocator);
-	if (next->coder->index == NULL)
+	lzma_index_end(coder->index, allocator);
+	coder->index = lzma_index_init(allocator);
+	if (coder->index == NULL)
 		return LZMA_MEM_ERROR;
 
 	// Encode the Stream Header
@@ -303,16 +312,15 @@
 		.check = check,
 	};
 	return_if_error(lzma_stream_header_encode(
-			&stream_flags, next->coder->buffer));
+			&stream_flags, coder->buffer));
 
-	next->coder->buffer_pos = 0;
-	next->coder->buffer_size = LZMA_STREAM_HEADER_SIZE;
+	coder->buffer_pos = 0;
+	coder->buffer_size = LZMA_STREAM_HEADER_SIZE;
 
 	// Initialize the Block encoder. This way we detect unsupported
 	// filter chains when initializing the Stream encoder instead of
 	// giving an error after Stream Header has already written out.
-	return stream_encoder_update(
-			next->coder, allocator, filters, NULL);
+	return stream_encoder_update(coder, allocator, filters, NULL);
 }
 
 
diff -uNrwB xz-5.2.2/src/liblzma/common/stream_encoder_mt.c xz-5.2.4/src/liblzma/common/stream_encoder_mt.c
--- xz-5.2.2/src/liblzma/common/stream_encoder_mt.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/common/stream_encoder_mt.c	2018-04-29 21:10:38.000000000 +0600
@@ -44,6 +44,7 @@
 
 } worker_state;
 
+typedef struct lzma_stream_coder_s lzma_stream_coder;
 
 typedef struct worker_thread_s worker_thread;
 struct worker_thread_s {
@@ -65,7 +66,7 @@
 
 	/// Pointer to the main structure is needed when putting this
 	/// thread back to the stack of free threads.
-	lzma_coder *coder;
+	lzma_stream_coder *coder;
 
 	/// The allocator is set by the main thread. Since a copy of the
 	/// pointer is kept here, the application must not change the
@@ -96,7 +97,7 @@
 };
 
 
-struct lzma_coder_s {
+struct lzma_stream_coder_s {
 	enum {
 		SEQ_STREAM_HEADER,
 		SEQ_BLOCK,
@@ -417,7 +418,7 @@
 
 /// Make the threads stop but not exit. Optionally wait for them to stop.
 static void
-threads_stop(lzma_coder *coder, bool wait_for_threads)
+threads_stop(lzma_stream_coder *coder, bool wait_for_threads)
 {
 	// Tell the threads to stop.
 	for (uint32_t i = 0; i < coder->threads_initialized; ++i) {
@@ -446,7 +447,7 @@
 /// Stop the threads and free the resources associated with them.
 /// Wait until the threads have exited.
 static void
-threads_end(lzma_coder *coder, const lzma_allocator *allocator)
+threads_end(lzma_stream_coder *coder, const lzma_allocator *allocator)
 {
 	for (uint32_t i = 0; i < coder->threads_initialized; ++i) {
 		mythread_sync(coder->threads[i].mutex) {
@@ -468,7 +469,8 @@
 
 /// Initialize a new worker_thread structure and create a new thread.
 static lzma_ret
-initialize_new_thread(lzma_coder *coder, const lzma_allocator *allocator)
+initialize_new_thread(lzma_stream_coder *coder,
+		const lzma_allocator *allocator)
 {
 	worker_thread *thr = &coder->threads[coder->threads_initialized];
 
@@ -510,7 +512,7 @@
 
 
 static lzma_ret
-get_thread(lzma_coder *coder, const lzma_allocator *allocator)
+get_thread(lzma_stream_coder *coder, const lzma_allocator *allocator)
 {
 	// If there are no free output subqueues, there is no
 	// point to try getting a thread.
@@ -548,7 +550,7 @@
 
 
 static lzma_ret
-stream_encode_in(lzma_coder *coder, const lzma_allocator *allocator,
+stream_encode_in(lzma_stream_coder *coder, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, lzma_action action)
 {
@@ -616,7 +618,7 @@
 /// Wait until more input can be consumed, more output can be read, or
 /// an optional timeout is reached.
 static bool
-wait_for_work(lzma_coder *coder, mythread_condtime *wait_abs,
+wait_for_work(lzma_stream_coder *coder, mythread_condtime *wait_abs,
 		bool *has_blocked, bool has_input)
 {
 	if (coder->timeout != 0 && !*has_blocked) {
@@ -662,11 +664,13 @@
 
 
 static lzma_ret
-stream_encode_mt(lzma_coder *coder, const lzma_allocator *allocator,
+stream_encode_mt(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size, lzma_action action)
 {
+	lzma_stream_coder *coder = coder_ptr;
+
 	switch (coder->sequence) {
 	case SEQ_STREAM_HEADER:
 		lzma_bufcpy(coder->header, &coder->header_pos,
@@ -834,8 +838,10 @@
 
 
 static void
-stream_encoder_mt_end(lzma_coder *coder, const lzma_allocator *allocator)
+stream_encoder_mt_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_stream_coder *coder = coder_ptr;
+
 	// Threads must be killed before the output queue can be freed.
 	threads_end(coder, allocator);
 	lzma_outq_end(&coder->outq, allocator);
@@ -907,10 +913,12 @@
 
 
 static void
-get_progress(lzma_coder *coder, uint64_t *progress_in, uint64_t *progress_out)
+get_progress(void *coder_ptr, uint64_t *progress_in, uint64_t *progress_out)
 {
+	lzma_stream_coder *coder = coder_ptr;
+
 	// Lock coder->mutex to prevent finishing threads from moving their
-	// progress info from the worker_thread structure to lzma_coder.
+	// progress info from the worker_thread structure to lzma_stream_coder.
 	mythread_sync(coder->mutex) {
 		*progress_in = coder->progress_in;
 		*progress_out = coder->progress_out;
@@ -962,24 +970,27 @@
 		return LZMA_UNSUPPORTED_CHECK;
 
 	// Allocate and initialize the base structure if needed.
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	lzma_stream_coder *coder = next->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_stream_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
+
 		// For the mutex and condition variable initializations
 		// the error handling has to be done here because
 		// stream_encoder_mt_end() doesn't know if they have
 		// already been initialized or not.
-		if (mythread_mutex_init(&next->coder->mutex)) {
-			lzma_free(next->coder, allocator);
+		if (mythread_mutex_init(&coder->mutex)) {
+			lzma_free(coder, allocator);
 			next->coder = NULL;
 			return LZMA_MEM_ERROR;
 		}
 
-		if (mythread_cond_init(&next->coder->cond)) {
-			mythread_mutex_destroy(&next->coder->mutex);
-			lzma_free(next->coder, allocator);
+		if (mythread_cond_init(&coder->cond)) {
+			mythread_mutex_destroy(&coder->mutex);
+			lzma_free(coder, allocator);
 			next->coder = NULL;
 			return LZMA_MEM_ERROR;
 		}
@@ -989,76 +1000,76 @@
 		next->get_progress = &get_progress;
 // 		next->update = &stream_encoder_mt_update;
 
-		next->coder->filters[0].id = LZMA_VLI_UNKNOWN;
-		next->coder->index_encoder = LZMA_NEXT_CODER_INIT;
-		next->coder->index = NULL;
-		memzero(&next->coder->outq, sizeof(next->coder->outq));
-		next->coder->threads = NULL;
-		next->coder->threads_max = 0;
-		next->coder->threads_initialized = 0;
+		coder->filters[0].id = LZMA_VLI_UNKNOWN;
+		coder->index_encoder = LZMA_NEXT_CODER_INIT;
+		coder->index = NULL;
+		memzero(&coder->outq, sizeof(coder->outq));
+		coder->threads = NULL;
+		coder->threads_max = 0;
+		coder->threads_initialized = 0;
 	}
 
 	// Basic initializations
-	next->coder->sequence = SEQ_STREAM_HEADER;
-	next->coder->block_size = (size_t)(block_size);
-	next->coder->thread_error = LZMA_OK;
-	next->coder->thr = NULL;
+	coder->sequence = SEQ_STREAM_HEADER;
+	coder->block_size = (size_t)(block_size);
+	coder->thread_error = LZMA_OK;
+	coder->thr = NULL;
 
 	// Allocate the thread-specific base structures.
 	assert(options->threads > 0);
-	if (next->coder->threads_max != options->threads) {
-		threads_end(next->coder, allocator);
+	if (coder->threads_max != options->threads) {
+		threads_end(coder, allocator);
 
-		next->coder->threads = NULL;
-		next->coder->threads_max = 0;
+		coder->threads = NULL;
+		coder->threads_max = 0;
 
-		next->coder->threads_initialized = 0;
-		next->coder->threads_free = NULL;
+		coder->threads_initialized = 0;
+		coder->threads_free = NULL;
 
-		next->coder->threads = lzma_alloc(
+		coder->threads = lzma_alloc(
 				options->threads * sizeof(worker_thread),
 				allocator);
-		if (next->coder->threads == NULL)
+		if (coder->threads == NULL)
 			return LZMA_MEM_ERROR;
 
-		next->coder->threads_max = options->threads;
+		coder->threads_max = options->threads;
 	} else {
 		// Reuse the old structures and threads. Tell the running
 		// threads to stop and wait until they have stopped.
-		threads_stop(next->coder, true);
+		threads_stop(coder, true);
 	}
 
 	// Output queue
-	return_if_error(lzma_outq_init(&next->coder->outq, allocator,
+	return_if_error(lzma_outq_init(&coder->outq, allocator,
 			outbuf_size_max, options->threads));
 
 	// Timeout
-	next->coder->timeout = options->timeout;
+	coder->timeout = options->timeout;
 
 	// Free the old filter chain and copy the new one.
-	for (size_t i = 0; next->coder->filters[i].id != LZMA_VLI_UNKNOWN; ++i)
-		lzma_free(next->coder->filters[i].options, allocator);
+	for (size_t i = 0; coder->filters[i].id != LZMA_VLI_UNKNOWN; ++i)
+		lzma_free(coder->filters[i].options, allocator);
 
 	return_if_error(lzma_filters_copy(
-			filters, next->coder->filters, allocator));
+			filters, coder->filters, allocator));
 
 	// Index
-	lzma_index_end(next->coder->index, allocator);
-	next->coder->index = lzma_index_init(allocator);
-	if (next->coder->index == NULL)
+	lzma_index_end(coder->index, allocator);
+	coder->index = lzma_index_init(allocator);
+	if (coder->index == NULL)
 		return LZMA_MEM_ERROR;
 
 	// Stream Header
-	next->coder->stream_flags.version = 0;
-	next->coder->stream_flags.check = options->check;
+	coder->stream_flags.version = 0;
+	coder->stream_flags.check = options->check;
 	return_if_error(lzma_stream_header_encode(
-			&next->coder->stream_flags, next->coder->header));
+			&coder->stream_flags, coder->header));
 
-	next->coder->header_pos = 0;
+	coder->header_pos = 0;
 
 	// Progress info
-	next->coder->progress_in = 0;
-	next->coder->progress_out = LZMA_STREAM_HEADER_SIZE;
+	coder->progress_in = 0;
+	coder->progress_out = LZMA_STREAM_HEADER_SIZE;
 
 	return LZMA_OK;
 }
@@ -1111,7 +1122,8 @@
 		return UINT64_MAX;
 
 	// Sum them with overflow checking.
-	uint64_t total_memusage = LZMA_MEMUSAGE_BASE + sizeof(lzma_coder)
+	uint64_t total_memusage = LZMA_MEMUSAGE_BASE
+			+ sizeof(lzma_stream_coder)
 			+ options->threads * sizeof(worker_thread);
 
 	if (UINT64_MAX - total_memusage < inbuf_memusage)
diff -uNrwB xz-5.2.2/src/liblzma/delta/delta_common.c xz-5.2.4/src/liblzma/delta/delta_common.c
--- xz-5.2.2/src/liblzma/delta/delta_common.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/delta/delta_common.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,8 +15,9 @@
 
 
 static void
-delta_coder_end(lzma_coder *coder, const lzma_allocator *allocator)
+delta_coder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_delta_coder *coder = coder_ptr;
 	lzma_next_end(&coder->next, allocator);
 	lzma_free(coder, allocator);
 	return;
@@ -28,14 +29,17 @@
 		const lzma_filter_info *filters)
 {
 	// Allocate memory for the decoder if needed.
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	lzma_delta_coder *coder = next->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_delta_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
+
 		// End function is the same for encoder and decoder.
 		next->end = &delta_coder_end;
-		next->coder->next = LZMA_NEXT_CODER_INIT;
+		coder->next = LZMA_NEXT_CODER_INIT;
 	}
 
 	// Validate the options.
@@ -44,15 +48,14 @@
 
 	// Set the delta distance.
 	const lzma_options_delta *opt = filters[0].options;
-	next->coder->distance = opt->dist;
+	coder->distance = opt->dist;
 
 	// Initialize the rest of the variables.
-	next->coder->pos = 0;
-	memzero(next->coder->history, LZMA_DELTA_DIST_MAX);
+	coder->pos = 0;
+	memzero(coder->history, LZMA_DELTA_DIST_MAX);
 
 	// Initialize the next decoder in the chain, if any.
-	return lzma_next_filter_init(&next->coder->next,
-			allocator, filters + 1);
+	return lzma_next_filter_init(&coder->next, allocator, filters + 1);
 }
 
 
@@ -66,5 +69,5 @@
 			|| opt->dist > LZMA_DELTA_DIST_MAX)
 		return UINT64_MAX;
 
-	return sizeof(lzma_coder);
+	return sizeof(lzma_delta_coder);
 }
diff -uNrwB xz-5.2.2/src/liblzma/delta/delta_decoder.c xz-5.2.4/src/liblzma/delta/delta_decoder.c
--- xz-5.2.2/src/liblzma/delta/delta_decoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/delta/delta_decoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 
 
 static void
-decode_buffer(lzma_coder *coder, uint8_t *buffer, size_t size)
+decode_buffer(lzma_delta_coder *coder, uint8_t *buffer, size_t size)
 {
 	const size_t distance = coder->distance;
 
@@ -27,11 +27,13 @@
 
 
 static lzma_ret
-delta_decode(lzma_coder *coder, const lzma_allocator *allocator,
+delta_decode(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size, lzma_action action)
 {
+	lzma_delta_coder *coder = coder_ptr;
+
 	assert(coder->next.code != NULL);
 
 	const size_t out_start = *out_pos;
diff -uNrwB xz-5.2.2/src/liblzma/delta/delta_encoder.c xz-5.2.4/src/liblzma/delta/delta_encoder.c
--- xz-5.2.2/src/liblzma/delta/delta_encoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/delta/delta_encoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -18,7 +18,7 @@
 /// is the first filter in the chain (and thus the last filter in the
 /// encoder's filter stack).
 static void
-copy_and_encode(lzma_coder *coder,
+copy_and_encode(lzma_delta_coder *coder,
 		const uint8_t *restrict in, uint8_t *restrict out, size_t size)
 {
 	const size_t distance = coder->distance;
@@ -35,7 +35,7 @@
 /// Encodes the data in place. This is used when we are the last filter
 /// in the chain (and thus non-last filter in the encoder's filter stack).
 static void
-encode_in_place(lzma_coder *coder, uint8_t *buffer, size_t size)
+encode_in_place(lzma_delta_coder *coder, uint8_t *buffer, size_t size)
 {
 	const size_t distance = coder->distance;
 
@@ -49,11 +49,13 @@
 
 
 static lzma_ret
-delta_encode(lzma_coder *coder, const lzma_allocator *allocator,
+delta_encode(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size, lzma_action action)
 {
+	lzma_delta_coder *coder = coder_ptr;
+
 	lzma_ret ret;
 
 	if (coder->next.code == NULL) {
@@ -84,10 +86,12 @@
 
 
 static lzma_ret
-delta_encoder_update(lzma_coder *coder, const lzma_allocator *allocator,
+delta_encoder_update(void *coder_ptr, const lzma_allocator *allocator,
 		const lzma_filter *filters_null lzma_attribute((__unused__)),
 		const lzma_filter *reversed_filters)
 {
+	lzma_delta_coder *coder = coder_ptr;
+
 	// Delta doesn't and will never support changing the options in
 	// the middle of encoding. If the app tries to change them, we
 	// simply ignore them.
diff -uNrwB xz-5.2.2/src/liblzma/delta/delta_private.h xz-5.2.4/src/liblzma/delta/delta_private.h
--- xz-5.2.2/src/liblzma/delta/delta_private.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/delta/delta_private.h	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 
 #include "delta_common.h"
 
-struct lzma_coder_s {
+typedef struct {
 	/// Next coder in the chain
 	lzma_next_coder next;
 
@@ -27,7 +27,7 @@
 
 	/// Buffer to hold history of the original data
 	uint8_t history[LZMA_DELTA_DIST_MAX];
-};
+} lzma_delta_coder;
 
 
 extern lzma_ret lzma_delta_coder_init(
diff -uNrwB xz-5.2.2/src/liblzma/lz/lz_decoder.c xz-5.2.4/src/liblzma/lz/lz_decoder.c
--- xz-5.2.2/src/liblzma/lz/lz_decoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lz/lz_decoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -20,7 +20,7 @@
 #include "lz_decoder.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	/// Dictionary (history buffer)
 	lzma_dict dict;
 
@@ -48,7 +48,7 @@
 		size_t size;
 		uint8_t buffer[LZMA_BUFFER_SIZE];
 	} temp;
-};
+} lzma_coder;
 
 
 static void
@@ -125,13 +125,15 @@
 
 
 static lzma_ret
-lz_decode(lzma_coder *coder,
+lz_decode(void *coder_ptr,
 		const lzma_allocator *allocator lzma_attribute((__unused__)),
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size,
 		lzma_action action)
 {
+	lzma_coder *coder = coder_ptr;
+
 	if (coder->next.code == NULL)
 		return decode_buffer(coder, in, in_pos, in_size,
 				out, out_pos, out_size);
@@ -184,8 +186,10 @@
 
 
 static void
-lz_decoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+lz_decoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_coder *coder = coder_ptr;
+
 	lzma_next_end(&coder->next, allocator);
 	lzma_free(coder->dict.buf, allocator);
 
@@ -207,24 +211,26 @@
 			lzma_lz_options *lz_options))
 {
 	// Allocate the base structure if it isn't already allocated.
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	lzma_coder *coder = next->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &lz_decode;
 		next->end = &lz_decoder_end;
 
-		next->coder->dict.buf = NULL;
-		next->coder->dict.size = 0;
-		next->coder->lz = LZMA_LZ_DECODER_INIT;
-		next->coder->next = LZMA_NEXT_CODER_INIT;
+		coder->dict.buf = NULL;
+		coder->dict.size = 0;
+		coder->lz = LZMA_LZ_DECODER_INIT;
+		coder->next = LZMA_NEXT_CODER_INIT;
 	}
 
 	// Allocate and initialize the LZ-based decoder. It will also give
 	// us the dictionary size.
 	lzma_lz_options lz_options;
-	return_if_error(lz_init(&next->coder->lz, allocator,
+	return_if_error(lz_init(&coder->lz, allocator,
 			filters[0].options, &lz_options));
 
 	// If the dictionary size is very small, increase it to 4096 bytes.
@@ -248,14 +254,14 @@
 	lz_options.dict_size = (lz_options.dict_size + 15) & ~((size_t)(15));
 
 	// Allocate and initialize the dictionary.
-	if (next->coder->dict.size != lz_options.dict_size) {
-		lzma_free(next->coder->dict.buf, allocator);
-		next->coder->dict.buf
+	if (coder->dict.size != lz_options.dict_size) {
+		lzma_free(coder->dict.buf, allocator);
+		coder->dict.buf
 				= lzma_alloc(lz_options.dict_size, allocator);
-		if (next->coder->dict.buf == NULL)
+		if (coder->dict.buf == NULL)
 			return LZMA_MEM_ERROR;
 
-		next->coder->dict.size = lz_options.dict_size;
+		coder->dict.size = lz_options.dict_size;
 	}
 
 	lz_decoder_reset(next->coder);
@@ -268,21 +274,20 @@
 		const size_t copy_size = my_min(lz_options.preset_dict_size,
 				lz_options.dict_size);
 		const size_t offset = lz_options.preset_dict_size - copy_size;
-		memcpy(next->coder->dict.buf, lz_options.preset_dict + offset,
+		memcpy(coder->dict.buf, lz_options.preset_dict + offset,
 				copy_size);
-		next->coder->dict.pos = copy_size;
-		next->coder->dict.full = copy_size;
+		coder->dict.pos = copy_size;
+		coder->dict.full = copy_size;
 	}
 
 	// Miscellaneous initializations
-	next->coder->next_finished = false;
-	next->coder->this_finished = false;
-	next->coder->temp.pos = 0;
-	next->coder->temp.size = 0;
+	coder->next_finished = false;
+	coder->this_finished = false;
+	coder->temp.pos = 0;
+	coder->temp.size = 0;
 
 	// Initialize the next filter in the chain, if any.
-	return lzma_next_filter_init(&next->coder->next, allocator,
-			filters + 1);
+	return lzma_next_filter_init(&coder->next, allocator, filters + 1);
 }
 
 
@@ -294,7 +299,8 @@
 
 
 extern void
-lzma_lz_decoder_uncompressed(lzma_coder *coder, lzma_vli uncompressed_size)
+lzma_lz_decoder_uncompressed(void *coder_ptr, lzma_vli uncompressed_size)
 {
+	lzma_coder *coder = coder_ptr;
 	coder->lz.set_uncompressed(coder->lz.coder, uncompressed_size);
 }
diff -uNrwB xz-5.2.2/src/liblzma/lz/lz_decoder.h xz-5.2.4/src/liblzma/lz/lz_decoder.h
--- xz-5.2.2/src/liblzma/lz/lz_decoder.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lz/lz_decoder.h	2018-04-29 21:10:38.000000000 +0600
@@ -53,21 +53,20 @@
 
 typedef struct {
 	/// Data specific to the LZ-based decoder
-	lzma_coder *coder;
+	void *coder;
 
 	/// Function to decode from in[] to *dict
-	lzma_ret (*code)(lzma_coder *restrict coder,
+	lzma_ret (*code)(void *coder,
 			lzma_dict *restrict dict, const uint8_t *restrict in,
 			size_t *restrict in_pos, size_t in_size);
 
-	void (*reset)(lzma_coder *coder, const void *options);
+	void (*reset)(void *coder, const void *options);
 
 	/// Set the uncompressed size
-	void (*set_uncompressed)(lzma_coder *coder,
-			lzma_vli uncompressed_size);
+	void (*set_uncompressed)(void *coder, lzma_vli uncompressed_size);
 
 	/// Free allocated resources
-	void (*end)(lzma_coder *coder, const lzma_allocator *allocator);
+	void (*end)(void *coder, const lzma_allocator *allocator);
 
 } lzma_lz_decoder;
 
@@ -92,7 +91,7 @@
 extern uint64_t lzma_lz_decoder_memusage(size_t dictionary_size);
 
 extern void lzma_lz_decoder_uncompressed(
-		lzma_coder *coder, lzma_vli uncompressed_size);
+		void *coder, lzma_vli uncompressed_size);
 
 
 //////////////////////
diff -uNrwB xz-5.2.2/src/liblzma/lz/lz_encoder.c xz-5.2.4/src/liblzma/lz/lz_encoder.c
--- xz-5.2.2/src/liblzma/lz/lz_encoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lz/lz_encoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -23,7 +23,7 @@
 #include "memcmplen.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	/// LZ-based encoder e.g. LZMA
 	lzma_lz_encoder lz;
 
@@ -32,7 +32,7 @@
 
 	/// Next coder in the chain
 	lzma_next_coder next;
-};
+} lzma_coder;
 
 
 /// \brief      Moves the data in the input window to free space for new data
@@ -157,12 +157,14 @@
 
 
 static lzma_ret
-lz_encode(lzma_coder *coder, const lzma_allocator *allocator,
+lz_encode(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size,
 		uint8_t *restrict out, size_t *restrict out_pos,
 		size_t out_size, lzma_action action)
 {
+	lzma_coder *coder = coder_ptr;
+
 	while (*out_pos < out_size
 			&& (*in_pos < in_size || action != LZMA_RUN)) {
 		// Read more data to coder->mf.buffer if needed.
@@ -481,8 +483,10 @@
 
 
 static void
-lz_encoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+lz_encoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_coder *coder = coder_ptr;
+
 	lzma_next_end(&coder->next, allocator);
 
 	lzma_free(coder->mf.son, allocator);
@@ -500,10 +504,12 @@
 
 
 static lzma_ret
-lz_encoder_update(lzma_coder *coder, const lzma_allocator *allocator,
+lz_encoder_update(void *coder_ptr, const lzma_allocator *allocator,
 		const lzma_filter *filters_null lzma_attribute((__unused__)),
 		const lzma_filter *reversed_filters)
 {
+	lzma_coder *coder = coder_ptr;
+
 	if (coder->lz.options_update == NULL)
 		return LZMA_PROG_ERROR;
 
@@ -528,46 +534,51 @@
 #endif
 
 	// Allocate and initialize the base data structure.
-	if (next->coder == NULL) {
-		next->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (next->coder == NULL)
+	lzma_coder *coder = next->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &lz_encode;
 		next->end = &lz_encoder_end;
 		next->update = &lz_encoder_update;
 
-		next->coder->lz.coder = NULL;
-		next->coder->lz.code = NULL;
-		next->coder->lz.end = NULL;
-
-		next->coder->mf.buffer = NULL;
-		next->coder->mf.hash = NULL;
-		next->coder->mf.son = NULL;
-		next->coder->mf.hash_count = 0;
-		next->coder->mf.sons_count = 0;
+		coder->lz.coder = NULL;
+		coder->lz.code = NULL;
+		coder->lz.end = NULL;
+
+		// mf.size is initialized to silence Valgrind
+		// when used on optimized binaries (GCC may reorder
+		// code in a way that Valgrind gets unhappy).
+		coder->mf.buffer = NULL;
+		coder->mf.size = 0;
+		coder->mf.hash = NULL;
+		coder->mf.son = NULL;
+		coder->mf.hash_count = 0;
+		coder->mf.sons_count = 0;
 
-		next->coder->next = LZMA_NEXT_CODER_INIT;
+		coder->next = LZMA_NEXT_CODER_INIT;
 	}
 
 	// Initialize the LZ-based encoder.
 	lzma_lz_options lz_options;
-	return_if_error(lz_init(&next->coder->lz, allocator,
+	return_if_error(lz_init(&coder->lz, allocator,
 			filters[0].options, &lz_options));
 
-	// Setup the size information into next->coder->mf and deallocate
+	// Setup the size information into coder->mf and deallocate
 	// old buffers if they have wrong size.
-	if (lz_encoder_prepare(&next->coder->mf, allocator, &lz_options))
+	if (lz_encoder_prepare(&coder->mf, allocator, &lz_options))
 		return LZMA_OPTIONS_ERROR;
 
 	// Allocate new buffers if needed, and do the rest of
 	// the initialization.
-	if (lz_encoder_init(&next->coder->mf, allocator, &lz_options))
+	if (lz_encoder_init(&coder->mf, allocator, &lz_options))
 		return LZMA_MEM_ERROR;
 
 	// Initialize the next filter in the chain, if any.
-	return lzma_next_filter_init(&next->coder->next, allocator,
-			filters + 1);
+	return lzma_next_filter_init(&coder->next, allocator, filters + 1);
 }
 
 
diff -uNrwB xz-5.2.2/src/liblzma/lz/lz_encoder.h xz-5.2.4/src/liblzma/lz/lz_encoder.h
--- xz-5.2.2/src/liblzma/lz/lz_encoder.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lz/lz_encoder.h	2018-04-29 21:10:38.000000000 +0600
@@ -191,19 +191,18 @@
 
 typedef struct {
 	/// Data specific to the LZ-based encoder
-	lzma_coder *coder;
+	void *coder;
 
 	/// Function to encode from *dict to out[]
-	lzma_ret (*code)(lzma_coder *restrict coder,
+	lzma_ret (*code)(void *coder,
 			lzma_mf *restrict mf, uint8_t *restrict out,
 			size_t *restrict out_pos, size_t out_size);
 
 	/// Free allocated resources
-	void (*end)(lzma_coder *coder, const lzma_allocator *allocator);
+	void (*end)(void *coder, const lzma_allocator *allocator);
 
 	/// Update the options in the middle of the encoding.
-	lzma_ret (*options_update)(lzma_coder *coder,
-			const lzma_filter *filter);
+	lzma_ret (*options_update)(void *coder, const lzma_filter *filter);
 
 } lzma_lz_encoder;
 
diff -uNrwB xz-5.2.2/src/liblzma/lzma/lzma2_decoder.c xz-5.2.4/src/liblzma/lzma/lzma2_decoder.c
--- xz-5.2.2/src/liblzma/lzma/lzma2_decoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lzma/lzma2_decoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -16,7 +16,7 @@
 #include "lzma_decoder.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	enum sequence {
 		SEQ_CONTROL,
 		SEQ_UNCOMPRESSED_1,
@@ -50,14 +50,16 @@
 	bool need_dictionary_reset;
 
 	lzma_options_lzma options;
-};
+} lzma_lzma2_coder;
 
 
 static lzma_ret
-lzma2_decode(lzma_coder *restrict coder, lzma_dict *restrict dict,
+lzma2_decode(void *coder_ptr, lzma_dict *restrict dict,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size)
 {
+	lzma_lzma2_coder *restrict coder = coder_ptr;
+
 	// With SEQ_LZMA it is possible that no new input is needed to do
 	// some progress. The rest of the sequences assume that there is
 	// at least one byte of input.
@@ -209,8 +211,10 @@
 
 
 static void
-lzma2_decoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+lzma2_decoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_lzma2_coder *coder = coder_ptr;
+
 	assert(coder->lzma.end == NULL);
 	lzma_free(coder->lzma.coder, allocator);
 
@@ -224,25 +228,27 @@
 lzma2_decoder_init(lzma_lz_decoder *lz, const lzma_allocator *allocator,
 		const void *opt, lzma_lz_options *lz_options)
 {
-	if (lz->coder == NULL) {
-		lz->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (lz->coder == NULL)
+	lzma_lzma2_coder *coder = lz->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_lzma2_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		lz->coder = coder;
 		lz->code = &lzma2_decode;
 		lz->end = &lzma2_decoder_end;
 
-		lz->coder->lzma = LZMA_LZ_DECODER_INIT;
+		coder->lzma = LZMA_LZ_DECODER_INIT;
 	}
 
 	const lzma_options_lzma *options = opt;
 
-	lz->coder->sequence = SEQ_CONTROL;
-	lz->coder->need_properties = true;
-	lz->coder->need_dictionary_reset = options->preset_dict == NULL
+	coder->sequence = SEQ_CONTROL;
+	coder->need_properties = true;
+	coder->need_dictionary_reset = options->preset_dict == NULL
 			|| options->preset_dict_size == 0;
 
-	return lzma_lzma_decoder_create(&lz->coder->lzma,
+	return lzma_lzma_decoder_create(&coder->lzma,
 			allocator, options, lz_options);
 }
 
@@ -263,7 +269,7 @@
 extern uint64_t
 lzma_lzma2_decoder_memusage(const void *options)
 {
-	return sizeof(lzma_coder)
+	return sizeof(lzma_lzma2_coder)
 			+ lzma_lzma_decoder_memusage_nocheck(options);
 }
 
diff -uNrwB xz-5.2.2/src/liblzma/lzma/lzma2_encoder.c xz-5.2.4/src/liblzma/lzma/lzma2_encoder.c
--- xz-5.2.2/src/liblzma/lzma/lzma2_encoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lzma/lzma2_encoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -17,7 +17,7 @@
 #include "lzma2_encoder.h"
 
 
-struct lzma_coder_s {
+typedef struct {
 	enum {
 		SEQ_INIT,
 		SEQ_LZMA_ENCODE,
@@ -27,7 +27,7 @@
 	} sequence;
 
 	/// LZMA encoder
-	lzma_coder *lzma;
+	void *lzma;
 
 	/// LZMA options currently in use.
 	lzma_options_lzma opt_cur;
@@ -48,11 +48,11 @@
 
 	/// Buffer to hold the chunk header and LZMA compressed data
 	uint8_t buf[LZMA2_HEADER_MAX + LZMA2_CHUNK_MAX];
-};
+} lzma_lzma2_coder;
 
 
 static void
-lzma2_header_lzma(lzma_coder *coder)
+lzma2_header_lzma(lzma_lzma2_coder *coder)
 {
 	assert(coder->uncompressed_size > 0);
 	assert(coder->uncompressed_size <= LZMA2_UNCOMPRESSED_MAX);
@@ -108,7 +108,7 @@
 
 
 static void
-lzma2_header_uncompressed(lzma_coder *coder)
+lzma2_header_uncompressed(lzma_lzma2_coder *coder)
 {
 	assert(coder->uncompressed_size > 0);
 	assert(coder->uncompressed_size <= LZMA2_CHUNK_MAX);
@@ -133,10 +133,12 @@
 
 
 static lzma_ret
-lzma2_encode(lzma_coder *restrict coder, lzma_mf *restrict mf,
+lzma2_encode(void *coder_ptr, lzma_mf *restrict mf,
 		uint8_t *restrict out, size_t *restrict out_pos,
 		size_t out_size)
 {
+	lzma_lzma2_coder *restrict coder = coder_ptr;
+
 	while (*out_pos < out_size)
 	switch (coder->sequence) {
 	case SEQ_INIT:
@@ -262,8 +264,9 @@
 
 
 static void
-lzma2_encoder_end(lzma_coder *coder, const lzma_allocator *allocator)
+lzma2_encoder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_lzma2_coder *coder = coder_ptr;
 	lzma_free(coder->lzma, allocator);
 	lzma_free(coder, allocator);
 	return;
@@ -271,8 +274,10 @@
 
 
 static lzma_ret
-lzma2_encoder_options_update(lzma_coder *coder, const lzma_filter *filter)
+lzma2_encoder_options_update(void *coder_ptr, const lzma_filter *filter)
 {
+	lzma_lzma2_coder *coder = coder_ptr;
+
 	// New options can be set only when there is no incomplete chunk.
 	// This is the case at the beginning of the raw stream and right
 	// after LZMA_SYNC_FLUSH.
@@ -310,30 +315,32 @@
 	if (options == NULL)
 		return LZMA_PROG_ERROR;
 
-	if (lz->coder == NULL) {
-		lz->coder = lzma_alloc(sizeof(lzma_coder), allocator);
-		if (lz->coder == NULL)
+	lzma_lzma2_coder *coder = lz->coder;
+	if (coder == NULL) {
+		coder = lzma_alloc(sizeof(lzma_lzma2_coder), allocator);
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		lz->coder = coder;
 		lz->code = &lzma2_encode;
 		lz->end = &lzma2_encoder_end;
 		lz->options_update = &lzma2_encoder_options_update;
 
-		lz->coder->lzma = NULL;
+		coder->lzma = NULL;
 	}
 
-	lz->coder->opt_cur = *(const lzma_options_lzma *)(options);
+	coder->opt_cur = *(const lzma_options_lzma *)(options);
 
-	lz->coder->sequence = SEQ_INIT;
-	lz->coder->need_properties = true;
-	lz->coder->need_state_reset = false;
-	lz->coder->need_dictionary_reset
-			= lz->coder->opt_cur.preset_dict == NULL
-			|| lz->coder->opt_cur.preset_dict_size == 0;
+	coder->sequence = SEQ_INIT;
+	coder->need_properties = true;
+	coder->need_state_reset = false;
+	coder->need_dictionary_reset
+			= coder->opt_cur.preset_dict == NULL
+			|| coder->opt_cur.preset_dict_size == 0;
 
 	// Initialize LZMA encoder
-	return_if_error(lzma_lzma_encoder_create(&lz->coder->lzma, allocator,
-			&lz->coder->opt_cur, lz_options));
+	return_if_error(lzma_lzma_encoder_create(&coder->lzma, allocator,
+			&coder->opt_cur, lz_options));
 
 	// Make sure that we will always have enough history available in
 	// case we need to use uncompressed chunks. They are used when the
@@ -364,7 +371,7 @@
 	if (lzma_mem == UINT64_MAX)
 		return UINT64_MAX;
 
-	return sizeof(lzma_coder) + lzma_mem;
+	return sizeof(lzma_lzma2_coder) + lzma_mem;
 }
 
 
diff -uNrwB xz-5.2.2/src/liblzma/lzma/lzma_decoder.c xz-5.2.4/src/liblzma/lzma/lzma_decoder.c
--- xz-5.2.2/src/liblzma/lzma/lzma_decoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lzma/lzma_decoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -16,6 +16,12 @@
 #include "lzma_decoder.h"
 #include "range_decoder.h"
 
+// The macros unroll loops with switch statements.
+// Silence warnings about missing fall-through comments.
+#if TUKLIB_GNUC_REQ(7, 0)
+#	pragma GCC diagnostic ignored "-Wimplicit-fallthrough"
+#endif
+
 
 #ifdef HAVE_SMALL
 
@@ -161,7 +167,7 @@
 } lzma_length_decoder;
 
 
-struct lzma_coder_s {
+typedef struct {
 	///////////////////
 	// Probabilities //
 	///////////////////
@@ -277,14 +283,16 @@
 	/// If decoding a literal: match byte.
 	/// If decoding a match: length of the match.
 	uint32_t len;
-};
+} lzma_lzma1_decoder;
 
 
 static lzma_ret
-lzma_decode(lzma_coder *restrict coder, lzma_dict *restrict dictptr,
+lzma_decode(void *coder_ptr, lzma_dict *restrict dictptr,
 		const uint8_t *restrict in,
 		size_t *restrict in_pos, size_t in_size)
 {
+	lzma_lzma1_decoder *restrict coder = coder_ptr;
+
 	////////////////////
 	// Initialization //
 	////////////////////
@@ -840,23 +848,17 @@
 
 
 static void
-lzma_decoder_uncompressed(lzma_coder *coder, lzma_vli uncompressed_size)
+lzma_decoder_uncompressed(void *coder_ptr, lzma_vli uncompressed_size)
 {
+	lzma_lzma1_decoder *coder = coder_ptr;
 	coder->uncompressed_size = uncompressed_size;
 }
 
-/*
-extern void
-lzma_lzma_decoder_uncompressed(void *coder_ptr, lzma_vli uncompressed_size)
-{
-	// This is hack.
-	(*(lzma_coder **)(coder))->uncompressed_size = uncompressed_size;
-}
-*/
 
 static void
-lzma_decoder_reset(lzma_coder *coder, const void *opt)
+lzma_decoder_reset(void *coder_ptr, const void *opt)
 {
+	lzma_lzma1_decoder *coder = coder_ptr;
 	const lzma_options_lzma *options = opt;
 
 	// NOTE: We assume that lc/lp/pb are valid since they were
@@ -941,7 +943,7 @@
 		const void *opt, lzma_lz_options *lz_options)
 {
 	if (lz->coder == NULL) {
-		lz->coder = lzma_alloc(sizeof(lzma_coder), allocator);
+		lz->coder = lzma_alloc(sizeof(lzma_lzma1_decoder), allocator);
 		if (lz->coder == NULL)
 			return LZMA_MEM_ERROR;
 
@@ -1014,7 +1016,8 @@
 lzma_lzma_decoder_memusage_nocheck(const void *options)
 {
 	const lzma_options_lzma *const opt = options;
-	return sizeof(lzma_coder) + lzma_lz_decoder_memusage(opt->dict_size);
+	return sizeof(lzma_lzma1_decoder)
+			+ lzma_lz_decoder_memusage(opt->dict_size);
 }
 
 
diff -uNrwB xz-5.2.2/src/liblzma/lzma/lzma_encoder.c xz-5.2.4/src/liblzma/lzma/lzma_encoder.c
--- xz-5.2.2/src/liblzma/lzma/lzma_encoder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lzma/lzma_encoder.c	2018-04-29 21:10:38.000000000 +0600
@@ -43,7 +43,7 @@
 
 
 static inline void
-literal(lzma_coder *coder, lzma_mf *mf, uint32_t position)
+literal(lzma_lzma1_encoder *coder, lzma_mf *mf, uint32_t position)
 {
 	// Locate the literal byte to be encoded and the subcoder.
 	const uint8_t cur_byte = mf->buffer[
@@ -140,7 +140,7 @@
 ///////////
 
 static inline void
-match(lzma_coder *coder, const uint32_t pos_state,
+match(lzma_lzma1_encoder *coder, const uint32_t pos_state,
 		const uint32_t distance, const uint32_t len)
 {
 	update_match(coder->state);
@@ -187,7 +187,7 @@
 ////////////////////
 
 static inline void
-rep_match(lzma_coder *coder, const uint32_t pos_state,
+rep_match(lzma_lzma1_encoder *coder, const uint32_t pos_state,
 		const uint32_t rep, const uint32_t len)
 {
 	if (rep == 0) {
@@ -231,7 +231,7 @@
 //////////
 
 static void
-encode_symbol(lzma_coder *coder, lzma_mf *mf,
+encode_symbol(lzma_lzma1_encoder *coder, lzma_mf *mf,
 		uint32_t back, uint32_t len, uint32_t position)
 {
 	const uint32_t pos_state = position & coder->pos_mask;
@@ -265,7 +265,7 @@
 
 
 static bool
-encode_init(lzma_coder *coder, lzma_mf *mf)
+encode_init(lzma_lzma1_encoder *coder, lzma_mf *mf)
 {
 	assert(mf_position(mf) == 0);
 
@@ -293,7 +293,7 @@
 
 
 static void
-encode_eopm(lzma_coder *coder, uint32_t position)
+encode_eopm(lzma_lzma1_encoder *coder, uint32_t position)
 {
 	const uint32_t pos_state = position & coder->pos_mask;
 	rc_bit(&coder->rc, &coder->is_match[coder->state][pos_state], 1);
@@ -309,7 +309,7 @@
 
 
 extern lzma_ret
-lzma_lzma_encode(lzma_coder *restrict coder, lzma_mf *restrict mf,
+lzma_lzma_encode(lzma_lzma1_encoder *restrict coder, lzma_mf *restrict mf,
 		uint8_t *restrict out, size_t *restrict out_pos,
 		size_t out_size, uint32_t limit)
 {
@@ -402,7 +402,7 @@
 
 
 static lzma_ret
-lzma_encode(lzma_coder *restrict coder, lzma_mf *restrict mf,
+lzma_encode(void *coder, lzma_mf *restrict mf,
 		uint8_t *restrict out, size_t *restrict out_pos,
 		size_t out_size)
 {
@@ -473,7 +473,8 @@
 
 
 extern lzma_ret
-lzma_lzma_encoder_reset(lzma_coder *coder, const lzma_options_lzma *options)
+lzma_lzma_encoder_reset(lzma_lzma1_encoder *coder,
+		const lzma_options_lzma *options)
 {
 	if (!is_options_valid(options))
 		return LZMA_OPTIONS_ERROR;
@@ -545,18 +546,18 @@
 
 
 extern lzma_ret
-lzma_lzma_encoder_create(lzma_coder **coder_ptr,
+lzma_lzma_encoder_create(void **coder_ptr,
 		const lzma_allocator *allocator,
 		const lzma_options_lzma *options, lzma_lz_options *lz_options)
 {
-	// Allocate lzma_coder if it wasn't already allocated.
+	// Allocate lzma_lzma1_encoder if it wasn't already allocated.
 	if (*coder_ptr == NULL) {
-		*coder_ptr = lzma_alloc(sizeof(lzma_coder), allocator);
+		*coder_ptr = lzma_alloc(sizeof(lzma_lzma1_encoder), allocator);
 		if (*coder_ptr == NULL)
 			return LZMA_MEM_ERROR;
 	}
 
-	lzma_coder *coder = *coder_ptr;
+	lzma_lzma1_encoder *coder = *coder_ptr;
 
 	// Set compression mode. We haven't validates the options yet,
 	// but it's OK here, since nothing bad happens with invalid
@@ -636,7 +637,7 @@
 	if (lz_memusage == UINT64_MAX)
 		return UINT64_MAX;
 
-	return (uint64_t)(sizeof(lzma_coder)) + lz_memusage;
+	return (uint64_t)(sizeof(lzma_lzma1_encoder)) + lz_memusage;
 }
 
 
diff -uNrwB xz-5.2.2/src/liblzma/lzma/lzma_encoder.h xz-5.2.4/src/liblzma/lzma/lzma_encoder.h
--- xz-5.2.2/src/liblzma/lzma/lzma_encoder.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lzma/lzma_encoder.h	2018-04-29 21:10:38.000000000 +0600
@@ -17,6 +17,9 @@
 #include "common.h"
 
 
+typedef struct lzma_lzma1_encoder_s lzma_lzma1_encoder;
+
+
 extern lzma_ret lzma_lzma_encoder_init(lzma_next_coder *next,
 		const lzma_allocator *allocator,
 		const lzma_filter_info *filters);
@@ -36,16 +39,16 @@
 
 /// Initializes raw LZMA encoder; this is used by LZMA2.
 extern lzma_ret lzma_lzma_encoder_create(
-		lzma_coder **coder_ptr, const lzma_allocator *allocator,
+		void **coder_ptr, const lzma_allocator *allocator,
 		const lzma_options_lzma *options, lzma_lz_options *lz_options);
 
 
 /// Resets an already initialized LZMA encoder; this is used by LZMA2.
 extern lzma_ret lzma_lzma_encoder_reset(
-		lzma_coder *coder, const lzma_options_lzma *options);
+		lzma_lzma1_encoder *coder, const lzma_options_lzma *options);
 
 
-extern lzma_ret lzma_lzma_encode(lzma_coder *restrict coder,
+extern lzma_ret lzma_lzma_encode(lzma_lzma1_encoder *restrict coder,
 		lzma_mf *restrict mf, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size,
 		uint32_t read_limit);
diff -uNrwB xz-5.2.2/src/liblzma/lzma/lzma_encoder_optimum_fast.c xz-5.2.4/src/liblzma/lzma/lzma_encoder_optimum_fast.c
--- xz-5.2.2/src/liblzma/lzma/lzma_encoder_optimum_fast.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lzma/lzma_encoder_optimum_fast.c	2018-04-29 21:10:38.000000000 +0600
@@ -18,7 +18,8 @@
 
 
 extern void
-lzma_lzma_optimum_fast(lzma_coder *restrict coder, lzma_mf *restrict mf,
+lzma_lzma_optimum_fast(lzma_lzma1_encoder *restrict coder,
+		lzma_mf *restrict mf,
 		uint32_t *restrict back_res, uint32_t *restrict len_res)
 {
 	const uint32_t nice_len = mf->nice_len;
diff -uNrwB xz-5.2.2/src/liblzma/lzma/lzma_encoder_optimum_normal.c xz-5.2.4/src/liblzma/lzma/lzma_encoder_optimum_normal.c
--- xz-5.2.2/src/liblzma/lzma/lzma_encoder_optimum_normal.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lzma/lzma_encoder_optimum_normal.c	2018-04-29 21:10:38.000000000 +0600
@@ -19,7 +19,7 @@
 ////////////
 
 static uint32_t
-get_literal_price(const lzma_coder *const coder, const uint32_t pos,
+get_literal_price(const lzma_lzma1_encoder *const coder, const uint32_t pos,
 		const uint32_t prev_byte, const bool match_mode,
 		uint32_t match_byte, uint32_t symbol)
 {
@@ -65,7 +65,7 @@
 
 
 static inline uint32_t
-get_short_rep_price(const lzma_coder *const coder,
+get_short_rep_price(const lzma_lzma1_encoder *const coder,
 		const lzma_lzma_state state, const uint32_t pos_state)
 {
 	return rc_bit_0_price(coder->is_rep0[state])
@@ -74,7 +74,7 @@
 
 
 static inline uint32_t
-get_pure_rep_price(const lzma_coder *const coder, const uint32_t rep_index,
+get_pure_rep_price(const lzma_lzma1_encoder *const coder, const uint32_t rep_index,
 		const lzma_lzma_state state, uint32_t pos_state)
 {
 	uint32_t price;
@@ -99,7 +99,7 @@
 
 
 static inline uint32_t
-get_rep_price(const lzma_coder *const coder, const uint32_t rep_index,
+get_rep_price(const lzma_lzma1_encoder *const coder, const uint32_t rep_index,
 		const uint32_t len, const lzma_lzma_state state,
 		const uint32_t pos_state)
 {
@@ -109,7 +109,7 @@
 
 
 static inline uint32_t
-get_dist_len_price(const lzma_coder *const coder, const uint32_t dist,
+get_dist_len_price(const lzma_lzma1_encoder *const coder, const uint32_t dist,
 		const uint32_t len, const uint32_t pos_state)
 {
 	const uint32_t dist_state = get_dist_state(len);
@@ -130,7 +130,7 @@
 
 
 static void
-fill_dist_prices(lzma_coder *coder)
+fill_dist_prices(lzma_lzma1_encoder *coder)
 {
 	for (uint32_t dist_state = 0; dist_state < DIST_STATES; ++dist_state) {
 
@@ -185,7 +185,7 @@
 
 
 static void
-fill_align_prices(lzma_coder *coder)
+fill_align_prices(lzma_lzma1_encoder *coder)
 {
 	for (uint32_t i = 0; i < ALIGN_SIZE; ++i)
 		coder->align_prices[i] = rc_bittree_reverse_price(
@@ -221,7 +221,7 @@
 
 
 static void
-backward(lzma_coder *restrict coder, uint32_t *restrict len_res,
+backward(lzma_lzma1_encoder *restrict coder, uint32_t *restrict len_res,
 		uint32_t *restrict back_res, uint32_t cur)
 {
 	coder->opts_end_index = cur;
@@ -269,7 +269,7 @@
 //////////
 
 static inline uint32_t
-helper1(lzma_coder *restrict coder, lzma_mf *restrict mf,
+helper1(lzma_lzma1_encoder *restrict coder, lzma_mf *restrict mf,
 		uint32_t *restrict back_res, uint32_t *restrict len_res,
 		uint32_t position)
 {
@@ -441,7 +441,7 @@
 
 
 static inline uint32_t
-helper2(lzma_coder *coder, uint32_t *reps, const uint8_t *buf,
+helper2(lzma_lzma1_encoder *coder, uint32_t *reps, const uint8_t *buf,
 		uint32_t len_end, uint32_t position, const uint32_t cur,
 		const uint32_t nice_len, const uint32_t buf_avail_full)
 {
@@ -797,7 +797,8 @@
 
 
 extern void
-lzma_lzma_optimum_normal(lzma_coder *restrict coder, lzma_mf *restrict mf,
+lzma_lzma_optimum_normal(lzma_lzma1_encoder *restrict coder,
+		lzma_mf *restrict mf,
 		uint32_t *restrict back_res, uint32_t *restrict len_res,
 		uint32_t position)
 {
diff -uNrwB xz-5.2.2/src/liblzma/lzma/lzma_encoder_presets.c xz-5.2.4/src/liblzma/lzma/lzma_encoder_presets.c
--- xz-5.2.2/src/liblzma/lzma/lzma_encoder_presets.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lzma/lzma_encoder_presets.c	2018-04-29 21:10:38.000000000 +0600
@@ -2,6 +2,7 @@
 //
 /// \file       lzma_encoder_presets.c
 /// \brief      Encoder presets
+/// \note       xz needs this even when only decoding is enabled.
 //
 //  Author:     Lasse Collin
 //
diff -uNrwB xz-5.2.2/src/liblzma/lzma/lzma_encoder_private.h xz-5.2.4/src/liblzma/lzma/lzma_encoder_private.h
--- xz-5.2.2/src/liblzma/lzma/lzma_encoder_private.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lzma/lzma_encoder_private.h	2018-04-29 21:10:38.000000000 +0600
@@ -69,7 +69,7 @@
 } lzma_optimal;
 
 
-struct lzma_coder_s {
+struct lzma_lzma1_encoder_s {
 	/// Range encoder
 	lzma_range_encoder rc;
 
@@ -138,10 +138,10 @@
 
 
 extern void lzma_lzma_optimum_fast(
-		lzma_coder *restrict coder, lzma_mf *restrict mf,
+		lzma_lzma1_encoder *restrict coder, lzma_mf *restrict mf,
 		uint32_t *restrict back_res, uint32_t *restrict len_res);
 
-extern void lzma_lzma_optimum_normal(lzma_coder *restrict coder,
+extern void lzma_lzma_optimum_normal(lzma_lzma1_encoder *restrict coder,
 		lzma_mf *restrict mf, uint32_t *restrict back_res,
 		uint32_t *restrict len_res, uint32_t position);
 
diff -uNrwB xz-5.2.2/src/liblzma/lzma/Makefile.inc xz-5.2.4/src/liblzma/lzma/Makefile.inc
--- xz-5.2.2/src/liblzma/lzma/Makefile.inc	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/lzma/Makefile.inc	2018-04-29 21:10:38.000000000 +0600
@@ -9,12 +9,16 @@
 
 liblzma_la_SOURCES += lzma/lzma_common.h
 
+if COND_FILTER_LZMA1
+liblzma_la_SOURCES += \
+	lzma/lzma_encoder_presets.c
+endif
+
 if COND_ENCODER_LZMA1
 liblzma_la_SOURCES += \
 	lzma/fastpos.h \
 	lzma/lzma_encoder.h \
 	lzma/lzma_encoder.c \
-	lzma/lzma_encoder_presets.c \
 	lzma/lzma_encoder_private.h \
 	lzma/lzma_encoder_optimum_fast.c \
 	lzma/lzma_encoder_optimum_normal.c
diff -uNrwB xz-5.2.2/src/liblzma/Makefile.am xz-5.2.4/src/liblzma/Makefile.am
--- xz-5.2.2/src/liblzma/Makefile.am	2015-09-29 16:58:33.000000000 +0600
+++ xz-5.2.4/src/liblzma/Makefile.am	2018-04-29 21:16:04.000000000 +0600
@@ -24,7 +24,7 @@
 	-I$(top_srcdir)/src/liblzma/simple \
 	-I$(top_srcdir)/src/common \
 	-DTUKLIB_SYMBOL_PREFIX=lzma_
-liblzma_la_LDFLAGS = -no-undefined -version-info 7:2:2
+liblzma_la_LDFLAGS = -no-undefined -version-info 7:4:2
 
 EXTRA_DIST += liblzma.map validate_map.sh
 if COND_SYMVERS
diff -uNrwB xz-5.2.2/src/liblzma/Makefile.in xz-5.2.4/src/liblzma/Makefile.in
--- xz-5.2.2/src/liblzma/Makefile.in	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/src/liblzma/Makefile.in	2018-04-29 22:01:26.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -93,7 +93,8 @@
 @COND_SYMVERS_TRUE@	-Wl,--version-script=$(top_srcdir)/src/liblzma/liblzma.map
 
 @COND_THREADS_TRUE@am__append_2 = ../common/tuklib_cpucores.c
-@COND_MAIN_ENCODER_TRUE@am__append_3 = \
+@COND_THREADS_TRUE@am__append_3 = common/hardware_cputhreads.c
+@COND_MAIN_ENCODER_TRUE@am__append_4 = \
 @COND_MAIN_ENCODER_TRUE@	common/alone_encoder.c \
 @COND_MAIN_ENCODER_TRUE@	common/block_buffer_encoder.c \
 @COND_MAIN_ENCODER_TRUE@	common/block_buffer_encoder.h \
@@ -114,13 +115,12 @@
 @COND_MAIN_ENCODER_TRUE@	common/stream_flags_encoder.c \
 @COND_MAIN_ENCODER_TRUE@	common/vli_encoder.c
 
-@COND_MAIN_ENCODER_TRUE@@COND_THREADS_TRUE@am__append_4 = \
-@COND_MAIN_ENCODER_TRUE@@COND_THREADS_TRUE@	common/hardware_cputhreads.c \
+@COND_MAIN_ENCODER_TRUE@@COND_THREADS_TRUE@am__append_5 = \
 @COND_MAIN_ENCODER_TRUE@@COND_THREADS_TRUE@	common/outqueue.c \
 @COND_MAIN_ENCODER_TRUE@@COND_THREADS_TRUE@	common/outqueue.h \
 @COND_MAIN_ENCODER_TRUE@@COND_THREADS_TRUE@	common/stream_encoder_mt.c
 
-@COND_MAIN_DECODER_TRUE@am__append_5 = \
+@COND_MAIN_DECODER_TRUE@am__append_6 = \
 @COND_MAIN_DECODER_TRUE@	common/alone_decoder.c \
 @COND_MAIN_DECODER_TRUE@	common/alone_decoder.h \
 @COND_MAIN_DECODER_TRUE@	common/auto_decoder.c \
@@ -141,114 +141,114 @@
 @COND_MAIN_DECODER_TRUE@	common/stream_flags_decoder.c \
 @COND_MAIN_DECODER_TRUE@	common/vli_decoder.c
 
-@COND_CHECK_CRC32_TRUE@@COND_SMALL_TRUE@am__append_6 = check/crc32_small.c
-@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__append_7 = \
+@COND_CHECK_CRC32_TRUE@@COND_SMALL_TRUE@am__append_7 = check/crc32_small.c
+@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__append_8 = \
 @COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@	check/crc32_table.c \
 @COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@	check/crc32_table_le.h \
 @COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@	check/crc32_table_be.h
 
-@COND_ASM_X86_TRUE@@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__append_8 = check/crc32_x86.S
-@COND_ASM_X86_FALSE@@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__append_9 = check/crc32_fast.c
-@COND_CHECK_CRC64_TRUE@@COND_SMALL_TRUE@am__append_10 = check/crc64_small.c
-@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__append_11 = \
+@COND_ASM_X86_TRUE@@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__append_9 = check/crc32_x86.S
+@COND_ASM_X86_FALSE@@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__append_10 = check/crc32_fast.c
+@COND_CHECK_CRC64_TRUE@@COND_SMALL_TRUE@am__append_11 = check/crc64_small.c
+@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__append_12 = \
 @COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@	check/crc64_table.c \
 @COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@	check/crc64_table_le.h \
 @COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@	check/crc64_table_be.h
 
-@COND_ASM_X86_TRUE@@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__append_12 = check/crc64_x86.S
-@COND_ASM_X86_FALSE@@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__append_13 = check/crc64_fast.c
-@COND_CHECK_SHA256_TRUE@@COND_INTERNAL_SHA256_TRUE@am__append_14 = check/sha256.c
-@COND_ENCODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@am__append_15 = \
+@COND_ASM_X86_TRUE@@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__append_13 = check/crc64_x86.S
+@COND_ASM_X86_FALSE@@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__append_14 = check/crc64_fast.c
+@COND_CHECK_SHA256_TRUE@@COND_INTERNAL_SHA256_TRUE@am__append_15 = check/sha256.c
+@COND_ENCODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@am__append_16 = \
 @COND_ENCODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@	lz/lz_encoder.c \
 @COND_ENCODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@	lz/lz_encoder.h \
 @COND_ENCODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@	lz/lz_encoder_hash.h \
 @COND_ENCODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@	lz/lz_encoder_hash_table.h \
 @COND_ENCODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@	lz/lz_encoder_mf.c
 
-@COND_DECODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@am__append_16 = \
+@COND_DECODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@am__append_17 = \
 @COND_DECODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@	lz/lz_decoder.c \
 @COND_DECODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@	lz/lz_decoder.h
 
-@COND_FILTER_LZMA1_TRUE@am__append_17 = lzma/fastpos_tablegen.c \
+@COND_FILTER_LZMA1_TRUE@am__append_18 = lzma/fastpos_tablegen.c \
 @COND_FILTER_LZMA1_TRUE@	rangecoder/price_tablegen.c
-@COND_FILTER_LZMA1_TRUE@am__append_18 = lzma/lzma_common.h
-@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_19 = \
+@COND_FILTER_LZMA1_TRUE@am__append_19 = lzma/lzma_common.h \
+@COND_FILTER_LZMA1_TRUE@	lzma/lzma_encoder_presets.c
+@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_20 = \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/fastpos.h \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma_encoder.h \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma_encoder.c \
-@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma_encoder_presets.c \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma_encoder_private.h \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma_encoder_optimum_fast.c \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma_encoder_optimum_normal.c
 
-@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@@COND_SMALL_FALSE@am__append_20 = lzma/fastpos_table.c
-@COND_DECODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_21 = \
+@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@@COND_SMALL_FALSE@am__append_21 = lzma/fastpos_table.c
+@COND_DECODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_22 = \
 @COND_DECODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma_decoder.c \
 @COND_DECODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma_decoder.h
 
-@COND_ENCODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_22 = \
+@COND_ENCODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_23 = \
 @COND_ENCODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma2_encoder.c \
 @COND_ENCODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma2_encoder.h
 
-@COND_DECODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_23 = \
+@COND_DECODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_24 = \
 @COND_DECODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma2_decoder.c \
 @COND_DECODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@	lzma/lzma2_decoder.h
 
-@COND_FILTER_LZMA1_TRUE@am__append_24 = rangecoder/range_common.h
-@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_25 = \
+@COND_FILTER_LZMA1_TRUE@am__append_25 = rangecoder/range_common.h
+@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_26 = \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	rangecoder/range_encoder.h \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	rangecoder/price.h \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	rangecoder/price_table.c
 
-@COND_DECODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_26 = rangecoder/range_decoder.h
-@COND_FILTER_DELTA_TRUE@am__append_27 = \
+@COND_DECODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__append_27 = rangecoder/range_decoder.h
+@COND_FILTER_DELTA_TRUE@am__append_28 = \
 @COND_FILTER_DELTA_TRUE@	delta/delta_common.c \
 @COND_FILTER_DELTA_TRUE@	delta/delta_common.h \
 @COND_FILTER_DELTA_TRUE@	delta/delta_private.h
 
-@COND_ENCODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@am__append_28 = \
+@COND_ENCODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@am__append_29 = \
 @COND_ENCODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@	delta/delta_encoder.c \
 @COND_ENCODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@	delta/delta_encoder.h
 
-@COND_DECODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@am__append_29 = \
+@COND_DECODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@am__append_30 = \
 @COND_DECODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@	delta/delta_decoder.c \
 @COND_DECODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@	delta/delta_decoder.h
 
-@COND_FILTER_SIMPLE_TRUE@am__append_30 = \
+@COND_FILTER_SIMPLE_TRUE@am__append_31 = \
 @COND_FILTER_SIMPLE_TRUE@	simple/simple_coder.c \
 @COND_FILTER_SIMPLE_TRUE@	simple/simple_coder.h \
 @COND_FILTER_SIMPLE_TRUE@	simple/simple_private.h
 
-@COND_ENCODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_31 = \
+@COND_ENCODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_32 = \
 @COND_ENCODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@	simple/simple_encoder.c \
 @COND_ENCODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@	simple/simple_encoder.h
 
-@COND_DECODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_32 = \
+@COND_DECODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_33 = \
 @COND_DECODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@	simple/simple_decoder.c \
 @COND_DECODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@	simple/simple_decoder.h
 
-@COND_FILTER_SIMPLE_TRUE@@COND_FILTER_X86_TRUE@am__append_33 = simple/x86.c
-@COND_FILTER_POWERPC_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_34 = simple/powerpc.c
-@COND_FILTER_IA64_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_35 = simple/ia64.c
-@COND_FILTER_ARM_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_36 = simple/arm.c
-@COND_FILTER_ARMTHUMB_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_37 = simple/armthumb.c
-@COND_FILTER_SIMPLE_TRUE@@COND_FILTER_SPARC_TRUE@am__append_38 = simple/sparc.c
-@COND_W32_TRUE@am__append_39 = liblzma.def liblzma.def.in empty.c
-@COND_W32_TRUE@am__append_40 = liblzma_w32res.rc
-@COND_W32_TRUE@am__append_41 = -Xlinker --output-def -Xlinker liblzma.def.in
-@COND_SHARED_TRUE@@COND_W32_TRUE@am__append_42 = liblzma.def
+@COND_FILTER_SIMPLE_TRUE@@COND_FILTER_X86_TRUE@am__append_34 = simple/x86.c
+@COND_FILTER_POWERPC_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_35 = simple/powerpc.c
+@COND_FILTER_IA64_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_36 = simple/ia64.c
+@COND_FILTER_ARM_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_37 = simple/arm.c
+@COND_FILTER_ARMTHUMB_TRUE@@COND_FILTER_SIMPLE_TRUE@am__append_38 = simple/armthumb.c
+@COND_FILTER_SIMPLE_TRUE@@COND_FILTER_SPARC_TRUE@am__append_39 = simple/sparc.c
+@COND_W32_TRUE@am__append_40 = liblzma.def liblzma.def.in empty.c
+@COND_W32_TRUE@am__append_41 = liblzma_w32res.rc
+@COND_W32_TRUE@am__append_42 = -Xlinker --output-def -Xlinker liblzma.def.in
+@COND_SHARED_TRUE@@COND_W32_TRUE@am__append_43 = liblzma.def
 subdir = src/liblzma
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -300,16 +300,16 @@
 	common/filter_common.h common/hardware_physmem.c \
 	common/index.c common/index.h common/stream_flags_common.c \
 	common/stream_flags_common.h common/vli_size.c \
-	common/alone_encoder.c common/block_buffer_encoder.c \
-	common/block_buffer_encoder.h common/block_encoder.c \
-	common/block_encoder.h common/block_header_encoder.c \
-	common/easy_buffer_encoder.c common/easy_encoder.c \
-	common/easy_encoder_memusage.c common/filter_buffer_encoder.c \
-	common/filter_encoder.c common/filter_encoder.h \
-	common/filter_flags_encoder.c common/index_encoder.c \
-	common/index_encoder.h common/stream_buffer_encoder.c \
-	common/stream_encoder.c common/stream_flags_encoder.c \
-	common/vli_encoder.c common/hardware_cputhreads.c \
+	common/hardware_cputhreads.c common/alone_encoder.c \
+	common/block_buffer_encoder.c common/block_buffer_encoder.h \
+	common/block_encoder.c common/block_encoder.h \
+	common/block_header_encoder.c common/easy_buffer_encoder.c \
+	common/easy_encoder.c common/easy_encoder_memusage.c \
+	common/filter_buffer_encoder.c common/filter_encoder.c \
+	common/filter_encoder.h common/filter_flags_encoder.c \
+	common/index_encoder.c common/index_encoder.h \
+	common/stream_buffer_encoder.c common/stream_encoder.c \
+	common/stream_flags_encoder.c common/vli_encoder.c \
 	common/outqueue.c common/outqueue.h common/stream_encoder_mt.c \
 	common/alone_decoder.c common/alone_decoder.h \
 	common/auto_decoder.c common/block_buffer_decoder.c \
@@ -329,8 +329,8 @@
 	check/sha256.c lz/lz_encoder.c lz/lz_encoder.h \
 	lz/lz_encoder_hash.h lz/lz_encoder_hash_table.h \
 	lz/lz_encoder_mf.c lz/lz_decoder.c lz/lz_decoder.h \
-	lzma/lzma_common.h lzma/fastpos.h lzma/lzma_encoder.h \
-	lzma/lzma_encoder.c lzma/lzma_encoder_presets.c \
+	lzma/lzma_common.h lzma/lzma_encoder_presets.c lzma/fastpos.h \
+	lzma/lzma_encoder.h lzma/lzma_encoder.c \
 	lzma/lzma_encoder_private.h lzma/lzma_encoder_optimum_fast.c \
 	lzma/lzma_encoder_optimum_normal.c lzma/fastpos_table.c \
 	lzma/lzma_decoder.c lzma/lzma_decoder.h lzma/lzma2_encoder.c \
@@ -348,7 +348,8 @@
 	simple/ia64.c simple/arm.c simple/armthumb.c simple/sparc.c \
 	liblzma_w32res.rc
 @COND_THREADS_TRUE@am__objects_1 = liblzma_la-tuklib_cpucores.lo
-@COND_MAIN_ENCODER_TRUE@am__objects_2 = liblzma_la-alone_encoder.lo \
+@COND_THREADS_TRUE@am__objects_2 = liblzma_la-hardware_cputhreads.lo
+@COND_MAIN_ENCODER_TRUE@am__objects_3 = liblzma_la-alone_encoder.lo \
 @COND_MAIN_ENCODER_TRUE@	liblzma_la-block_buffer_encoder.lo \
 @COND_MAIN_ENCODER_TRUE@	liblzma_la-block_encoder.lo \
 @COND_MAIN_ENCODER_TRUE@	liblzma_la-block_header_encoder.lo \
@@ -363,10 +364,9 @@
 @COND_MAIN_ENCODER_TRUE@	liblzma_la-stream_encoder.lo \
 @COND_MAIN_ENCODER_TRUE@	liblzma_la-stream_flags_encoder.lo \
 @COND_MAIN_ENCODER_TRUE@	liblzma_la-vli_encoder.lo
-@COND_MAIN_ENCODER_TRUE@@COND_THREADS_TRUE@am__objects_3 = liblzma_la-hardware_cputhreads.lo \
-@COND_MAIN_ENCODER_TRUE@@COND_THREADS_TRUE@	liblzma_la-outqueue.lo \
+@COND_MAIN_ENCODER_TRUE@@COND_THREADS_TRUE@am__objects_4 = liblzma_la-outqueue.lo \
 @COND_MAIN_ENCODER_TRUE@@COND_THREADS_TRUE@	liblzma_la-stream_encoder_mt.lo
-@COND_MAIN_DECODER_TRUE@am__objects_4 = liblzma_la-alone_decoder.lo \
+@COND_MAIN_DECODER_TRUE@am__objects_5 = liblzma_la-alone_decoder.lo \
 @COND_MAIN_DECODER_TRUE@	liblzma_la-auto_decoder.lo \
 @COND_MAIN_DECODER_TRUE@	liblzma_la-block_buffer_decoder.lo \
 @COND_MAIN_DECODER_TRUE@	liblzma_la-block_decoder.lo \
@@ -381,59 +381,60 @@
 @COND_MAIN_DECODER_TRUE@	liblzma_la-stream_decoder.lo \
 @COND_MAIN_DECODER_TRUE@	liblzma_la-stream_flags_decoder.lo \
 @COND_MAIN_DECODER_TRUE@	liblzma_la-vli_decoder.lo
-@COND_CHECK_CRC32_TRUE@@COND_SMALL_TRUE@am__objects_5 = liblzma_la-crc32_small.lo
-@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__objects_6 = liblzma_la-crc32_table.lo
-@COND_ASM_X86_TRUE@@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__objects_7 = liblzma_la-crc32_x86.lo
-@COND_ASM_X86_FALSE@@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__objects_8 = liblzma_la-crc32_fast.lo
-@COND_CHECK_CRC64_TRUE@@COND_SMALL_TRUE@am__objects_9 = liblzma_la-crc64_small.lo
-@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__objects_10 = liblzma_la-crc64_table.lo
-@COND_ASM_X86_TRUE@@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__objects_11 = liblzma_la-crc64_x86.lo
-@COND_ASM_X86_FALSE@@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__objects_12 = liblzma_la-crc64_fast.lo
-@COND_CHECK_SHA256_TRUE@@COND_INTERNAL_SHA256_TRUE@am__objects_13 = liblzma_la-sha256.lo
-@COND_ENCODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@am__objects_14 = liblzma_la-lz_encoder.lo \
+@COND_CHECK_CRC32_TRUE@@COND_SMALL_TRUE@am__objects_6 = liblzma_la-crc32_small.lo
+@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__objects_7 = liblzma_la-crc32_table.lo
+@COND_ASM_X86_TRUE@@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__objects_8 = liblzma_la-crc32_x86.lo
+@COND_ASM_X86_FALSE@@COND_CHECK_CRC32_TRUE@@COND_SMALL_FALSE@am__objects_9 = liblzma_la-crc32_fast.lo
+@COND_CHECK_CRC64_TRUE@@COND_SMALL_TRUE@am__objects_10 = liblzma_la-crc64_small.lo
+@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__objects_11 = liblzma_la-crc64_table.lo
+@COND_ASM_X86_TRUE@@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__objects_12 = liblzma_la-crc64_x86.lo
+@COND_ASM_X86_FALSE@@COND_CHECK_CRC64_TRUE@@COND_SMALL_FALSE@am__objects_13 = liblzma_la-crc64_fast.lo
+@COND_CHECK_SHA256_TRUE@@COND_INTERNAL_SHA256_TRUE@am__objects_14 = liblzma_la-sha256.lo
+@COND_ENCODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@am__objects_15 = liblzma_la-lz_encoder.lo \
 @COND_ENCODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@	liblzma_la-lz_encoder_mf.lo
-@COND_DECODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@am__objects_15 = liblzma_la-lz_decoder.lo
-am__objects_16 =
-@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__objects_17 = liblzma_la-lzma_encoder.lo \
-@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	liblzma_la-lzma_encoder_presets.lo \
+@COND_DECODER_LZ_TRUE@@COND_FILTER_LZ_TRUE@am__objects_16 = liblzma_la-lz_decoder.lo
+@COND_FILTER_LZMA1_TRUE@am__objects_17 =  \
+@COND_FILTER_LZMA1_TRUE@	liblzma_la-lzma_encoder_presets.lo
+@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__objects_18 = liblzma_la-lzma_encoder.lo \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	liblzma_la-lzma_encoder_optimum_fast.lo \
 @COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@	liblzma_la-lzma_encoder_optimum_normal.lo
-@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@@COND_SMALL_FALSE@am__objects_18 = liblzma_la-fastpos_table.lo
-@COND_DECODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__objects_19 = liblzma_la-lzma_decoder.lo
-@COND_ENCODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@am__objects_20 = liblzma_la-lzma2_encoder.lo
-@COND_DECODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@am__objects_21 = liblzma_la-lzma2_decoder.lo
-@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__objects_22 = liblzma_la-price_table.lo
-@COND_FILTER_DELTA_TRUE@am__objects_23 = liblzma_la-delta_common.lo
-@COND_ENCODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@am__objects_24 = liblzma_la-delta_encoder.lo
-@COND_DECODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@am__objects_25 = liblzma_la-delta_decoder.lo
-@COND_FILTER_SIMPLE_TRUE@am__objects_26 = liblzma_la-simple_coder.lo
-@COND_ENCODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_27 = liblzma_la-simple_encoder.lo
-@COND_DECODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_28 = liblzma_la-simple_decoder.lo
-@COND_FILTER_SIMPLE_TRUE@@COND_FILTER_X86_TRUE@am__objects_29 = liblzma_la-x86.lo
-@COND_FILTER_POWERPC_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_30 = liblzma_la-powerpc.lo
-@COND_FILTER_IA64_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_31 = liblzma_la-ia64.lo
-@COND_FILTER_ARM_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_32 = liblzma_la-arm.lo
-@COND_FILTER_ARMTHUMB_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_33 = liblzma_la-armthumb.lo
-@COND_FILTER_SIMPLE_TRUE@@COND_FILTER_SPARC_TRUE@am__objects_34 = liblzma_la-sparc.lo
-@COND_W32_TRUE@am__objects_35 = liblzma_w32res.lo
+@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@@COND_SMALL_FALSE@am__objects_19 = liblzma_la-fastpos_table.lo
+@COND_DECODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__objects_20 = liblzma_la-lzma_decoder.lo
+@COND_ENCODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@am__objects_21 = liblzma_la-lzma2_encoder.lo
+@COND_DECODER_LZMA2_TRUE@@COND_FILTER_LZMA1_TRUE@am__objects_22 = liblzma_la-lzma2_decoder.lo
+am__objects_23 =
+@COND_ENCODER_LZMA1_TRUE@@COND_FILTER_LZMA1_TRUE@am__objects_24 = liblzma_la-price_table.lo
+@COND_FILTER_DELTA_TRUE@am__objects_25 = liblzma_la-delta_common.lo
+@COND_ENCODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@am__objects_26 = liblzma_la-delta_encoder.lo
+@COND_DECODER_DELTA_TRUE@@COND_FILTER_DELTA_TRUE@am__objects_27 = liblzma_la-delta_decoder.lo
+@COND_FILTER_SIMPLE_TRUE@am__objects_28 = liblzma_la-simple_coder.lo
+@COND_ENCODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_29 = liblzma_la-simple_encoder.lo
+@COND_DECODER_SIMPLE_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_30 = liblzma_la-simple_decoder.lo
+@COND_FILTER_SIMPLE_TRUE@@COND_FILTER_X86_TRUE@am__objects_31 = liblzma_la-x86.lo
+@COND_FILTER_POWERPC_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_32 = liblzma_la-powerpc.lo
+@COND_FILTER_IA64_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_33 = liblzma_la-ia64.lo
+@COND_FILTER_ARM_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_34 = liblzma_la-arm.lo
+@COND_FILTER_ARMTHUMB_TRUE@@COND_FILTER_SIMPLE_TRUE@am__objects_35 = liblzma_la-armthumb.lo
+@COND_FILTER_SIMPLE_TRUE@@COND_FILTER_SPARC_TRUE@am__objects_36 = liblzma_la-sparc.lo
+@COND_W32_TRUE@am__objects_37 = liblzma_w32res.lo
 am_liblzma_la_OBJECTS = liblzma_la-tuklib_physmem.lo $(am__objects_1) \
 	liblzma_la-common.lo liblzma_la-block_util.lo \
 	liblzma_la-easy_preset.lo liblzma_la-filter_common.lo \
 	liblzma_la-hardware_physmem.lo liblzma_la-index.lo \
 	liblzma_la-stream_flags_common.lo liblzma_la-vli_size.lo \
 	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
-	liblzma_la-check.lo $(am__objects_5) $(am__objects_6) \
+	$(am__objects_5) liblzma_la-check.lo $(am__objects_6) \
 	$(am__objects_7) $(am__objects_8) $(am__objects_9) \
 	$(am__objects_10) $(am__objects_11) $(am__objects_12) \
 	$(am__objects_13) $(am__objects_14) $(am__objects_15) \
 	$(am__objects_16) $(am__objects_17) $(am__objects_18) \
 	$(am__objects_19) $(am__objects_20) $(am__objects_21) \
-	$(am__objects_16) $(am__objects_22) $(am__objects_16) \
-	$(am__objects_23) $(am__objects_24) $(am__objects_25) \
-	$(am__objects_26) $(am__objects_27) $(am__objects_28) \
-	$(am__objects_29) $(am__objects_30) $(am__objects_31) \
-	$(am__objects_32) $(am__objects_33) $(am__objects_34) \
-	$(am__objects_35)
+	$(am__objects_22) $(am__objects_23) $(am__objects_24) \
+	$(am__objects_23) $(am__objects_25) $(am__objects_26) \
+	$(am__objects_27) $(am__objects_28) $(am__objects_29) \
+	$(am__objects_30) $(am__objects_31) $(am__objects_32) \
+	$(am__objects_33) $(am__objects_34) $(am__objects_35) \
+	$(am__objects_36) $(am__objects_37)
 liblzma_la_OBJECTS = $(am_liblzma_la_OBJECTS)
 AM_V_lt = $(am__v_lt_@AM_V@)
 am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
@@ -571,6 +572,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
@@ -712,9 +714,9 @@
 xz = @xz@
 SUBDIRS = api
 EXTRA_DIST = liblzma.map validate_map.sh check/crc32_tablegen.c \
-	check/crc64_tablegen.c $(am__append_17) liblzma.pc.in
-CLEANFILES = $(am__append_39)
-doc_DATA = $(am__append_42)
+	check/crc64_tablegen.c $(am__append_18) liblzma.pc.in
+CLEANFILES = $(am__append_40)
+doc_DATA = $(am__append_43)
 lib_LTLIBRARIES = liblzma.la
 liblzma_la_SOURCES = ../common/tuklib_physmem.c $(am__append_2) \
 	common/common.c common/common.h common/memcmplen.h \
@@ -723,18 +725,19 @@
 	common/hardware_physmem.c common/index.c common/index.h \
 	common/stream_flags_common.c common/stream_flags_common.h \
 	common/vli_size.c $(am__append_3) $(am__append_4) \
-	$(am__append_5) check/check.c check/check.h check/crc_macros.h \
-	$(am__append_6) $(am__append_7) $(am__append_8) \
+	$(am__append_5) $(am__append_6) check/check.c check/check.h \
+	check/crc_macros.h $(am__append_7) $(am__append_8) \
 	$(am__append_9) $(am__append_10) $(am__append_11) \
 	$(am__append_12) $(am__append_13) $(am__append_14) \
-	$(am__append_15) $(am__append_16) $(am__append_18) \
+	$(am__append_15) $(am__append_16) $(am__append_17) \
 	$(am__append_19) $(am__append_20) $(am__append_21) \
 	$(am__append_22) $(am__append_23) $(am__append_24) \
 	$(am__append_25) $(am__append_26) $(am__append_27) \
 	$(am__append_28) $(am__append_29) $(am__append_30) \
 	$(am__append_31) $(am__append_32) $(am__append_33) \
 	$(am__append_34) $(am__append_35) $(am__append_36) \
-	$(am__append_37) $(am__append_38) $(am__append_40)
+	$(am__append_37) $(am__append_38) $(am__append_39) \
+	$(am__append_41)
 liblzma_la_CPPFLAGS = \
 	-I$(top_srcdir)/src/liblzma/api \
 	-I$(top_srcdir)/src/liblzma/common \
@@ -747,8 +750,8 @@
 	-I$(top_srcdir)/src/common \
 	-DTUKLIB_SYMBOL_PREFIX=lzma_
 
-liblzma_la_LDFLAGS = -no-undefined -version-info 7:2:2 $(am__append_1) \
-	$(am__append_41)
+liblzma_la_LDFLAGS = -no-undefined -version-info 7:4:2 $(am__append_1) \
+	$(am__append_42)
 pkgconfigdir = $(libdir)/pkgconfig
 pkgconfig_DATA = liblzma.pc
 pc_verbose = $(pc_verbose_@AM_V@)
@@ -1037,6 +1040,13 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o liblzma_la-vli_size.lo `test -f 'common/vli_size.c' || echo '$(srcdir)/'`common/vli_size.c
 
+liblzma_la-hardware_cputhreads.lo: common/hardware_cputhreads.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT liblzma_la-hardware_cputhreads.lo -MD -MP -MF $(DEPDIR)/liblzma_la-hardware_cputhreads.Tpo -c -o liblzma_la-hardware_cputhreads.lo `test -f 'common/hardware_cputhreads.c' || echo '$(srcdir)/'`common/hardware_cputhreads.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/liblzma_la-hardware_cputhreads.Tpo $(DEPDIR)/liblzma_la-hardware_cputhreads.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='common/hardware_cputhreads.c' object='liblzma_la-hardware_cputhreads.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o liblzma_la-hardware_cputhreads.lo `test -f 'common/hardware_cputhreads.c' || echo '$(srcdir)/'`common/hardware_cputhreads.c
+
 liblzma_la-alone_encoder.lo: common/alone_encoder.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT liblzma_la-alone_encoder.lo -MD -MP -MF $(DEPDIR)/liblzma_la-alone_encoder.Tpo -c -o liblzma_la-alone_encoder.lo `test -f 'common/alone_encoder.c' || echo '$(srcdir)/'`common/alone_encoder.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/liblzma_la-alone_encoder.Tpo $(DEPDIR)/liblzma_la-alone_encoder.Plo
@@ -1142,13 +1152,6 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o liblzma_la-vli_encoder.lo `test -f 'common/vli_encoder.c' || echo '$(srcdir)/'`common/vli_encoder.c
 
-liblzma_la-hardware_cputhreads.lo: common/hardware_cputhreads.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT liblzma_la-hardware_cputhreads.lo -MD -MP -MF $(DEPDIR)/liblzma_la-hardware_cputhreads.Tpo -c -o liblzma_la-hardware_cputhreads.lo `test -f 'common/hardware_cputhreads.c' || echo '$(srcdir)/'`common/hardware_cputhreads.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/liblzma_la-hardware_cputhreads.Tpo $(DEPDIR)/liblzma_la-hardware_cputhreads.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='common/hardware_cputhreads.c' object='liblzma_la-hardware_cputhreads.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o liblzma_la-hardware_cputhreads.lo `test -f 'common/hardware_cputhreads.c' || echo '$(srcdir)/'`common/hardware_cputhreads.c
-
 liblzma_la-outqueue.lo: common/outqueue.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT liblzma_la-outqueue.lo -MD -MP -MF $(DEPDIR)/liblzma_la-outqueue.Tpo -c -o liblzma_la-outqueue.lo `test -f 'common/outqueue.c' || echo '$(srcdir)/'`common/outqueue.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/liblzma_la-outqueue.Tpo $(DEPDIR)/liblzma_la-outqueue.Plo
@@ -1345,13 +1348,6 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o liblzma_la-lz_decoder.lo `test -f 'lz/lz_decoder.c' || echo '$(srcdir)/'`lz/lz_decoder.c
 
-liblzma_la-lzma_encoder.lo: lzma/lzma_encoder.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT liblzma_la-lzma_encoder.lo -MD -MP -MF $(DEPDIR)/liblzma_la-lzma_encoder.Tpo -c -o liblzma_la-lzma_encoder.lo `test -f 'lzma/lzma_encoder.c' || echo '$(srcdir)/'`lzma/lzma_encoder.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/liblzma_la-lzma_encoder.Tpo $(DEPDIR)/liblzma_la-lzma_encoder.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lzma/lzma_encoder.c' object='liblzma_la-lzma_encoder.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o liblzma_la-lzma_encoder.lo `test -f 'lzma/lzma_encoder.c' || echo '$(srcdir)/'`lzma/lzma_encoder.c
-
 liblzma_la-lzma_encoder_presets.lo: lzma/lzma_encoder_presets.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT liblzma_la-lzma_encoder_presets.lo -MD -MP -MF $(DEPDIR)/liblzma_la-lzma_encoder_presets.Tpo -c -o liblzma_la-lzma_encoder_presets.lo `test -f 'lzma/lzma_encoder_presets.c' || echo '$(srcdir)/'`lzma/lzma_encoder_presets.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/liblzma_la-lzma_encoder_presets.Tpo $(DEPDIR)/liblzma_la-lzma_encoder_presets.Plo
@@ -1359,6 +1355,13 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o liblzma_la-lzma_encoder_presets.lo `test -f 'lzma/lzma_encoder_presets.c' || echo '$(srcdir)/'`lzma/lzma_encoder_presets.c
 
+liblzma_la-lzma_encoder.lo: lzma/lzma_encoder.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT liblzma_la-lzma_encoder.lo -MD -MP -MF $(DEPDIR)/liblzma_la-lzma_encoder.Tpo -c -o liblzma_la-lzma_encoder.lo `test -f 'lzma/lzma_encoder.c' || echo '$(srcdir)/'`lzma/lzma_encoder.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/liblzma_la-lzma_encoder.Tpo $(DEPDIR)/liblzma_la-lzma_encoder.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lzma/lzma_encoder.c' object='liblzma_la-lzma_encoder.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o liblzma_la-lzma_encoder.lo `test -f 'lzma/lzma_encoder.c' || echo '$(srcdir)/'`lzma/lzma_encoder.c
+
 liblzma_la-lzma_encoder_optimum_fast.lo: lzma/lzma_encoder_optimum_fast.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblzma_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT liblzma_la-lzma_encoder_optimum_fast.lo -MD -MP -MF $(DEPDIR)/liblzma_la-lzma_encoder_optimum_fast.Tpo -c -o liblzma_la-lzma_encoder_optimum_fast.lo `test -f 'lzma/lzma_encoder_optimum_fast.c' || echo '$(srcdir)/'`lzma/lzma_encoder_optimum_fast.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/liblzma_la-lzma_encoder_optimum_fast.Tpo $(DEPDIR)/liblzma_la-lzma_encoder_optimum_fast.Plo
diff -uNrwB xz-5.2.2/src/liblzma/rangecoder/range_common.h xz-5.2.4/src/liblzma/rangecoder/range_common.h
--- xz-5.2.2/src/liblzma/rangecoder/range_common.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/rangecoder/range_common.h	2018-04-29 21:10:38.000000000 +0600
@@ -14,9 +14,7 @@
 #ifndef LZMA_RANGE_COMMON_H
 #define LZMA_RANGE_COMMON_H
 
-#ifdef HAVE_CONFIG_H
 #	include "common.h"
-#endif
 
 
 ///////////////
diff -uNrwB xz-5.2.2/src/liblzma/simple/arm.c xz-5.2.4/src/liblzma/simple/arm.c
--- xz-5.2.2/src/liblzma/simple/arm.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/simple/arm.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 
 
 static size_t
-arm_code(lzma_simple *simple lzma_attribute((__unused__)),
+arm_code(void *simple lzma_attribute((__unused__)),
 		uint32_t now_pos, bool is_encoder,
 		uint8_t *buffer, size_t size)
 {
diff -uNrwB xz-5.2.2/src/liblzma/simple/armthumb.c xz-5.2.4/src/liblzma/simple/armthumb.c
--- xz-5.2.2/src/liblzma/simple/armthumb.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/simple/armthumb.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 
 
 static size_t
-armthumb_code(lzma_simple *simple lzma_attribute((__unused__)),
+armthumb_code(void *simple lzma_attribute((__unused__)),
 		uint32_t now_pos, bool is_encoder,
 		uint8_t *buffer, size_t size)
 {
diff -uNrwB xz-5.2.2/src/liblzma/simple/ia64.c xz-5.2.4/src/liblzma/simple/ia64.c
--- xz-5.2.2/src/liblzma/simple/ia64.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/simple/ia64.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 
 
 static size_t
-ia64_code(lzma_simple *simple lzma_attribute((__unused__)),
+ia64_code(void *simple lzma_attribute((__unused__)),
 		uint32_t now_pos, bool is_encoder,
 		uint8_t *buffer, size_t size)
 {
diff -uNrwB xz-5.2.2/src/liblzma/simple/powerpc.c xz-5.2.4/src/liblzma/simple/powerpc.c
--- xz-5.2.2/src/liblzma/simple/powerpc.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/simple/powerpc.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 
 
 static size_t
-powerpc_code(lzma_simple *simple lzma_attribute((__unused__)),
+powerpc_code(void *simple lzma_attribute((__unused__)),
 		uint32_t now_pos, bool is_encoder,
 		uint8_t *buffer, size_t size)
 {
diff -uNrwB xz-5.2.2/src/liblzma/simple/simple_coder.c xz-5.2.4/src/liblzma/simple/simple_coder.c
--- xz-5.2.2/src/liblzma/simple/simple_coder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/simple/simple_coder.c	2018-04-29 21:10:38.000000000 +0600
@@ -18,7 +18,7 @@
 
 /// Copied or encodes/decodes more data to out[].
 static lzma_ret
-copy_or_code(lzma_coder *coder, const lzma_allocator *allocator,
+copy_or_code(lzma_simple_coder *coder, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size, lzma_action action)
@@ -55,7 +55,7 @@
 
 
 static size_t
-call_filter(lzma_coder *coder, uint8_t *buffer, size_t size)
+call_filter(lzma_simple_coder *coder, uint8_t *buffer, size_t size)
 {
 	const size_t filtered = coder->filter(coder->simple,
 			coder->now_pos, coder->is_encoder,
@@ -66,11 +66,13 @@
 
 
 static lzma_ret
-simple_code(lzma_coder *coder, const lzma_allocator *allocator,
+simple_code(void *coder_ptr, const lzma_allocator *allocator,
 		const uint8_t *restrict in, size_t *restrict in_pos,
 		size_t in_size, uint8_t *restrict out,
 		size_t *restrict out_pos, size_t out_size, lzma_action action)
 {
+	lzma_simple_coder *coder = coder_ptr;
+
 	// TODO: Add partial support for LZMA_SYNC_FLUSH. We can support it
 	// in cases when the filter is able to filter everything. With most
 	// simple filters it can be done at offset that is a multiple of 2,
@@ -198,8 +200,9 @@
 
 
 static void
-simple_coder_end(lzma_coder *coder, const lzma_allocator *allocator)
+simple_coder_end(void *coder_ptr, const lzma_allocator *allocator)
 {
+	lzma_simple_coder *coder = coder_ptr;
 	lzma_next_end(&coder->next, allocator);
 	lzma_free(coder->simple, allocator);
 	lzma_free(coder, allocator);
@@ -208,10 +211,12 @@
 
 
 static lzma_ret
-simple_coder_update(lzma_coder *coder, const lzma_allocator *allocator,
+simple_coder_update(void *coder_ptr, const lzma_allocator *allocator,
 		const lzma_filter *filters_null lzma_attribute((__unused__)),
 		const lzma_filter *reversed_filters)
 {
+	lzma_simple_coder *coder = coder_ptr;
+
 	// No update support, just call the next filter in the chain.
 	return lzma_next_filter_update(
 			&coder->next, allocator, reversed_filters + 1);
@@ -221,57 +226,57 @@
 extern lzma_ret
 lzma_simple_coder_init(lzma_next_coder *next, const lzma_allocator *allocator,
 		const lzma_filter_info *filters,
-		size_t (*filter)(lzma_simple *simple, uint32_t now_pos,
+		size_t (*filter)(void *simple, uint32_t now_pos,
 			bool is_encoder, uint8_t *buffer, size_t size),
 		size_t simple_size, size_t unfiltered_max,
 		uint32_t alignment, bool is_encoder)
 {
-	// Allocate memory for the lzma_coder structure if needed.
-	if (next->coder == NULL) {
+	// Allocate memory for the lzma_simple_coder structure if needed.
+	lzma_simple_coder *coder = next->coder;
+	if (coder == NULL) {
 		// Here we allocate space also for the temporary buffer. We
 		// need twice the size of unfiltered_max, because then it
 		// is always possible to filter at least unfiltered_max bytes
 		// more data in coder->buffer[] if it can be filled completely.
-		next->coder = lzma_alloc(sizeof(lzma_coder)
+		coder = lzma_alloc(sizeof(lzma_simple_coder)
 				+ 2 * unfiltered_max, allocator);
-		if (next->coder == NULL)
+		if (coder == NULL)
 			return LZMA_MEM_ERROR;
 
+		next->coder = coder;
 		next->code = &simple_code;
 		next->end = &simple_coder_end;
 		next->update = &simple_coder_update;
 
-		next->coder->next = LZMA_NEXT_CODER_INIT;
-		next->coder->filter = filter;
-		next->coder->allocated = 2 * unfiltered_max;
+		coder->next = LZMA_NEXT_CODER_INIT;
+		coder->filter = filter;
+		coder->allocated = 2 * unfiltered_max;
 
 		// Allocate memory for filter-specific data structure.
 		if (simple_size > 0) {
-			next->coder->simple = lzma_alloc(
-					simple_size, allocator);
-			if (next->coder->simple == NULL)
+			coder->simple = lzma_alloc(simple_size, allocator);
+			if (coder->simple == NULL)
 				return LZMA_MEM_ERROR;
 		} else {
-			next->coder->simple = NULL;
+			coder->simple = NULL;
 		}
 	}
 
 	if (filters[0].options != NULL) {
 		const lzma_options_bcj *simple = filters[0].options;
-		next->coder->now_pos = simple->start_offset;
-		if (next->coder->now_pos & (alignment - 1))
+		coder->now_pos = simple->start_offset;
+		if (coder->now_pos & (alignment - 1))
 			return LZMA_OPTIONS_ERROR;
 	} else {
-		next->coder->now_pos = 0;
+		coder->now_pos = 0;
 	}
 
 	// Reset variables.
-	next->coder->is_encoder = is_encoder;
-	next->coder->end_was_reached = false;
-	next->coder->pos = 0;
-	next->coder->filtered = 0;
-	next->coder->size = 0;
+	coder->is_encoder = is_encoder;
+	coder->end_was_reached = false;
+	coder->pos = 0;
+	coder->filtered = 0;
+	coder->size = 0;
 
-	return lzma_next_filter_init(
-			&next->coder->next, allocator, filters + 1);
+	return lzma_next_filter_init(&coder->next, allocator, filters + 1);
 }
diff -uNrwB xz-5.2.2/src/liblzma/simple/simple_private.h xz-5.2.4/src/liblzma/simple/simple_private.h
--- xz-5.2.2/src/liblzma/simple/simple_private.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/simple/simple_private.h	2018-04-29 21:10:38.000000000 +0600
@@ -16,9 +16,7 @@
 #include "simple_coder.h"
 
 
-typedef struct lzma_simple_s lzma_simple;
-
-struct lzma_coder_s {
+typedef struct {
 	/// Next filter in the chain
 	lzma_next_coder next;
 
@@ -33,12 +31,12 @@
 
 	/// Pointer to filter-specific function, which does
 	/// the actual filtering.
-	size_t (*filter)(lzma_simple *simple, uint32_t now_pos,
+	size_t (*filter)(void *simple, uint32_t now_pos,
 			bool is_encoder, uint8_t *buffer, size_t size);
 
 	/// Pointer to filter-specific data, or NULL if filter doesn't need
 	/// any extra data.
-	lzma_simple *simple;
+	void *simple;
 
 	/// The lowest 32 bits of the current position in the data. Most
 	/// filters need this to do conversions between absolute and relative
@@ -62,13 +60,13 @@
 
 	/// Temporary buffer
 	uint8_t buffer[];
-};
+} lzma_simple_coder;
 
 
 extern lzma_ret lzma_simple_coder_init(lzma_next_coder *next,
 		const lzma_allocator *allocator,
 		const lzma_filter_info *filters,
-		size_t (*filter)(lzma_simple *simple, uint32_t now_pos,
+		size_t (*filter)(void *simple, uint32_t now_pos,
 			bool is_encoder, uint8_t *buffer, size_t size),
 		size_t simple_size, size_t unfiltered_max,
 		uint32_t alignment, bool is_encoder);
diff -uNrwB xz-5.2.2/src/liblzma/simple/sparc.c xz-5.2.4/src/liblzma/simple/sparc.c
--- xz-5.2.2/src/liblzma/simple/sparc.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/simple/sparc.c	2018-04-29 21:10:38.000000000 +0600
@@ -15,7 +15,7 @@
 
 
 static size_t
-sparc_code(lzma_simple *simple lzma_attribute((__unused__)),
+sparc_code(void *simple lzma_attribute((__unused__)),
 		uint32_t now_pos, bool is_encoder,
 		uint8_t *buffer, size_t size)
 {
diff -uNrwB xz-5.2.2/src/liblzma/simple/x86.c xz-5.2.4/src/liblzma/simple/x86.c
--- xz-5.2.2/src/liblzma/simple/x86.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/liblzma/simple/x86.c	2018-04-29 21:10:38.000000000 +0600
@@ -17,14 +17,14 @@
 #define Test86MSByte(b) ((b) == 0 || (b) == 0xFF)
 
 
-struct lzma_simple_s {
+typedef struct {
 	uint32_t prev_mask;
 	uint32_t prev_pos;
-};
+} lzma_simple_x86;
 
 
 static size_t
-x86_code(lzma_simple *simple, uint32_t now_pos, bool is_encoder,
+x86_code(void *simple_ptr, uint32_t now_pos, bool is_encoder,
 		uint8_t *buffer, size_t size)
 {
 	static const bool MASK_TO_ALLOWED_STATUS[8]
@@ -33,6 +33,7 @@
 	static const uint32_t MASK_TO_BIT_NUMBER[8]
 			= { 0, 1, 2, 2, 3, 3, 3, 3 };
 
+	lzma_simple_x86 *simple = simple_ptr;
 	uint32_t prev_mask = simple->prev_mask;
 	uint32_t prev_pos = simple->prev_pos;
 
@@ -127,11 +128,13 @@
 		const lzma_filter_info *filters, bool is_encoder)
 {
 	const lzma_ret ret = lzma_simple_coder_init(next, allocator, filters,
-			&x86_code, sizeof(lzma_simple), 5, 1, is_encoder);
+			&x86_code, sizeof(lzma_simple_x86), 5, 1, is_encoder);
 
 	if (ret == LZMA_OK) {
-		next->coder->simple->prev_mask = 0;
-		next->coder->simple->prev_pos = (uint32_t)(-5);
+		lzma_simple_coder *coder = next->coder;
+		lzma_simple_x86 *simple = coder->simple;
+		simple->prev_mask = 0;
+		simple->prev_pos = (uint32_t)(-5);
 	}
 
 	return ret;
diff -uNrwB xz-5.2.2/src/lzmainfo/Makefile.in xz-5.2.4/src/lzmainfo/Makefile.in
--- xz-5.2.2/src/lzmainfo/Makefile.in	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/src/lzmainfo/Makefile.in	2018-04-29 22:01:26.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -93,16 +93,16 @@
 @COND_GNULIB_TRUE@am__append_2 = $(top_builddir)/lib/libgnu.a
 subdir = src/lzmainfo
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -235,6 +235,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
diff -uNrwB xz-5.2.2/src/Makefile.in xz-5.2.4/src/Makefile.in
--- xz-5.2.2/src/Makefile.in	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/src/Makefile.in	2018-04-29 22:01:26.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -92,16 +92,16 @@
 @COND_SCRIPTS_TRUE@am__append_3 = scripts
 subdir = src
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -207,6 +207,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
diff -uNrwB xz-5.2.2/src/scripts/Makefile.in xz-5.2.4/src/scripts/Makefile.in
--- xz-5.2.2/src/scripts/Makefile.in	2015-09-29 17:03:41.000000000 +0600
+++ xz-5.2.4/src/scripts/Makefile.in	2018-04-29 22:01:26.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -99,16 +99,16 @@
 
 subdir = src/scripts
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -188,6 +188,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
diff -uNrwB xz-5.2.2/src/xz/args.c xz-5.2.4/src/xz/args.c
--- xz-5.2.2/src/xz/args.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/xz/args.c	2018-04-29 21:10:38.000000000 +0600
@@ -635,6 +635,22 @@
 	// Then from the command line
 	parse_real(args, argc, argv);
 
+	// If encoder or decoder support was omitted at build time,
+	// show an error now so that the rest of the code can rely on
+	// that whatever is in opt_mode is also supported.
+#ifndef HAVE_ENCODERS
+	if (opt_mode == MODE_COMPRESS)
+		message_fatal(_("Compression support was disabled "
+				"at build time"));
+#endif
+#ifndef HAVE_DECODERS
+	// Even MODE_LIST cannot work without decoder support so MODE_COMPRESS
+	// is the only valid choice.
+	if (opt_mode != MODE_COMPRESS)
+		message_fatal(_("Decompression support was disabled "
+				"at build time"));
+#endif
+
 	// Never remove the source file when the destination is not on disk.
 	// In test mode the data is written nowhere, but setting opt_stdout
 	// will make the rest of the code behave well.
diff -uNrwB xz-5.2.2/src/xz/coder.c xz-5.2.4/src/xz/coder.c
--- xz-5.2.2/src/xz/coder.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/xz/coder.c	2018-04-29 21:10:38.000000000 +0600
@@ -51,7 +51,7 @@
 /// This becomes false if the --check=CHECK option is used.
 static bool check_default = true;
 
-#ifdef MYTHREAD_ENABLED
+#if defined(HAVE_ENCODERS) && defined(MYTHREAD_ENABLED)
 static lzma_mt mt_options = {
 	.flags = 0,
 	.timeout = 300,
@@ -221,8 +221,9 @@
 	// Get the memory usage. Note that if --format=raw was used,
 	// we can be decompressing.
 	const uint64_t memory_limit = hardware_memlimit_get(opt_mode);
-	uint64_t memory_usage;
+	uint64_t memory_usage = UINT64_MAX;
 	if (opt_mode == MODE_COMPRESS) {
+#ifdef HAVE_ENCODERS
 #ifdef MYTHREAD_ENABLED
 		if (opt_format == FORMAT_XZ && hardware_threads_get() > 1) {
 			mt_options.threads = hardware_threads_get();
@@ -239,8 +240,11 @@
 		{
 			memory_usage = lzma_raw_encoder_memusage(filters);
 		}
+#endif
 	} else {
+#ifdef HAVE_DECODERS
 		memory_usage = lzma_raw_decoder_memusage(filters);
+#endif
 	}
 
 	if (memory_usage == UINT64_MAX)
@@ -248,7 +252,11 @@
 
 	// Print memory usage info before possible dictionary
 	// size auto-adjusting.
+	//
+	// NOTE: If only encoder support was built, we cannot show the
+	// what the decoder memory usage will be.
 	message_mem_needed(V_DEBUG, memory_usage);
+#ifdef HAVE_DECODERS
 	if (opt_mode == MODE_COMPRESS) {
 		const uint64_t decmem = lzma_raw_decoder_memusage(filters);
 		if (decmem != UINT64_MAX)
@@ -256,6 +264,7 @@
 					"%s MiB of memory."), uint64_to_str(
 						round_up_to_mib(decmem), 0));
 	}
+#endif
 
 	if (memory_usage <= memory_limit)
 		return;
@@ -268,6 +277,7 @@
 
 	assert(opt_mode == MODE_COMPRESS);
 
+#ifdef HAVE_ENCODERS
 #ifdef MYTHREAD_ENABLED
 	if (opt_format == FORMAT_XZ && mt_options.threads > 1) {
 		// Try to reduce the number of threads before
@@ -349,11 +359,13 @@
 			uint64_to_str(orig_dict_size >> 20, 0),
 			uint64_to_str(opt->dict_size >> 20, 1),
 			uint64_to_str(round_up_to_mib(memory_limit), 2));
+#endif
 
 	return;
 }
 
 
+#ifdef HAVE_DECODERS
 /// Return true if the data in in_buf seems to be in the .xz format.
 static bool
 is_format_xz(void)
@@ -411,6 +423,7 @@
 
 	return true;
 }
+#endif
 
 
 /// Detect the input file type (for now, this done only when decompressing),
@@ -424,6 +437,7 @@
 	lzma_ret ret = LZMA_PROG_ERROR;
 
 	if (opt_mode == MODE_COMPRESS) {
+#ifdef HAVE_ENCODERS
 		switch (opt_format) {
 		case FORMAT_AUTO:
 			// args.c ensures this.
@@ -449,7 +463,9 @@
 			ret = lzma_raw_encoder(&strm, filters);
 			break;
 		}
+#endif
 	} else {
+#ifdef HAVE_DECODERS
 		uint32_t flags = 0;
 
 		// It seems silly to warn about unsupported check if the
@@ -531,6 +547,7 @@
 			strm.avail_out = 0;
 			ret = lzma_code(&strm, LZMA_RUN);
 		}
+#endif
 	}
 
 	if (ret != LZMA_OK) {
diff -uNrwB xz-5.2.2/src/xz/file_io.c xz-5.2.4/src/xz/file_io.c
--- xz-5.2.2/src/xz/file_io.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/xz/file_io.c	2018-04-29 21:10:38.000000000 +0600
@@ -23,10 +23,20 @@
 
 #if defined(HAVE_FUTIMES) || defined(HAVE_FUTIMESAT) || defined(HAVE_UTIMES)
 #	include <sys/time.h>
+#elif defined(HAVE__FUTIME)
+#	include <sys/utime.h>
 #elif defined(HAVE_UTIME)
 #	include <utime.h>
 #endif
 
+#ifdef HAVE_CAPSICUM
+#	ifdef HAVE_SYS_CAPSICUM_H
+#		include <sys/capsicum.h>
+#	else
+#		include <sys/capability.h>
+#	endif
+#endif
+
 #include "tuklib_open_stdxxx.h"
 
 #ifndef O_BINARY
@@ -37,6 +47,14 @@
 #	define O_NOCTTY 0
 #endif
 
+// Using this macro to silence a warning from gcc -Wlogical-op.
+#if EAGAIN == EWOULDBLOCK
+#	define IS_EAGAIN_OR_EWOULDBLOCK(e) ((e) == EAGAIN)
+#else
+#	define IS_EAGAIN_OR_EWOULDBLOCK(e) \
+		((e) == EAGAIN || (e) == EWOULDBLOCK)
+#endif
+
 
 typedef enum {
 	IO_WAIT_MORE,    // Reading or writing is possible.
@@ -48,6 +66,11 @@
 /// If true, try to create sparse files when decompressing.
 static bool try_sparse = true;
 
+#ifdef ENABLE_SANDBOX
+/// True if the conditions for sandboxing (described in main()) have been met.
+static bool sandbox_allowed = false;
+#endif
+
 #ifndef TUKLIB_DOSLIKE
 /// File status flags of standard input. This is used by io_open_src()
 /// and io_close_src().
@@ -132,6 +155,73 @@
 }
 
 
+#ifdef ENABLE_SANDBOX
+extern void
+io_allow_sandbox(void)
+{
+	sandbox_allowed = true;
+	return;
+}
+
+
+/// Enables operating-system-specific sandbox if it is possible.
+/// src_fd is the file descriptor of the input file.
+static void
+io_sandbox_enter(int src_fd)
+{
+	if (!sandbox_allowed) {
+		message(V_DEBUG, _("Sandbox is disabled due "
+				"to incompatible command line arguments"));
+		return;
+	}
+
+	const char dummy_str[] = "x";
+
+	// Try to ensure that both libc and xz locale files have been
+	// loaded when NLS is enabled.
+	snprintf(NULL, 0, "%s%s", _(dummy_str), strerror(EINVAL));
+
+	// Try to ensure that iconv data files needed for handling multibyte
+	// characters have been loaded. This is needed at least with glibc.
+	tuklib_mbstr_width(dummy_str, NULL);
+
+#ifdef HAVE_CAPSICUM
+	// Capsicum needs FreeBSD 10.0 or later.
+	cap_rights_t rights;
+
+	if (cap_rights_limit(src_fd, cap_rights_init(&rights,
+			CAP_EVENT, CAP_FCNTL, CAP_LOOKUP, CAP_READ, CAP_SEEK)))
+		goto error;
+
+	if (cap_rights_limit(STDOUT_FILENO, cap_rights_init(&rights,
+			CAP_EVENT, CAP_FCNTL, CAP_FSTAT, CAP_LOOKUP,
+			CAP_WRITE, CAP_SEEK)))
+		goto error;
+
+	if (cap_rights_limit(user_abort_pipe[0], cap_rights_init(&rights,
+			CAP_EVENT)))
+		goto error;
+
+	if (cap_rights_limit(user_abort_pipe[1], cap_rights_init(&rights,
+			CAP_WRITE)))
+		goto error;
+
+	if (cap_enter())
+		goto error;
+
+#else
+#	error ENABLE_SANDBOX is defined but no sandboxing method was found.
+#endif
+
+	message(V_DEBUG, _("Sandbox was successfully enabled"));
+	return;
+
+error:
+	message(V_DEBUG, _("Failed to enable the sandbox"));
+}
+#endif // ENABLE_SANDBOX
+
+
 #ifndef TUKLIB_DOSLIKE
 /// \brief      Waits for input or output to become available or for a signal
 ///
@@ -369,6 +459,22 @@
 	(void)utimes(pair->dest_name, tv);
 #	endif
 
+#elif defined(HAVE__FUTIME)
+	// Use one-second precision with Windows-specific _futime().
+	// We could use utime() too except that for some reason the
+	// timestamp will get reset at close(). With _futime() it works.
+	// This struct cannot be const as _futime() takes a non-const pointer.
+	struct _utimbuf buf = {
+		.actime = pair->src_st.st_atime,
+		.modtime = pair->src_st.st_mtime,
+	};
+
+	// Avoid warnings.
+	(void)atime_nsec;
+	(void)mtime_nsec;
+
+	(void)_futime(pair->dest_fd, &buf);
+
 #elif defined(HAVE_UTIME)
 	// Use one-second precision. utime() doesn't support using file
 	// descriptor either. Some systems have broken utime() prototype
@@ -419,7 +525,10 @@
 #endif
 #ifdef HAVE_POSIX_FADVISE
 		// It will fail if stdin is a pipe and that's fine.
-		(void)posix_fadvise(STDIN_FILENO, 0, 0, POSIX_FADV_SEQUENTIAL);
+		(void)posix_fadvise(STDIN_FILENO, 0, 0,
+				opt_mode == MODE_LIST
+					? POSIX_FADV_RANDOM
+					: POSIX_FADV_SEQUENTIAL);
 #endif
 		return false;
 	}
@@ -610,7 +719,10 @@
 
 #ifdef HAVE_POSIX_FADVISE
 	// It will fail with some special files like FIFOs but that is fine.
-	(void)posix_fadvise(pair->src_fd, 0, 0, POSIX_FADV_SEQUENTIAL);
+	(void)posix_fadvise(pair->src_fd, 0, 0,
+			opt_mode == MODE_LIST
+				? POSIX_FADV_RANDOM
+				: POSIX_FADV_SEQUENTIAL);
 #endif
 
 	return false;
@@ -649,6 +761,11 @@
 	const bool error = io_open_src_real(&pair);
 	signals_unblock();
 
+#ifdef ENABLE_SANDBOX
+	if (!error)
+		io_sandbox_enter(pair.src_fd);
+#endif
+
 	return error ? NULL : &pair;
 }
 
@@ -675,23 +792,22 @@
 #endif
 
 	if (pair->src_fd != STDIN_FILENO && pair->src_fd != -1) {
-#ifdef TUKLIB_DOSLIKE
+		// Close the file before possibly unlinking it. On DOS-like
+		// systems this is always required since unlinking will fail
+		// if the file is open. On POSIX systems it usually works
+		// to unlink open files, but in some cases it doesn't and
+		// one gets EBUSY in errno.
+		//
+		// xz 5.2.2 and older unlinked the file before closing it
+		// (except on DOS-like systems). The old code didn't handle
+		// EBUSY and could fail e.g. on some CIFS shares. The
+		// advantage of unlinking before closing is negligible
+		// (avoids a race between close() and stat()/lstat() and
+		// unlink()), so let's keep this simple.
 		(void)close(pair->src_fd);
-#endif
 
-		// If we are going to unlink(), do it before closing the file.
-		// This way there's no risk that someone replaces the file and
-		// happens to get same inode number, which would make us
-		// unlink() wrong file.
-		//
-		// NOTE: DOS-like systems are an exception to this, because
-		// they don't allow unlinking files that are open. *sigh*
 		if (success && !opt_keep_original)
 			io_unlink(pair->src_name, &pair->src_st);
-
-#ifndef TUKLIB_DOSLIKE
-		(void)close(pair->src_fd);
-#endif
 	}
 
 	return;
@@ -1018,7 +1134,7 @@
 			}
 
 #ifndef TUKLIB_DOSLIKE
-			if (errno == EAGAIN || errno == EWOULDBLOCK) {
+			if (IS_EAGAIN_OR_EWOULDBLOCK(errno)) {
 				const io_wait_ret ret = io_wait(pair,
 						mytime_get_flush_timeout(),
 						true);
@@ -1106,7 +1222,7 @@
 			}
 
 #ifndef TUKLIB_DOSLIKE
-			if (errno == EAGAIN || errno == EWOULDBLOCK) {
+			if (IS_EAGAIN_OR_EWOULDBLOCK(errno)) {
 				if (io_wait(pair, -1, false) == IO_WAIT_MORE)
 					continue;
 
diff -uNrwB xz-5.2.2/src/xz/file_io.h xz-5.2.4/src/xz/file_io.h
--- xz-5.2.2/src/xz/file_io.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/xz/file_io.h	2018-04-29 21:10:38.000000000 +0600
@@ -80,6 +80,12 @@
 extern void io_no_sparse(void);
 
 
+#ifdef ENABLE_SANDBOX
+/// \brief      main() calls this if conditions for sandboxing have been met.
+extern void io_allow_sandbox(void);
+#endif
+
+
 /// \brief      Open the source file
 extern file_pair *io_open_src(const char *src_name);
 
diff -uNrwB xz-5.2.2/src/xz/list.c xz-5.2.4/src/xz/list.c
--- xz-5.2.2/src/xz/list.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/xz/list.c	2018-04-29 21:10:38.000000000 +0600
@@ -109,7 +109,7 @@
 	uint32_t checks;
 	uint32_t min_version;
 	bool all_have_sizes;
-} totals = { 0, 0, 0, 0, 0, 0, 0, 0, 0, true };
+} totals = { 0, 0, 0, 0, 0, 0, 0, 0, 50000002, true };
 
 
 /// Convert XZ Utils version number to a string.
@@ -484,6 +484,8 @@
 		// If the above fails, the file is corrupt so
 		// LZMA_DATA_ERROR is a good error code.
 
+	// Fall through
+
 	case LZMA_DATA_ERROR:
 		// Free the memory allocated by lzma_block_header_decode().
 		for (size_t i = 0; filters[i].id != LZMA_VLI_UNKNOWN; ++i)
@@ -636,7 +638,11 @@
 get_check_names(char buf[CHECKS_STR_SIZE],
 		uint32_t checks, bool space_after_comma)
 {
-	assert(checks != 0);
+	// If we get called when there are no Checks to print, set checks
+	// to 1 so that we print "None". This can happen in the robot mode
+	// when printing the totals line if there are no valid input files.
+	if (checks == 0)
+		checks = 1;
 
 	char *pos = buf;
 	size_t left = CHECKS_STR_SIZE;
diff -uNrwB xz-5.2.2/src/xz/main.c xz-5.2.4/src/xz/main.c
--- xz-5.2.2/src/xz/main.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/xz/main.c	2018-04-29 21:10:38.000000000 +0600
@@ -205,10 +205,31 @@
 	if (opt_mode != MODE_LIST)
 		signals_init();
 
+#ifdef ENABLE_SANDBOX
+	// Set a flag that sandboxing is allowed if all these are true:
+	//   - --files or --files0 wasn't used.
+	//   - There is exactly one input file or we are reading from stdin.
+	//   - We won't create any files: output goes to stdout or --test
+	//     or --list was used. Note that --test implies opt_stdout = true
+	//     but --list doesn't.
+	//
+	// This is obviously not ideal but it was easy to implement and
+	// it covers the most common use cases.
+	//
+	// TODO: Make sandboxing work for other situations too.
+	if (args.files_name == NULL && args.arg_count == 1
+			&& (opt_stdout || strcmp("-", args.arg_names[0]) == 0
+				|| opt_mode == MODE_LIST))
+		io_allow_sandbox();
+#endif
+
 	// coder_run() handles compression, decompression, and testing.
 	// list_file() is for --list.
-	void (*run)(const char *filename) = opt_mode == MODE_LIST
-			 ? &list_file : &coder_run;
+	void (*run)(const char *filename) = &coder_run;
+#ifdef HAVE_DECODERS
+	if (opt_mode == MODE_LIST)
+		run = &list_file;
+#endif
 
 	// Process the files given on the command line. Note that if no names
 	// were given, args_parse() gave us a fake "-" filename.
@@ -267,6 +288,7 @@
 			(void)fclose(args.files_file);
 	}
 
+#ifdef HAVE_DECODERS
 	// All files have now been handled. If in --list mode, display
 	// the totals before exiting. We don't have signal handlers
 	// enabled in --list mode, so we don't need to check user_abort.
@@ -274,6 +296,7 @@
 		assert(!user_abort);
 		list_totals();
 	}
+#endif
 
 #ifndef NDEBUG
 	coder_free();
diff -uNrwB xz-5.2.2/src/xz/Makefile.am xz-5.2.4/src/xz/Makefile.am
--- xz-5.2.2/src/xz/Makefile.am	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/xz/Makefile.am	2018-04-29 21:10:38.000000000 +0600
@@ -16,8 +16,6 @@
 	file_io.h \
 	hardware.c \
 	hardware.h \
-	list.c \
-	list.h \
 	main.c \
 	main.h \
 	message.c \
@@ -39,6 +37,12 @@
 	../common/tuklib_mbstr_width.c \
 	../common/tuklib_mbstr_fw.c
 
+if COND_MAIN_DECODER
+xz_SOURCES += \
+	list.c \
+	list.h
+endif
+
 if COND_W32
 xz_SOURCES += xz_w32res.rc
 endif
@@ -49,7 +53,7 @@
 	-I$(top_srcdir)/src/liblzma/api \
 	-I$(top_builddir)/lib
 
-xz_LDADD = $(top_builddir)/src/liblzma/liblzma.la
+xz_LDADD = $(top_builddir)/src/liblzma/liblzma.la $(CAPSICUM_LIB)
 
 if COND_GNULIB
 xz_LDADD += $(top_builddir)/lib/libgnu.a
diff -uNrwB xz-5.2.2/src/xz/Makefile.in xz-5.2.4/src/xz/Makefile.in
--- xz-5.2.2/src/xz/Makefile.in	2015-09-29 17:03:42.000000000 +0600
+++ xz-5.2.4/src/xz/Makefile.in	2018-04-29 22:01:27.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -89,21 +89,25 @@
 build_triplet = @build@
 host_triplet = @host@
 bin_PROGRAMS = xz$(EXEEXT)
-@COND_W32_TRUE@am__append_1 = xz_w32res.rc
-@COND_GNULIB_TRUE@am__append_2 = $(top_builddir)/lib/libgnu.a
-@COND_LZMALINKS_TRUE@am__append_3 = lzma unlzma lzcat
+@COND_MAIN_DECODER_TRUE@am__append_1 = \
+@COND_MAIN_DECODER_TRUE@	list.c \
+@COND_MAIN_DECODER_TRUE@	list.h
+
+@COND_W32_TRUE@am__append_2 = xz_w32res.rc
+@COND_GNULIB_TRUE@am__append_3 = $(top_builddir)/lib/libgnu.a
+@COND_LZMALINKS_TRUE@am__append_4 = lzma unlzma lzcat
 subdir = src/xz
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -120,25 +124,25 @@
 am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"
 PROGRAMS = $(bin_PROGRAMS)
 am__xz_SOURCES_DIST = args.c args.h coder.c coder.h file_io.c \
-	file_io.h hardware.c hardware.h list.c list.h main.c main.h \
-	message.c message.h mytime.c mytime.h options.c options.h \
-	private.h signals.c signals.h suffix.c suffix.h util.c util.h \
+	file_io.h hardware.c hardware.h main.c main.h message.c \
+	message.h mytime.c mytime.h options.c options.h private.h \
+	signals.c signals.h suffix.c suffix.h util.c util.h \
 	../common/tuklib_open_stdxxx.c ../common/tuklib_progname.c \
 	../common/tuklib_exit.c ../common/tuklib_mbstr_width.c \
-	../common/tuklib_mbstr_fw.c xz_w32res.rc
-@COND_W32_TRUE@am__objects_1 = xz_w32res.$(OBJEXT)
+	../common/tuklib_mbstr_fw.c list.c list.h xz_w32res.rc
+@COND_MAIN_DECODER_TRUE@am__objects_1 = xz-list.$(OBJEXT)
+@COND_W32_TRUE@am__objects_2 = xz_w32res.$(OBJEXT)
 am_xz_OBJECTS = xz-args.$(OBJEXT) xz-coder.$(OBJEXT) \
-	xz-file_io.$(OBJEXT) xz-hardware.$(OBJEXT) xz-list.$(OBJEXT) \
-	xz-main.$(OBJEXT) xz-message.$(OBJEXT) xz-mytime.$(OBJEXT) \
-	xz-options.$(OBJEXT) xz-signals.$(OBJEXT) xz-suffix.$(OBJEXT) \
-	xz-util.$(OBJEXT) xz-tuklib_open_stdxxx.$(OBJEXT) \
-	xz-tuklib_progname.$(OBJEXT) xz-tuklib_exit.$(OBJEXT) \
-	xz-tuklib_mbstr_width.$(OBJEXT) xz-tuklib_mbstr_fw.$(OBJEXT) \
-	$(am__objects_1)
+	xz-file_io.$(OBJEXT) xz-hardware.$(OBJEXT) xz-main.$(OBJEXT) \
+	xz-message.$(OBJEXT) xz-mytime.$(OBJEXT) xz-options.$(OBJEXT) \
+	xz-signals.$(OBJEXT) xz-suffix.$(OBJEXT) xz-util.$(OBJEXT) \
+	xz-tuklib_open_stdxxx.$(OBJEXT) xz-tuklib_progname.$(OBJEXT) \
+	xz-tuklib_exit.$(OBJEXT) xz-tuklib_mbstr_width.$(OBJEXT) \
+	xz-tuklib_mbstr_fw.$(OBJEXT) $(am__objects_1) $(am__objects_2)
 xz_OBJECTS = $(am_xz_OBJECTS)
 am__DEPENDENCIES_1 =
 xz_DEPENDENCIES = $(top_builddir)/src/liblzma/liblzma.la \
-	$(am__append_2) $(am__DEPENDENCIES_1)
+	$(am__DEPENDENCIES_1) $(am__append_3) $(am__DEPENDENCIES_1)
 AM_V_lt = $(am__v_lt_@AM_V@)
 am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
 am__v_lt_0 = --silent
@@ -246,6 +250,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
@@ -386,12 +391,12 @@
 top_srcdir = @top_srcdir@
 xz = @xz@
 xz_SOURCES = args.c args.h coder.c coder.h file_io.c file_io.h \
-	hardware.c hardware.h list.c list.h main.c main.h message.c \
-	message.h mytime.c mytime.h options.c options.h private.h \
-	signals.c signals.h suffix.c suffix.h util.c util.h \
+	hardware.c hardware.h main.c main.h message.c message.h \
+	mytime.c mytime.h options.c options.h private.h signals.c \
+	signals.h suffix.c suffix.h util.c util.h \
 	../common/tuklib_open_stdxxx.c ../common/tuklib_progname.c \
 	../common/tuklib_exit.c ../common/tuklib_mbstr_width.c \
-	../common/tuklib_mbstr_fw.c $(am__append_1)
+	../common/tuklib_mbstr_fw.c $(am__append_1) $(am__append_2)
 xz_CPPFLAGS = \
 	-DLOCALEDIR=\"$(localedir)\" \
 	-I$(top_srcdir)/src/common \
@@ -400,10 +405,10 @@
 
 
 # libgnu.a may need these libs, so this must be after libgnu.a.
-xz_LDADD = $(top_builddir)/src/liblzma/liblzma.la $(am__append_2) \
-	$(LTLIBINTL)
+xz_LDADD = $(top_builddir)/src/liblzma/liblzma.la $(CAPSICUM_LIB) \
+	$(am__append_3) $(LTLIBINTL)
 dist_man_MANS = xz.1
-xzlinks = unxz xzcat $(am__append_3)
+xzlinks = unxz xzcat $(am__append_4)
 all: all-am
 
 .SUFFIXES:
@@ -592,20 +597,6 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xz-hardware.obj `if test -f 'hardware.c'; then $(CYGPATH_W) 'hardware.c'; else $(CYGPATH_W) '$(srcdir)/hardware.c'; fi`
 
-xz-list.o: list.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xz-list.o -MD -MP -MF $(DEPDIR)/xz-list.Tpo -c -o xz-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/xz-list.Tpo $(DEPDIR)/xz-list.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='list.c' object='xz-list.o' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xz-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c
-
-xz-list.obj: list.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xz-list.obj -MD -MP -MF $(DEPDIR)/xz-list.Tpo -c -o xz-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/xz-list.Tpo $(DEPDIR)/xz-list.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='list.c' object='xz-list.obj' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xz-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`
-
 xz-main.o: main.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xz-main.o -MD -MP -MF $(DEPDIR)/xz-main.Tpo -c -o xz-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/xz-main.Tpo $(DEPDIR)/xz-main.Po
@@ -774,6 +765,20 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xz-tuklib_mbstr_fw.obj `if test -f '../common/tuklib_mbstr_fw.c'; then $(CYGPATH_W) '../common/tuklib_mbstr_fw.c'; else $(CYGPATH_W) '$(srcdir)/../common/tuklib_mbstr_fw.c'; fi`
 
+xz-list.o: list.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xz-list.o -MD -MP -MF $(DEPDIR)/xz-list.Tpo -c -o xz-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/xz-list.Tpo $(DEPDIR)/xz-list.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='list.c' object='xz-list.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xz-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c
+
+xz-list.obj: list.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xz-list.obj -MD -MP -MF $(DEPDIR)/xz-list.Tpo -c -o xz-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/xz-list.Tpo $(DEPDIR)/xz-list.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='list.c' object='xz-list.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xz_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xz-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`
+
 mostlyclean-libtool:
 	-rm -f *.lo
 
diff -uNrwB xz-5.2.2/src/xz/private.h xz-5.2.4/src/xz/private.h
--- xz-5.2.2/src/xz/private.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/xz/private.h	2018-04-29 21:10:38.000000000 +0600
@@ -45,6 +45,10 @@
 #	define STDERR_FILENO (fileno(stderr))
 #endif
 
+#ifdef HAVE_CAPSICUM
+#	define ENABLE_SANDBOX 1
+#endif
+
 #include "main.h"
 #include "mytime.h"
 #include "coder.h"
@@ -56,4 +60,7 @@
 #include "signals.h"
 #include "suffix.h"
 #include "util.h"
+
+#ifdef HAVE_DECODERS
 #include "list.h"
+#endif
diff -uNrwB xz-5.2.2/src/xz/xz.1 xz-5.2.4/src/xz/xz.1
--- xz-5.2.2/src/xz/xz.1	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/xz/xz.1	2018-04-29 21:10:38.000000000 +0600
@@ -5,7 +5,7 @@
 .\" This file has been put into the public domain.
 .\" You can do whatever you want with this file.
 .\"
-.TH XZ 1 "2015-05-11" "Tukaani" "XZ Utils"
+.TH XZ 1 "2017-04-19" "Tukaani" "XZ Utils"
 .
 .SH NAME
 xz, unxz, xzcat, lzma, unlzma, lzcat \- Compress or decompress .xz and .lzma files
@@ -2779,8 +2779,8 @@
 .BR bzip2 (1),
 .BR 7z (1)
 .PP
-XZ Utils: <http://tukaani.org/xz/>
+XZ Utils: <https://tukaani.org/xz/>
 .br
-XZ Embedded: <http://tukaani.org/xz/embedded.html>
+XZ Embedded: <https://tukaani.org/xz/embedded.html>
 .br
 LZMA SDK: <http://7-zip.org/sdk.html>
diff -uNrwB xz-5.2.2/src/xzdec/Makefile.in xz-5.2.4/src/xzdec/Makefile.in
--- xz-5.2.2/src/xzdec/Makefile.in	2015-09-29 17:03:42.000000000 +0600
+++ xz-5.2.4/src/xzdec/Makefile.in	2018-04-29 22:01:27.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -96,16 +96,16 @@
 @COND_LZMADEC_TRUE@am__append_5 = lzmadec
 subdir = src/xzdec
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -253,6 +253,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
diff -uNrwB xz-5.2.2/src/xzdec/xzdec.1 xz-5.2.4/src/xzdec/xzdec.1
--- xz-5.2.2/src/xzdec/xzdec.1	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/src/xzdec/xzdec.1	2018-04-29 21:10:38.000000000 +0600
@@ -4,7 +4,7 @@
 .\" This file has been put into the public domain.
 .\" You can do whatever you want with this file.
 .\"
-.TH XZDEC 1 "2013-06-30" "Tukaani" "XZ Utils"
+.TH XZDEC 1 "2017-04-19" "Tukaani" "XZ Utils"
 .SH NAME
 xzdec, lzmadec \- Small .xz and .lzma decompressors
 .SH SYNOPSIS
@@ -143,4 +143,4 @@
 .SH "SEE ALSO"
 .BR xz (1)
 .PP
-XZ Embedded: <http://tukaani.org/xz/embedded.html>
+XZ Embedded: <https://tukaani.org/xz/embedded.html>
diff -uNrwB xz-5.2.2/tests/Makefile.in xz-5.2.4/tests/Makefile.in
--- xz-5.2.2/tests/Makefile.in	2015-09-29 17:03:42.000000000 +0600
+++ xz-5.2.4/tests/Makefile.in	2018-04-29 22:01:27.000000000 +0600
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.15.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2017 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -99,16 +99,16 @@
 @COND_SCRIPTS_TRUE@am__append_2 = test_scripts.sh
 subdir = tests
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
-	$(top_srcdir)/m4/getopt.m4 $(top_srcdir)/m4/gettext.m4 \
-	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
-	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
-	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
-	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
-	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
-	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
-	$(top_srcdir)/m4/posix-shell.m4 $(top_srcdir)/m4/progtest.m4 \
-	$(top_srcdir)/m4/tuklib_common.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_capsicum.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
+	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/posix-shell.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/tuklib_common.m4 \
 	$(top_srcdir)/m4/tuklib_cpucores.m4 \
 	$(top_srcdir)/m4/tuklib_integer.m4 \
 	$(top_srcdir)/m4/tuklib_mbstr.m4 \
@@ -266,6 +266,7 @@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
+CAPSICUM_LIB = @CAPSICUM_LIB@
 CC = @CC@
 CCAS = @CCAS@
 CCASDEPMODE = @CCASDEPMODE@
diff -uNrwB xz-5.2.2/tests/test_index.c xz-5.2.4/tests/test_index.c
--- xz-5.2.2/tests/test_index.c	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/tests/test_index.c	2018-04-29 21:10:38.000000000 +0600
@@ -630,6 +630,22 @@
 }
 
 
+// Allocator that succeeds for the first two allocation but fails the rest.
+static void *
+my_alloc(void *opaque, size_t a, size_t b)
+{
+	(void)opaque;
+
+	static unsigned count = 0;
+	if (++count > 2)
+		return NULL;
+
+	return malloc(a * b);
+}
+
+static const lzma_allocator my_allocator = { &my_alloc, NULL, NULL };
+
+
 int
 main(void)
 {
@@ -655,5 +671,19 @@
 
 	test_corrupt();
 
+	// Test for the bug fix 21515d79d778b8730a434f151b07202d52a04611:
+	// liblzma: Fix lzma_index_dup() for empty Streams.
+	i = create_empty();
+	expect(lzma_index_stream_padding(i, 4) == LZMA_OK);
+	test_copy(i);
+	lzma_index_end(i, NULL);
+
+	// Test for the bug fix 3bf857edfef51374f6f3fffae3d817f57d3264a0:
+	// liblzma: Fix a memory leak in error path of lzma_index_dup().
+	// Use Valgrind to see that there are no leaks.
+	i = create_small();
+	expect(lzma_index_dup(i, &my_allocator) == NULL);
+	lzma_index_end(i, NULL);
+
 	return 0;
 }
diff -uNrwB xz-5.2.2/THANKS xz-5.2.4/THANKS
--- xz-5.2.2/THANKS	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/THANKS	2018-04-29 21:10:38.000000000 +0600
@@ -11,7 +11,9 @@
   - Karl Berry
   - Anders F. Björklund
   - Emmanuel Blot
+  - Melanie Blower
   - Martin Blumenstingl
+  - Ben Boeckel
   - Jakub Bogusz
   - Maarten Bosmans
   - Trent W. Buck
@@ -56,6 +58,7 @@
   - Andraž 'ruskie' Levstik
   - Cary Lewis
   - Wim Lewis
+  - Eric Lindblad
   - Lorenzo De Liso
   - Bela Lubkin
   - Gregory Margo
@@ -64,6 +67,7 @@
   - Conley Moorhous
   - Rafał Mużyło
   - Adrien Nader
+  - Evan Nemerson
   - Hongbo Ni
   - Jonathan Nieder
   - Andre Noll
@@ -74,6 +78,7 @@
   - Diego Elio Pettenò
   - Elbert Pol
   - Mikko Pouru
+  - Rich Prohaska
   - Trần Ngọc Quân
   - Pavel Raiskup
   - Ole André Vadla Ravnås
@@ -89,7 +94,9 @@
   - Andreas Schwab
   - Dan Shechter
   - Stuart Shelton
+  - Sebastian Andrzej Siewior
   - Brad Smith
+  - Pippijn van Steenhoven
   - Jonathan Stott
   - Dan Stromberg
   - Vincent Torri
@@ -102,6 +109,7 @@
   - Christian Weisgerber
   - Bert Wesarg
   - Fredrik Wikstrom
+  - Jim Wilcoxson
   - Ralf Wildenhues
   - Charles Wilson
   - Lars Wirzenius
diff -uNrwB xz-5.2.2/windows/config.h xz-5.2.4/windows/config.h
--- xz-5.2.2/windows/config.h	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/windows/config.h	1970-01-01 06:00:00.000000000 +0600
@@ -1,142 +0,0 @@
-/* config.h for compiling liblzma (*not* the whole XZ Utils) with MSVC 2013 */
-
-/* Prefix for symbols exported by tuklib_*.c files */
-#define TUKLIB_SYMBOL_PREFIX lzma_
-
-/* How many MiB of RAM to assume if the real amount cannot be determined. */
-#define ASSUME_RAM 128
-
-/* Define to 1 if crc32 integrity check is enabled. */
-#define HAVE_CHECK_CRC32 1
-
-/* Define to 1 if crc64 integrity check is enabled. */
-#define HAVE_CHECK_CRC64 1
-
-/* Define to 1 if sha256 integrity check is enabled. */
-#define HAVE_CHECK_SHA256 1
-
-/* Define to 1 if arm decoder is enabled. */
-#define HAVE_DECODER_ARM 1
-
-/* Define to 1 if armthumb decoder is enabled. */
-#define HAVE_DECODER_ARMTHUMB 1
-
-/* Define to 1 if delta decoder is enabled. */
-#define HAVE_DECODER_DELTA 1
-
-/* Define to 1 if ia64 decoder is enabled. */
-#define HAVE_DECODER_IA64 1
-
-/* Define to 1 if lzma1 decoder is enabled. */
-#define HAVE_DECODER_LZMA1 1
-
-/* Define to 1 if lzma2 decoder is enabled. */
-#define HAVE_DECODER_LZMA2 1
-
-/* Define to 1 if powerpc decoder is enabled. */
-#define HAVE_DECODER_POWERPC 1
-
-/* Define to 1 if sparc decoder is enabled. */
-#define HAVE_DECODER_SPARC 1
-
-/* Define to 1 if x86 decoder is enabled. */
-#define HAVE_DECODER_X86 1
-
-/* Define to 1 if arm encoder is enabled. */
-#define HAVE_ENCODER_ARM 1
-
-/* Define to 1 if armthumb encoder is enabled. */
-#define HAVE_ENCODER_ARMTHUMB 1
-
-/* Define to 1 if delta encoder is enabled. */
-#define HAVE_ENCODER_DELTA 1
-
-/* Define to 1 if ia64 encoder is enabled. */
-#define HAVE_ENCODER_IA64 1
-
-/* Define to 1 if lzma1 encoder is enabled. */
-#define HAVE_ENCODER_LZMA1 1
-
-/* Define to 1 if lzma2 encoder is enabled. */
-#define HAVE_ENCODER_LZMA2 1
-
-/* Define to 1 if powerpc encoder is enabled. */
-#define HAVE_ENCODER_POWERPC 1
-
-/* Define to 1 if sparc encoder is enabled. */
-#define HAVE_ENCODER_SPARC 1
-
-/* Define to 1 if x86 encoder is enabled. */
-#define HAVE_ENCODER_X86 1
-
-/* Define to 1 if you have the <inttypes.h> header file. */
-#define HAVE_INTTYPES_H 1
-
-/* Define to 1 if you have the <limits.h> header file. */
-#define HAVE_LIMITS_H 1
-
-/* Define to 1 to enable bt2 match finder. */
-#define HAVE_MF_BT2 1
-
-/* Define to 1 to enable bt3 match finder. */
-#define HAVE_MF_BT3 1
-
-/* Define to 1 to enable bt4 match finder. */
-#define HAVE_MF_BT4 1
-
-/* Define to 1 to enable hc3 match finder. */
-#define HAVE_MF_HC3 1
-
-/* Define to 1 to enable hc4 match finder. */
-#define HAVE_MF_HC4 1
-
-/* Define to 1 if stdbool.h conforms to C99. */
-#define HAVE_STDBOOL_H 1
-
-/* Define to 1 if you have the <stdint.h> header file. */
-#define HAVE_STDINT_H 1
-
-/* Define to 1 if you have the <stdlib.h> header file. */
-#define HAVE_STDLIB_H 1
-
-/* Define to 1 if you have the <string.h> header file. */
-#define HAVE_STRING_H 1
-
-/* Define to 1 or 0, depending whether the compiler supports simple visibility
-   declarations. */
-#define HAVE_VISIBILITY 0
-
-/* Define to 1 if the system has the type `_Bool'. */
-#define HAVE__BOOL 1
-
-#ifdef _M_IX86
-/* Define to 1 when using Windows 95 (and thus XP) compatible threads. This
-   avoids use of features that were added in Windows Vista.
-   This is used for 32-bit x86 builds for compatibility reasons since it
-   makes no measurable difference in performance compared to Vista threads. */
-#define MYTHREAD_WIN95 1
-#else
-/* Define to 1 when using Windows Vista compatible threads. This uses features
-   that are not available on Windows XP. */
-#define MYTHREAD_VISTA 1
-#endif
-
-/* Define to 1 to disable debugging code. */
-#define NDEBUG 1
-
-/* Define to the full name of this package. */
-#define PACKAGE_NAME "XZ Utils"
-
-/* Define to the home page for this package. */
-#define PACKAGE_URL "http://tukaani.org/xz/"
-
-/* The size of `size_t', as computed by sizeof. */
-#ifdef _WIN64
-#define SIZEOF_SIZE_T 8
-#else
-#define SIZEOF_SIZE_T 4
-#endif
-
-/* Define to 1 if the system supports fast unaligned access to 16-bit and
-   32-bit integers. */
-#define TUKLIB_FAST_UNALIGNED_ACCESS 1
diff -uNrwB xz-5.2.2/windows/liblzma_dll.vcxproj xz-5.2.4/windows/liblzma_dll.vcxproj
--- xz-5.2.2/windows/liblzma_dll.vcxproj	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/windows/liblzma_dll.vcxproj	1970-01-01 06:00:00.000000000 +0600
@@ -1,383 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|x64">
-      <Configuration>Debug</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="ReleaseMT|Win32">
-      <Configuration>ReleaseMT</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="ReleaseMT|x64">
-      <Configuration>ReleaseMT</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|Win32">
-      <Configuration>Release</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|x64">
-      <Configuration>Release</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-  </ItemGroup>
-  <PropertyGroup Label="Globals">
-    <ProjectGuid>{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}</ProjectGuid>
-    <Keyword>Win32Proj</Keyword>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
-  <ImportGroup Label="ExtensionSettings">
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-    <TargetName>liblzma</TargetName>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-    <TargetName>liblzma</TargetName>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <LinkIncremental>
-    </LinkIncremental>
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-    <TargetName>liblzma</TargetName>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <LinkIncremental />
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-    <TargetName>liblzma</TargetName>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
-    <LinkIncremental>
-    </LinkIncremental>
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-    <TargetName>liblzma</TargetName>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
-    <LinkIncremental />
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-    <TargetName>liblzma</TargetName>
-  </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;_DEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <TargetMachine>MachineX86</TargetMachine>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-    </Link>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;</AdditionalIncludeDirectories>
-    </ResourceCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;_DEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-    </Link>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;</AdditionalIncludeDirectories>
-    </ResourceCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <TargetMachine>MachineX86</TargetMachine>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;</AdditionalIncludeDirectories>
-    </ResourceCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;</AdditionalIncludeDirectories>
-    </ResourceCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <TargetMachine>MachineX86</TargetMachine>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;</AdditionalIncludeDirectories>
-    </ResourceCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;</AdditionalIncludeDirectories>
-    </ResourceCompile>
-  </ItemDefinitionGroup>
-  <ItemGroup>
-    <ClCompile Include="..\src\common\tuklib_cpucores.c" />
-    <ClCompile Include="..\src\common\tuklib_physmem.c" />
-    <ClCompile Include="..\src\liblzma\check\check.c" />
-    <ClCompile Include="..\src\liblzma\check\crc32_fast.c" />
-    <ClCompile Include="..\src\liblzma\check\crc32_table.c" />
-    <ClCompile Include="..\src\liblzma\check\crc64_fast.c" />
-    <ClCompile Include="..\src\liblzma\check\crc64_table.c" />
-    <ClCompile Include="..\src\liblzma\check\sha256.c" />
-    <ClCompile Include="..\src\liblzma\common\alone_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\alone_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\auto_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_buffer_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_buffer_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_header_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_header_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_util.c" />
-    <ClCompile Include="..\src\liblzma\common\common.c" />
-    <ClCompile Include="..\src\liblzma\common\easy_buffer_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\easy_decoder_memusage.c" />
-    <ClCompile Include="..\src\liblzma\common\easy_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\easy_encoder_memusage.c" />
-    <ClCompile Include="..\src\liblzma\common\easy_preset.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_buffer_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_buffer_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_common.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_flags_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_flags_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\hardware_cputhreads.c" />
-    <ClCompile Include="..\src\liblzma\common\hardware_physmem.c" />
-    <ClCompile Include="..\src\liblzma\common\index.c" />
-    <ClCompile Include="..\src\liblzma\common\index_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\index_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\index_hash.c" />
-    <ClCompile Include="..\src\liblzma\common\outqueue.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_buffer_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_buffer_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_encoder_mt.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_flags_common.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_flags_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_flags_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\vli_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\vli_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\vli_size.c" />
-    <ClCompile Include="..\src\liblzma\delta\delta_common.c" />
-    <ClCompile Include="..\src\liblzma\delta\delta_decoder.c" />
-    <ClCompile Include="..\src\liblzma\delta\delta_encoder.c" />
-    <ClCompile Include="..\src\liblzma\lzma\fastpos_table.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma2_decoder.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma2_encoder.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma_decoder.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder_optimum_fast.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder_optimum_normal.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder_presets.c" />
-    <ClCompile Include="..\src\liblzma\lz\lz_decoder.c" />
-    <ClCompile Include="..\src\liblzma\lz\lz_encoder.c" />
-    <ClCompile Include="..\src\liblzma\lz\lz_encoder_mf.c" />
-    <ClCompile Include="..\src\liblzma\rangecoder\price_table.c" />
-    <ClCompile Include="..\src\liblzma\simple\arm.c" />
-    <ClCompile Include="..\src\liblzma\simple\armthumb.c" />
-    <ClCompile Include="..\src\liblzma\simple\ia64.c" />
-    <ClCompile Include="..\src\liblzma\simple\powerpc.c" />
-    <ClCompile Include="..\src\liblzma\simple\simple_coder.c" />
-    <ClCompile Include="..\src\liblzma\simple\simple_decoder.c" />
-    <ClCompile Include="..\src\liblzma\simple\simple_encoder.c" />
-    <ClCompile Include="..\src\liblzma\simple\sparc.c" />
-    <ClCompile Include="..\src\liblzma\simple\x86.c" />
-  </ItemGroup>
-  <ItemGroup>
-    <ClInclude Include="..\src\common\mythread.h" />
-    <ClInclude Include="..\src\common\sysdefs.h" />
-    <ClInclude Include="..\src\common\tuklib_common.h" />
-    <ClInclude Include="..\src\common\tuklib_config.h" />
-    <ClInclude Include="..\src\common\tuklib_cpucores.h" />
-    <ClInclude Include="..\src\common\tuklib_integer.h" />
-    <ClInclude Include="..\src\common\tuklib_physmem.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\base.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\bcj.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\block.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\check.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\container.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\delta.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\filter.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\hardware.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\index.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\index_hash.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\lzma12.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\stream_flags.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\version.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\vli.h" />
-    <ClInclude Include="..\src\liblzma\check\check.h" />
-    <ClInclude Include="..\src\liblzma\check\crc32_table_be.h" />
-    <ClInclude Include="..\src\liblzma\check\crc32_table_le.h" />
-    <ClInclude Include="..\src\liblzma\check\crc64_table_be.h" />
-    <ClInclude Include="..\src\liblzma\check\crc64_table_le.h" />
-    <ClInclude Include="..\src\liblzma\check\crc_macros.h" />
-    <ClInclude Include="..\src\liblzma\common\alone_decoder.h" />
-    <ClInclude Include="..\src\liblzma\common\block_buffer_encoder.h" />
-    <ClInclude Include="..\src\liblzma\common\block_decoder.h" />
-    <ClInclude Include="..\src\liblzma\common\block_encoder.h" />
-    <ClInclude Include="..\src\liblzma\common\common.h" />
-    <ClInclude Include="..\src\liblzma\common\easy_preset.h" />
-    <ClInclude Include="..\src\liblzma\common\filter_common.h" />
-    <ClInclude Include="..\src\liblzma\common\filter_decoder.h" />
-    <ClInclude Include="..\src\liblzma\common\filter_encoder.h" />
-    <ClInclude Include="..\src\liblzma\common\index.h" />
-    <ClInclude Include="..\src\liblzma\common\index_encoder.h" />
-    <ClInclude Include="..\src\liblzma\common\memcmplen.h" />
-    <ClInclude Include="..\src\liblzma\common\outqueue.h" />
-    <ClInclude Include="..\src\liblzma\common\stream_decoder.h" />
-    <ClInclude Include="..\src\liblzma\common\stream_flags_common.h" />
-    <ClInclude Include="..\src\liblzma\delta\delta_common.h" />
-    <ClInclude Include="..\src\liblzma\delta\delta_decoder.h" />
-    <ClInclude Include="..\src\liblzma\delta\delta_encoder.h" />
-    <ClInclude Include="..\src\liblzma\delta\delta_private.h" />
-    <ClInclude Include="..\src\liblzma\lzma\fastpos.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma2_decoder.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma2_encoder.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma_common.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma_decoder.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma_encoder.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma_encoder_private.h" />
-    <ClInclude Include="..\src\liblzma\lz\lz_decoder.h" />
-    <ClInclude Include="..\src\liblzma\lz\lz_encoder.h" />
-    <ClInclude Include="..\src\liblzma\lz\lz_encoder_hash.h" />
-    <ClInclude Include="..\src\liblzma\lz\lz_encoder_hash_table.h" />
-    <ClInclude Include="..\src\liblzma\rangecoder\price.h" />
-    <ClInclude Include="..\src\liblzma\rangecoder\range_common.h" />
-    <ClInclude Include="..\src\liblzma\rangecoder\range_decoder.h" />
-    <ClInclude Include="..\src\liblzma\rangecoder\range_encoder.h" />
-    <ClInclude Include="..\src\liblzma\simple\simple_coder.h" />
-    <ClInclude Include="..\src\liblzma\simple\simple_decoder.h" />
-    <ClInclude Include="..\src\liblzma\simple\simple_encoder.h" />
-    <ClInclude Include="..\src\liblzma\simple\simple_private.h" />
-    <ClInclude Include="config.h" />
-  </ItemGroup>
-  <ItemGroup>
-    <ResourceCompile Include="..\src\liblzma\liblzma_w32res.rc" />
-  </ItemGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
-  <ImportGroup Label="ExtensionTargets">
-  </ImportGroup>
-</Project>
\ В конце файла нет новой строки
diff -uNrwB xz-5.2.2/windows/liblzma.vcxproj xz-5.2.4/windows/liblzma.vcxproj
--- xz-5.2.2/windows/liblzma.vcxproj	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/windows/liblzma.vcxproj	1970-01-01 06:00:00.000000000 +0600
@@ -1,354 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|x64">
-      <Configuration>Debug</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="ReleaseMT|Win32">
-      <Configuration>ReleaseMT</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="ReleaseMT|x64">
-      <Configuration>ReleaseMT</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|Win32">
-      <Configuration>Release</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|x64">
-      <Configuration>Release</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-  </ItemGroup>
-  <PropertyGroup Label="Globals">
-    <ProjectGuid>{12728250-16EC-4DC6-94D7-E21DD88947F8}</ProjectGuid>
-    <Keyword>Win32Proj</Keyword>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
-  <ImportGroup Label="ExtensionSettings">
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
-    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
-  </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <TargetMachine>MachineX86</TargetMachine>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <TargetMachine>MachineX86</TargetMachine>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <TargetMachine>MachineX86</TargetMachine>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
-    <ClCompile>
-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <AdditionalIncludeDirectories>./;../src/liblzma/common;../src/common;../src/liblzma/api;../src/liblzma/check;../src/liblzma/delta;../src/liblzma/lz;../src/liblzma/lzma;../src/liblzma/rangecoder;../src/liblzma/simple</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemGroup>
-    <ClCompile Include="..\src\common\tuklib_cpucores.c" />
-    <ClCompile Include="..\src\common\tuklib_physmem.c" />
-    <ClCompile Include="..\src\liblzma\check\check.c" />
-    <ClCompile Include="..\src\liblzma\check\crc32_fast.c" />
-    <ClCompile Include="..\src\liblzma\check\crc32_table.c" />
-    <ClCompile Include="..\src\liblzma\check\crc64_fast.c" />
-    <ClCompile Include="..\src\liblzma\check\crc64_table.c" />
-    <ClCompile Include="..\src\liblzma\check\sha256.c" />
-    <ClCompile Include="..\src\liblzma\common\alone_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\alone_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\auto_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_buffer_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_buffer_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_header_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_header_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\block_util.c" />
-    <ClCompile Include="..\src\liblzma\common\common.c" />
-    <ClCompile Include="..\src\liblzma\common\easy_buffer_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\easy_decoder_memusage.c" />
-    <ClCompile Include="..\src\liblzma\common\easy_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\easy_encoder_memusage.c" />
-    <ClCompile Include="..\src\liblzma\common\easy_preset.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_buffer_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_buffer_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_common.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_flags_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\filter_flags_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\hardware_cputhreads.c" />
-    <ClCompile Include="..\src\liblzma\common\hardware_physmem.c" />
-    <ClCompile Include="..\src\liblzma\common\index.c" />
-    <ClCompile Include="..\src\liblzma\common\index_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\index_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\index_hash.c" />
-    <ClCompile Include="..\src\liblzma\common\outqueue.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_buffer_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_buffer_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_encoder_mt.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_flags_common.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_flags_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\stream_flags_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\vli_decoder.c" />
-    <ClCompile Include="..\src\liblzma\common\vli_encoder.c" />
-    <ClCompile Include="..\src\liblzma\common\vli_size.c" />
-    <ClCompile Include="..\src\liblzma\delta\delta_common.c" />
-    <ClCompile Include="..\src\liblzma\delta\delta_decoder.c" />
-    <ClCompile Include="..\src\liblzma\delta\delta_encoder.c" />
-    <ClCompile Include="..\src\liblzma\lzma\fastpos_table.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma2_decoder.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma2_encoder.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma_decoder.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder_optimum_fast.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder_optimum_normal.c" />
-    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder_presets.c" />
-    <ClCompile Include="..\src\liblzma\lz\lz_decoder.c" />
-    <ClCompile Include="..\src\liblzma\lz\lz_encoder.c" />
-    <ClCompile Include="..\src\liblzma\lz\lz_encoder_mf.c" />
-    <ClCompile Include="..\src\liblzma\rangecoder\price_table.c" />
-    <ClCompile Include="..\src\liblzma\simple\arm.c" />
-    <ClCompile Include="..\src\liblzma\simple\armthumb.c" />
-    <ClCompile Include="..\src\liblzma\simple\ia64.c" />
-    <ClCompile Include="..\src\liblzma\simple\powerpc.c" />
-    <ClCompile Include="..\src\liblzma\simple\simple_coder.c" />
-    <ClCompile Include="..\src\liblzma\simple\simple_decoder.c" />
-    <ClCompile Include="..\src\liblzma\simple\simple_encoder.c" />
-    <ClCompile Include="..\src\liblzma\simple\sparc.c" />
-    <ClCompile Include="..\src\liblzma\simple\x86.c" />
-  </ItemGroup>
-  <ItemGroup>
-    <ClInclude Include="..\src\common\mythread.h" />
-    <ClInclude Include="..\src\common\sysdefs.h" />
-    <ClInclude Include="..\src\common\tuklib_common.h" />
-    <ClInclude Include="..\src\common\tuklib_config.h" />
-    <ClInclude Include="..\src\common\tuklib_cpucores.h" />
-    <ClInclude Include="..\src\common\tuklib_integer.h" />
-    <ClInclude Include="..\src\common\tuklib_physmem.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\base.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\bcj.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\block.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\check.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\container.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\delta.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\filter.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\hardware.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\index.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\index_hash.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\lzma12.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\stream_flags.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\version.h" />
-    <ClInclude Include="..\src\liblzma\api\lzma\vli.h" />
-    <ClInclude Include="..\src\liblzma\check\check.h" />
-    <ClInclude Include="..\src\liblzma\check\crc32_table_be.h" />
-    <ClInclude Include="..\src\liblzma\check\crc32_table_le.h" />
-    <ClInclude Include="..\src\liblzma\check\crc64_table_be.h" />
-    <ClInclude Include="..\src\liblzma\check\crc64_table_le.h" />
-    <ClInclude Include="..\src\liblzma\check\crc_macros.h" />
-    <ClInclude Include="..\src\liblzma\common\alone_decoder.h" />
-    <ClInclude Include="..\src\liblzma\common\block_buffer_encoder.h" />
-    <ClInclude Include="..\src\liblzma\common\block_decoder.h" />
-    <ClInclude Include="..\src\liblzma\common\block_encoder.h" />
-    <ClInclude Include="..\src\liblzma\common\common.h" />
-    <ClInclude Include="..\src\liblzma\common\easy_preset.h" />
-    <ClInclude Include="..\src\liblzma\common\filter_common.h" />
-    <ClInclude Include="..\src\liblzma\common\filter_decoder.h" />
-    <ClInclude Include="..\src\liblzma\common\filter_encoder.h" />
-    <ClInclude Include="..\src\liblzma\common\index.h" />
-    <ClInclude Include="..\src\liblzma\common\index_encoder.h" />
-    <ClInclude Include="..\src\liblzma\common\memcmplen.h" />
-    <ClInclude Include="..\src\liblzma\common\outqueue.h" />
-    <ClInclude Include="..\src\liblzma\common\stream_decoder.h" />
-    <ClInclude Include="..\src\liblzma\common\stream_flags_common.h" />
-    <ClInclude Include="..\src\liblzma\delta\delta_common.h" />
-    <ClInclude Include="..\src\liblzma\delta\delta_decoder.h" />
-    <ClInclude Include="..\src\liblzma\delta\delta_encoder.h" />
-    <ClInclude Include="..\src\liblzma\delta\delta_private.h" />
-    <ClInclude Include="..\src\liblzma\lzma\fastpos.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma2_decoder.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma2_encoder.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma_common.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma_decoder.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma_encoder.h" />
-    <ClInclude Include="..\src\liblzma\lzma\lzma_encoder_private.h" />
-    <ClInclude Include="..\src\liblzma\lz\lz_decoder.h" />
-    <ClInclude Include="..\src\liblzma\lz\lz_encoder.h" />
-    <ClInclude Include="..\src\liblzma\lz\lz_encoder_hash.h" />
-    <ClInclude Include="..\src\liblzma\lz\lz_encoder_hash_table.h" />
-    <ClInclude Include="..\src\liblzma\rangecoder\price.h" />
-    <ClInclude Include="..\src\liblzma\rangecoder\range_common.h" />
-    <ClInclude Include="..\src\liblzma\rangecoder\range_decoder.h" />
-    <ClInclude Include="..\src\liblzma\rangecoder\range_encoder.h" />
-    <ClInclude Include="..\src\liblzma\simple\simple_coder.h" />
-    <ClInclude Include="..\src\liblzma\simple\simple_decoder.h" />
-    <ClInclude Include="..\src\liblzma\simple\simple_encoder.h" />
-    <ClInclude Include="..\src\liblzma\simple\simple_private.h" />
-    <ClInclude Include="config.h" />
-  </ItemGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
-  <ImportGroup Label="ExtensionTargets">
-  </ImportGroup>
-</Project>
\ В конце файла нет новой строки
diff -uNrwB xz-5.2.2/windows/README-Windows.txt xz-5.2.4/windows/README-Windows.txt
--- xz-5.2.2/windows/README-Windows.txt	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/windows/README-Windows.txt	2018-04-29 21:10:38.000000000 +0600
@@ -7,7 +7,7 @@
 
     This package includes command line tools (xz.exe and a few others)
     and the liblzma compression library from XZ Utils. You can find the
-    latest version and full source code from <http://tukaani.org/xz/>.
+    latest version and full source code from <https://tukaani.org/xz/>.
 
     The parts of the XZ Utils source code, that are relevant to this
     binary package, are in the public domain. XZ Utils have been built
diff -uNrwB xz-5.2.2/windows/vs2013/config.h xz-5.2.4/windows/vs2013/config.h
--- xz-5.2.2/windows/vs2013/config.h	1970-01-01 06:00:00.000000000 +0600
+++ xz-5.2.4/windows/vs2013/config.h	2018-04-29 21:10:38.000000000 +0600
@@ -0,0 +1,148 @@
+/* config.h for compiling liblzma (*not* the whole XZ Utils) with MSVC 2013 */
+
+/* Prefix for symbols exported by tuklib_*.c files */
+#define TUKLIB_SYMBOL_PREFIX lzma_
+
+/* How many MiB of RAM to assume if the real amount cannot be determined. */
+#define ASSUME_RAM 128
+
+/* Define to 1 if crc32 integrity check is enabled. */
+#define HAVE_CHECK_CRC32 1
+
+/* Define to 1 if crc64 integrity check is enabled. */
+#define HAVE_CHECK_CRC64 1
+
+/* Define to 1 if sha256 integrity check is enabled. */
+#define HAVE_CHECK_SHA256 1
+
+/* Define to 1 if any of HAVE_DECODER_foo have been defined. */
+#define HAVE_DECODERS 1
+
+/* Define to 1 if arm decoder is enabled. */
+#define HAVE_DECODER_ARM 1
+
+/* Define to 1 if armthumb decoder is enabled. */
+#define HAVE_DECODER_ARMTHUMB 1
+
+/* Define to 1 if delta decoder is enabled. */
+#define HAVE_DECODER_DELTA 1
+
+/* Define to 1 if ia64 decoder is enabled. */
+#define HAVE_DECODER_IA64 1
+
+/* Define to 1 if lzma1 decoder is enabled. */
+#define HAVE_DECODER_LZMA1 1
+
+/* Define to 1 if lzma2 decoder is enabled. */
+#define HAVE_DECODER_LZMA2 1
+
+/* Define to 1 if powerpc decoder is enabled. */
+#define HAVE_DECODER_POWERPC 1
+
+/* Define to 1 if sparc decoder is enabled. */
+#define HAVE_DECODER_SPARC 1
+
+/* Define to 1 if x86 decoder is enabled. */
+#define HAVE_DECODER_X86 1
+
+/* Define to 1 if any of HAVE_ENCODER_foo have been defined. */
+#define HAVE_ENCODERS 1
+
+/* Define to 1 if arm encoder is enabled. */
+#define HAVE_ENCODER_ARM 1
+
+/* Define to 1 if armthumb encoder is enabled. */
+#define HAVE_ENCODER_ARMTHUMB 1
+
+/* Define to 1 if delta encoder is enabled. */
+#define HAVE_ENCODER_DELTA 1
+
+/* Define to 1 if ia64 encoder is enabled. */
+#define HAVE_ENCODER_IA64 1
+
+/* Define to 1 if lzma1 encoder is enabled. */
+#define HAVE_ENCODER_LZMA1 1
+
+/* Define to 1 if lzma2 encoder is enabled. */
+#define HAVE_ENCODER_LZMA2 1
+
+/* Define to 1 if powerpc encoder is enabled. */
+#define HAVE_ENCODER_POWERPC 1
+
+/* Define to 1 if sparc encoder is enabled. */
+#define HAVE_ENCODER_SPARC 1
+
+/* Define to 1 if x86 encoder is enabled. */
+#define HAVE_ENCODER_X86 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the <limits.h> header file. */
+#define HAVE_LIMITS_H 1
+
+/* Define to 1 to enable bt2 match finder. */
+#define HAVE_MF_BT2 1
+
+/* Define to 1 to enable bt3 match finder. */
+#define HAVE_MF_BT3 1
+
+/* Define to 1 to enable bt4 match finder. */
+#define HAVE_MF_BT4 1
+
+/* Define to 1 to enable hc3 match finder. */
+#define HAVE_MF_HC3 1
+
+/* Define to 1 to enable hc4 match finder. */
+#define HAVE_MF_HC4 1
+
+/* Define to 1 if stdbool.h conforms to C99. */
+#define HAVE_STDBOOL_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 or 0, depending whether the compiler supports simple visibility
+   declarations. */
+#define HAVE_VISIBILITY 0
+
+/* Define to 1 if the system has the type `_Bool'. */
+#define HAVE__BOOL 1
+
+#ifdef _M_IX86
+/* Define to 1 when using Windows 95 (and thus XP) compatible threads. This
+   avoids use of features that were added in Windows Vista.
+   This is used for 32-bit x86 builds for compatibility reasons since it
+   makes no measurable difference in performance compared to Vista threads. */
+#define MYTHREAD_WIN95 1
+#else
+/* Define to 1 when using Windows Vista compatible threads. This uses features
+   that are not available on Windows XP. */
+#define MYTHREAD_VISTA 1
+#endif
+
+/* Define to 1 to disable debugging code. */
+#define NDEBUG 1
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "XZ Utils"
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL "https://tukaani.org/xz/"
+
+/* The size of `size_t', as computed by sizeof. */
+#ifdef _WIN64
+#define SIZEOF_SIZE_T 8
+#else
+#define SIZEOF_SIZE_T 4
+#endif
+
+/* Define to 1 if the system supports fast unaligned access to 16-bit and
+   32-bit integers. */
+#define TUKLIB_FAST_UNALIGNED_ACCESS 1
diff -uNrwB xz-5.2.2/windows/vs2013/liblzma_dll.vcxproj xz-5.2.4/windows/vs2013/liblzma_dll.vcxproj
--- xz-5.2.2/windows/vs2013/liblzma_dll.vcxproj	1970-01-01 06:00:00.000000000 +0600
+++ xz-5.2.4/windows/vs2013/liblzma_dll.vcxproj	2018-04-29 21:10:38.000000000 +0600
@@ -0,0 +1,383 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseMT|Win32">
+      <Configuration>ReleaseMT</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseMT|x64">
+      <Configuration>ReleaseMT</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectGuid>{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}</ProjectGuid>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <LinkIncremental>
+    </LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <LinkIncremental />
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
+    <LinkIncremental>
+    </LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
+    <LinkIncremental />
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;_DEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;_DEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\src\common\tuklib_cpucores.c" />
+    <ClCompile Include="..\..\src\common\tuklib_physmem.c" />
+    <ClCompile Include="..\..\src\liblzma\check\check.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc32_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc32_table.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc64_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc64_table.c" />
+    <ClCompile Include="..\..\src\liblzma\check\sha256.c" />
+    <ClCompile Include="..\..\src\liblzma\common\alone_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\alone_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\auto_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_header_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_header_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_util.c" />
+    <ClCompile Include="..\..\src\liblzma\common\common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_decoder_memusage.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_encoder_memusage.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_preset.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_flags_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_flags_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\hardware_cputhreads.c" />
+    <ClCompile Include="..\..\src\liblzma\common\hardware_physmem.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_hash.c" />
+    <ClCompile Include="..\..\src\liblzma\common\outqueue.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_encoder_mt.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_size.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_common.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\fastpos_table.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma2_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma2_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_optimum_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_optimum_normal.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_presets.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_encoder_mf.c" />
+    <ClCompile Include="..\..\src\liblzma\rangecoder\price_table.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\arm.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\armthumb.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\ia64.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\powerpc.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_coder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\sparc.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\x86.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="..\..\src\common\mythread.h" />
+    <ClInclude Include="..\..\src\common\sysdefs.h" />
+    <ClInclude Include="..\..\src\common\tuklib_common.h" />
+    <ClInclude Include="..\..\src\common\tuklib_config.h" />
+    <ClInclude Include="..\..\src\common\tuklib_cpucores.h" />
+    <ClInclude Include="..\..\src\common\tuklib_integer.h" />
+    <ClInclude Include="..\..\src\common\tuklib_physmem.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\base.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\bcj.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\block.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\check.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\container.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\delta.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\filter.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\hardware.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\index.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\index_hash.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\lzma12.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\stream_flags.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\version.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\vli.h" />
+    <ClInclude Include="..\..\src\liblzma\check\check.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc32_table_be.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc32_table_le.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc64_table_be.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc64_table_le.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc_macros.h" />
+    <ClInclude Include="..\..\src\liblzma\common\alone_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_buffer_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\common.h" />
+    <ClInclude Include="..\..\src\liblzma\common\easy_preset.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_common.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\index.h" />
+    <ClInclude Include="..\..\src\liblzma\common\index_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\memcmplen.h" />
+    <ClInclude Include="..\..\src\liblzma\common\outqueue.h" />
+    <ClInclude Include="..\..\src\liblzma\common\stream_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\stream_flags_common.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_common.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_private.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\fastpos.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma2_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma2_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_common.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_encoder_private.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder_hash.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder_hash_table.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\price.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_common.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_coder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_private.h" />
+    <ClInclude Include="config.h" />
+  </ItemGroup>
+  <ItemGroup>
+    <ResourceCompile Include="..\..\src\liblzma\liblzma_w32res.rc" />
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ В конце файла нет новой строки
diff -uNrwB xz-5.2.2/windows/vs2013/liblzma.vcxproj xz-5.2.4/windows/vs2013/liblzma.vcxproj
--- xz-5.2.2/windows/vs2013/liblzma.vcxproj	1970-01-01 06:00:00.000000000 +0600
+++ xz-5.2.4/windows/vs2013/liblzma.vcxproj	2018-04-29 21:10:38.000000000 +0600
@@ -0,0 +1,354 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseMT|Win32">
+      <Configuration>ReleaseMT</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseMT|x64">
+      <Configuration>ReleaseMT</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectGuid>{12728250-16EC-4DC6-94D7-E21DD88947F8}</ProjectGuid>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\src\common\tuklib_cpucores.c" />
+    <ClCompile Include="..\..\src\common\tuklib_physmem.c" />
+    <ClCompile Include="..\..\src\liblzma\check\check.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc32_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc32_table.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc64_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc64_table.c" />
+    <ClCompile Include="..\..\src\liblzma\check\sha256.c" />
+    <ClCompile Include="..\..\src\liblzma\common\alone_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\alone_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\auto_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_header_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_header_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_util.c" />
+    <ClCompile Include="..\..\src\liblzma\common\common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_decoder_memusage.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_encoder_memusage.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_preset.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_flags_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_flags_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\hardware_cputhreads.c" />
+    <ClCompile Include="..\..\src\liblzma\common\hardware_physmem.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_hash.c" />
+    <ClCompile Include="..\..\src\liblzma\common\outqueue.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_encoder_mt.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_size.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_common.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\fastpos_table.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma2_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma2_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_optimum_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_optimum_normal.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_presets.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_encoder_mf.c" />
+    <ClCompile Include="..\..\src\liblzma\rangecoder\price_table.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\arm.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\armthumb.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\ia64.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\powerpc.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_coder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\sparc.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\x86.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="..\..\src\common\mythread.h" />
+    <ClInclude Include="..\..\src\common\sysdefs.h" />
+    <ClInclude Include="..\..\src\common\tuklib_common.h" />
+    <ClInclude Include="..\..\src\common\tuklib_config.h" />
+    <ClInclude Include="..\..\src\common\tuklib_cpucores.h" />
+    <ClInclude Include="..\..\src\common\tuklib_integer.h" />
+    <ClInclude Include="..\..\src\common\tuklib_physmem.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\base.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\bcj.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\block.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\check.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\container.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\delta.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\filter.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\hardware.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\index.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\index_hash.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\lzma12.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\stream_flags.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\version.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\vli.h" />
+    <ClInclude Include="..\..\src\liblzma\check\check.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc32_table_be.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc32_table_le.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc64_table_be.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc64_table_le.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc_macros.h" />
+    <ClInclude Include="..\..\src\liblzma\common\alone_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_buffer_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\common.h" />
+    <ClInclude Include="..\..\src\liblzma\common\easy_preset.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_common.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\index.h" />
+    <ClInclude Include="..\..\src\liblzma\common\index_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\memcmplen.h" />
+    <ClInclude Include="..\..\src\liblzma\common\outqueue.h" />
+    <ClInclude Include="..\..\src\liblzma\common\stream_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\stream_flags_common.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_common.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_private.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\fastpos.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma2_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma2_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_common.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_encoder_private.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder_hash.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder_hash_table.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\price.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_common.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_coder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_private.h" />
+    <ClInclude Include="config.h" />
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ В конце файла нет новой строки
diff -uNrwB xz-5.2.2/windows/vs2013/xz_win.sln xz-5.2.4/windows/vs2013/xz_win.sln
--- xz-5.2.2/windows/vs2013/xz_win.sln	1970-01-01 06:00:00.000000000 +0600
+++ xz-5.2.4/windows/vs2013/xz_win.sln	2018-04-29 21:10:38.000000000 +0600
@@ -0,0 +1,48 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio 2013
+VisualStudioVersion = 12.0.31101.0
+MinimumVisualStudioVersion = 10.0.40219.1
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "liblzma", "liblzma.vcxproj", "{12728250-16EC-4DC6-94D7-E21DD88947F8}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "liblzma_dll", "liblzma_dll.vcxproj", "{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Win32 = Debug|Win32
+		Debug|x64 = Debug|x64
+		Release|Win32 = Release|Win32
+		Release|x64 = Release|x64
+		ReleaseMT|Win32 = ReleaseMT|Win32
+		ReleaseMT|x64 = ReleaseMT|x64
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|Win32.ActiveCfg = Debug|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|Win32.Build.0 = Debug|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|x64.ActiveCfg = Debug|x64
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|x64.Build.0 = Debug|x64
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|Win32.ActiveCfg = Release|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|Win32.Build.0 = Release|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|x64.ActiveCfg = Release|x64
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|x64.Build.0 = Release|x64
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|Win32.ActiveCfg = ReleaseMT|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|Win32.Build.0 = ReleaseMT|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|x64.ActiveCfg = ReleaseMT|x64
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|x64.Build.0 = ReleaseMT|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|Win32.ActiveCfg = Debug|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|Win32.Build.0 = Debug|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|x64.ActiveCfg = Debug|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|x64.Build.0 = Debug|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|Win32.ActiveCfg = Release|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|Win32.Build.0 = Release|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|x64.ActiveCfg = Release|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|x64.Build.0 = Release|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|Win32.ActiveCfg = ReleaseMT|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|Win32.Build.0 = ReleaseMT|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|x64.ActiveCfg = ReleaseMT|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|x64.Build.0 = ReleaseMT|x64
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+EndGlobal
diff -uNrwB xz-5.2.2/windows/vs2017/config.h xz-5.2.4/windows/vs2017/config.h
--- xz-5.2.2/windows/vs2017/config.h	1970-01-01 06:00:00.000000000 +0600
+++ xz-5.2.4/windows/vs2017/config.h	2018-04-29 21:10:38.000000000 +0600
@@ -0,0 +1,148 @@
+/* config.h for compiling liblzma (*not* the whole XZ Utils) with MSVC 2017 */
+
+/* Prefix for symbols exported by tuklib_*.c files */
+#define TUKLIB_SYMBOL_PREFIX lzma_
+
+/* How many MiB of RAM to assume if the real amount cannot be determined. */
+#define ASSUME_RAM 128
+
+/* Define to 1 if crc32 integrity check is enabled. */
+#define HAVE_CHECK_CRC32 1
+
+/* Define to 1 if crc64 integrity check is enabled. */
+#define HAVE_CHECK_CRC64 1
+
+/* Define to 1 if sha256 integrity check is enabled. */
+#define HAVE_CHECK_SHA256 1
+
+/* Define to 1 if any of HAVE_DECODER_foo have been defined. */
+#define HAVE_DECODERS 1
+
+/* Define to 1 if arm decoder is enabled. */
+#define HAVE_DECODER_ARM 1
+
+/* Define to 1 if armthumb decoder is enabled. */
+#define HAVE_DECODER_ARMTHUMB 1
+
+/* Define to 1 if delta decoder is enabled. */
+#define HAVE_DECODER_DELTA 1
+
+/* Define to 1 if ia64 decoder is enabled. */
+#define HAVE_DECODER_IA64 1
+
+/* Define to 1 if lzma1 decoder is enabled. */
+#define HAVE_DECODER_LZMA1 1
+
+/* Define to 1 if lzma2 decoder is enabled. */
+#define HAVE_DECODER_LZMA2 1
+
+/* Define to 1 if powerpc decoder is enabled. */
+#define HAVE_DECODER_POWERPC 1
+
+/* Define to 1 if sparc decoder is enabled. */
+#define HAVE_DECODER_SPARC 1
+
+/* Define to 1 if x86 decoder is enabled. */
+#define HAVE_DECODER_X86 1
+
+/* Define to 1 if any of HAVE_ENCODER_foo have been defined. */
+#define HAVE_ENCODERS 1
+
+/* Define to 1 if arm encoder is enabled. */
+#define HAVE_ENCODER_ARM 1
+
+/* Define to 1 if armthumb encoder is enabled. */
+#define HAVE_ENCODER_ARMTHUMB 1
+
+/* Define to 1 if delta encoder is enabled. */
+#define HAVE_ENCODER_DELTA 1
+
+/* Define to 1 if ia64 encoder is enabled. */
+#define HAVE_ENCODER_IA64 1
+
+/* Define to 1 if lzma1 encoder is enabled. */
+#define HAVE_ENCODER_LZMA1 1
+
+/* Define to 1 if lzma2 encoder is enabled. */
+#define HAVE_ENCODER_LZMA2 1
+
+/* Define to 1 if powerpc encoder is enabled. */
+#define HAVE_ENCODER_POWERPC 1
+
+/* Define to 1 if sparc encoder is enabled. */
+#define HAVE_ENCODER_SPARC 1
+
+/* Define to 1 if x86 encoder is enabled. */
+#define HAVE_ENCODER_X86 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the <limits.h> header file. */
+#define HAVE_LIMITS_H 1
+
+/* Define to 1 to enable bt2 match finder. */
+#define HAVE_MF_BT2 1
+
+/* Define to 1 to enable bt3 match finder. */
+#define HAVE_MF_BT3 1
+
+/* Define to 1 to enable bt4 match finder. */
+#define HAVE_MF_BT4 1
+
+/* Define to 1 to enable hc3 match finder. */
+#define HAVE_MF_HC3 1
+
+/* Define to 1 to enable hc4 match finder. */
+#define HAVE_MF_HC4 1
+
+/* Define to 1 if stdbool.h conforms to C99. */
+#define HAVE_STDBOOL_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 or 0, depending whether the compiler supports simple visibility
+   declarations. */
+#define HAVE_VISIBILITY 0
+
+/* Define to 1 if the system has the type `_Bool'. */
+#define HAVE__BOOL 1
+
+#ifdef _M_IX86
+/* Define to 1 when using Windows 95 (and thus XP) compatible threads. This
+   avoids use of features that were added in Windows Vista.
+   This is used for 32-bit x86 builds for compatibility reasons since it
+   makes no measurable difference in performance compared to Vista threads. */
+#define MYTHREAD_WIN95 1
+#else
+/* Define to 1 when using Windows Vista compatible threads. This uses features
+   that are not available on Windows XP. */
+#define MYTHREAD_VISTA 1
+#endif
+
+/* Define to 1 to disable debugging code. */
+#define NDEBUG 1
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "XZ Utils"
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL "https://tukaani.org/xz/"
+
+/* The size of `size_t', as computed by sizeof. */
+#ifdef _WIN64
+#define SIZEOF_SIZE_T 8
+#else
+#define SIZEOF_SIZE_T 4
+#endif
+
+/* Define to 1 if the system supports fast unaligned access to 16-bit and
+   32-bit integers. */
+#define TUKLIB_FAST_UNALIGNED_ACCESS 1
diff -uNrwB xz-5.2.2/windows/vs2017/liblzma_dll.vcxproj xz-5.2.4/windows/vs2017/liblzma_dll.vcxproj
--- xz-5.2.2/windows/vs2017/liblzma_dll.vcxproj	1970-01-01 06:00:00.000000000 +0600
+++ xz-5.2.4/windows/vs2017/liblzma_dll.vcxproj	2018-04-29 21:10:38.000000000 +0600
@@ -0,0 +1,384 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseMT|Win32">
+      <Configuration>ReleaseMT</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseMT|x64">
+      <Configuration>ReleaseMT</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectGuid>{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}</ProjectGuid>
+    <Keyword>Win32Proj</Keyword>
+    <WindowsTargetPlatformVersion>10.0.15063.0</WindowsTargetPlatformVersion>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <LinkIncremental>
+    </LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <LinkIncremental />
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
+    <LinkIncremental>
+    </LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
+    <LinkIncremental />
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+    <TargetName>liblzma</TargetName>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;_DEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;_DEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;DLL_EXPORT;NDEBUG;_WINDOWS;_USRDLL;LIBLZMADLL_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+    <ResourceCompile>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;</AdditionalIncludeDirectories>
+    </ResourceCompile>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\src\common\tuklib_cpucores.c" />
+    <ClCompile Include="..\..\src\common\tuklib_physmem.c" />
+    <ClCompile Include="..\..\src\liblzma\check\check.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc32_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc32_table.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc64_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc64_table.c" />
+    <ClCompile Include="..\..\src\liblzma\check\sha256.c" />
+    <ClCompile Include="..\..\src\liblzma\common\alone_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\alone_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\auto_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_header_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_header_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_util.c" />
+    <ClCompile Include="..\..\src\liblzma\common\common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_decoder_memusage.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_encoder_memusage.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_preset.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_flags_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_flags_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\hardware_cputhreads.c" />
+    <ClCompile Include="..\..\src\liblzma\common\hardware_physmem.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_hash.c" />
+    <ClCompile Include="..\..\src\liblzma\common\outqueue.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_encoder_mt.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_size.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_common.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\fastpos_table.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma2_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma2_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_optimum_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_optimum_normal.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_presets.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_encoder_mf.c" />
+    <ClCompile Include="..\..\src\liblzma\rangecoder\price_table.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\arm.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\armthumb.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\ia64.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\powerpc.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_coder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\sparc.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\x86.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="..\..\src\common\mythread.h" />
+    <ClInclude Include="..\..\src\common\sysdefs.h" />
+    <ClInclude Include="..\..\src\common\tuklib_common.h" />
+    <ClInclude Include="..\..\src\common\tuklib_config.h" />
+    <ClInclude Include="..\..\src\common\tuklib_cpucores.h" />
+    <ClInclude Include="..\..\src\common\tuklib_integer.h" />
+    <ClInclude Include="..\..\src\common\tuklib_physmem.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\base.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\bcj.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\block.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\check.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\container.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\delta.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\filter.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\hardware.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\index.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\index_hash.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\lzma12.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\stream_flags.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\version.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\vli.h" />
+    <ClInclude Include="..\..\src\liblzma\check\check.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc32_table_be.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc32_table_le.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc64_table_be.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc64_table_le.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc_macros.h" />
+    <ClInclude Include="..\..\src\liblzma\common\alone_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_buffer_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\common.h" />
+    <ClInclude Include="..\..\src\liblzma\common\easy_preset.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_common.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\index.h" />
+    <ClInclude Include="..\..\src\liblzma\common\index_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\memcmplen.h" />
+    <ClInclude Include="..\..\src\liblzma\common\outqueue.h" />
+    <ClInclude Include="..\..\src\liblzma\common\stream_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\stream_flags_common.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_common.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_private.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\fastpos.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma2_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma2_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_common.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_encoder_private.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder_hash.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder_hash_table.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\price.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_common.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_coder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_private.h" />
+    <ClInclude Include="config.h" />
+  </ItemGroup>
+  <ItemGroup>
+    <ResourceCompile Include="..\..\src\liblzma\liblzma_w32res.rc" />
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
diff -uNrwB xz-5.2.2/windows/vs2017/liblzma.vcxproj xz-5.2.4/windows/vs2017/liblzma.vcxproj
--- xz-5.2.2/windows/vs2017/liblzma.vcxproj	1970-01-01 06:00:00.000000000 +0600
+++ xz-5.2.4/windows/vs2017/liblzma.vcxproj	2018-04-29 21:10:38.000000000 +0600
@@ -0,0 +1,355 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseMT|Win32">
+      <Configuration>ReleaseMT</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseMT|x64">
+      <Configuration>ReleaseMT</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectGuid>{12728250-16EC-4DC6-94D7-E21DD88947F8}</ProjectGuid>
+    <Keyword>Win32Proj</Keyword>
+    <WindowsTargetPlatformVersion>10.0.15063.0</WindowsTargetPlatformVersion>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</OutDir>
+    <IntDir>$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <TargetMachine>MachineX86</TargetMachine>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseMT|x64'">
+    <ClCompile>
+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <AdditionalIncludeDirectories>./;../../src/liblzma/common;../../src/common;../../src/liblzma/api;../../src/liblzma/check;../../src/liblzma/delta;../../src/liblzma/lz;../../src/liblzma/lzma;../../src/liblzma/rangecoder;../../src/liblzma/simple</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\src\common\tuklib_cpucores.c" />
+    <ClCompile Include="..\..\src\common\tuklib_physmem.c" />
+    <ClCompile Include="..\..\src\liblzma\check\check.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc32_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc32_table.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc64_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\check\crc64_table.c" />
+    <ClCompile Include="..\..\src\liblzma\check\sha256.c" />
+    <ClCompile Include="..\..\src\liblzma\common\alone_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\alone_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\auto_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_header_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_header_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\block_util.c" />
+    <ClCompile Include="..\..\src\liblzma\common\common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_decoder_memusage.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_encoder_memusage.c" />
+    <ClCompile Include="..\..\src\liblzma\common\easy_preset.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_flags_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\filter_flags_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\hardware_cputhreads.c" />
+    <ClCompile Include="..\..\src\liblzma\common\hardware_physmem.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\index_hash.c" />
+    <ClCompile Include="..\..\src\liblzma\common\outqueue.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_buffer_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_buffer_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_encoder_mt.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_common.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\stream_flags_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\common\vli_size.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_common.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\delta\delta_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\fastpos_table.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma2_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma2_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_optimum_fast.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_optimum_normal.c" />
+    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_presets.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\lz\lz_encoder_mf.c" />
+    <ClCompile Include="..\..\src\liblzma\rangecoder\price_table.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\arm.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\armthumb.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\ia64.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\powerpc.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_coder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_decoder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\simple_encoder.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\sparc.c" />
+    <ClCompile Include="..\..\src\liblzma\simple\x86.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="..\..\src\common\mythread.h" />
+    <ClInclude Include="..\..\src\common\sysdefs.h" />
+    <ClInclude Include="..\..\src\common\tuklib_common.h" />
+    <ClInclude Include="..\..\src\common\tuklib_config.h" />
+    <ClInclude Include="..\..\src\common\tuklib_cpucores.h" />
+    <ClInclude Include="..\..\src\common\tuklib_integer.h" />
+    <ClInclude Include="..\..\src\common\tuklib_physmem.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\base.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\bcj.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\block.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\check.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\container.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\delta.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\filter.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\hardware.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\index.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\index_hash.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\lzma12.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\stream_flags.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\version.h" />
+    <ClInclude Include="..\..\src\liblzma\api\lzma\vli.h" />
+    <ClInclude Include="..\..\src\liblzma\check\check.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc32_table_be.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc32_table_le.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc64_table_be.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc64_table_le.h" />
+    <ClInclude Include="..\..\src\liblzma\check\crc_macros.h" />
+    <ClInclude Include="..\..\src\liblzma\common\alone_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_buffer_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\block_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\common.h" />
+    <ClInclude Include="..\..\src\liblzma\common\easy_preset.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_common.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\filter_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\index.h" />
+    <ClInclude Include="..\..\src\liblzma\common\index_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\memcmplen.h" />
+    <ClInclude Include="..\..\src\liblzma\common\outqueue.h" />
+    <ClInclude Include="..\..\src\liblzma\common\stream_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\common\stream_flags_common.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_common.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\delta\delta_private.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\fastpos.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma2_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma2_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_common.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lzma\lzma_encoder_private.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder_hash.h" />
+    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder_hash_table.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\price.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_common.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\rangecoder\range_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_coder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_decoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_encoder.h" />
+    <ClInclude Include="..\..\src\liblzma\simple\simple_private.h" />
+    <ClInclude Include="config.h" />
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
diff -uNrwB xz-5.2.2/windows/vs2017/xz_win.sln xz-5.2.4/windows/vs2017/xz_win.sln
--- xz-5.2.2/windows/vs2017/xz_win.sln	1970-01-01 06:00:00.000000000 +0600
+++ xz-5.2.4/windows/vs2017/xz_win.sln	2018-04-29 21:10:38.000000000 +0600
@@ -0,0 +1,48 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio 15
+VisualStudioVersion = 15.0.26430.14
+MinimumVisualStudioVersion = 10.0.40219.1
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "liblzma", "liblzma.vcxproj", "{12728250-16EC-4DC6-94D7-E21DD88947F8}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "liblzma_dll", "liblzma_dll.vcxproj", "{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Win32 = Debug|Win32
+		Debug|x64 = Debug|x64
+		Release|Win32 = Release|Win32
+		Release|x64 = Release|x64
+		ReleaseMT|Win32 = ReleaseMT|Win32
+		ReleaseMT|x64 = ReleaseMT|x64
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|Win32.ActiveCfg = Debug|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|Win32.Build.0 = Debug|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|x64.ActiveCfg = Debug|x64
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|x64.Build.0 = Debug|x64
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|Win32.ActiveCfg = Release|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|Win32.Build.0 = Release|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|x64.ActiveCfg = Release|x64
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|x64.Build.0 = Release|x64
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|Win32.ActiveCfg = ReleaseMT|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|Win32.Build.0 = ReleaseMT|Win32
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|x64.ActiveCfg = ReleaseMT|x64
+		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|x64.Build.0 = ReleaseMT|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|Win32.ActiveCfg = Debug|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|Win32.Build.0 = Debug|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|x64.ActiveCfg = Debug|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|x64.Build.0 = Debug|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|Win32.ActiveCfg = Release|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|Win32.Build.0 = Release|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|x64.ActiveCfg = Release|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|x64.Build.0 = Release|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|Win32.ActiveCfg = ReleaseMT|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|Win32.Build.0 = ReleaseMT|Win32
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|x64.ActiveCfg = ReleaseMT|x64
+		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|x64.Build.0 = ReleaseMT|x64
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+EndGlobal
diff -uNrwB xz-5.2.2/windows/xz_win.sln xz-5.2.4/windows/xz_win.sln
--- xz-5.2.2/windows/xz_win.sln	2015-09-29 16:57:36.000000000 +0600
+++ xz-5.2.4/windows/xz_win.sln	1970-01-01 06:00:00.000000000 +0600
@@ -1,48 +0,0 @@
-﻿
-Microsoft Visual Studio Solution File, Format Version 12.00
-# Visual Studio 2013
-VisualStudioVersion = 12.0.31101.0
-MinimumVisualStudioVersion = 10.0.40219.1
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "liblzma", "liblzma.vcxproj", "{12728250-16EC-4DC6-94D7-E21DD88947F8}"
-EndProject
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "liblzma_dll", "liblzma_dll.vcxproj", "{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}"
-EndProject
-Global
-	GlobalSection(SolutionConfigurationPlatforms) = preSolution
-		Debug|Win32 = Debug|Win32
-		Debug|x64 = Debug|x64
-		Release|Win32 = Release|Win32
-		Release|x64 = Release|x64
-		ReleaseMT|Win32 = ReleaseMT|Win32
-		ReleaseMT|x64 = ReleaseMT|x64
-	EndGlobalSection
-	GlobalSection(ProjectConfigurationPlatforms) = postSolution
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|Win32.ActiveCfg = Debug|Win32
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|Win32.Build.0 = Debug|Win32
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|x64.ActiveCfg = Debug|x64
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Debug|x64.Build.0 = Debug|x64
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|Win32.ActiveCfg = Release|Win32
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|Win32.Build.0 = Release|Win32
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|x64.ActiveCfg = Release|x64
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.Release|x64.Build.0 = Release|x64
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|Win32.ActiveCfg = ReleaseMT|Win32
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|Win32.Build.0 = ReleaseMT|Win32
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|x64.ActiveCfg = ReleaseMT|x64
-		{12728250-16EC-4DC6-94D7-E21DD88947F8}.ReleaseMT|x64.Build.0 = ReleaseMT|x64
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|Win32.ActiveCfg = Debug|Win32
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|Win32.Build.0 = Debug|Win32
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|x64.ActiveCfg = Debug|x64
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Debug|x64.Build.0 = Debug|x64
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|Win32.ActiveCfg = Release|Win32
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|Win32.Build.0 = Release|Win32
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|x64.ActiveCfg = Release|x64
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.Release|x64.Build.0 = Release|x64
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|Win32.ActiveCfg = ReleaseMT|Win32
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|Win32.Build.0 = ReleaseMT|Win32
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|x64.ActiveCfg = ReleaseMT|x64
-		{E0F247DB-EF12-4755-8DF9-F74BCD1348F7}.ReleaseMT|x64.Build.0 = ReleaseMT|x64
-	EndGlobalSection
-	GlobalSection(SolutionProperties) = preSolution
-		HideSolutionNode = FALSE
-	EndGlobalSection
-EndGlobal
