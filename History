<hr>
<b>WIVE FIRMWARE IS FREE FOR THE NON-COMMERCIAL USE ONLY.</b>
<br>
<b>Conditions of commercial use are discussed individually.</b>
<hr>
<b>News and changes in Russian:</b><br>
<a href="http://wive-ng.sf.net">wive-ng.sf.net - development opensource routers firmware</a><br>
<br>
<b>Bug report please send to support[at]nag.ru or sfstudio[at]mail.ru</b>
<hr>
<b>Release tree changes:</b><br>
<b>0.0.x-0.30.x</b><br>
1) full new codebase.<br>
2) sync with 4.2.1.0 SDK.<br>
3) toolchain: move to 4.8.4 gcc svn version (after 4.8.3 release 4.8 tree apply only bugfixes).<br>
4) webui: add wan mac change logic.<br>
5) fix drop nvram in fs fullreset in some situations.<br>
6) defaults: temp disable multicast2unicast.<br>
7) rf calib: use avarage calibs if need fullreset or factory part crash.<br>
8) init.d: add workaround for fix txring fill in drivers if M2U enabled.<br>
9) init.d: fix disabled forwarding after sysctl rebuild.<br>
10) init.d: fix get vendid at new mac generate.<br>
11) init.d: fix double vlan tag disable from UI.<br>
12) init.d: rewrite logic for ipv6 suppor (need write logic for more modes support).<br>
13) init.d: add base rules for upnpv6 pinholes.<br>
14) init.d: radvd,dhcpv6: read dns server from uplink if recived.<br>
15) igmpproxy: lan snoping: fix infinitive loop if find unused endtry.<br>
16) igmpproxy: wifi snoping: fix manipulate snooping records in wifi drivers, and mac lookup.<br>
17) goahead: add base webUI for ipv6 configure (need write logic for more modes support).<br>
18) goahead: add replace RWFS (/etc folder) by webui (full or different components).<br>
19) goahead: add dhcpv6 server control in misc.<br>
20) goahead: fix add portforward rules (syntax compat with new iptables fix).<br>
21) openssl up to 0.9.8zc version.<br>
23) apps: port wive-dhcpv6 (need write client logic, server logic work good).<br>
24) apps: add and use sambav3 for > 4Mb flash sizes images.<br>
25) apps: dropbear: up to 2014.66 version.<br>
26) apps: miniupnpd: add ipv6 support if configured.<br>
27) apps: ppp,busybox,miniupnpd: build with no strict aliasing (safe build with new compilers).<br>
28) libs: add libnfnetlink (need for ipv6 miniupnpd support).<br>
29) miniupnpd: version up to 1.8.20141022.<br>
30) busybox: apply lzop upstream patch (zcat suspended - break depmod).<br>
31) kernel: link time optimization.<br>
32) kernel: hash speed optimization.<br>
33) kernel: add autodetect ramsize support.<br>
34) kernel: ralink hw_nat: correct ppe work at revH (206 PPE).<br>
35) kernel: ralink hw_nat: skip mark and imq target from PPE.<br>
36) kernel: ralink hw_nat: webstr target fix from PPE.<br>
37) kernel: ralink hw_nat: pass workloads in PPE for some cases.<br>
38) kernel: ralink hw_nat: foe header in some cases.<br>
39) kernel: ralink hw_nat: show destination port on PpeHitBindForceToCpuHandler failed.<br>
40) kernel: hw_nat, raeth: MT762x external switch control improvements.<br>
41) kernel: hw_nat, raeth: reinit PPE engine after FE reset (RT3x5x/RT3883), reset PPE engine on FE reset (MT762x).<br>
42) kernel: ralink wifi: fix some ATE issues.<br>
43) kernel: ralink wifi: use my version mcast filter table and backport small snooping fixes from 4.x.x driver.<br>
44) kernel: ralink wifi: prevent skb double free in igmp_snoop processiong.<br>
45) kernel: ralink wifi: workaround for stop tx if client not correct disconnect.<br>
46) kernel: ralink wifi: rx/tx optimization (remove stupid wrappers in time critical code).<br>
47) kernel: fastroute/fastnat: implement for new kernel.<br>
48) kernel: fastroute/fastnat: optimization skip logic.<br>
49) kernel: rewrite min3, max3 and clamp using min and max.<br>
50) kernel: fix compat with new gcc compiler versions.<br>
51) kernel: arp at media state change send arp broadcast packet for arp table update(fix issue with some radio and switches).<br>
52) kernel: arp: do not perturb drop profiles with ignored ARP packets.<br>
53) kernel: arp: make arp_invalidate static.<br>
54) kernel: sit: fix ipip6_tunnel_lookup device matching criteria.<br>
55) kernel: skbuff: fix ftrace handling in skb_unshare.<br>
56) kernel: packet: handle too big packets for PACKET_V3.<br>
57) kernel: lro: remove dead code.<br>
58) kernel: jiffies: fix timeval conversion to jiffies.<br>
59) kernel: futex: Unlock hb->lock in futex_wait_requeue_pi() error path.<br>
60) kernel: locking/mutexes: Optimize mutex trylock slowpath.<br>
61) kernel: fix nasty 32-bit overflow bug in buffer i/o code.<br>
62) kernel: xhci: fix null pointer dereference if xhci initialization fails.<br>
63) kernel: usb: host: xhci: fix compliance mode workaround.<br>
64) kernel: storage: add single-LUN quirk for Jaz USB adapter.<br>
65) kernel: softirq: reduce latencies.<br>
66) kernel: 8021q: fix vlan device to inherit the unicast filtering capability flag.<br>
67) kernel: netfilter: conntrack: disable generic tracking for known protocols.<br>
68) kernel: netfilter: nf_conntrack: remove dead code.<br>
69) kernel: netfilter: push reasm skb through instead of original frag skbs.<br>
70) kernel: mips: fix jump label support.<br>
71) kernel: mips: modules: rellocate for prevent long call.<br>
71) kernel: mips: Use inline function to access current thread pointer.<br>
72) kernel: mips: Improve atomic.h robustness.<br>
73) kernel: mips: vmlinux.lds.h: Allow architectures to add sections to the front of .bss.<br>
74) kernel: mips: Align swapper_pg_dir to 64K for better TLB Refill code.<br>
75) kernel: mips: R4k clock source initialization bug fix.<br>
76) kernel: mips: Discard .eh_frame sections in linker script.<br>
77) kernel: mips: mcount: Adjust stack pointer for static trace in MIPS32.<br>
78) kernel: mips: O32/32-bit: Fix bug which can cause incorrect system call restarts.<br>
79) kernel: af_unix: fix a fatal race with bit fields.<br>
80) kernel: unix/dgram: peek beyond 0-sized skbs.<br>
81) kernel: unix/dgram: fix peeking with an offset larger than data in queue.<br>
82) kernel: unix/stream: fix peeking with an offset larger than data in queue.<br>
83) kenrel: route: Remove redirect_genid<br>
84) kernel: net: only use a single page of slop in MAX_SKB_FRAGS.<br>
85) kernel: net: pack skb_shared_info more efficiently.<br>
86) kernel: net: use consume_skb() in place of kfree_skb().<br>
87) kernel: net: optimize csum_replace2().<br>
88) kernel: net: optimise csum_replace4().<br>
89) kernel: net: optimise inet_proto_csum_replace4().<br>
90) kernel: net: skbuff: const-ify casts in skb_queue_* functions.<br>
91) kernel: net: remove function sk_reset_txq().<br>
92) kernel: net: Use consume_skb() to free gso segmented skb.<br>
93) kernel: net: remove redundant code in dev_hard_start_xmit().<br>
94) kernel: net: core: let skb_partial_csum_set() set transport header.<br>
95) kernel: net: cacheline adjust struct netns_frags, inet_frags and inet_frag_queue for better frag performance.<br>
96) kernel: net: compute skb->rxhash if nic hash may be 3-tuple.<br>
97) kernel: net: make skb_gso_segment error handling more robust.<br>
98) kernel: ipv[4|6]: correct dropwatch false positive in local_deliver_finish.<br>
99) kernel: ipv4: igmp: fix v3 general query drop monitor false positive.<br>
100) kernel: ipv4: consistent reporting of pmtu data in case of corking.<br>
101) kernel: ipv4: fix ip header ident selection in __ip_make_skb().<br>
102) kernel: ipv4: fix ip_send_skb().<br>
103) kernel: ipv4: fix buffer overflow in ip_options_compile().<br>
104) kernel: ipv4: Cache ip_error() routes even when not forwarding.<br>
105) kernel: ipv4: distinguish EHOSTUNREACH from the ENETUNREACH.<br>
106) kernel: ipv4: ip_forward: perform skb->pkt_type check at the beginning.<br>
107) kernel: ipv4: arp: update neighbour address when a gratuitous arp is received and arp_accept is set.<br>
108) kernel: ipv4: revert: use a 64bit load/store in output path (profit on x86_64 only).<br>
109) kernel: ipv6: remove aca_lock spinlock from struct ifacaddr6.<br>
110) kernel: ipv6: Do not warn for informational ICMP messages, regardless of type.<br>
111) kernel: ipv6: removed unused inet6 address state.<br>
112) kernel: ipv6: remove unused function ipv6_inherit_linklocal().<br>
113) kernel: l2tp: fix race while getting PMTU on PPP pseudo-wire.<br>
114) kernel: l2tp: exclude session versions check if l2tp v3 support not builded (small speedup).<br>
115) kernel: l2tp: remove debug in in time critical code (small speedup).<br>
116) kernel: tcp: fix ooo_okay setting vs Small Queues.<br>
117) kernel: tcp: md5: remove unneeded check in tcp_v4_parse_md5_keys.<br>
118) kernel: tcp: make tcp_cwnd_application_limited() static.<br>
119) kernel: tcp: do not leak non zero tstamp in output packets.<br>
120) kernel: tcp: reduce the bloat caused by tcp_is_cwnd_limited().<br>
121) kernel: tcp: use zero-window when free_space is low.<br>
122) kernel: tcp: optimize some skb_shinfo(skb) uses.<br>
123) kernel: tcp: remove redundant code in __tcp_retransmit_skb().<br>
124) kernel: tcp: remove the sk_can_gso() check from tcp_set_skb_tso_segs().<br>
125) kernel: tcp: tcp_transmit_skb() optimizations.<br>
126) kernel: tcp: Always set options to 0 before calling tcp_established_options.<br>
127) kernel: tcp: tcp_tso_segment() small optimization.<br>
128) kernel: tcp: make tcp_clear_md5_list static.<br>
129) kernel: increase rwfs size for 8Mb devices to 512kb (prepare for add custom webui upload to rwfs).<br>
<br>
<br>
<b>0.3x.x</b><br>
1) build system: ppp,miniupnpd and busybox build with -fno-strict-aliasing for safe build with new gcc.<br>
2) build system: xz tool up to 5.0.7 version.<br>
3) build system: xz tune rootfs pack for decrease image size.<br>
4) build system: toolchain: update gcc to 4.8.4(svn up version).<br>
5) radvd: up to 2.8 version.<br>
6) miniupnpd up to: 1.9 version.<br>
7) igmpproxy: add igmpv3 support and cleanup.<br>
8) goahead: remove bogus double restart ripd/zebra.<br>
9) goahead: remove dead mesh support.<br>
10) pppd: cap MTU to the user configured value.<br>
11) init.d: fix reinit switch (now support internal esw only).<br>
12) init.d: enable multicast2unicast in wifi drivers only if igmpproxy enabled.<br>
13) init.d: move dhcpv6 client start to wan config.<br>
14) init.d: use ISP DNS ipv6 servers for local resolv if recived.<br>
15) init.d: ipv6: need check ipv4 adress on wan only in tunneling modes.<br>
16) init.d: fix pcp/nat-pmp control port accept from lan.<br>
17) init.d: fix get wan_if for IPv6<br>
18) init.d: move ipv6 config and radvd/dhcp6s start in S20six script.<br>
19) init.d: more remove init at goahead dependency.<br>
20) init.d: rearrange first step config for more linear boot.<br>
21) init.d: flush only scope route at deconfig ipv6.<br>
22) init.d: more safe samba restart.<br>
23) init.d: add /etc/script/switchadv.sh hook for advanced switch (vlan/portmap/etc) configure.<br>
24) init.d: rework config-switch.sh (cleanup and more direct steps configs).<br>
25) kernel: use the deterministic mode of AR if available.<br>
26) kernel: periodically refresh ralink watchdog from net/core/dev (prevent reboot at very high load).<br>
27) kernel: skip fastnat/fastroute from mark/connmark.<br>
28) kernel: add missing linux/prefetch.h include to net/core/sock.c.<br>
29) kernel: shmem: fix nlink for rename overwrite directory.<br>
30) kernel: fs: namespace: suppress 'may be used uninitialized' warnings.<br>
31) kernel: nfsd: Fix ACL null pointer deref.<br>
32) kernel: softirq: use const char * const for softirq_to_name, whitespace neatening.<br>
33) kernel: mtd: mtd_blkdevs: Replace request handler kthread with a workqueue.<br>
34) kernel: mtd: merge mtdchar module with mtdcore.<br>
35) kernel: mtd: introduce mtd_block_isreserved().<br>
36) kernel: mtd: account for BBT blocks when a partition is being allocated.<br>
37) kernel: mtd: correct upper bounds check for mtd_*() APIs.<br>
38) kernel: mtd: mtdchar: return expected errors on mmap() call.<br>
39) kernel: mtd: mtdchar: handle chips that have user otp but no factory otp.<br>
40) kernel: mtd: mtd_blkdevs: handle REQ_FLUSH request and do explicit flush of writeback buffer.<br>
41) kenrel: mtd: cfi_cmdset_0002: allow retry/timeout loop to exit.<br>
42) kernel: squashfs: sanity check information from disk.<br>
43) kernel: squashfs: fix corruption check in get_dir_index_using_name().<br>
44) kernel: squashfs: fix corruption checks in squashfs_lookup().<br>
45) kernel: squashfs: fix corruption checks in squashfs_readdir().<br>
46) kenrel: squashfs: revert bogus commit from OpenWRT tree.<br>
47) kernel: pptp: use for_each_set_bit_from.<br>
48) kernel: pptp: fix sparse pointer warning.<br>
49) kernel: pptp: fix byte order warnings.<br>
50) kernel: raeth: always skb_pad in xmit path (fix stop PPPE work at wifi offload + PPPOE uplink).<br>
51) kernel: raeth: optimize skb_shinfo(skb) uses.<br>
52) kernel: raeth: use RAETH_DEBUG from kernel config.<br>
53) kernel: raeth: add support NAPI and enable by default (speedup).<br>
54) kernel: raeth: fetch pending FE counters before FE reset.<br>
55) kernel: raeth: properly reset irq status on softirq exit.<br>
56) kernel: netfilter: nf_conntrack: flush net_gre->keymap_list only from gre helper.<br>
57) kernel: netfilter: nf_defrag_ipv6.o included twice.<br>
58) kernel: netfilter: nf_conntrack: avoid large timeout for mid-stream pickup.<br>
59) kernel: ipv4: igmp: fix v3 general query drop monitor false positive.<br>
60) kernel: ipv4: raise IP_MAX_MTU to theoretical limit.<br>
61) kernel: ipv6: reuse ip6_frag_id from ip6_ufo_append_data.<br>
62) kernel: sched: rework check_for_tasks().<br>
63) kernel: net: loopback: set default mtu to 64K.<br>
<br>
<br>
<b>0.4x.x</b><br>
1) defaults: init.d: fix work ipv6 on some devices if igmp snooping disabled.<br>
2) goahead: rearrange services in misc pages for more usefull.<br>
3) init.d: cleanup and optimize (next step).<br>
4) init.d: add static routes for all resolved vpn server adresses.<br>
5) init.d: remove web_wait logic, not more need and unused some time.<br>
6) init.d: vpnhelper: direct set iface name in static routes to vpn servers.<br>
7) busybox: udhcpc: allow unicast RENEW for lease time from 60s, allow first unicast RENEW on force renew performed (fix short leases under ISP with DHCP snooping).<br>
8) kernel: irq: consolidate do_softirq() arch overriden implementations.<br>
9) kernel: irq: optimize call to softirq on hardirq exit.<br>
10) kernel: irq: improve a bit softirq debugging.<br>
11) kernel: irq: justify the various softirq stack choices.<br>
12) kernel: irq: optimize softirq stack selection in irq exit.<br>
13) kernel: irq: ensure irq_exit() code runs with interrupts disabled.<br>
14) kernel: irq: sanitize invoke_softirq.<br>
15) kernel: irq: force hardirq exit's softirq processing on its own stack.<br>
16) kernel: irq: don't re-enable interrupts at the end of irq_exit.<br>
17) kernel: irq: remove IRQ_EXIT_OFFSET workaround.<br>
18) kernel: softirq: remove support for triggering softirq work on softirqs patch.<br>
19) kernel: softirq: use ffs() in __do_softirq().<br>
20) kernel: genirq: correct fuzzy and fragile IRQ_RETVAL() definition.<br>
21) kernel: lockdep: correctly annotate hardirq context in irq_exit().<br>
22) kernel: printk/cache: mark printk_once test variable __read_mostly.<br>
23) kernel: printk: add printk_deferred_once.<br>
24) kernel: kprobes: make hash_64() as always inlined.<br>
25) kernel: sections: fix const sections for crc32 table.<br>
26) kernel: ipv6: store Router Alert option in IP6CB directly.<br>
27) kernel: linux/kernel.h: DIV_ROUND_CLOSEST add support negative dividends (and depends).<br>
28) kernel: mm: mark mm-inline functions as __always_inline.<br>
29) kernel: mips: fix strnlen_user() return value in case of overlong strings.<br>
30) kernel: mcast: define and use MRT[6]_MAX in ip[6]_mroute_opt().<br>
31) kernel: sched: fix the theoretical signal_wake_up() vs schedule() race.<br>
32) kernel: fix lockup related to stop_machine being stuck in __do_softirq.<br>
33) kernel: raeth: fix NAPI race issue.<br>
34) kernel: raeth: ack all not RX/TX interrupts before enter to NAPI poll mode.<br>
35) kernel: net/core: make GRO/napi_frags_skb() methods static.<br>
36) kernel: net: add ETH_P_802_3_MIN.<br>
37) kernel: net: skbuff: Use ALIGN macro instead of open coding it.<br>
38) kernel: net: dont use ifindices in hash fns.<br>
39) kernel: net: reset mac header in dev_start_xmit().<br>
40) kernel: ipv4: Do not cache routing failures due to disabled forwarding.<br>
41) kernel: netfilter: nf_conntrack: constify sk_buff argument to nf_ct_attach().<br>
<br>
<br>
<b>0.5x.x</b><br>
1) init.d: dnsmasq: increase cache size and allowen forward per one time limit.<br>
2) init.d: optimize get parametrs from nvram (more variable always avail by call global script).<br>
3) init.d: cleanup and optimize wifi/apcli init logic.<br>
4) init.d: remove old unused hacks.<br>
5) init.d: fix apcli mode connect after apply before reboot.<br>
6) init.d: always tune wifi after ifacse up.<br>
7) init.d: tune parametrs for apcli to.<br>
8) init.d: do not use goahead.pid as boot complete flag, use /tmp/goodboot instead (more independed from goahead logic).<br>
9) init.d: rework cdp-send start.<br>
10) init.d: in ap/apcli bridge mode enable Multicast2Unicast independed Igmpproxy enabled.<br>
11) apps: add lldpd daemon and control tools.<br>
12) miniupnpd: up to version 1.9.20141108.<br>
13) goahead: fix print error messages at update fw/restore settings/load rwfs.<br>
14) goahead: read lan/wan ifnames from /tmp/*an_if_name exported by init.d in global script.<br>
15) goahead: fix get mode vpn.<br>
16) goahead: add show real ip adress vpn/wan in status page.<br>
17) kernel: lockdep: fix oops in processing workqueue.<br>
18) kernel: workqueue: change BUG_ON() to WARN_ON().<br>
19) kernel: workqueue: don't use WQ_HIGHPRI for unbound workqueues.<br>
20) kernel: raeth: disable TSO for rev <207 (rev206 has TSO bug to).<br>
21) kernel: raeth: use DLY_INT (with aggregate up to 2 INT and max 40us delay) for NAPI (decrease CPU usage on medium FE load).<br>
22) kernel: raeth: add support independent TX rings (w/o cross lock) for 2xRGMII mode (RT3883/MT7621).<br>
23) kernel: raeth: improvements for external switch case, move stats update from softirq to workqueue.<br>
24) kernel: ralink_wifi: fix apscan support.<br>
25) kernel: ralink_wifi: update eeprom array in driver.<br>
26) kernel: ralink_wifi: patch fix dhcp issue on new Apple and others buggy clients (use RATE_6 instead of 24).<br>
27) kernel: ralink_wifi: fia and enable decrease interference effects logic (dynamicvga and friends).<br>
28) kernel: net: sysctl: set frto=2, bug TCP: snd_cwnd is null http://patchwork.ozlabs.org/patch/234793/<br>
29) kernel: net: apply http://patchwork.ozlabs.org/patch/234793/ fix (in future need backport new FRTO code).<br>
30) kernel: net: fastnat/fastroute: use ip_route_input_noref(), to avoid 4 atomic ops per packet.<br>
31) kernel: net: fix network-related panic in Linux 3.2.63 and later (CVE-2014-7207).<br>
32) kernel: net: ipv[46] - Remove 2 unnecessary NETDEBUG OOM messages.<br>
33) kernel: ipv6: mld: fix add_grhead skb_over_panic for devs with large MTUs.<br>
<br>
<br>
<b>1.0.x</b><br>
1) init.d: optimize and small fix switch and offload configure.<br>
2) init.d: add shortname for LAN (need to lldpd daemon for hostname resolutions).<br>
3) init.d: automount.sh: fix check cold boot.<br>
4) goahead: fix swith from/to apcli with apcli bridge only modes.<br>
5) igmpproxy: auto enable Multicast2Unicast in wifi driver at first request.<br>
6) igmpproxy: fix wifi igmp records managment.<br>
7) kernel: mm: page-writeback: inline account_page_dirtied() into single caller.<br>
8) kernel: ipv4: fix nexthop attlen check in fib_nh_match.<br>
9) kernel: hw_nat: spin_(un)lock must be Bottom Halve (prevent deadlock).<br>
10) kernel: ralink wifi: decrease life check packets count, decrease life time and check interval for more speed cleanup died clients.<br>
11) kernel: ralink wifi: add lost increment retry count in jam traffic detect path.<br>
12) kernel: ralink wifi: backport unify jam traffic detect logic from v4 drivers.<br>
13) kernel: ralink wifi: decrease tx ring size (set 64 instead of 128).<br>
14) kernel: ralink wifi: limit to 16 numbers of mcast packets in normal/ps queue.<br>
15) kernel: raeth: fix raise spurious interrupts.<br>
16) kernel: fastroute: increase CB offcet (found used offset 41 in wifi drivers).<br>
<br>
<br>
<b>1.1.x</b><br>
1) init.d: fix diable offloads in bridged modes.<br>
2) init.d: fix LLLLL config for bridget modes.<br>
3) init.d: fix LLLWW config.<br>
4) init.d: fix kext switch workaround.<br>
5) init.d: in bridged mode direct enable Multicast2Unicast in wifi drivers independed by igmpproxy enable.<br>
10) sysctl: tune defaults more optimal for 64Mb ram devices.<br>
11) igmpproxy: rework snooping managment code (temp disable static records managent).<br>
12) buildsystem: small cleanup and more safe gcc flags use for wireless modules (driver code in some cases ugly and mabe uncrorrect build with this options).<br>
13) kernel: ralink wifi: fix m2u filter table. Add MDNS and fix IgmpV3 filter.<br>
14) kernel: tcp: limit GSO packets to half cwnd.<br>
15) kernel: fix misuses of f_count() in ppp.<br>
16) kernel: mips: jump_label.c: Correct the span of the J instruction.<br>
17) kernel: mips: jump_label.c: Handle the microMIPS J instruction encoding.<br>
<br>
<br>
<b>1.2.x</b><br>
1) init.d/genkeys: remove not need sleep (move to goahead boot complite).<br>
2) init.d/dnsserv: correct steps generate hosts.<br>
3) init.d/lanconf: remove not needed swicth clear call.<br>
4) init.d/goahead: add vlan support for bridge port TV/SIP/STB modes.<br>
5) init.d/goahead: add 3WAN/2LAN modes for STB+SIP bridget ports mode.<br>
6) init.d/goahead: add get mcast from VLAN TV/SIP/STB bridges.<br>
7) init.d/goahead: move delayed backup from goahead to init.d web script.<br>
8) init.d/goahead: add M2U conversion managment.<br>
9) init.d/l2tpsrv: fix masqrade rule add.<br>
10) goahead: use mtd_write erase RW-FS instead of direct crash rwfs.<br>
11) goahead: cleanup dead code and fix debug.<br>
12) igmpproxy: ignore igmpv3 block_old_sources<br>
13) miniupnpd: up to 1.9.20141128 version.<br>
14) kernel: bridge: implement multicast fast leave.<br>
15) kernel: bridge: add support multicast-to-unicast (M2U) conversion.<br>
16) kernel: ralink ehci/ohci: improve host mode init.<br>
17) kernel: ralink_wifi: disable igmp snooping and mcast rate specific.<br>
18) kernel: ralink_wifi: fix SGI use/indication in rate_ctl.<br>
19) kernel: mips: oprofile: Fix backtrace on 64-bit kernel.<br>
20) kernel: mips: fix address type used for early memory detection.<br>
21) kernel: mips: lib: memset: Use macro to build the __bzero symbol.<br>
22) kernel: mips: lib: memset: Add EVA support for the __bzero function.<br>
23) kernel: pptp: fix stack info leak in pptp_getname().<br>
24) kernel: random: add and use memzero_explicit() for clearing data.<br>
25) kernel: mm/memory.c: use entry = ACCESS_ONCE(*pte) in handle_pte_fault().<br>
26) kernel: mm/page_alloc: add unlikely macro to help compiler optimization.<br>
27) kernel: mm/mempolicy: remove per-process flag.<br>
28) kernel: ppp: build ppp* as static (sligth optimize performance, small increase ram usage).<br>
29) kernel: enchane sections speed hack(fastpathsys ~2% cpu free).<br>
30) kernel: ipv4: Make IP_MULTICAST_ALL and IP_MSFILTER work on raw sockets.<br>
31) kernel: apply optimize_mips_memcpy_memset_cache.<br>
32) kernel: ralink spi: allow set FAST/DOR/DIOR from kernel config, support DOR on Macronix chips.<br>
33) kernel: bridge: fix netfilter/NF_BR_LOCAL_OUT for own, locally generated queries.<br>
34) kernel: bridge: send query as soon as leave is received.<br>
35) kernel: bridge: multicast: enable snooping on general queries only.<br>
36) kernel: bridge: multicast: allow leave and fast_leave for M2U records.<br>
37) kernel: disable IPv6 offload for SDRAM memory devices (4Mb FLASH samples).<br>
<br>
<br>
<b>1.3.x</b><br>
1) toolchain: sync with 4.8.4 gcc svn version (after 4.8.3 release 4.8 tree apply only bugfixes).<br>
2) toolchain: kernel headers up 02.12.2014.<br>
3) toolchain: rebuild for 32bit hosts (need for prebuildede build compat).<br>
4) miniupnpd: up to 1.9.20141204 version.<br>
5) xl2tpd: up to Nov 26, 2014 git version.<br>
6) kernel: update to 3.4.105.<br>
7) kernel: ralink_wifi: update to 2.7.2.0/2.6.2.0 (20140820) AP/STA drivers.<br>
8) kernel: ralink_wifi: add support 64 bit interface counters.<br>
9) kernel: ralink_wifi: backport ApCliRcvBeaconTime fix from 3.x.x.x driver.<br>
10) kernel: raeth: ppe: move hoocks to raeth instead off external code if raeth static build (more consistent code generate).<br>
11) kernel: raeth: move raeth up in link order place (mast be before ppp and wireless modules for more consistent code generate).<br>
12) kernel: net: pppoe: missed check for destination addr in PADT frame processing.<br>
13) kernel: net: core: Remove redundant call to nf_reset in dev_forward_skb.<br>
14) kernel: net: skbuff: reduce struct size if nf_trace disable.<br>
15) kernel: net: exclude skb_recycle code from real build, small codesize reduce.<br>
16) kernel: net: revert route cache garbage collector changes introdused in 3.4.105 (~5% speed regression after this changes).<br>
<br>
<br>
<b>2.0.x</b><br>
1) init.d/goahead: add codel auto qos mode support in WebUI.<br>
2) init.d/goahead: remove simple tos based qos support(use port based or codel instead for).<br>
3) miniupnpd: up to 1.9.20141209 version.<br>
4) igmpproxy: fix init mrDesc.<br>
5) igmpproxy: fix client record find in rt switch table.<br>
6) kernel: arch/ralink: fix mem autodetect if highmem support disabled(limit to 256Mb).<br>
7) kernel: introduce and use generic init task.<br>
8) kernel: mips: backport some upstream fixes.<br>
9) kernel: irq: disallow commit to random entropy pool from every irq(decrease latency).<br>
10) kernel: sched: remove extra static_key*() function indirection.<br>
11) kernel: enable BQL/DQL by default for 8Mb flash with DDR RAM devices(decrease latency).<br>
12) kernel: fastpath: cleanup and small optimize.<br>
13) kernel: inetdevice: fixed signed integer overflow.<br>
14) kernel: neigh: remove dynamic neigh table registration support.<br>
15) kernel: lib/idr: update to current 3.18 tree (compat mode).<br>
16) kernel: net/raeth: small cleanup.<br>
17) kernel: net: avoid to hang up on sending due to sysctl configuration overflow.<br>
18) kernel: net: ipmr: limit MRT_TABLE identifiers.<br>
19) kernel: net: net_sched: backport codel/fq_codel from 3.17 kernel tree.<br>
20) kernel: net: performance fix for process_backlog.<br>
21) kernel: net: reduce net_rx_action() latency to 2 HZ.<br>
22) kernel: net: remove wrong initialization for snd_wl1.<br>
23) kernel: pkt_sched: avoid requeues if possible.<br>
24) kernel: net_sched: more precise pkt_len computation.<br>
25) kernel: net_sched: better precise estimation on packet length for untrusted packets.<br>
26) kernel: tcp: allow for bigger reordering level.<br>
27) kernel: tcp: fix possible NULL dereference in tcp_vX_send_reset().<br>
28) kernel: tcp: tcp_make_synack() consumes dst parameter.<br>
29) kernel: tcp: remove unused tw_cookie_values from tcp_timewait_sock.<br>
30) kernel: tcp: remove TCPCT.<br>
31) kernel: tcp: use TCP_SKB_CB(skb)->tcp_flags in input path.<br>
32) kernel: tcp: use tcp_flags in tcp_data_queue().<br>
33) kernel: tcp: do not copy headers in tcp_collapse().<br>
34) kernel: tcp: remove bad timeout logic in fast recovery.<br>
35) kernel: tcp: be more strict before accepting ECN negociation.<br>
36) kernel: tcp: RFC6298 supersedes RFC2988bis.<br>
37) kernel: tcp: Increase timeout for SYN segments.<br>
38) kernel: tcp: ecn: dont delay ACKS after CE.<br>
39) kernel: tcp: Remove redundant code entering quickack mode.<br>
40) kernel: ipv4: gso: send_check() & segment() cleanups.<br>
41) kernel: ipv6: fix 'inet6_rtm_getroute' to release 'rt->dst' in case of 'alloc_skb' failure.<br>
42) kernel: ipv6: gso: remove redundant locking.<br>
43) kernel: netfilter: cttimeout: fix buffer overflow.<br>
44) kernel: netfilter: nf_conntrack: add nf_ct_timeout_lookup.<br>
<br>
<br>
<b>2.1.x</b><br>
1) toolchain: update kernel headers and gcc up to 4.8.4 release.<br>
2) busybox: update to 1.23.0 version.<br>
3) busybox: sync with upstream (busybox-1.23.0-ash.patch, busybox-1.23.0-modprobe.patch, busybox-1.23.0-vi.patch).<br>
4) busybox: downgrade zcip code to 1.22.x version(easy fix new gcc issue, need rewrite later).<br>
5) busybox: fix create char device /dev/mtdX as block device (child for /dev/mtdblockX).<br>
6) xz: up to 5.0.8 version.<br>
7) uboot: update to last version.<br>
8) reg tool: small fixup.<br>
9) mii tool: fixup and add 7628 support.<br>
10) gpio tool: fix 9532 mode support.<br>
11) nvram lib: do not direct read from flash at show.<br>
12) nvram tool: fix generate wifi config.<br>
13) switch tool: add igmp snooping managment.<br>
14) hw_nat: FoE entry range check, entry valid check.<br>
15) pppd: fix segfault pppol2tp plugin on IPv6 disabled (broken L2TP).<br>
16) xupnpd: update to 403r.<br>
17) xupnpd: lua: update to 5.3.0 version.<br>
18) init.d: more enchange esw/vlan config logic.<br>
19) init.d: ipv6: only tunnel mode need full deconfig in some situations.<br>
20) init.d/goahead: add support native ipv6 with dhcp client mode.<br>
21) dhcp6c: fix duid generate for WAN (temp hack, add read from commandline in future).<br>  
22) radvd: update to 2.10 version.<br>
23) kernel: ralink: prepare 7621 support.<br>
24) kernel: ralink_spi: add N25Q256A and MT25QL512AB support.<br>
25) kernel: ralink spi: fix write after unprotect bits clear, fix Winbond quad mode.<br>
26) kernel: ralink_gpio: switch to schedule_work.<br>
27) kernel: ralink_gpio: fix 9532 mode support.<br>
28) kernel: ralink_gpio: disable unused interfaces for use more gpio pins.<br>
29) kernel: ralink_wifi: add drivers for 7610/76x2 pci-e chips.<br>
30) kernel: ralink_wifi: fix support 7650 chips.<br>
31) kernel: raeth: add 802.3az EEE control for MT7620 ESW, disable EEE by default for all PHY.<br>
32) kernel: ralink ehci: add workaround for embedded synopsys host controller.<br>
33) kernel: ralink arch: add MT7621 xHCI platform device, add MT7621/MT7628 UPHY calibration.<br>
34) kernel: ralink arch: usb: xhci: add support MT7621 xHCI HC.<br>
35) kernel: netfilter: nf_conntrack: allow server to become a client in TW handling.<br>
36) kernel: netfilter: conntrack: avoid zeroing timer.<br>
37) kernel: net: rearrange loop in net_rx_action.<br>
38) kernel: net: gro: GRO_MERGED_FREE consumes packets.<br>
39) kernel: net: gro: fix a potential crash in skb_gro_reset_offset.<br>
40) kernel: net: gro: dev_gro_receive() cleanup.<br>
41) kernel: net: gro: avoid double copy in skb_gro_receive().<br>
42) kernel: net: skbuff: don't zero tc members when freeing skb.<br>
43) kernel: net_dma: simple removal (broken and not used).<br>
44) kernel: net_dma: revert copied_early.<br>
45) kernel: ipv4: dst_entry leak in ip_send_unicast_reply().<br>
46) kernel: mm: fix swapoff hang after page migration and fork.<br>
47) kernel: tun: fixed unsigned/signed comparison.<br>
48) kernel: ipv6: stop sending PTB packets for MTU < 1280.<br>
<br>
<br>
<b>2.2.x</b><br>
1) build_system: add some variants for 7620 based dual band.<br>
2) libevent: up to 2.0.22 version.<br>
3) openssl up to 0.9.8ze version.<br>
4) nvram: add VHT parametrs for AC module.<br>
5) igmpproxy: optimize retry timeouts.<br>
6) init.d/goahead: add select mode 2.4GHz/5GHz for mbssid/apcli/wds extensions.<br>
7) goahead: boost ipaddress buffer size.<br>
8) goahead: tune default parametrs (increase preallocated bufferss and others).<br>
9) goahead: webui: add allow acess to lan from internet by ipv6 option.<br>
10) goahead: webui: rearrange some parametrs (more consistent).<br>
11) goahead: fix apply netfilter rules in some situations.<br>
12) goahead: fix redirect submit-url issue (may be crash or not correct redirects).<br>
13) goahead: fix selected STA disconnect for dual band in connected client list.<br>
14) goahead: fix green ap mode in WebUI.<br>
15) goahead: fix channel autoselect for 5GHz.<br>
16) goahead: add support AC modes in connected client list.<br>
17) goahead: add band 2.4/5GHz highlighting in connected client list.<br>
18) goahead: add 5GHz band network mode/name parametrs.<br>
19) goahead: add 5GHz band network central channel parametr.<br>
20) goahead: add VHT mode parametrs for AC module in WebUI.<br>
21) kernel: ralink arch: add support SD/MMC driver for MT7620/MT7621/MT7628.<br>
22) kernel: net: skb_share_check() should use consume_skb().<br>
23) kernel: mips: irq: fix disable_irq on CPU IRQs.<br>
24) kernel: mips: fix restart of indirect syscalls.<br>
25) kernel: mips: fix kernel lockup or crash after CPU offline/online.<br>
26) kernel: mips: remove race window in page fault handling.<br>
<br>
<br>
<b>2.3.x</b><br>
1) toolchain: gcc up to 4.8.5-20150129 (after 4.8.4 only backport fixes).<br>
2) dropbear: up to 2015.67 version.<br>
3) eth_mac: add support wlan/wlan2 mac managment.<br>
4) apps: add iw tool to build tree.<br>
5) kernel: up to 3.4.106 version.<br>
6) kernel: ralink_wifi: up 7610 driver to 3.0.0.8 version.<br>
7) kernel: ralink_wifi: fix ate work in extpa/extlna mode.<br>
8) kernel: sched/completion: add lock-free checking of the blocking case.<br>
9) kernel: mips: allow MIPS_CPU_SCACHE to be used with different line sizes.<br>
10) kernel: mips: smp-mt,smp-cmp: Enable all HW IRQs on secondary CPUs.<br>
11) kernel: mips: mt: proc: Add support for printing VPE and TC ids.<br>
12) kernel: mips: synchronize MIPS count one CPU at a time.<br>
13) kernel: mips: vpe.c: Fix null pointer dereference in print arguments.<br>
14) kernel: mips: remove gic_{enable,disable}_interrupt().<br>
15) kernel: mips: gic: remove gic_{pending,itrmask}_regs.<br>
16) kernel: mips: gic: remove platform irq_ack/irq_eoi callbacks.<br>
17) kernel: mips: gic: implement commit MIPS: IRQ: Fix disable_irq on CPU IRQs.<br>
18) kernel: mips: gic: fix gic_set_affinity() return value.<br>
19) kernel: pci: fix P2P bridge I/O port window sign extension.<br>
20) kernel: pci/portdrv: remove warning about invalid IRQ for hot-added PCIe ports.<br>
21) kernel: ipv4: remove output route check in ipv4_mtu.<br>
22) goahead: do not set FixedTxMode if MCS not limited/auto.<br>
23) goahead: hide some VHT options for parametrs fixed at 1T1R.<br>
24) goahead: split disable wifi modules, TxPower parametrs by band.<br>
25) goahead: move select band for ViF modes from advanced to basic.<br>
26) goahead: fix infinitive loop with high cpu usage in websGetInput.<br>
27) goahead: fix potentional security issue (extend path check in url req handler).<br>
28) goahead: fix info leak in socket reuse code.<br>
29) goahead: fix return web error code in some case.<br>
30) goahead: limit request ring length.<br>
31) init.d: add change wlan/wlan2 macs in factory.<br>
<br>
<br>
<b>2.4.x</b><br>
1) build_system: add test targets for usb devices.<br>
2) libcurl: up to 7.40.0 version.<br>
3) libnvram: fix small memleak, full code review and cleanup.<br>
4) transmission: up to 2.84.<br>
5) ethtool: disable build vendors extensions (decrease size).<br>
6) apps: add fuse ntfs-3g (2014.2.15).<br>
7) init.d: cheanup and refactor checkconf, remove unneded backup nvram and others.<br>
8) dhcpv6: add read ifname for duid generatr from /tmp/wan_if_name exported from init.d.<br>
9) kernel: exfat: add module alias for fix automount.<br>
10) kernel: ipv6: fix ipv6_cow_metrics for non DST_HOST case.<br>
11) kernel: pci: leave MEM and IO decoding disabled during 64-bit BAR sizing, too.<br>
12) kernel: fix broken MT7621 USB PHY calibration (SDK bug).<br>
13) kernel: MT7620/MT7621/MT7628 SD/MMC driver cleanup, fix unload module with debug enabled.<br>
14) kernel: ralink arch: update MT7621 code.<br>
<br>
<br>
<b>TODO:</b><br>
1) port support l2tp/pptp hardware NAT offload (really needed??? in sdk very ugly code).<br>
2) full russian ui (need help community or employ the web developer).<br>
<br>
<br>
<br>
