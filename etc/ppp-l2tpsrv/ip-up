#!/bin/sh

#include global config
. /etc/scripts/global.sh

LOG="logger -t vpn-server"

PPP_IFACE="$1"
PPP_TTY="$2"
PPP_SPEED="$3"
PPP_LOCAL="$4"
PPP_REMOTE="$5"
PPP_IPPARAM="$6"
PPP_NUM=`echo $PPP_IFACE | sed 's/[^0-65535]//g'`

# get some variables
eval `nvram_buf_get 2860 l2tp_srv_nat_enabled l2tp_srv_proxyarp parproutedEnabled natEnabled vpnNAT`

if [ "$l2tp_srv_proxyarp" != "1" ] && [ "$parproutedEnabled" != "1" ]; then
    #disable multicast on $PPP_IFACE interface
    ifconfig $PPP_IFACE -allmulti
    ifconfig $PPP_IFACE -multicast
fi

$LOG "Enable forwarding for $PPP_IFACE interface"
sysctl -wq net.ipv4.conf.$PPP_IFACE.forwarding=1
iptables -A l2tpsrvfwd -i $PPP_IFACE -j ACCEPT

if [ "$l2tp_srv_nat_enabled" = "1" ]; then
    $LOG "Only requested sessions allow forward back to tunnel"
    iptables -A l2tpsrvfwd -o $PPP_IFACE -m state --state ESTABLISHED,RELATED -j ACCEPT
    if [ "$vpnEnabled" = "on" ] && [ "$vpnNAT" != "off" ]; then
	$LOG "Add masqrade for client $PPP_REMOTE to VPN client net over any ppp interfaces"
	iptables -t nat -A POSTROUTING -s $PPP_REMOTE -o ppp+ -j MASQUERADE
    fi
    if [ "$natEnabled" = "1" ]; then
	$LOG "Add masqrade for client $PPP_REMOTE to WAN net over $wan_if"
	iptables -t nat -A POSTROUTING -s $PPP_REMOTE -o $wan_if -j MASQUERADE
	if [ "$phys_wan_if" != "$wan_if" ]; then
	    $LOG "Add masqrade for client $PPP_REMOTE to WAN net over $phys_wan_if"
	    iptables -t nat -A POSTROUTING -s $PPP_REMOTE -o $phys_wan_if -j MASQUERADE
	fi
    fi
    $LOG "Add masqrade for client $PPP_REMOTE to LAN net over $lan_if"
    iptables -t nat -A POSTROUTING -s $PPP_REMOTE -o $lan_if -j MASQUERADE
else
    $LOG "Allow forward back to tunnel."
    iptables -A l2tpsrvfwd -o $PPP_IFACE -j ACCEPT
fi

# allow dns for l2tp clients
if [ "$dnsPEnabled" = "1" ]; then
    $LOG "Dnsproxy allow from $PPP_IFACE"
    iptables -A servicelimit -i $PPP_IFACE -p udp --dport 53 -j ACCEPT
    iptables -A servicelimit -i $PPP_IFACE -m state --state NEW -p tcp --dport 53 -j ACCEPT
fi

# allow udpxy for l2tp clients
if [ "$UDPXYMode" != "0" ]; then
    $LOG "Udpxy allow from $PPP_IFACE"
    iptables -A servicelimit -i $PPP_IFACE -m state --state NEW -p tcp --dport $UDPXYPort -j ACCEPT
fi

# allow samba/wins for l2tp clients
if [ "$SmbEnabled" = "1" ]; then
    $LOG "Samba allow from $PPP_IFACE"
    iptables -A servicelimit -i $PPP_IFACE -p udp --dport 137:138 -j ACCEPT
    iptables -A servicelimit -i $PPP_IFACE -m state --state NEW -p tcp -m multiport --dport 139,445 -j ACCEPT
fi

if [ "$l2tp_srv_proxyarp" = "1" ] || [ "$parproutedEnabled" = "1" ]; then
    $LOG "Enable proxyarp for $PPP_IFACE"
    sysctl -wq net.ipv4.conf.$PPP_IFACE.proxy_arp=1
fi

export PPP_IFACE PPP_TTY PPP_SPEED PPP_LOCAL PPP_REMOTE PPP_IPPARAM
if [ -d /etc/ppp-l2tpsrv/ip-up.d -a -x /bin/run-parts ]; then
    $LOG "Run scripts from /etc/ppp-l2tpsrv/ip-up.d"
    run-parts /etc/ppp-l2tpsrv/ip-up.d
fi
