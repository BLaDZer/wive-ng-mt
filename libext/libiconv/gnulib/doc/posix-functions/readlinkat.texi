@node readlinkat
@section @code{readlinkat}
@findex readlinkat

POSIX specification:@* @url{http://www.opengroup.org/onlinepubs/9699919799/functions/readlinkat.html}

Gnulib module: readlinkat

Portability problems fixed by Gnulib:
@itemize
@item
This function is missing on some platforms:
glibc 2.3.6, MacOS X 10.5, FreeBSD 6.0, NetBSD 5.0, OpenBSD 3.8, Minix 3.1.8,
AIX 5.1, HP-UX 11, IRIX 6.5, OSF/1 5.1, Solaris 10, Cygwin 1.5.x, mingw, Interix 3.5, BeOS.
But the replacement function is not safe to be used in libraries and is not multithread-safe.
@end itemize

Portability problems not fixed by Gnulib:
@itemize
@item
This function always fails on platforms that don't support symlinks:
mingw
@item
When @code{readlink} is called on a directory: In the case of NFS mounted
directories, Cygwin sets @code{errno} to @code{ENOENT} or @code{EIO} instead of
@code{EINVAL}.  To avoid this problem, check for a directory before calling
@code{readlink}.
@item
When @code{readlink} is called on a file that is not a symbolic link:
Irix may set @code{errno} to @code{ENXIO} instead of @code{EINVAL}.  Cygwin
may set errno to @code{EACCES} instead of @code{EINVAL}.
@item
Symlink contents do not always have a trailing null byte, and there is
no indication if symlink contents were truncated if the return value
matches the length.  Furthermore, AIX 5.1 and HP-UX 11 set
@code{errno} to @code{ERANGE} rather than returning truncated
contents, and Linux sets @code{errno} to @code{EINVAL} if the
requested length is zero.  Use the gnulib module areadlink for
improved ability to read symlink contents.
@end itemize
